{"ast":null,"code":"import _construct from \"/home/juano/reactProjects/qr_guillo/node_modules/@babel/runtime/helpers/esm/construct\";\nimport _get from \"/home/juano/reactProjects/qr_guillo/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/home/juano/reactProjects/qr_guillo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _slicedToArray from \"/home/juano/reactProjects/qr_guillo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _createForOfIteratorHelper from \"/home/juano/reactProjects/qr_guillo/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _regeneratorRuntime from \"/home/juano/reactProjects/qr_guillo/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/juano/reactProjects/qr_guillo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _inherits from \"/home/juano/reactProjects/qr_guillo/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/juano/reactProjects/qr_guillo/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _wrapNativeSuper from \"/home/juano/reactProjects/qr_guillo/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";\nimport _toConsumableArray from \"/home/juano/reactProjects/qr_guillo/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/juano/reactProjects/qr_guillo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/juano/reactProjects/qr_guillo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { _registerComponent, registerVersion, _getProvider, getApp, _removeServiceInstance, SDK_VERSION } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { createMockUserToken, getModularInstance, deepEqual, getUA, isIndexedDBAvailable, isSafari, isMobileCordova, isReactNative, isElectron, isIE, isUWP, isBrowserExtension } from '@firebase/util';\nimport { XhrIo, EventType, ErrorCode, createWebChannelTransport, getStatEventTarget, FetchXmlHttpFactory, WebChannel, Event, Stat } from '@firebase/webchannel-wrapper';\nvar S = \"@firebase/firestore\";\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\n\nvar D = /*#__PURE__*/function () {\n  function D(t) {\n    _classCallCheck(this, D);\n\n    this.uid = t;\n  }\n\n  _createClass(D, [{\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */\n\n  }, {\n    key: \"toKey\",\n    value: function toKey() {\n      return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t.uid === this.uid;\n    }\n  }]);\n\n  return D;\n}();\n/** A user with a null UID. */\n\n\nD.UNAUTHENTICATED = new D(null), // TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nD.GOOGLE_CREDENTIALS = new D(\"google-credentials-uid\"), D.FIRST_PARTY = new D(\"first-party-uid\"), D.MOCK_USER = new D(\"mock-user\");\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar C = \"9.4.0\";\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar N = new Logger(\"@firebase/firestore\"); // Helper methods are needed because variables can't be exported as read/write\n\nfunction x() {\n  return N.logLevel;\n}\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */\n\n\nfunction k(t) {\n  N.setLogLevel(t);\n}\n\nfunction $(t) {\n  if (N.logLevel <= LogLevel.DEBUG) {\n    for (var _len = arguments.length, e = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      e[_key - 1] = arguments[_key];\n    }\n\n    var n = e.map(M);\n    N.debug.apply(N, [\"Firestore (\".concat(C, \"): \").concat(t)].concat(_toConsumableArray(n)));\n  }\n}\n\nfunction O(t) {\n  if (N.logLevel <= LogLevel.ERROR) {\n    for (var _len2 = arguments.length, e = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      e[_key2 - 1] = arguments[_key2];\n    }\n\n    var n = e.map(M);\n    N.error.apply(N, [\"Firestore (\".concat(C, \"): \").concat(t)].concat(_toConsumableArray(n)));\n  }\n}\n/**\n * @internal\n */\n\n\nfunction F(t) {\n  if (N.logLevel <= LogLevel.WARN) {\n    for (var _len3 = arguments.length, e = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      e[_key3 - 1] = arguments[_key3];\n    }\n\n    var n = e.map(M);\n    N.warn.apply(N, [\"Firestore (\".concat(C, \"): \").concat(t)].concat(_toConsumableArray(n)));\n  }\n}\n/**\n * Converts an additional log parameter to a string representation.\n */\n\n\nfunction M(t) {\n  if (\"string\" == typeof t) return t;\n\n  try {\n    return e = t, JSON.stringify(e);\n  } catch (e) {\n    // Converting to JSON failed, just log the object directly\n    return t;\n  }\n  /**\n  * @license\n  * Copyright 2020 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n\n  /** Formats an object as a JSON string, suitable for logging. */\n\n\n  var e;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */\n\n\nfunction L() {\n  var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Unexpected state\";\n  // Log the failure in addition to throw an exception, just in case the\n  // exception is swallowed.\n  var e = \"FIRESTORE (\".concat(C, \") INTERNAL ASSERTION FAILED: \") + t; // NOTE: We don't use FirestoreError here because these are internal failures\n  // that cannot be handled by the user. (Also it would create a circular\n  // dependency between the error and assert modules which doesn't work.)\n\n  throw O(e), new Error(e);\n}\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */\n\n\nfunction B(t, e) {\n  t || L();\n}\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * The code of callsites invoking this function are stripped out in production\n * builds. Any side-effects of code within the debugAssert() invocation will not\n * happen in this case.\n *\n * @internal\n */\n\n\nfunction U(t, e) {\n  t || L();\n}\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */\n\n\nfunction q(t, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n  return t;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar K = {\n  // Causes are copied from:\n  // https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n\n  /** Not an error; returned on success. */\n  OK: \"ok\",\n\n  /** The operation was cancelled (typically by the caller). */\n  CANCELLED: \"cancelled\",\n\n  /** Unknown error or an error from a different error domain. */\n  UNKNOWN: \"unknown\",\n\n  /**\n   * Client specified an invalid argument. Note that this differs from\n   * FAILED_PRECONDITION. INVALID_ARGUMENT indicates arguments that are\n   * problematic regardless of the state of the system (e.g., a malformed file\n   * name).\n   */\n  INVALID_ARGUMENT: \"invalid-argument\",\n\n  /**\n   * Deadline expired before operation could complete. For operations that\n   * change the state of the system, this error may be returned even if the\n   * operation has completed successfully. For example, a successful response\n   * from a server could have been delayed long enough for the deadline to\n   * expire.\n   */\n  DEADLINE_EXCEEDED: \"deadline-exceeded\",\n\n  /** Some requested entity (e.g., file or directory) was not found. */\n  NOT_FOUND: \"not-found\",\n\n  /**\n   * Some entity that we attempted to create (e.g., file or directory) already\n   * exists.\n   */\n  ALREADY_EXISTS: \"already-exists\",\n\n  /**\n   * The caller does not have permission to execute the specified operation.\n   * PERMISSION_DENIED must not be used for rejections caused by exhausting\n   * some resource (use RESOURCE_EXHAUSTED instead for those errors).\n   * PERMISSION_DENIED must not be used if the caller can not be identified\n   * (use UNAUTHENTICATED instead for those errors).\n   */\n  PERMISSION_DENIED: \"permission-denied\",\n\n  /**\n   * The request does not have valid authentication credentials for the\n   * operation.\n   */\n  UNAUTHENTICATED: \"unauthenticated\",\n\n  /**\n   * Some resource has been exhausted, perhaps a per-user quota, or perhaps the\n   * entire file system is out of space.\n   */\n  RESOURCE_EXHAUSTED: \"resource-exhausted\",\n\n  /**\n   * Operation was rejected because the system is not in a state required for\n   * the operation's execution. For example, directory to be deleted may be\n   * non-empty, an rmdir operation is applied to a non-directory, etc.\n   *\n   * A litmus test that may help a service implementor in deciding\n   * between FAILED_PRECONDITION, ABORTED, and UNAVAILABLE:\n   *  (a) Use UNAVAILABLE if the client can retry just the failing call.\n   *  (b) Use ABORTED if the client should retry at a higher-level\n   *      (e.g., restarting a read-modify-write sequence).\n   *  (c) Use FAILED_PRECONDITION if the client should not retry until\n   *      the system state has been explicitly fixed. E.g., if an \"rmdir\"\n   *      fails because the directory is non-empty, FAILED_PRECONDITION\n   *      should be returned since the client should not retry unless\n   *      they have first fixed up the directory by deleting files from it.\n   *  (d) Use FAILED_PRECONDITION if the client performs conditional\n   *      REST Get/Update/Delete on a resource and the resource on the\n   *      server does not match the condition. E.g., conflicting\n   *      read-modify-write on the same resource.\n   */\n  FAILED_PRECONDITION: \"failed-precondition\",\n\n  /**\n   * The operation was aborted, typically due to a concurrency issue like\n   * sequencer check failures, transaction aborts, etc.\n   *\n   * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,\n   * and UNAVAILABLE.\n   */\n  ABORTED: \"aborted\",\n\n  /**\n   * Operation was attempted past the valid range. E.g., seeking or reading\n   * past end of file.\n   *\n   * Unlike INVALID_ARGUMENT, this error indicates a problem that may be fixed\n   * if the system state changes. For example, a 32-bit file system will\n   * generate INVALID_ARGUMENT if asked to read at an offset that is not in the\n   * range [0,2^32-1], but it will generate OUT_OF_RANGE if asked to read from\n   * an offset past the current file size.\n   *\n   * There is a fair bit of overlap between FAILED_PRECONDITION and\n   * OUT_OF_RANGE. We recommend using OUT_OF_RANGE (the more specific error)\n   * when it applies so that callers who are iterating through a space can\n   * easily look for an OUT_OF_RANGE error to detect when they are done.\n   */\n  OUT_OF_RANGE: \"out-of-range\",\n\n  /** Operation is not implemented or not supported/enabled in this service. */\n  UNIMPLEMENTED: \"unimplemented\",\n\n  /**\n   * Internal errors. Means some invariants expected by underlying System has\n   * been broken. If you see one of these errors, Something is very broken.\n   */\n  INTERNAL: \"internal\",\n\n  /**\n   * The service is currently unavailable. This is a most likely a transient\n   * condition and may be corrected by retrying with a backoff.\n   *\n   * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,\n   * and UNAVAILABLE.\n   */\n  UNAVAILABLE: \"unavailable\",\n\n  /** Unrecoverable data loss or corruption. */\n  DATA_LOSS: \"data-loss\"\n};\n/** An error returned by a Firestore operation. */\n\nvar j = /*#__PURE__*/function (_Error) {\n  _inherits(j, _Error);\n\n  var _super = _createSuper(j);\n\n  /** @hideconstructor */\n  function j(\n  /**\n   * The backend error code associated with this error.\n   */\n  t,\n  /**\n   * A custom error description.\n   */\n  e) {\n    var _this;\n\n    _classCallCheck(this, j);\n\n    _this = _super.call(this, e), _this.code = t, _this.message = e,\n    /** The custom name for all FirestoreErrors. */\n    _this.name = \"FirebaseError\", // HACK: We write a toString property directly because Error is not a real\n    // class and so inheritance does not work correctly. We could alternatively\n    // do the same \"back-door inheritance\" trick that FirebaseError does.\n    _this.toString = function () {\n      return \"\".concat(_this.name, \": [code=\").concat(_this.code, \"]: \").concat(_this.message);\n    };\n    return _this;\n  }\n\n  return j;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar Q = function Q() {\n  var _this2 = this;\n\n  _classCallCheck(this, Q);\n\n  this.promise = new Promise(function (t, e) {\n    _this2.resolve = t, _this2.reject = e;\n  });\n};\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar W = function W(t, e) {\n  _classCallCheck(this, W);\n\n  this.user = e, this.type = \"OAuth\", this.authHeaders = {}, // Set the headers using Object Literal notation to avoid minification\n  this.authHeaders.Authorization = \"Bearer \".concat(t);\n};\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */\n\n\nvar G = /*#__PURE__*/function () {\n  function G() {\n    _classCallCheck(this, G);\n  }\n\n  _createClass(G, [{\n    key: \"getToken\",\n    value: function getToken() {\n      return Promise.resolve(null);\n    }\n  }, {\n    key: \"invalidateToken\",\n    value: function invalidateToken() {}\n  }, {\n    key: \"start\",\n    value: function start(t, e) {\n      // Fire with initial user.\n      t.enqueueRetryable(function () {\n        return e(D.UNAUTHENTICATED);\n      });\n    }\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {}\n  }]);\n\n  return G;\n}();\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */\n\n\nvar z = /*#__PURE__*/function () {\n  function z(t) {\n    _classCallCheck(this, z);\n\n    this.token = t,\n    /**\n     * Stores the listener registered with setChangeListener()\n     * This isn't actually necessary since the UID never changes, but we use this\n     * to verify the listen contract is adhered to in tests.\n     */\n    this.changeListener = null;\n  }\n\n  _createClass(z, [{\n    key: \"getToken\",\n    value: function getToken() {\n      return Promise.resolve(this.token);\n    }\n  }, {\n    key: \"invalidateToken\",\n    value: function invalidateToken() {}\n  }, {\n    key: \"start\",\n    value: function start(t, e) {\n      var _this3 = this;\n\n      this.changeListener = e, // Fire with initial user.\n      t.enqueueRetryable(function () {\n        return e(_this3.token.user);\n      });\n    }\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {\n      this.changeListener = null;\n    }\n  }]);\n\n  return z;\n}();\n\nvar H = /*#__PURE__*/function () {\n  function H(t) {\n    _classCallCheck(this, H);\n\n    this.t = t,\n    /** Tracks the current User. */\n    this.currentUser = D.UNAUTHENTICATED,\n    /**\n     * Counter used to detect if the token changed while a getToken request was\n     * outstanding.\n     */\n    this.i = 0, this.forceRefresh = !1, this.auth = null;\n  }\n\n  _createClass(H, [{\n    key: \"start\",\n    value: function start(t, e) {\n      var _this4 = this;\n\n      var n = this.i; // A change listener that prevents double-firing for the same token change.\n\n      var s = function s(t) {\n        return _this4.i !== n ? (n = _this4.i, e(t)) : Promise.resolve();\n      }; // A promise that can be waited on to block on the next token change.\n      // This promise is re-created after each change.\n\n\n      var i = new Q();\n\n      this.o = function () {\n        _this4.i++, _this4.currentUser = _this4.u(), i.resolve(), i = new Q(), t.enqueueRetryable(function () {\n          return s(_this4.currentUser);\n        });\n      };\n\n      var r = function r() {\n        var e = i;\n        t.enqueueRetryable( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return e.promise;\n\n                case 2:\n                  _context.next = 4;\n                  return s(_this4.currentUser);\n\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        })));\n      },\n          o = function o(t) {\n        $(\"FirebaseCredentialsProvider\", \"Auth detected\"), _this4.auth = t, _this4.auth.addAuthTokenListener(_this4.o), r();\n      };\n\n      this.t.onInit(function (t) {\n        return o(t);\n      }), // Our users can initialize Auth right after Firestore, so we give it\n      // a chance to register itself with the component framework before we\n      // determine whether to start up in unauthenticated mode.\n      setTimeout(function () {\n        if (!_this4.auth) {\n          var _t2 = _this4.t.getImmediate({\n            optional: !0\n          });\n\n          _t2 ? o(_t2) : ( // If auth is still not available, proceed with `null` user\n          $(\"FirebaseCredentialsProvider\", \"Auth not yet detected\"), i.resolve(), i = new Q());\n        }\n      }, 0), r();\n    }\n  }, {\n    key: \"getToken\",\n    value: function getToken() {\n      var _this5 = this;\n\n      // Take note of the current value of the tokenCounter so that this method\n      // can fail (with an ABORTED error) if there is a token change while the\n      // request is outstanding.\n      var t = this.i,\n          e = this.forceRefresh;\n      return this.forceRefresh = !1, this.auth ? this.auth.getToken(e).then(function (e) {\n        return (// Cancel the request since the token changed while the request was\n          // outstanding so the response is potentially for a previous user (which\n          // user, we can't be sure).\n          _this5.i !== t ? ($(\"FirebaseCredentialsProvider\", \"getToken aborted due to token change.\"), _this5.getToken()) : e ? (B(\"string\" == typeof e.accessToken), new W(e.accessToken, _this5.currentUser)) : null\n        );\n      }) : Promise.resolve(null);\n    }\n  }, {\n    key: \"invalidateToken\",\n    value: function invalidateToken() {\n      this.forceRefresh = !0;\n    }\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {\n      this.auth && this.auth.removeAuthTokenListener(this.o);\n    } // Auth.getUid() can return null even with a user logged in. It is because\n    // getUid() is synchronous, but the auth code populating Uid is asynchronous.\n    // This method should only be called in the AuthTokenListener callback\n    // to guarantee to get the actual user.\n\n  }, {\n    key: \"u\",\n    value: function u() {\n      var t = this.auth && this.auth.getUid();\n      return B(null === t || \"string\" == typeof t), new D(t);\n    }\n  }]);\n\n  return H;\n}();\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */\n\n\nvar J = /*#__PURE__*/function () {\n  function J(t, e, n) {\n    _classCallCheck(this, J);\n\n    this.h = t, this.l = e, this.m = n, this.type = \"FirstParty\", this.user = D.FIRST_PARTY;\n  }\n\n  _createClass(J, [{\n    key: \"authHeaders\",\n    get: function get() {\n      var t = {\n        \"X-Goog-AuthUser\": this.l\n      },\n          e = this.h.auth.getAuthHeaderValueForFirstParty([]); // Use array notation to prevent minification\n\n      return e && (t.Authorization = e), this.m && (t[\"X-Goog-Iam-Authorization-Token\"] = this.m), t;\n    }\n  }]);\n\n  return J;\n}();\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */\n\n\nvar Y = /*#__PURE__*/function () {\n  function Y(t, e, n) {\n    _classCallCheck(this, Y);\n\n    this.h = t, this.l = e, this.m = n;\n  }\n\n  _createClass(Y, [{\n    key: \"getToken\",\n    value: function getToken() {\n      return Promise.resolve(new J(this.h, this.l, this.m));\n    }\n  }, {\n    key: \"start\",\n    value: function start(t, e) {\n      // Fire with initial uid.\n      t.enqueueRetryable(function () {\n        return e(D.FIRST_PARTY);\n      });\n    }\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {}\n  }, {\n    key: \"invalidateToken\",\n    value: function invalidateToken() {}\n  }]);\n\n  return Y;\n}();\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * `ListenSequence` is a monotonic sequence. It is initialized with a minimum value to\n * exceed. All subsequent calls to next will return increasing values. If provided with a\n * `SequenceNumberSyncer`, it will additionally bump its next value when told of a new value, as\n * well as write out sequence numbers that it produces via `next()`.\n */\n\n\nvar X = /*#__PURE__*/function () {\n  function X(t, e) {\n    var _this6 = this;\n\n    _classCallCheck(this, X);\n\n    this.previousValue = t, e && (e.sequenceNumberHandler = function (t) {\n      return _this6.g(t);\n    }, this.p = function (t) {\n      return e.writeSequenceNumber(t);\n    });\n  }\n\n  _createClass(X, [{\n    key: \"g\",\n    value: function g(t) {\n      return this.previousValue = Math.max(t, this.previousValue), this.previousValue;\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      var t = ++this.previousValue;\n      return this.p && this.p(t), t;\n    }\n  }]);\n\n  return X;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\n\n\nfunction Z(t) {\n  // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n  var e = // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  \"undefined\" != typeof self && (self.crypto || self.msCrypto),\n      n = new Uint8Array(t);\n  if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n);else // Falls back to Math.random\n    for (var _e2 = 0; _e2 < t; _e2++) {\n      n[_e2] = Math.floor(256 * Math.random());\n    }\n  return n;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nX.T = -1;\n\nvar tt = /*#__PURE__*/function () {\n  function tt() {\n    _classCallCheck(this, tt);\n  }\n\n  _createClass(tt, null, [{\n    key: \"I\",\n    value: function I() {\n      // Alphanumeric characters\n      var t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\",\n          e = Math.floor(256 / t.length) * t.length; // The largest byte value that is a multiple of `char.length`.\n\n      var n = \"\";\n\n      for (; n.length < 20;) {\n        var s = Z(40);\n\n        for (var i = 0; i < s.length; ++i) {\n          // Only accept values that are [0, maxMultiple), this ensures they can\n          // be evenly mapped to indices of `chars` via a modulo operation.\n          n.length < 20 && s[i] < e && (n += t.charAt(s[i] % t.length));\n        }\n      }\n\n      return n;\n    }\n  }]);\n\n  return tt;\n}();\n\nfunction et(t, e) {\n  return t < e ? -1 : t > e ? 1 : 0;\n}\n/** Helper to compare arrays using isEqual(). */\n\n\nfunction nt(t, e, n) {\n  return t.length === e.length && t.every(function (t, s) {\n    return n(t, e[s]);\n  });\n}\n/**\n * Returns the immediate lexicographically-following string. This is useful to\n * construct an inclusive range for indexeddb iterators.\n */\n\n\nfunction st(t) {\n  // Return the input string, with an additional NUL byte appended.\n  return t + \"\\0\";\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\n\n\nvar it = /*#__PURE__*/function () {\n  /**\n   * Creates a new timestamp.\n   *\n   * @param seconds - The number of seconds of UTC time since Unix epoch\n   *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n   *     9999-12-31T23:59:59Z inclusive.\n   * @param nanoseconds - The non-negative fractions of a second at nanosecond\n   *     resolution. Negative second values with fractions must still have\n   *     non-negative nanoseconds values that count forward in time. Must be\n   *     from 0 to 999,999,999 inclusive.\n   */\n  function it(\n  /**\n   * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n   */\n  t,\n  /**\n   * The fractions of a second at nanosecond resolution.*\n   */\n  e) {\n    _classCallCheck(this, it);\n\n    if (this.seconds = t, this.nanoseconds = e, e < 0) throw new j(K.INVALID_ARGUMENT, \"Timestamp nanoseconds out of range: \" + e);\n    if (e >= 1e9) throw new j(K.INVALID_ARGUMENT, \"Timestamp nanoseconds out of range: \" + e);\n    if (t < -62135596800) throw new j(K.INVALID_ARGUMENT, \"Timestamp seconds out of range: \" + t); // This will break in the year 10,000.\n\n    if (t >= 253402300800) throw new j(K.INVALID_ARGUMENT, \"Timestamp seconds out of range: \" + t);\n  }\n  /**\n   * Creates a new timestamp with the current date, with millisecond precision.\n   *\n   * @returns a new timestamp representing the current date.\n   */\n\n\n  _createClass(it, [{\n    key: \"toDate\",\n    value:\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */\n    function toDate() {\n      return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */\n\n  }, {\n    key: \"toMillis\",\n    value: function toMillis() {\n      return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n  }, {\n    key: \"_compareTo\",\n    value: function _compareTo(t) {\n      return this.seconds === t.seconds ? et(this.nanoseconds, t.nanoseconds) : et(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        seconds: this.seconds,\n        nanoseconds: this.nanoseconds\n      };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */\n\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      // This method returns a string of the form <seconds>.<nanoseconds> where\n      // <seconds> is translated to have a non-negative value and both <seconds>\n      // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n      // Strings with this format then have a lexiographical ordering that matches\n      // the expected ordering. The <seconds> translation is done to avoid having\n      // a leading negative sign (i.e. a leading '-' character) in its string\n      // representation, which would affect its lexiographical ordering.\n      var t = this.seconds - -62135596800; // Note: Up to 12 decimal digits are required to represent all valid\n      // 'seconds' values.\n\n      return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n  }], [{\n    key: \"now\",\n    value: function now() {\n      return it.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */\n\n  }, {\n    key: \"fromDate\",\n    value: function fromDate(t) {\n      return it.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */\n\n  }, {\n    key: \"fromMillis\",\n    value: function fromMillis(t) {\n      var e = Math.floor(t / 1e3),\n          n = Math.floor(1e6 * (t - 1e3 * e));\n      return new it(e, n);\n    }\n  }]);\n\n  return it;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */\n\n\nvar rt = /*#__PURE__*/function () {\n  function rt(t) {\n    _classCallCheck(this, rt);\n\n    this.timestamp = t;\n  }\n\n  _createClass(rt, [{\n    key: \"compareTo\",\n    value: function compareTo(t) {\n      return this.timestamp._compareTo(t.timestamp);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */\n\n  }, {\n    key: \"toMicroseconds\",\n    value: function toMicroseconds() {\n      // Convert to microseconds.\n      return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n  }, {\n    key: \"toTimestamp\",\n    value: function toTimestamp() {\n      return this.timestamp;\n    }\n  }], [{\n    key: \"fromTimestamp\",\n    value: function fromTimestamp(t) {\n      return new rt(t);\n    }\n  }, {\n    key: \"min\",\n    value: function min() {\n      return new rt(new it(0, 0));\n    }\n  }]);\n\n  return rt;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction ot(t) {\n  var e = 0;\n\n  for (var n in t) {\n    Object.prototype.hasOwnProperty.call(t, n) && e++;\n  }\n\n  return e;\n}\n\nfunction ct(t, e) {\n  for (var n in t) {\n    Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n  }\n}\n\nfunction at(t) {\n  for (var e in t) {\n    if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n  }\n\n  return !0;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Path represents an ordered sequence of string segments.\n */\n\n\nvar ut = /*#__PURE__*/function () {\n  function ut(t, e, n) {\n    _classCallCheck(this, ut);\n\n    void 0 === e ? e = 0 : e > t.length && L(), void 0 === n ? n = t.length - e : n > t.length - e && L(), this.segments = t, this.offset = e, this.len = n;\n  }\n\n  _createClass(ut, [{\n    key: \"length\",\n    get: function get() {\n      return this.len;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return 0 === ut.comparator(this, t);\n    }\n  }, {\n    key: \"child\",\n    value: function child(t) {\n      var e = this.segments.slice(this.offset, this.limit());\n      return t instanceof ut ? t.forEach(function (t) {\n        e.push(t);\n      }) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */\n\n  }, {\n    key: \"limit\",\n    value: function limit() {\n      return this.offset + this.length;\n    }\n  }, {\n    key: \"popFirst\",\n    value: function popFirst(t) {\n      return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n  }, {\n    key: \"popLast\",\n    value: function popLast() {\n      return this.construct(this.segments, this.offset, this.length - 1);\n    }\n  }, {\n    key: \"firstSegment\",\n    value: function firstSegment() {\n      return this.segments[this.offset];\n    }\n  }, {\n    key: \"lastSegment\",\n    value: function lastSegment() {\n      return this.get(this.length - 1);\n    }\n  }, {\n    key: \"get\",\n    value: function get(t) {\n      return this.segments[this.offset + t];\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return 0 === this.length;\n    }\n  }, {\n    key: \"isPrefixOf\",\n    value: function isPrefixOf(t) {\n      if (t.length < this.length) return !1;\n\n      for (var e = 0; e < this.length; e++) {\n        if (this.get(e) !== t.get(e)) return !1;\n      }\n\n      return !0;\n    }\n  }, {\n    key: \"isImmediateParentOf\",\n    value: function isImmediateParentOf(t) {\n      if (this.length + 1 !== t.length) return !1;\n\n      for (var e = 0; e < this.length; e++) {\n        if (this.get(e) !== t.get(e)) return !1;\n      }\n\n      return !0;\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(t) {\n      for (var e = this.offset, n = this.limit(); e < n; e++) {\n        t(this.segments[e]);\n      }\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      return this.segments.slice(this.offset, this.limit());\n    }\n  }], [{\n    key: \"comparator\",\n    value: function comparator(t, e) {\n      var n = Math.min(t.length, e.length);\n\n      for (var s = 0; s < n; s++) {\n        var _n2 = t.get(s),\n            i = e.get(s);\n\n        if (_n2 < i) return -1;\n        if (_n2 > i) return 1;\n      }\n\n      return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n  }]);\n\n  return ut;\n}();\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */\n\n\nvar ht = /*#__PURE__*/function (_ut) {\n  _inherits(ht, _ut);\n\n  var _super2 = _createSuper(ht);\n\n  function ht() {\n    _classCallCheck(this, ht);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(ht, [{\n    key: \"construct\",\n    value: function construct(t, e, n) {\n      return new ht(t, e, n);\n    }\n  }, {\n    key: \"canonicalString\",\n    value: function canonicalString() {\n      // NOTE: The client is ignorant of any path segments containing escape\n      // sequences (e.g. __id123__) and just passes them through raw (they exist\n      // for legacy reasons and should not be used frequently).\n      return this.toArray().join(\"/\");\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */\n\n  }], [{\n    key: \"fromString\",\n    value: function fromString() {\n      // NOTE: The client is ignorant of any path segments containing escape\n      // sequences (e.g. __id123__) and just passes them through raw (they exist\n      // for legacy reasons and should not be used frequently).\n      var e = [];\n\n      for (var _len4 = arguments.length, t = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        t[_key4] = arguments[_key4];\n      }\n\n      for (var _i2 = 0, _t3 = t; _i2 < _t3.length; _i2++) {\n        var n = _t3[_i2];\n        if (n.indexOf(\"//\") >= 0) throw new j(K.INVALID_ARGUMENT, \"Invalid segment (\".concat(n, \"). Paths must not contain // in them.\")); // Strip leading and traling slashed.\n\n        e.push.apply(e, _toConsumableArray(n.split(\"/\").filter(function (t) {\n          return t.length > 0;\n        })));\n      }\n\n      return new ht(e);\n    }\n  }, {\n    key: \"emptyPath\",\n    value: function emptyPath() {\n      return new ht([]);\n    }\n  }]);\n\n  return ht;\n}(ut);\n\nvar lt = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */\n\nvar ft = /*#__PURE__*/function (_ut2) {\n  _inherits(ft, _ut2);\n\n  var _super3 = _createSuper(ft);\n\n  function ft() {\n    _classCallCheck(this, ft);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(ft, [{\n    key: \"construct\",\n    value: function construct(t, e, n) {\n      return new ft(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */\n\n  }, {\n    key: \"canonicalString\",\n    value: function canonicalString() {\n      return this.toArray().map(function (t) {\n        return t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), ft.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t;\n      }).join(\".\");\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */\n\n  }, {\n    key: \"isKeyField\",\n    value: function isKeyField() {\n      return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */\n\n  }], [{\n    key: \"isValidIdentifier\",\n    value: function isValidIdentifier(t) {\n      return lt.test(t);\n    }\n  }, {\n    key: \"keyField\",\n    value: function keyField() {\n      return new ft([\"__name__\"]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */\n\n  }, {\n    key: \"fromServerFormat\",\n    value: function fromServerFormat(t) {\n      var e = [];\n      var n = \"\",\n          s = 0;\n\n      var i = function i() {\n        if (0 === n.length) throw new j(K.INVALID_ARGUMENT, \"Invalid field path (\".concat(t, \"). Paths must not be empty, begin with '.', end with '.', or contain '..'\"));\n        e.push(n), n = \"\";\n      };\n\n      var r = !1;\n\n      for (; s < t.length;) {\n        var _e3 = t[s];\n\n        if (\"\\\\\" === _e3) {\n          if (s + 1 === t.length) throw new j(K.INVALID_ARGUMENT, \"Path has trailing escape character: \" + t);\n          var _e4 = t[s + 1];\n          if (\"\\\\\" !== _e4 && \".\" !== _e4 && \"`\" !== _e4) throw new j(K.INVALID_ARGUMENT, \"Path has invalid escape sequence: \" + t);\n          n += _e4, s += 2;\n        } else \"`\" === _e3 ? (r = !r, s++) : \".\" !== _e3 || r ? (n += _e3, s++) : (i(), s++);\n      }\n\n      if (i(), r) throw new j(K.INVALID_ARGUMENT, \"Unterminated ` in path: \" + t);\n      return new ft(e);\n    }\n  }, {\n    key: \"emptyPath\",\n    value: function emptyPath() {\n      return new ft([]);\n    }\n  }]);\n\n  return ft;\n}(ut);\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */\n\n\nvar dt = /*#__PURE__*/function () {\n  function dt(t) {\n    _classCallCheck(this, dt);\n\n    this.fields = t, // TODO(dimond): validation of FieldMask\n    // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n    t.sort(ft.comparator);\n  }\n  /**\n   * Verifies that `fieldPath` is included by at least one field in this field\n   * mask.\n   *\n   * This is an O(n) operation, where `n` is the size of the field mask.\n   */\n\n\n  _createClass(dt, [{\n    key: \"covers\",\n    value: function covers(t) {\n      var _iterator = _createForOfIteratorHelper(this.fields),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var e = _step.value;\n          if (e.isPrefixOf(t)) return !0;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return !1;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return nt(this.fields, t.fields, function (t, e) {\n        return t.isEqual(e);\n      });\n    }\n  }]);\n\n  return dt;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Converts a Base64 encoded string to a binary string. */\n\n/** True if and only if the Base64 conversion functions are available. */\n\n\nfunction wt() {\n  return \"undefined\" != typeof atob;\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\n\n\nvar _t = /*#__PURE__*/function () {\n  function _t(t) {\n    _classCallCheck(this, _t);\n\n    this.binaryString = t;\n  }\n\n  _createClass(_t, [{\n    key: \"toBase64\",\n    value: function toBase64() {\n      return t = this.binaryString, btoa(t);\n      /** Converts a binary string to a Base64 encoded string. */\n\n      var t;\n    }\n  }, {\n    key: \"toUint8Array\",\n    value: function toUint8Array() {\n      return function (t) {\n        var e = new Uint8Array(t.length);\n\n        for (var n = 0; n < t.length; n++) {\n          e[n] = t.charCodeAt(n);\n        }\n\n        return e;\n      }\n      /**\n      * @license\n      * Copyright 2020 Google LLC\n      *\n      * Licensed under the Apache License, Version 2.0 (the \"License\");\n      * you may not use this file except in compliance with the License.\n      * You may obtain a copy of the License at\n      *\n      *   http://www.apache.org/licenses/LICENSE-2.0\n      *\n      * Unless required by applicable law or agreed to in writing, software\n      * distributed under the License is distributed on an \"AS IS\" BASIS,\n      * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n      * See the License for the specific language governing permissions and\n      * limitations under the License.\n      */\n      // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n      (this.binaryString);\n    }\n  }, {\n    key: \"approximateByteSize\",\n    value: function approximateByteSize() {\n      return 2 * this.binaryString.length;\n    }\n  }, {\n    key: \"compareTo\",\n    value: function compareTo(t) {\n      return et(this.binaryString, t.binaryString);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this.binaryString === t.binaryString;\n    }\n  }], [{\n    key: \"fromBase64String\",\n    value: function fromBase64String(t) {\n      var e = atob(t);\n      return new _t(e);\n    }\n  }, {\n    key: \"fromUint8Array\",\n    value: function fromUint8Array(t) {\n      var e =\n      /**\n      * Helper function to convert an Uint8array to a binary string.\n      */\n      function (t) {\n        var e = \"\";\n\n        for (var n = 0; n < t.length; ++n) {\n          e += String.fromCharCode(t[n]);\n        }\n\n        return e;\n      }\n      /**\n      * Helper function to convert a binary string to an Uint8Array.\n      */\n      (t);\n\n      return new _t(e);\n    }\n  }]);\n\n  return _t;\n}();\n\n_t.EMPTY_BYTE_STRING = new _t(\"\");\nvar mt = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */\n\nfunction gt(t) {\n  // The json interface (for the browser) will return an iso timestamp string,\n  // while the proto js library (for node) will return a\n  // google.protobuf.Timestamp instance.\n  if (B(!!t), \"string\" == typeof t) {\n    // The date string can have higher precision (nanos) than the Date class\n    // (millis), so we do some custom parsing here.\n    // Parse the nanos right out of the string.\n    var e = 0;\n    var n = mt.exec(t);\n\n    if (B(!!n), n[1]) {\n      // Pad the fraction out to 9 digits (nanos).\n      var _t4 = n[1];\n      _t4 = (_t4 + \"000000000\").substr(0, 9), e = Number(_t4);\n    } // Parse the date to get the seconds.\n\n\n    var s = new Date(t);\n    return {\n      seconds: Math.floor(s.getTime() / 1e3),\n      nanos: e\n    };\n  }\n\n  return {\n    seconds: yt(t.seconds),\n    nanos: yt(t.nanos)\n  };\n}\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */\n\n\nfunction yt(t) {\n  // TODO(bjornick): Handle int64 greater than 53 bits.\n  return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n/** Converts the possible Proto types for Blobs into a ByteString. */\n\n\nfunction pt(t) {\n  return \"string\" == typeof t ? _t.fromBase64String(t) : _t.fromUint8Array(t);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */\n\n\nfunction Tt(t) {\n  var e, n;\n  return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n/**\n * Creates a new ServerTimestamp proto value (using the internal format).\n */\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */\n\n\nfunction Et(t) {\n  var e = t.mapValue.fields.__previous_value__;\n  return Tt(e) ? Et(e) : e;\n}\n/**\n * Returns the local time at which this timestamp was first set.\n */\n\n\nfunction It(t) {\n  var e = gt(t.mapValue.fields.__local_write_time__.timestampValue);\n  return new it(e.seconds, e.nanos);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Sentinel value that sorts before any Mutation Batch ID. */\n\n/**\n * Returns whether a variable is either undefined or null.\n */\n\n\nfunction At(t) {\n  return null == t;\n}\n/** Returns whether the value represents -0. */\n\n\nfunction Rt(t) {\n  // Detect if the value is -0.0. Based on polyfill from\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n  return 0 === t && 1 / t == -1 / 0;\n}\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n\n\nfunction bt(t) {\n  return \"number\" == typeof t && Number.isInteger(t) && !Rt(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @internal\n */\n\n\nvar Pt = /*#__PURE__*/function () {\n  function Pt(t) {\n    _classCallCheck(this, Pt);\n\n    this.path = t;\n  }\n\n  _createClass(Pt, [{\n    key: \"hasCollectionId\",\n    value:\n    /** Returns true if the document is in the specified collectionId. */\n    function hasCollectionId(t) {\n      return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return null !== t && 0 === ht.comparator(this.path, t.path);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.path.toString();\n    }\n  }], [{\n    key: \"fromPath\",\n    value: function fromPath(t) {\n      return new Pt(ht.fromString(t));\n    }\n  }, {\n    key: \"fromName\",\n    value: function fromName(t) {\n      return new Pt(ht.fromString(t).popFirst(5));\n    }\n  }, {\n    key: \"comparator\",\n    value: function comparator(t, e) {\n      return ht.comparator(t.path, e.path);\n    }\n  }, {\n    key: \"isDocumentKey\",\n    value: function isDocumentKey(t) {\n      return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */\n\n  }, {\n    key: \"fromSegments\",\n    value: function fromSegments(t) {\n      return new Pt(new ht(t.slice()));\n    }\n  }]);\n\n  return Pt;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Extracts the backend's type order for the provided value. */\n\n\nfunction vt(t) {\n  return \"nullValue\" in t ? 0\n  /* NullValue */\n  : \"booleanValue\" in t ? 1\n  /* BooleanValue */\n  : \"integerValue\" in t || \"doubleValue\" in t ? 2\n  /* NumberValue */\n  : \"timestampValue\" in t ? 3\n  /* TimestampValue */\n  : \"stringValue\" in t ? 5\n  /* StringValue */\n  : \"bytesValue\" in t ? 6\n  /* BlobValue */\n  : \"referenceValue\" in t ? 7\n  /* RefValue */\n  : \"geoPointValue\" in t ? 8\n  /* GeoPointValue */\n  : \"arrayValue\" in t ? 9\n  /* ArrayValue */\n  : \"mapValue\" in t ? Tt(t) ? 4\n  /* ServerTimestampValue */\n  : 10\n  /* ObjectValue */\n  : L();\n}\n/** Tests `left` and `right` for equality based on the backend semantics. */\n\n\nfunction Vt(t, e) {\n  var n = vt(t);\n  if (n !== vt(e)) return !1;\n\n  switch (n) {\n    case 0\n    /* NullValue */\n    :\n      return !0;\n\n    case 1\n    /* BooleanValue */\n    :\n      return t.booleanValue === e.booleanValue;\n\n    case 4\n    /* ServerTimestampValue */\n    :\n      return It(t).isEqual(It(e));\n\n    case 3\n    /* TimestampValue */\n    :\n      return function (t, e) {\n        if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) // Use string equality for ISO 8601 timestamps\n          return t.timestampValue === e.timestampValue;\n        var n = gt(t.timestampValue),\n            s = gt(e.timestampValue);\n        return n.seconds === s.seconds && n.nanos === s.nanos;\n      }(t, e);\n\n    case 5\n    /* StringValue */\n    :\n      return t.stringValue === e.stringValue;\n\n    case 6\n    /* BlobValue */\n    :\n      return function (t, e) {\n        return pt(t.bytesValue).isEqual(pt(e.bytesValue));\n      }(t, e);\n\n    case 7\n    /* RefValue */\n    :\n      return t.referenceValue === e.referenceValue;\n\n    case 8\n    /* GeoPointValue */\n    :\n      return function (t, e) {\n        return yt(t.geoPointValue.latitude) === yt(e.geoPointValue.latitude) && yt(t.geoPointValue.longitude) === yt(e.geoPointValue.longitude);\n      }(t, e);\n\n    case 2\n    /* NumberValue */\n    :\n      return function (t, e) {\n        if (\"integerValue\" in t && \"integerValue\" in e) return yt(t.integerValue) === yt(e.integerValue);\n\n        if (\"doubleValue\" in t && \"doubleValue\" in e) {\n          var _n3 = yt(t.doubleValue),\n              s = yt(e.doubleValue);\n\n          return _n3 === s ? Rt(_n3) === Rt(s) : isNaN(_n3) && isNaN(s);\n        }\n\n        return !1;\n      }(t, e);\n\n    case 9\n    /* ArrayValue */\n    :\n      return nt(t.arrayValue.values || [], e.arrayValue.values || [], Vt);\n\n    case 10\n    /* ObjectValue */\n    :\n      return function (t, e) {\n        var n = t.mapValue.fields || {},\n            s = e.mapValue.fields || {};\n        if (ot(n) !== ot(s)) return !1;\n\n        for (var _t5 in n) {\n          if (n.hasOwnProperty(_t5) && (void 0 === s[_t5] || !Vt(n[_t5], s[_t5]))) return !1;\n        }\n\n        return !0;\n      }\n      /** Returns true if the ArrayValue contains the specified element. */\n      (t, e);\n\n    default:\n      return L();\n  }\n}\n\nfunction St(t, e) {\n  return void 0 !== (t.values || []).find(function (t) {\n    return Vt(t, e);\n  });\n}\n\nfunction Dt(t, e) {\n  var n = vt(t),\n      s = vt(e);\n  if (n !== s) return et(n, s);\n\n  switch (n) {\n    case 0\n    /* NullValue */\n    :\n      return 0;\n\n    case 1\n    /* BooleanValue */\n    :\n      return et(t.booleanValue, e.booleanValue);\n\n    case 2\n    /* NumberValue */\n    :\n      return function (t, e) {\n        var n = yt(t.integerValue || t.doubleValue),\n            s = yt(e.integerValue || e.doubleValue);\n        return n < s ? -1 : n > s ? 1 : n === s ? 0 : // one or both are NaN.\n        isNaN(n) ? isNaN(s) ? 0 : -1 : 1;\n      }(t, e);\n\n    case 3\n    /* TimestampValue */\n    :\n      return Ct(t.timestampValue, e.timestampValue);\n\n    case 4\n    /* ServerTimestampValue */\n    :\n      return Ct(It(t), It(e));\n\n    case 5\n    /* StringValue */\n    :\n      return et(t.stringValue, e.stringValue);\n\n    case 6\n    /* BlobValue */\n    :\n      return function (t, e) {\n        var n = pt(t),\n            s = pt(e);\n        return n.compareTo(s);\n      }(t.bytesValue, e.bytesValue);\n\n    case 7\n    /* RefValue */\n    :\n      return function (t, e) {\n        var n = t.split(\"/\"),\n            s = e.split(\"/\");\n\n        for (var _t6 = 0; _t6 < n.length && _t6 < s.length; _t6++) {\n          var _e5 = et(n[_t6], s[_t6]);\n\n          if (0 !== _e5) return _e5;\n        }\n\n        return et(n.length, s.length);\n      }(t.referenceValue, e.referenceValue);\n\n    case 8\n    /* GeoPointValue */\n    :\n      return function (t, e) {\n        var n = et(yt(t.latitude), yt(e.latitude));\n        if (0 !== n) return n;\n        return et(yt(t.longitude), yt(e.longitude));\n      }(t.geoPointValue, e.geoPointValue);\n\n    case 9\n    /* ArrayValue */\n    :\n      return function (t, e) {\n        var n = t.values || [],\n            s = e.values || [];\n\n        for (var _t7 = 0; _t7 < n.length && _t7 < s.length; ++_t7) {\n          var _e6 = Dt(n[_t7], s[_t7]);\n\n          if (_e6) return _e6;\n        }\n\n        return et(n.length, s.length);\n      }(t.arrayValue, e.arrayValue);\n\n    case 10\n    /* ObjectValue */\n    :\n      return function (t, e) {\n        var n = t.fields || {},\n            s = Object.keys(n),\n            i = e.fields || {},\n            r = Object.keys(i); // Even though MapValues are likely sorted correctly based on their insertion\n        // order (e.g. when received from the backend), local modifications can bring\n        // elements out of order. We need to re-sort the elements to ensure that\n        // canonical IDs are independent of insertion order.\n\n        s.sort(), r.sort();\n\n        for (var _t8 = 0; _t8 < s.length && _t8 < r.length; ++_t8) {\n          var _e7 = et(s[_t8], r[_t8]);\n\n          if (0 !== _e7) return _e7;\n          var o = Dt(n[s[_t8]], i[r[_t8]]);\n          if (0 !== o) return o;\n        }\n\n        return et(s.length, r.length);\n      }\n      /**\n      * Generates the canonical ID for the provided field value (as used in Target\n      * serialization).\n      */\n      (t.mapValue, e.mapValue);\n\n    default:\n      throw L();\n  }\n}\n\nfunction Ct(t, e) {\n  if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return et(t, e);\n  var n = gt(t),\n      s = gt(e),\n      i = et(n.seconds, s.seconds);\n  return 0 !== i ? i : et(n.nanos, s.nanos);\n}\n\nfunction Nt(t) {\n  return xt(t);\n}\n\nfunction xt(t) {\n  return \"nullValue\" in t ? \"null\" : \"booleanValue\" in t ? \"\" + t.booleanValue : \"integerValue\" in t ? \"\" + t.integerValue : \"doubleValue\" in t ? \"\" + t.doubleValue : \"timestampValue\" in t ? function (t) {\n    var e = gt(t);\n    return \"time(\".concat(e.seconds, \",\").concat(e.nanos, \")\");\n  }(t.timestampValue) : \"stringValue\" in t ? t.stringValue : \"bytesValue\" in t ? pt(t.bytesValue).toBase64() : \"referenceValue\" in t ? (n = t.referenceValue, Pt.fromName(n).toString()) : \"geoPointValue\" in t ? \"geo(\".concat((e = t.geoPointValue).latitude, \",\").concat(e.longitude, \")\") : \"arrayValue\" in t ? function (t) {\n    var e = \"[\",\n        n = !0;\n\n    var _iterator2 = _createForOfIteratorHelper(t.values || []),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var s = _step2.value;\n        n ? n = !1 : e += \",\", e += xt(s);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    return e + \"]\";\n  }\n  /** Returns a reference value for the provided database and key. */\n  (t.arrayValue) : \"mapValue\" in t ? function (t) {\n    // Iteration order in JavaScript is not guaranteed. To ensure that we generate\n    // matching canonical IDs for identical maps, we need to sort the keys.\n    var e = Object.keys(t.fields || {}).sort();\n    var n = \"{\",\n        s = !0;\n\n    var _iterator3 = _createForOfIteratorHelper(e),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var i = _step3.value;\n        s ? s = !1 : n += \",\", n += \"\".concat(i, \":\").concat(xt(t.fields[i]));\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n\n    return n + \"}\";\n  }(t.mapValue) : L();\n  var e, n;\n}\n\nfunction kt(t, e) {\n  return {\n    referenceValue: \"projects/\".concat(t.projectId, \"/databases/\").concat(t.database, \"/documents/\").concat(e.path.canonicalString())\n  };\n}\n/** Returns true if `value` is an IntegerValue . */\n\n\nfunction $t(t) {\n  return !!t && \"integerValue\" in t;\n}\n/** Returns true if `value` is a DoubleValue. */\n\n/** Returns true if `value` is an ArrayValue. */\n\n\nfunction Ot(t) {\n  return !!t && \"arrayValue\" in t;\n}\n/** Returns true if `value` is a NullValue. */\n\n\nfunction Ft(t) {\n  return !!t && \"nullValue\" in t;\n}\n/** Returns true if `value` is NaN. */\n\n\nfunction Mt(t) {\n  return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n/** Returns true if `value` is a MapValue. */\n\n\nfunction Lt(t) {\n  return !!t && \"mapValue\" in t;\n}\n/** Creates a deep copy of `source`. */\n\n\nfunction Bt(t) {\n  if (t.geoPointValue) return {\n    geoPointValue: Object.assign({}, t.geoPointValue)\n  };\n  if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n    timestampValue: Object.assign({}, t.timestampValue)\n  };\n\n  if (t.mapValue) {\n    var e = {\n      mapValue: {\n        fields: {}\n      }\n    };\n    return ct(t.mapValue.fields, function (t, n) {\n      return e.mapValue.fields[t] = Bt(n);\n    }), e;\n  }\n\n  if (t.arrayValue) {\n    var _e8 = {\n      arrayValue: {\n        values: []\n      }\n    };\n\n    for (var n = 0; n < (t.arrayValue.values || []).length; ++n) {\n      _e8.arrayValue.values[n] = Bt(t.arrayValue.values[n]);\n    }\n\n    return _e8;\n  }\n\n  return Object.assign({}, t);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */\n\n\nvar Ut = /*#__PURE__*/function () {\n  function Ut(t) {\n    _classCallCheck(this, Ut);\n\n    this.value = t;\n  }\n\n  _createClass(Ut, [{\n    key: \"field\",\n    value:\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */\n    function field(t) {\n      if (t.isEmpty()) return this.value;\n      {\n        var e = this.value;\n\n        for (var n = 0; n < t.length - 1; ++n) {\n          if (e = (e.mapValue.fields || {})[t.get(n)], !Lt(e)) return null;\n        }\n\n        return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n      }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(t, e) {\n      this.getFieldsMap(t.popLast())[t.lastSegment()] = Bt(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */\n\n  }, {\n    key: \"setAll\",\n    value: function setAll(t) {\n      var _this7 = this;\n\n      var e = ft.emptyPath(),\n          n = {},\n          s = [];\n      t.forEach(function (t, i) {\n        if (!e.isImmediateParentOf(i)) {\n          // Insert the accumulated changes at this parent location\n          var _t9 = _this7.getFieldsMap(e);\n\n          _this7.applyChanges(_t9, n, s), n = {}, s = [], e = i.popLast();\n        }\n\n        t ? n[i.lastSegment()] = Bt(t) : s.push(i.lastSegment());\n      });\n      var i = this.getFieldsMap(e);\n      this.applyChanges(i, n, s);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      var e = this.field(t.popLast());\n      Lt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return Vt(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */\n\n  }, {\n    key: \"getFieldsMap\",\n    value: function getFieldsMap(t) {\n      var e = this.value;\n      e.mapValue.fields || (e.mapValue = {\n        fields: {}\n      });\n\n      for (var n = 0; n < t.length; ++n) {\n        var s = e.mapValue.fields[t.get(n)];\n        Lt(s) && s.mapValue.fields || (s = {\n          mapValue: {\n            fields: {}\n          }\n        }, e.mapValue.fields[t.get(n)] = s), e = s;\n      }\n\n      return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */\n\n  }, {\n    key: \"applyChanges\",\n    value: function applyChanges(t, e, n) {\n      ct(e, function (e, n) {\n        return t[e] = n;\n      });\n\n      var _iterator4 = _createForOfIteratorHelper(n),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _e9 = _step4.value;\n          delete t[_e9];\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Ut(Bt(this.value));\n    }\n  }], [{\n    key: \"empty\",\n    value: function empty() {\n      return new Ut({\n        mapValue: {}\n      });\n    }\n  }]);\n\n  return Ut;\n}();\n/**\n * Returns a FieldMask built from all fields in a MapValue.\n */\n\n\nfunction qt(t) {\n  var e = [];\n  return ct(t.fields, function (t, n) {\n    var s = new ft([t]);\n\n    if (Lt(n)) {\n      var _t10 = qt(n.mapValue).fields;\n      if (0 === _t10.length) // Preserve the empty map by adding it to the FieldMask.\n        e.push(s);else {\n        // For nested and non-empty ObjectValues, add the FieldPath of the\n        // leaf nodes.\n        var _iterator5 = _createForOfIteratorHelper(_t10),\n            _step5;\n\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var _n4 = _step5.value;\n            e.push(s.child(_n4));\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n      }\n    } else // For nested and non-empty ObjectValues, add the FieldPath of the leaf\n      // nodes.\n      e.push(s);\n  }), new dt(e);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */\n\n\nvar Kt = /*#__PURE__*/function () {\n  function Kt(t, e, n, s, i) {\n    _classCallCheck(this, Kt);\n\n    this.key = t, this.documentType = e, this.version = n, this.data = s, this.documentState = i;\n  }\n  /**\n   * Creates a document with no known version or data, but which can serve as\n   * base document for mutations.\n   */\n\n\n  _createClass(Kt, [{\n    key: \"convertToFoundDocument\",\n    value:\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */\n    function convertToFoundDocument(t, e) {\n      return this.version = t, this.documentType = 1\n      /* FOUND_DOCUMENT */\n      , this.data = e, this.documentState = 0\n      /* SYNCED */\n      , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */\n\n  }, {\n    key: \"convertToNoDocument\",\n    value: function convertToNoDocument(t) {\n      return this.version = t, this.documentType = 2\n      /* NO_DOCUMENT */\n      , this.data = Ut.empty(), this.documentState = 0\n      /* SYNCED */\n      , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */\n\n  }, {\n    key: \"convertToUnknownDocument\",\n    value: function convertToUnknownDocument(t) {\n      return this.version = t, this.documentType = 3\n      /* UNKNOWN_DOCUMENT */\n      , this.data = Ut.empty(), this.documentState = 2\n      /* HAS_COMMITTED_MUTATIONS */\n      , this;\n    }\n  }, {\n    key: \"setHasCommittedMutations\",\n    value: function setHasCommittedMutations() {\n      return this.documentState = 2\n      /* HAS_COMMITTED_MUTATIONS */\n      , this;\n    }\n  }, {\n    key: \"setHasLocalMutations\",\n    value: function setHasLocalMutations() {\n      return this.documentState = 1\n      /* HAS_LOCAL_MUTATIONS */\n      , this;\n    }\n  }, {\n    key: \"hasLocalMutations\",\n    get: function get() {\n      return 1\n      /* HAS_LOCAL_MUTATIONS */\n      === this.documentState;\n    }\n  }, {\n    key: \"hasCommittedMutations\",\n    get: function get() {\n      return 2\n      /* HAS_COMMITTED_MUTATIONS */\n      === this.documentState;\n    }\n  }, {\n    key: \"hasPendingWrites\",\n    get: function get() {\n      return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n  }, {\n    key: \"isValidDocument\",\n    value: function isValidDocument() {\n      return 0\n      /* INVALID */\n      !== this.documentType;\n    }\n  }, {\n    key: \"isFoundDocument\",\n    value: function isFoundDocument() {\n      return 1\n      /* FOUND_DOCUMENT */\n      === this.documentType;\n    }\n  }, {\n    key: \"isNoDocument\",\n    value: function isNoDocument() {\n      return 2\n      /* NO_DOCUMENT */\n      === this.documentType;\n    }\n  }, {\n    key: \"isUnknownDocument\",\n    value: function isUnknownDocument() {\n      return 3\n      /* UNKNOWN_DOCUMENT */\n      === this.documentType;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t instanceof Kt && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Kt(this.key, this.documentType, this.version, this.data.clone(), this.documentState);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Document(\".concat(this.key, \", \").concat(this.version, \", \").concat(JSON.stringify(this.data.value), \", {documentType: \").concat(this.documentType, \"}), {documentState: \").concat(this.documentState, \"})\");\n    }\n  }], [{\n    key: \"newInvalidDocument\",\n    value: function newInvalidDocument(t) {\n      return new Kt(t, 0\n      /* INVALID */\n      , rt.min(), Ut.empty(), 0\n      /* SYNCED */\n      );\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */\n\n  }, {\n    key: \"newFoundDocument\",\n    value: function newFoundDocument(t, e, n) {\n      return new Kt(t, 1\n      /* FOUND_DOCUMENT */\n      , e, n, 0\n      /* SYNCED */\n      );\n    }\n    /** Creates a new document that is known to not exist at the given version. */\n\n  }, {\n    key: \"newNoDocument\",\n    value: function newNoDocument(t, e) {\n      return new Kt(t, 2\n      /* NO_DOCUMENT */\n      , e, Ut.empty(), 0\n      /* SYNCED */\n      );\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */\n\n  }, {\n    key: \"newUnknownDocument\",\n    value: function newUnknownDocument(t, e) {\n      return new Kt(t, 3\n      /* UNKNOWN_DOCUMENT */\n      , e, Ut.empty(), 2\n      /* HAS_COMMITTED_MUTATIONS */\n      );\n    }\n  }]);\n\n  return Kt;\n}();\n/**\n * Compares the value for field `field` in the provided documents. Throws if\n * the field does not exist in both documents.\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\n\n\nvar jt = function jt(t) {\n  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var i = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  var r = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n  var o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n\n  _classCallCheck(this, jt);\n\n  this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = s, this.limit = i, this.startAt = r, this.endAt = o, this.A = null;\n};\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */\n\n\nfunction Qt(t) {\n  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var i = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  var r = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n  var o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n  return new jt(t, e, n, s, i, r, o);\n}\n\nfunction Wt(t) {\n  var e = q(t);\n\n  if (null === e.A) {\n    var _t11 = e.path.canonicalString();\n\n    null !== e.collectionGroup && (_t11 += \"|cg:\" + e.collectionGroup), _t11 += \"|f:\", _t11 += e.filters.map(function (t) {\n      return Yt(t);\n    }).join(\",\"), _t11 += \"|ob:\", _t11 += e.orderBy.map(function (t) {\n      return function (t) {\n        // TODO(b/29183165): Make this collision robust.\n        return t.field.canonicalString() + t.dir;\n      }(t);\n    }).join(\",\"), At(e.limit) || (_t11 += \"|l:\", _t11 += e.limit), e.startAt && (_t11 += \"|lb:\", _t11 += ce(e.startAt)), e.endAt && (_t11 += \"|ub:\", _t11 += ce(e.endAt)), e.A = _t11;\n  }\n\n  return e.A;\n}\n\nfunction Gt(t) {\n  var e = t.path.canonicalString();\n  return null !== t.collectionGroup && (e += \" collectionGroup=\" + t.collectionGroup), t.filters.length > 0 && (e += \", filters: [\".concat(t.filters.map(function (t) {\n    return \"\".concat((e = t).field.canonicalString(), \" \").concat(e.op, \" \").concat(Nt(e.value));\n    /** Returns a debug description for `filter`. */\n\n    var e;\n    /** Filter that matches on key fields (i.e. '__name__'). */\n  }).join(\", \"), \"]\")), At(t.limit) || (e += \", limit: \" + t.limit), t.orderBy.length > 0 && (e += \", orderBy: [\".concat(t.orderBy.map(function (t) {\n    return function (t) {\n      return \"\".concat(t.field.canonicalString(), \" (\").concat(t.dir, \")\");\n    }(t);\n  }).join(\", \"), \"]\")), t.startAt && (e += \", startAt: \" + ce(t.startAt)), t.endAt && (e += \", endAt: \" + ce(t.endAt)), \"Target(\".concat(e, \")\");\n}\n\nfunction zt(t, e) {\n  if (t.limit !== e.limit) return !1;\n  if (t.orderBy.length !== e.orderBy.length) return !1;\n\n  for (var _n5 = 0; _n5 < t.orderBy.length; _n5++) {\n    if (!ue(t.orderBy[_n5], e.orderBy[_n5])) return !1;\n  }\n\n  if (t.filters.length !== e.filters.length) return !1;\n\n  for (var i = 0; i < t.filters.length; i++) {\n    if (n = t.filters[i], s = e.filters[i], n.op !== s.op || !n.field.isEqual(s.field) || !Vt(n.value, s.value)) return !1;\n  }\n\n  var n, s;\n  return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!le(t.startAt, e.startAt) && le(t.endAt, e.endAt);\n}\n\nfunction Ht(t) {\n  return Pt.isDocumentKey(t.path) && null === t.collectionGroup && 0 === t.filters.length;\n}\n\nvar Jt = /*#__PURE__*/function (_ref2) {\n  _inherits(Jt, _ref2);\n\n  var _super4 = _createSuper(Jt);\n\n  function Jt(t, e, n) {\n    var _this8;\n\n    _classCallCheck(this, Jt);\n\n    _this8 = _super4.call(this), _this8.field = t, _this8.op = e, _this8.value = n;\n    return _this8;\n  }\n  /**\n   * Creates a filter based on the provided arguments.\n   */\n\n\n  _createClass(Jt, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var e = t.data.field(this.field); // Types do not have to match in NOT_EQUAL filters.\n\n      return \"!=\"\n      /* NOT_EQUAL */\n      === this.op ? null !== e && this.P(Dt(e, this.value)) : null !== e && vt(this.value) === vt(e) && this.P(Dt(e, this.value)); // Only compare types with matching backend order (such as double and int).\n    }\n  }, {\n    key: \"P\",\n    value: function P(t) {\n      switch (this.op) {\n        case \"<\"\n        /* LESS_THAN */\n        :\n          return t < 0;\n\n        case \"<=\"\n        /* LESS_THAN_OR_EQUAL */\n        :\n          return t <= 0;\n\n        case \"==\"\n        /* EQUAL */\n        :\n          return 0 === t;\n\n        case \"!=\"\n        /* NOT_EQUAL */\n        :\n          return 0 !== t;\n\n        case \">\"\n        /* GREATER_THAN */\n        :\n          return t > 0;\n\n        case \">=\"\n        /* GREATER_THAN_OR_EQUAL */\n        :\n          return t >= 0;\n\n        default:\n          return L();\n      }\n    }\n  }, {\n    key: \"v\",\n    value: function v() {\n      return [\"<\"\n      /* LESS_THAN */\n      , \"<=\"\n      /* LESS_THAN_OR_EQUAL */\n      , \">\"\n      /* GREATER_THAN */\n      , \">=\"\n      /* GREATER_THAN_OR_EQUAL */\n      , \"!=\"\n      /* NOT_EQUAL */\n      , \"not-in\"\n      /* NOT_IN */\n      ].indexOf(this.op) >= 0;\n    }\n  }], [{\n    key: \"create\",\n    value: function create(t, e, n) {\n      return t.isKeyField() ? \"in\"\n      /* IN */\n      === e || \"not-in\"\n      /* NOT_IN */\n      === e ? this.R(t, e, n) : new Xt(t, e, n) : \"array-contains\"\n      /* ARRAY_CONTAINS */\n      === e ? new ne(t, n) : \"in\"\n      /* IN */\n      === e ? new se(t, n) : \"not-in\"\n      /* NOT_IN */\n      === e ? new ie(t, n) : \"array-contains-any\"\n      /* ARRAY_CONTAINS_ANY */\n      === e ? new re(t, n) : new Jt(t, e, n);\n    }\n  }, {\n    key: \"R\",\n    value: function R(t, e, n) {\n      return \"in\"\n      /* IN */\n      === e ? new Zt(t, n) : new te(t, n);\n    }\n  }]);\n\n  return Jt;\n}( /*#__PURE__*/function () {\n  function _class() {\n    _classCallCheck(this, _class);\n  }\n\n  return _class;\n}());\n\nfunction Yt(t) {\n  // TODO(b/29183165): Technically, this won't be unique if two values have\n  // the same description, such as the int 3 and the string \"3\". So we should\n  // add the types in here somehow, too.\n  return t.field.canonicalString() + t.op.toString() + Nt(t.value);\n}\n\nvar Xt = /*#__PURE__*/function (_Jt) {\n  _inherits(Xt, _Jt);\n\n  var _super5 = _createSuper(Xt);\n\n  function Xt(t, e, n) {\n    var _this9;\n\n    _classCallCheck(this, Xt);\n\n    _this9 = _super5.call(this, t, e, n), _this9.key = Pt.fromName(n.referenceValue);\n    return _this9;\n  }\n\n  _createClass(Xt, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var e = Pt.comparator(t.key, this.key);\n      return this.P(e);\n    }\n  }]);\n\n  return Xt;\n}(Jt);\n/** Filter that matches on key fields within an array. */\n\n\nvar Zt = /*#__PURE__*/function (_Jt2) {\n  _inherits(Zt, _Jt2);\n\n  var _super6 = _createSuper(Zt);\n\n  function Zt(t, e) {\n    var _this10;\n\n    _classCallCheck(this, Zt);\n\n    _this10 = _super6.call(this, t, \"in\"\n    /* IN */\n    , e), _this10.keys = ee(\"in\"\n    /* IN */\n    , e);\n    return _this10;\n  }\n\n  _createClass(Zt, [{\n    key: \"matches\",\n    value: function matches(t) {\n      return this.keys.some(function (e) {\n        return e.isEqual(t.key);\n      });\n    }\n  }]);\n\n  return Zt;\n}(Jt);\n/** Filter that matches on key fields not present within an array. */\n\n\nvar te = /*#__PURE__*/function (_Jt3) {\n  _inherits(te, _Jt3);\n\n  var _super7 = _createSuper(te);\n\n  function te(t, e) {\n    var _this11;\n\n    _classCallCheck(this, te);\n\n    _this11 = _super7.call(this, t, \"not-in\"\n    /* NOT_IN */\n    , e), _this11.keys = ee(\"not-in\"\n    /* NOT_IN */\n    , e);\n    return _this11;\n  }\n\n  _createClass(te, [{\n    key: \"matches\",\n    value: function matches(t) {\n      return !this.keys.some(function (e) {\n        return e.isEqual(t.key);\n      });\n    }\n  }]);\n\n  return te;\n}(Jt);\n\nfunction ee(t, e) {\n  var n;\n  return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map(function (t) {\n    return Pt.fromName(t.referenceValue);\n  });\n}\n/** A Filter that implements the array-contains operator. */\n\n\nvar ne = /*#__PURE__*/function (_Jt4) {\n  _inherits(ne, _Jt4);\n\n  var _super8 = _createSuper(ne);\n\n  function ne(t, e) {\n    _classCallCheck(this, ne);\n\n    return _super8.call(this, t, \"array-contains\"\n    /* ARRAY_CONTAINS */\n    , e);\n  }\n\n  _createClass(ne, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var e = t.data.field(this.field);\n      return Ot(e) && St(e.arrayValue, this.value);\n    }\n  }]);\n\n  return ne;\n}(Jt);\n/** A Filter that implements the IN operator. */\n\n\nvar se = /*#__PURE__*/function (_Jt5) {\n  _inherits(se, _Jt5);\n\n  var _super9 = _createSuper(se);\n\n  function se(t, e) {\n    _classCallCheck(this, se);\n\n    return _super9.call(this, t, \"in\"\n    /* IN */\n    , e);\n  }\n\n  _createClass(se, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var e = t.data.field(this.field);\n      return null !== e && St(this.value.arrayValue, e);\n    }\n  }]);\n\n  return se;\n}(Jt);\n/** A Filter that implements the not-in operator. */\n\n\nvar ie = /*#__PURE__*/function (_Jt6) {\n  _inherits(ie, _Jt6);\n\n  var _super10 = _createSuper(ie);\n\n  function ie(t, e) {\n    _classCallCheck(this, ie);\n\n    return _super10.call(this, t, \"not-in\"\n    /* NOT_IN */\n    , e);\n  }\n\n  _createClass(ie, [{\n    key: \"matches\",\n    value: function matches(t) {\n      if (St(this.value.arrayValue, {\n        nullValue: \"NULL_VALUE\"\n      })) return !1;\n      var e = t.data.field(this.field);\n      return null !== e && !St(this.value.arrayValue, e);\n    }\n  }]);\n\n  return ie;\n}(Jt);\n/** A Filter that implements the array-contains-any operator. */\n\n\nvar re = /*#__PURE__*/function (_Jt7) {\n  _inherits(re, _Jt7);\n\n  var _super11 = _createSuper(re);\n\n  function re(t, e) {\n    _classCallCheck(this, re);\n\n    return _super11.call(this, t, \"array-contains-any\"\n    /* ARRAY_CONTAINS_ANY */\n    , e);\n  }\n\n  _createClass(re, [{\n    key: \"matches\",\n    value: function matches(t) {\n      var _this12 = this;\n\n      var e = t.data.field(this.field);\n      return !(!Ot(e) || !e.arrayValue.values) && e.arrayValue.values.some(function (t) {\n        return St(_this12.value.arrayValue, t);\n      });\n    }\n  }]);\n\n  return re;\n}(Jt);\n/**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */\n\n\nvar oe = function oe(t, e) {\n  _classCallCheck(this, oe);\n\n  this.position = t, this.before = e;\n};\n\nfunction ce(t) {\n  // TODO(b/29183165): Make this collision robust.\n  return \"\".concat(t.before ? \"b\" : \"a\", \":\").concat(t.position.map(function (t) {\n    return Nt(t);\n  }).join(\",\"));\n}\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */\n\n\nvar ae = function ae(t) {\n  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"asc\";\n\n  _classCallCheck(this, ae);\n\n  this.field = t, this.dir = e;\n};\n\nfunction ue(t, e) {\n  return t.dir === e.dir && t.field.isEqual(e.field);\n}\n/**\n * Returns true if a document sorts before a bound using the provided sort\n * order.\n */\n\n\nfunction he(t, e, n) {\n  var s = 0;\n\n  for (var i = 0; i < t.position.length; i++) {\n    var r = e[i],\n        o = t.position[i];\n    if (r.field.isKeyField()) s = Pt.comparator(Pt.fromName(o.referenceValue), n.key);else {\n      s = Dt(o, n.data.field(r.field));\n    }\n    if (\"desc\"\n    /* DESCENDING */\n    === r.dir && (s *= -1), 0 !== s) break;\n  }\n\n  return t.before ? s <= 0 : s < 0;\n}\n\nfunction le(t, e) {\n  if (null === t) return null === e;\n  if (null === e) return !1;\n  if (t.before !== e.before || t.position.length !== e.position.length) return !1;\n\n  for (var n = 0; n < t.position.length; n++) {\n    if (!Vt(t.position[n], e.position[n])) return !1;\n  }\n\n  return !0;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */\n\n\nvar fe =\n/**\n * Initializes a Query with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n */\nfunction fe(t) {\n  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n  var i = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n  var r = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : \"F\";\n  var o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n  var c = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n\n  _classCallCheck(this, fe);\n\n  this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = s, this.limit = i, this.limitType = r, this.startAt = o, this.endAt = c, this.V = null, // The corresponding `Target` of this `Query` instance.\n  this.S = null, this.startAt, this.endAt;\n};\n/** Creates a new Query instance with the options provided. */\n\n\nfunction de(t, e, n, s, i, r, o, c) {\n  return new fe(t, e, n, s, i, r, o, c);\n}\n/** Creates a new Query for a query that matches all documents at `path` */\n\n\nfunction we(t) {\n  return new fe(t);\n}\n/**\n * Helper to convert a collection group query into a collection query at a\n * specific path. This is used when executing collection group queries, since\n * we have to split the query into a set of collection queries at multiple\n * paths.\n */\n\n\nfunction _e(t) {\n  return !At(t.limit) && \"F\"\n  /* First */\n  === t.limitType;\n}\n\nfunction me(t) {\n  return !At(t.limit) && \"L\"\n  /* Last */\n  === t.limitType;\n}\n\nfunction ge(t) {\n  return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction ye(t) {\n  var _iterator6 = _createForOfIteratorHelper(t.filters),\n      _step6;\n\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var e = _step6.value;\n      if (e.v()) return e.field;\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n\n  return null;\n}\n/**\n * Checks if any of the provided Operators are included in the query and\n * returns the first one that is, or null if none are.\n */\n\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\n\n\nfunction pe(t) {\n  return null !== t.collectionGroup;\n}\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */\n\n\nfunction Te(t) {\n  var e = q(t);\n\n  if (null === e.V) {\n    e.V = [];\n\n    var _t12 = ye(e),\n        n = ge(e);\n\n    if (null !== _t12 && null === n) // In order to implicitly add key ordering, we must also add the\n      // inequality filter field for it to be a valid query.\n      // Note that the default inequality field and key ordering is ascending.\n      _t12.isKeyField() || e.V.push(new ae(_t12)), e.V.push(new ae(ft.keyField(), \"asc\"\n      /* ASCENDING */\n      ));else {\n      var _t13 = !1;\n\n      var _iterator7 = _createForOfIteratorHelper(e.explicitOrderBy),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var _n6 = _step7.value;\n          e.V.push(_n6), _n6.field.isKeyField() && (_t13 = !0);\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      if (!_t13) {\n        // The order of the implicit key ordering always matches the last\n        // explicit order by\n        var _t14 = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\"\n        /* ASCENDING */\n        ;\n\n        e.V.push(new ae(ft.keyField(), _t14));\n      }\n    }\n  }\n\n  return e.V;\n}\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */\n\n\nfunction Ee(t) {\n  var e = q(t);\n  if (!e.S) if (\"F\"\n  /* First */\n  === e.limitType) e.S = Qt(e.path, e.collectionGroup, Te(e), e.filters, e.limit, e.startAt, e.endAt);else {\n    // Flip the orderBy directions since we want the last results\n    var _t15 = [];\n\n    var _iterator8 = _createForOfIteratorHelper(Te(e)),\n        _step8;\n\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var _n7 = _step8.value;\n\n        var _e10 = \"desc\"\n        /* DESCENDING */\n        === _n7.dir ? \"asc\"\n        /* ASCENDING */\n        : \"desc\"\n        /* DESCENDING */\n        ;\n\n        _t15.push(new ae(_n7.field, _e10));\n      } // We need to swap the cursors to match the now-flipped query ordering.\n\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n\n    var n = e.endAt ? new oe(e.endAt.position, !e.endAt.before) : null,\n        s = e.startAt ? new oe(e.startAt.position, !e.startAt.before) : null; // Now return as a LimitType.First query.\n\n    e.S = Qt(e.path, e.collectionGroup, _t15, e.filters, e.limit, n, s);\n  }\n  return e.S;\n}\n\nfunction Ie(t, e, n) {\n  return new fe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n}\n\nfunction Ae(t, e) {\n  return zt(Ee(t), Ee(e)) && t.limitType === e.limitType;\n} // TODO(b/29183165): This is used to get a unique string from a query to, for\n// example, use as a dictionary key, but the implementation is subject to\n// collisions. Make it collision-free.\n\n\nfunction Re(t) {\n  return \"\".concat(Wt(Ee(t)), \"|lt:\").concat(t.limitType);\n}\n\nfunction be(t) {\n  return \"Query(target=\".concat(Gt(Ee(t)), \"; limitType=\").concat(t.limitType, \")\");\n}\n/** Returns whether `doc` matches the constraints of `query`. */\n\n\nfunction Pe(t, e) {\n  return e.isFoundDocument() && function (t, e) {\n    var n = e.key.path;\n    return null !== t.collectionGroup ? e.key.hasCollectionId(t.collectionGroup) && t.path.isPrefixOf(n) : Pt.isDocumentKey(t.path) ? t.path.isEqual(n) : t.path.isImmediateParentOf(n);\n  }\n  /**\n  * A document must have a value for every ordering clause in order to show up\n  * in the results.\n  */\n  (t, e) && function (t, e) {\n    var _iterator9 = _createForOfIteratorHelper(t.explicitOrderBy),\n        _step9;\n\n    try {\n      for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n        var n = _step9.value;\n        // order by key always matches\n        if (!n.field.isKeyField() && null === e.data.field(n.field)) return !1;\n      }\n    } catch (err) {\n      _iterator9.e(err);\n    } finally {\n      _iterator9.f();\n    }\n\n    return !0;\n  }(t, e) && function (t, e) {\n    var _iterator10 = _createForOfIteratorHelper(t.filters),\n        _step10;\n\n    try {\n      for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n        var n = _step10.value;\n        if (!n.matches(e)) return !1;\n      }\n    } catch (err) {\n      _iterator10.e(err);\n    } finally {\n      _iterator10.f();\n    }\n\n    return !0;\n  }\n  /** Makes sure a document is within the bounds, if provided. */\n  (t, e) && function (t, e) {\n    if (t.startAt && !he(t.startAt, Te(t), e)) return !1;\n    if (t.endAt && he(t.endAt, Te(t), e)) return !1;\n    return !0;\n  }\n  /**\n  * Returns a new comparator function that can be used to compare two documents\n  * based on the Query's ordering constraint.\n  */\n  (t, e);\n}\n\nfunction ve(t) {\n  return function (e, n) {\n    var s = !1;\n\n    var _iterator11 = _createForOfIteratorHelper(Te(t)),\n        _step11;\n\n    try {\n      for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n        var i = _step11.value;\n\n        var _t16 = Ve(i, e, n);\n\n        if (0 !== _t16) return _t16;\n        s = s || i.field.isKeyField();\n      }\n    } catch (err) {\n      _iterator11.e(err);\n    } finally {\n      _iterator11.f();\n    }\n\n    return 0;\n  };\n}\n\nfunction Ve(t, e, n) {\n  var s = t.field.isKeyField() ? Pt.comparator(e.key, n.key) : function (t, e, n) {\n    var s = e.data.field(t),\n        i = n.data.field(t);\n    return null !== s && null !== i ? Dt(s, i) : L();\n  }(t.field, e, n);\n\n  switch (t.dir) {\n    case \"asc\"\n    /* ASCENDING */\n    :\n      return s;\n\n    case \"desc\"\n    /* DESCENDING */\n    :\n      return -1 * s;\n\n    default:\n      return L();\n  }\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n\n\nfunction Se(t, e) {\n  if (t.D) {\n    if (isNaN(e)) return {\n      doubleValue: \"NaN\"\n    };\n    if (e === 1 / 0) return {\n      doubleValue: \"Infinity\"\n    };\n    if (e === -1 / 0) return {\n      doubleValue: \"-Infinity\"\n    };\n  }\n\n  return {\n    doubleValue: Rt(e) ? \"-0\" : e\n  };\n}\n/**\n * Returns an IntegerValue for `value`.\n */\n\n\nfunction De(t) {\n  return {\n    integerValue: \"\" + t\n  };\n}\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\n\n\nfunction Ce(t, e) {\n  return bt(e) ? De(e) : Se(t, e);\n}\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Used to represent a field transform on a mutation. */\n\n\nvar Ne = function Ne() {\n  _classCallCheck(this, Ne);\n\n  // Make sure that the structural type of `TransformOperation` is unique.\n  // See https://github.com/microsoft/TypeScript/issues/5451\n  this._ = void 0;\n};\n/**\n * Computes the local transform result against the provided `previousValue`,\n * optionally using the provided localWriteTime.\n */\n\n\nfunction xe(t, e, n) {\n  return t instanceof Oe ? function (t, e) {\n    var n = {\n      fields: {\n        __type__: {\n          stringValue: \"server_timestamp\"\n        },\n        __local_write_time__: {\n          timestampValue: {\n            seconds: t.seconds,\n            nanos: t.nanoseconds\n          }\n        }\n      }\n    };\n    return e && (n.fields.__previous_value__ = e), {\n      mapValue: n\n    };\n  }(n, e) : t instanceof Fe ? Me(t, e) : t instanceof Le ? Be(t, e) : function (t, e) {\n    // PORTING NOTE: Since JavaScript's integer arithmetic is limited to 53 bit\n    // precision and resolves overflows by reducing precision, we do not\n    // manually cap overflows at 2^63.\n    var n = $e(t, e),\n        s = qe(n) + qe(t.C);\n    return $t(n) && $t(t.C) ? De(s) : Se(t.N, s);\n  }(t, e);\n}\n/**\n * Computes a final transform result after the transform has been acknowledged\n * by the server, potentially using the server-provided transformResult.\n */\n\n\nfunction ke(t, e, n) {\n  // The server just sends null as the transform result for array operations,\n  // so we have to calculate a result the same as we do for local\n  // applications.\n  return t instanceof Fe ? Me(t, e) : t instanceof Le ? Be(t, e) : n;\n}\n/**\n * If this transform operation is not idempotent, returns the base value to\n * persist for this transform. If a base value is returned, the transform\n * operation is always applied to this base value, even if document has\n * already been updated.\n *\n * Base values provide consistent behavior for non-idempotent transforms and\n * allow us to return the same latency-compensated value even if the backend\n * has already applied the transform operation. The base value is null for\n * idempotent transforms, as they can be re-played even if the backend has\n * already applied them.\n *\n * @returns a base value to store along with the mutation, or null for\n * idempotent transforms.\n */\n\n\nfunction $e(t, e) {\n  return t instanceof Ue ? $t(n = e) || function (t) {\n    return !!t && \"doubleValue\" in t;\n  }\n  /** Returns true if `value` is either an IntegerValue or a DoubleValue. */\n  (n) ? e : {\n    integerValue: 0\n  } : null;\n  var n;\n}\n/** Transforms a value into a server-generated timestamp. */\n\n\nvar Oe = /*#__PURE__*/function (_Ne) {\n  _inherits(Oe, _Ne);\n\n  var _super12 = _createSuper(Oe);\n\n  function Oe() {\n    _classCallCheck(this, Oe);\n\n    return _super12.apply(this, arguments);\n  }\n\n  return Oe;\n}(Ne);\n/** Transforms an array value via a union operation. */\n\n\nvar Fe = /*#__PURE__*/function (_Ne2) {\n  _inherits(Fe, _Ne2);\n\n  var _super13 = _createSuper(Fe);\n\n  function Fe(t) {\n    var _this13;\n\n    _classCallCheck(this, Fe);\n\n    _this13 = _super13.call(this), _this13.elements = t;\n    return _this13;\n  }\n\n  return Fe;\n}(Ne);\n\nfunction Me(t, e) {\n  var n = Ke(e);\n\n  var _iterator12 = _createForOfIteratorHelper(t.elements),\n      _step12;\n\n  try {\n    var _loop = function _loop() {\n      var e = _step12.value;\n      n.some(function (t) {\n        return Vt(t, e);\n      }) || n.push(e);\n    };\n\n    for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator12.e(err);\n  } finally {\n    _iterator12.f();\n  }\n\n  return {\n    arrayValue: {\n      values: n\n    }\n  };\n}\n/** Transforms an array value via a remove operation. */\n\n\nvar Le = /*#__PURE__*/function (_Ne3) {\n  _inherits(Le, _Ne3);\n\n  var _super14 = _createSuper(Le);\n\n  function Le(t) {\n    var _this14;\n\n    _classCallCheck(this, Le);\n\n    _this14 = _super14.call(this), _this14.elements = t;\n    return _this14;\n  }\n\n  return Le;\n}(Ne);\n\nfunction Be(t, e) {\n  var n = Ke(e);\n\n  var _iterator13 = _createForOfIteratorHelper(t.elements),\n      _step13;\n\n  try {\n    var _loop2 = function _loop2() {\n      var e = _step13.value;\n      n = n.filter(function (t) {\n        return !Vt(t, e);\n      });\n    };\n\n    for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n      _loop2();\n    }\n  } catch (err) {\n    _iterator13.e(err);\n  } finally {\n    _iterator13.f();\n  }\n\n  return {\n    arrayValue: {\n      values: n\n    }\n  };\n}\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */\n\n\nvar Ue = /*#__PURE__*/function (_Ne4) {\n  _inherits(Ue, _Ne4);\n\n  var _super15 = _createSuper(Ue);\n\n  function Ue(t, e) {\n    var _this15;\n\n    _classCallCheck(this, Ue);\n\n    _this15 = _super15.call(this), _this15.N = t, _this15.C = e;\n    return _this15;\n  }\n\n  return Ue;\n}(Ne);\n\nfunction qe(t) {\n  return yt(t.integerValue || t.doubleValue);\n}\n\nfunction Ke(t) {\n  return Ot(t) && t.arrayValue.values ? t.arrayValue.values.slice() : [];\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** A field path and the TransformOperation to perform upon it. */\n\n\nvar je = function je(t, e) {\n  _classCallCheck(this, je);\n\n  this.field = t, this.transform = e;\n};\n\nfunction Qe(t, e) {\n  return t.field.isEqual(e.field) && function (t, e) {\n    return t instanceof Fe && e instanceof Fe || t instanceof Le && e instanceof Le ? nt(t.elements, e.elements, Vt) : t instanceof Ue && e instanceof Ue ? Vt(t.C, e.C) : t instanceof Oe && e instanceof Oe;\n  }(t.transform, e.transform);\n}\n/** The result of successfully applying a mutation to the backend. */\n\n\nvar We = function We(\n/**\n * The version at which the mutation was committed:\n *\n * - For most operations, this is the updateTime in the WriteResult.\n * - For deletes, the commitTime of the WriteResponse (because deletes are\n *   not stored and have no updateTime).\n *\n * Note that these versions can be different: No-op writes will not change\n * the updateTime even though the commitTime advances.\n */\nt,\n/**\n * The resulting fields returned from the backend after a mutation\n * containing field transforms has been committed. Contains one FieldValue\n * for each FieldTransform that was in the mutation.\n *\n * Will be empty if the mutation did not contain any field transforms.\n */\ne) {\n  _classCallCheck(this, We);\n\n  this.version = t, this.transformResults = e;\n};\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */\n\n\nvar Ge = /*#__PURE__*/function () {\n  function Ge(t, e) {\n    _classCallCheck(this, Ge);\n\n    this.updateTime = t, this.exists = e;\n  }\n  /** Creates a new empty Precondition. */\n\n\n  _createClass(Ge, [{\n    key: \"isNone\",\n    get:\n    /** Returns whether this Precondition is empty. */\n    function get() {\n      return void 0 === this.updateTime && void 0 === this.exists;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n  }], [{\n    key: \"none\",\n    value: function none() {\n      return new Ge();\n    }\n    /** Creates a new Precondition with an exists flag. */\n\n  }, {\n    key: \"exists\",\n    value: function exists(t) {\n      return new Ge(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */\n\n  }, {\n    key: \"updateTime\",\n    value: function updateTime(t) {\n      return new Ge(t);\n    }\n  }]);\n\n  return Ge;\n}();\n/** Returns true if the preconditions is valid for the given document. */\n\n\nfunction ze(t, e) {\n  return void 0 !== t.updateTime ? e.isFoundDocument() && e.version.isEqual(t.updateTime) : void 0 === t.exists || t.exists === e.isFoundDocument();\n}\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */\n\n\nvar He = function He() {\n  _classCallCheck(this, He);\n};\n/**\n * Applies this mutation to the given document for the purposes of computing a\n * new remote document. If the input document doesn't match the expected state\n * (e.g. it is invalid or outdated), the document type may transition to\n * unknown.\n *\n * @param mutation - The mutation to apply.\n * @param document - The document to mutate. The input document can be an\n *     invalid document if the client has no knowledge of the pre-mutation state\n *     of the document.\n * @param mutationResult - The result of applying the mutation from the backend.\n */\n\n\nfunction Je(t, e, n) {\n  t instanceof en ? function (t, e, n) {\n    // Unlike setMutationApplyToLocalView, if we're applying a mutation to a\n    // remote document the server has accepted the mutation so the precondition\n    // must have held.\n    var s = t.value.clone(),\n        i = rn(t.fieldTransforms, e, n.transformResults);\n    s.setAll(i), e.convertToFoundDocument(n.version, s).setHasCommittedMutations();\n  }(t, e, n) : t instanceof nn ? function (t, e, n) {\n    if (!ze(t.precondition, e)) // Since the mutation was not rejected, we know that the precondition\n      // matched on the backend. We therefore must not have the expected version\n      // of the document in our cache and convert to an UnknownDocument with a\n      // known updateTime.\n      return void e.convertToUnknownDocument(n.version);\n    var s = rn(t.fieldTransforms, e, n.transformResults),\n        i = e.data;\n    i.setAll(sn(t)), i.setAll(s), e.convertToFoundDocument(n.version, i).setHasCommittedMutations();\n  }(t, e, n) : function (t, e, n) {\n    // Unlike applyToLocalView, if we're applying a mutation to a remote\n    // document the server has accepted the mutation so the precondition must\n    // have held.\n    e.convertToNoDocument(n.version).setHasCommittedMutations();\n  }(0, e, n);\n}\n/**\n * Applies this mutation to the given document for the purposes of computing\n * the new local view of a document. If the input document doesn't match the\n * expected state, the document is not modified.\n *\n * @param mutation - The mutation to apply.\n * @param document - The document to mutate. The input document can be an\n *     invalid document if the client has no knowledge of the pre-mutation state\n *     of the document.\n * @param localWriteTime - A timestamp indicating the local write time of the\n *     batch this mutation is a part of.\n */\n\n\nfunction Ye(t, e, n) {\n  t instanceof en ? function (t, e, n) {\n    if (!ze(t.precondition, e)) // The mutation failed to apply (e.g. a document ID created with add()\n      // caused a name collision).\n      return;\n    var s = t.value.clone(),\n        i = on(t.fieldTransforms, n, e);\n    s.setAll(i), e.convertToFoundDocument(tn(e), s).setHasLocalMutations();\n  }\n  /**\n  * A mutation that modifies fields of the document at the given key with the\n  * given values. The values are applied through a field mask:\n  *\n  *  * When a field is in both the mask and the values, the corresponding field\n  *    is updated.\n  *  * When a field is in neither the mask nor the values, the corresponding\n  *    field is unmodified.\n  *  * When a field is in the mask but not in the values, the corresponding field\n  *    is deleted.\n  *  * When a field is not in the mask but is in the values, the values map is\n  *    ignored.\n  */\n  (t, e, n) : t instanceof nn ? function (t, e, n) {\n    if (!ze(t.precondition, e)) return;\n    var s = on(t.fieldTransforms, n, e),\n        i = e.data;\n    i.setAll(sn(t)), i.setAll(s), e.convertToFoundDocument(tn(e), i).setHasLocalMutations();\n  }\n  /**\n  * Returns a FieldPath/Value map with the content of the PatchMutation.\n  */\n  (t, e, n) : function (t, e) {\n    ze(t.precondition, e) && // We don't call `setHasLocalMutations()` since we want to be backwards\n    // compatible with the existing SDK behavior.\n    e.convertToNoDocument(rt.min());\n  }\n  /**\n  * A mutation that verifies the existence of the document at the given key with\n  * the provided precondition.\n  *\n  * The `verify` operation is only used in Transactions, and this class serves\n  * primarily to facilitate serialization into protos.\n  */\n  (t, e);\n}\n/**\n * If this mutation is not idempotent, returns the base value to persist with\n * this mutation. If a base value is returned, the mutation is always applied\n * to this base value, even if document has already been updated.\n *\n * The base value is a sparse object that consists of only the document\n * fields for which this mutation contains a non-idempotent transformation\n * (e.g. a numeric increment). The provided value guarantees consistent\n * behavior for non-idempotent transforms and allow us to return the same\n * latency-compensated value even if the backend has already applied the\n * mutation. The base value is null for idempotent mutations, as they can be\n * re-played even if the backend has already applied them.\n *\n * @returns a base value to store along with the mutation, or null for\n * idempotent mutations.\n */\n\n\nfunction Xe(t, e) {\n  var n = null;\n\n  var _iterator14 = _createForOfIteratorHelper(t.fieldTransforms),\n      _step14;\n\n  try {\n    for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n      var s = _step14.value;\n\n      var _t17 = e.data.field(s.field),\n          i = $e(s.transform, _t17 || null);\n\n      null != i && (null == n && (n = Ut.empty()), n.set(s.field, i));\n    }\n  } catch (err) {\n    _iterator14.e(err);\n  } finally {\n    _iterator14.f();\n  }\n\n  return n || null;\n}\n\nfunction Ze(t, e) {\n  return t.type === e.type && !!t.key.isEqual(e.key) && !!t.precondition.isEqual(e.precondition) && !!function (t, e) {\n    return void 0 === t && void 0 === e || !(!t || !e) && nt(t, e, function (t, e) {\n      return Qe(t, e);\n    });\n  }(t.fieldTransforms, e.fieldTransforms) && (0\n  /* Set */\n  === t.type ? t.value.isEqual(e.value) : 1\n  /* Patch */\n  !== t.type || t.data.isEqual(e.data) && t.fieldMask.isEqual(e.fieldMask));\n}\n/**\n * Returns the version from the given document for use as the result of a\n * mutation. Mutations are defined to return the version of the base document\n * only if it is an existing document. Deleted and unknown documents have a\n * post-mutation version of SnapshotVersion.min().\n */\n\n\nfunction tn(t) {\n  return t.isFoundDocument() ? t.version : rt.min();\n}\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */\n\n\nvar en = /*#__PURE__*/function (_He) {\n  _inherits(en, _He);\n\n  var _super16 = _createSuper(en);\n\n  function en(t, e, n) {\n    var _this16;\n\n    var s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n\n    _classCallCheck(this, en);\n\n    _this16 = _super16.call(this), _this16.key = t, _this16.value = e, _this16.precondition = n, _this16.fieldTransforms = s, _this16.type = 0\n    /* Set */\n    ;\n    return _this16;\n  }\n\n  return en;\n}(He);\n\nvar nn = /*#__PURE__*/function (_He2) {\n  _inherits(nn, _He2);\n\n  var _super17 = _createSuper(nn);\n\n  function nn(t, e, n, s) {\n    var _this17;\n\n    var i = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n\n    _classCallCheck(this, nn);\n\n    _this17 = _super17.call(this), _this17.key = t, _this17.data = e, _this17.fieldMask = n, _this17.precondition = s, _this17.fieldTransforms = i, _this17.type = 1\n    /* Patch */\n    ;\n    return _this17;\n  }\n\n  return nn;\n}(He);\n\nfunction sn(t) {\n  var e = new Map();\n  return t.fieldMask.fields.forEach(function (n) {\n    if (!n.isEmpty()) {\n      var s = t.data.field(n);\n      e.set(n, s);\n    }\n  }), e;\n}\n/**\n * Creates a list of \"transform results\" (a transform result is a field value\n * representing the result of applying a transform) for use after a mutation\n * containing transforms has been acknowledged by the server.\n *\n * @param fieldTransforms - The field transforms to apply the result to.\n * @param mutableDocument - The current state of the document after applying all\n * previous mutations.\n * @param serverTransformResults - The transform results received by the server.\n * @returns The transform results list.\n */\n\n\nfunction rn(t, e, n) {\n  var s = new Map();\n  B(t.length === n.length);\n\n  for (var i = 0; i < n.length; i++) {\n    var r = t[i],\n        o = r.transform,\n        c = e.data.field(r.field);\n    s.set(r.field, ke(o, c, n[i]));\n  }\n\n  return s;\n}\n/**\n * Creates a list of \"transform results\" (a transform result is a field value\n * representing the result of applying a transform) for use when applying a\n * transform locally.\n *\n * @param fieldTransforms - The field transforms to apply the result to.\n * @param localWriteTime - The local time of the mutation (used to\n *     generate ServerTimestampValues).\n * @param mutableDocument - The current state of the document after applying all\n *     previous mutations.\n * @returns The transform results list.\n */\n\n\nfunction on(t, e, n) {\n  var s = new Map();\n\n  var _iterator15 = _createForOfIteratorHelper(t),\n      _step15;\n\n  try {\n    for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n      var i = _step15.value;\n      var _t18 = i.transform,\n          r = n.data.field(i.field);\n      s.set(i.field, xe(_t18, r, e));\n    }\n  } catch (err) {\n    _iterator15.e(err);\n  } finally {\n    _iterator15.f();\n  }\n\n  return s;\n}\n/** A mutation that deletes the document at the given key. */\n\n\nvar cn = /*#__PURE__*/function (_He3) {\n  _inherits(cn, _He3);\n\n  var _super18 = _createSuper(cn);\n\n  function cn(t, e) {\n    var _this18;\n\n    _classCallCheck(this, cn);\n\n    _this18 = _super18.call(this), _this18.key = t, _this18.precondition = e, _this18.type = 2\n    /* Delete */\n    , _this18.fieldTransforms = [];\n    return _this18;\n  }\n\n  return cn;\n}(He);\n\nvar an = /*#__PURE__*/function (_He4) {\n  _inherits(an, _He4);\n\n  var _super19 = _createSuper(an);\n\n  function an(t, e) {\n    var _this19;\n\n    _classCallCheck(this, an);\n\n    _this19 = _super19.call(this), _this19.key = t, _this19.precondition = e, _this19.type = 3\n    /* Verify */\n    , _this19.fieldTransforms = [];\n    return _this19;\n  }\n\n  return an;\n}(He);\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar un = // TODO(b/33078163): just use simplest form of existence filter for now\nfunction un(t) {\n  _classCallCheck(this, un);\n\n  this.count = t;\n};\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\n\n\nvar hn, ln;\n/**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\n\nfunction fn(t) {\n  switch (t) {\n    default:\n      return L();\n\n    case K.CANCELLED:\n    case K.UNKNOWN:\n    case K.DEADLINE_EXCEEDED:\n    case K.RESOURCE_EXHAUSTED:\n    case K.INTERNAL:\n    case K.UNAVAILABLE: // Unauthenticated means something went wrong with our token and we need\n    // to retry with new credentials which will happen automatically.\n\n    case K.UNAUTHENTICATED:\n      return !1;\n\n    case K.INVALID_ARGUMENT:\n    case K.NOT_FOUND:\n    case K.ALREADY_EXISTS:\n    case K.PERMISSION_DENIED:\n    case K.FAILED_PRECONDITION: // Aborted might be retried in some scenarios, but that is dependant on\n    // the context and should handled individually by the calling code.\n    // See https://cloud.google.com/apis/design/errors.\n\n    case K.ABORTED:\n    case K.OUT_OF_RANGE:\n    case K.UNIMPLEMENTED:\n    case K.DATA_LOSS:\n      return !0;\n  }\n}\n/**\n * Determines whether an error code represents a permanent error when received\n * in response to a write operation.\n *\n * Write operations must be handled specially because as of b/119437764, ABORTED\n * errors on the write stream should be retried too (even though ABORTED errors\n * are not generally retryable).\n *\n * Note that during the initial handshake on the write stream an ABORTED error\n * signals that we should discard our stream token (i.e. it is permanent). This\n * means a handshake error should be classified with isPermanentError, above.\n */\n\n/**\n * Maps an error Code from GRPC status code number, like 0, 1, or 14. These\n * are not the same as HTTP status codes.\n *\n * @returns The Code equivalent to the given GRPC status code. Fails if there\n *     is no match.\n */\n\n\nfunction dn(t) {\n  if (void 0 === t) // This shouldn't normally happen, but in certain error cases (like trying\n    // to send invalid proto messages) we may get an error with no GRPC code.\n    return O(\"GRPC error has no .code\"), K.UNKNOWN;\n\n  switch (t) {\n    case hn.OK:\n      return K.OK;\n\n    case hn.CANCELLED:\n      return K.CANCELLED;\n\n    case hn.UNKNOWN:\n      return K.UNKNOWN;\n\n    case hn.DEADLINE_EXCEEDED:\n      return K.DEADLINE_EXCEEDED;\n\n    case hn.RESOURCE_EXHAUSTED:\n      return K.RESOURCE_EXHAUSTED;\n\n    case hn.INTERNAL:\n      return K.INTERNAL;\n\n    case hn.UNAVAILABLE:\n      return K.UNAVAILABLE;\n\n    case hn.UNAUTHENTICATED:\n      return K.UNAUTHENTICATED;\n\n    case hn.INVALID_ARGUMENT:\n      return K.INVALID_ARGUMENT;\n\n    case hn.NOT_FOUND:\n      return K.NOT_FOUND;\n\n    case hn.ALREADY_EXISTS:\n      return K.ALREADY_EXISTS;\n\n    case hn.PERMISSION_DENIED:\n      return K.PERMISSION_DENIED;\n\n    case hn.FAILED_PRECONDITION:\n      return K.FAILED_PRECONDITION;\n\n    case hn.ABORTED:\n      return K.ABORTED;\n\n    case hn.OUT_OF_RANGE:\n      return K.OUT_OF_RANGE;\n\n    case hn.UNIMPLEMENTED:\n      return K.UNIMPLEMENTED;\n\n    case hn.DATA_LOSS:\n      return K.DATA_LOSS;\n\n    default:\n      return L();\n  }\n}\n/**\n * Converts an HTTP response's error status to the equivalent error code.\n *\n * @param status - An HTTP error response status (\"FAILED_PRECONDITION\",\n * \"UNKNOWN\", etc.)\n * @returns The equivalent Code. Non-matching responses are mapped to\n *     Code.UNKNOWN.\n */\n\n\n(ln = hn || (hn = {}))[ln.OK = 0] = \"OK\", ln[ln.CANCELLED = 1] = \"CANCELLED\", ln[ln.UNKNOWN = 2] = \"UNKNOWN\", ln[ln.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", ln[ln.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", ln[ln.NOT_FOUND = 5] = \"NOT_FOUND\", ln[ln.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", ln[ln.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", ln[ln.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", ln[ln.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", ln[ln.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", ln[ln.ABORTED = 10] = \"ABORTED\", ln[ln.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", ln[ln.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", ln[ln.INTERNAL = 13] = \"INTERNAL\", ln[ln.UNAVAILABLE = 14] = \"UNAVAILABLE\", ln[ln.DATA_LOSS = 15] = \"DATA_LOSS\";\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\n\nvar wn = /*#__PURE__*/function () {\n  function wn(t, e) {\n    _classCallCheck(this, wn);\n\n    this.comparator = t, this.root = e || mn.EMPTY;\n  } // Returns a copy of the map, with the specified key/value added or replaced.\n\n\n  _createClass(wn, [{\n    key: \"insert\",\n    value: function insert(t, e) {\n      return new wn(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, mn.BLACK, null, null));\n    } // Returns a copy of the map, with the specified key removed.\n\n  }, {\n    key: \"remove\",\n    value: function remove(t) {\n      return new wn(this.comparator, this.root.remove(t, this.comparator).copy(null, null, mn.BLACK, null, null));\n    } // Returns the value of the node with the given key, or null.\n\n  }, {\n    key: \"get\",\n    value: function get(t) {\n      var e = this.root;\n\n      for (; !e.isEmpty();) {\n        var n = this.comparator(t, e.key);\n        if (0 === n) return e.value;\n        n < 0 ? e = e.left : n > 0 && (e = e.right);\n      }\n\n      return null;\n    } // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n\n  }, {\n    key: \"indexOf\",\n    value: function indexOf(t) {\n      // Number of nodes that were pruned when descending right\n      var e = 0,\n          n = this.root;\n\n      for (; !n.isEmpty();) {\n        var s = this.comparator(t, n.key);\n        if (0 === s) return e + n.left.size;\n        s < 0 ? n = n.left : ( // Count all nodes left of the node plus the node itself\n        e += n.left.size + 1, n = n.right);\n      } // Node not found\n\n\n      return -1;\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.root.isEmpty();\n    } // Returns the total number of nodes in the map.\n\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this.root.size;\n    } // Returns the minimum key in the map.\n\n  }, {\n    key: \"minKey\",\n    value: function minKey() {\n      return this.root.minKey();\n    } // Returns the maximum key in the map.\n\n  }, {\n    key: \"maxKey\",\n    value: function maxKey() {\n      return this.root.maxKey();\n    } // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n\n  }, {\n    key: \"inorderTraversal\",\n    value: function inorderTraversal(t) {\n      return this.root.inorderTraversal(t);\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(t) {\n      this.inorderTraversal(function (e, n) {\n        return t(e, n), !1;\n      });\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var t = [];\n      return this.inorderTraversal(function (e, n) {\n        return t.push(\"\".concat(e, \":\").concat(n)), !1;\n      }), \"{\".concat(t.join(\", \"), \"}\");\n    } // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n\n  }, {\n    key: \"reverseTraversal\",\n    value: function reverseTraversal(t) {\n      return this.root.reverseTraversal(t);\n    } // Returns an iterator over the SortedMap.\n\n  }, {\n    key: \"getIterator\",\n    value: function getIterator() {\n      return new _n(this.root, null, this.comparator, !1);\n    }\n  }, {\n    key: \"getIteratorFrom\",\n    value: function getIteratorFrom(t) {\n      return new _n(this.root, t, this.comparator, !1);\n    }\n  }, {\n    key: \"getReverseIterator\",\n    value: function getReverseIterator() {\n      return new _n(this.root, null, this.comparator, !0);\n    }\n  }, {\n    key: \"getReverseIteratorFrom\",\n    value: function getReverseIteratorFrom(t) {\n      return new _n(this.root, t, this.comparator, !0);\n    }\n  }]);\n\n  return wn;\n}(); // end SortedMap\n// An iterator over an LLRBNode.\n\n\nvar _n = /*#__PURE__*/function () {\n  function _n(t, e, n, s) {\n    _classCallCheck(this, _n);\n\n    this.isReverse = s, this.nodeStack = [];\n    var i = 1;\n\n    for (; !t.isEmpty();) {\n      if (i = e ? n(t.key, e) : 1, // flip the comparison if we're going in reverse\n      s && (i *= -1), i < 0) // This node is less than our start key. ignore it\n        t = this.isReverse ? t.left : t.right;else {\n        if (0 === i) {\n          // This node is exactly equal to our start key. Push it on the stack,\n          // but stop iterating;\n          this.nodeStack.push(t);\n          break;\n        } // This node is greater than our start key, add it to the stack and move\n        // to the next one\n\n\n        this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n      }\n    }\n  }\n\n  _createClass(_n, [{\n    key: \"getNext\",\n    value: function getNext() {\n      var t = this.nodeStack.pop();\n      var e = {\n        key: t.key,\n        value: t.value\n      };\n      if (this.isReverse) for (t = t.left; !t.isEmpty();) {\n        this.nodeStack.push(t), t = t.right;\n      } else for (t = t.right; !t.isEmpty();) {\n        this.nodeStack.push(t), t = t.left;\n      }\n      return e;\n    }\n  }, {\n    key: \"hasNext\",\n    value: function hasNext() {\n      return this.nodeStack.length > 0;\n    }\n  }, {\n    key: \"peek\",\n    value: function peek() {\n      if (0 === this.nodeStack.length) return null;\n      var t = this.nodeStack[this.nodeStack.length - 1];\n      return {\n        key: t.key,\n        value: t.value\n      };\n    }\n  }]);\n\n  return _n;\n}(); // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\n\n\nvar mn = /*#__PURE__*/function () {\n  function mn(t, e, n, s, i) {\n    _classCallCheck(this, mn);\n\n    this.key = t, this.value = e, this.color = null != n ? n : mn.RED, this.left = null != s ? s : mn.EMPTY, this.right = null != i ? i : mn.EMPTY, this.size = this.left.size + 1 + this.right.size;\n  } // Returns a copy of the current node, optionally replacing pieces of it.\n\n\n  _createClass(mn, [{\n    key: \"copy\",\n    value: function copy(t, e, n, s, i) {\n      return new mn(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != s ? s : this.left, null != i ? i : this.right);\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return !1;\n    } // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n\n  }, {\n    key: \"inorderTraversal\",\n    value: function inorderTraversal(t) {\n      return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n    } // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n\n  }, {\n    key: \"reverseTraversal\",\n    value: function reverseTraversal(t) {\n      return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n    } // Returns the minimum node in the tree.\n\n  }, {\n    key: \"min\",\n    value: function min() {\n      return this.left.isEmpty() ? this : this.left.min();\n    } // Returns the maximum key in the tree.\n\n  }, {\n    key: \"minKey\",\n    value: function minKey() {\n      return this.min().key;\n    } // Returns the maximum key in the tree.\n\n  }, {\n    key: \"maxKey\",\n    value: function maxKey() {\n      return this.right.isEmpty() ? this.key : this.right.maxKey();\n    } // Returns new tree, with the key/value added.\n\n  }, {\n    key: \"insert\",\n    value: function insert(t, e, n) {\n      var s = this;\n      var i = n(t, s.key);\n      return s = i < 0 ? s.copy(null, null, null, s.left.insert(t, e, n), null) : 0 === i ? s.copy(null, e, null, null, null) : s.copy(null, null, null, null, s.right.insert(t, e, n)), s.fixUp();\n    }\n  }, {\n    key: \"removeMin\",\n    value: function removeMin() {\n      if (this.left.isEmpty()) return mn.EMPTY;\n      var t = this;\n      return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), t.fixUp();\n    } // Returns new tree, with the specified item removed.\n\n  }, {\n    key: \"remove\",\n    value: function remove(t, e) {\n      var n,\n          s = this;\n      if (e(t, s.key) < 0) s.left.isEmpty() || s.left.isRed() || s.left.left.isRed() || (s = s.moveRedLeft()), s = s.copy(null, null, null, s.left.remove(t, e), null);else {\n        if (s.left.isRed() && (s = s.rotateRight()), s.right.isEmpty() || s.right.isRed() || s.right.left.isRed() || (s = s.moveRedRight()), 0 === e(t, s.key)) {\n          if (s.right.isEmpty()) return mn.EMPTY;\n          n = s.right.min(), s = s.copy(n.key, n.value, null, null, s.right.removeMin());\n        }\n\n        s = s.copy(null, null, null, null, s.right.remove(t, e));\n      }\n      return s.fixUp();\n    }\n  }, {\n    key: \"isRed\",\n    value: function isRed() {\n      return this.color;\n    } // Returns new tree after performing any needed rotations.\n\n  }, {\n    key: \"fixUp\",\n    value: function fixUp() {\n      var t = this;\n      return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n    }\n  }, {\n    key: \"moveRedLeft\",\n    value: function moveRedLeft() {\n      var t = this.colorFlip();\n      return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), t = t.rotateLeft(), t = t.colorFlip()), t;\n    }\n  }, {\n    key: \"moveRedRight\",\n    value: function moveRedRight() {\n      var t = this.colorFlip();\n      return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n    }\n  }, {\n    key: \"rotateLeft\",\n    value: function rotateLeft() {\n      var t = this.copy(null, null, mn.RED, null, this.right.left);\n      return this.right.copy(null, null, this.color, t, null);\n    }\n  }, {\n    key: \"rotateRight\",\n    value: function rotateRight() {\n      var t = this.copy(null, null, mn.RED, this.left.right, null);\n      return this.left.copy(null, null, this.color, null, t);\n    }\n  }, {\n    key: \"colorFlip\",\n    value: function colorFlip() {\n      var t = this.left.copy(null, null, !this.left.color, null, null),\n          e = this.right.copy(null, null, !this.right.color, null, null);\n      return this.copy(null, null, !this.color, t, e);\n    } // For testing.\n\n  }, {\n    key: \"checkMaxDepth\",\n    value: function checkMaxDepth() {\n      var t = this.check();\n      return Math.pow(2, t) <= this.size + 1;\n    } // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n\n  }, {\n    key: \"check\",\n    value: function check() {\n      if (this.isRed() && this.left.isRed()) throw L();\n      if (this.right.isRed()) throw L();\n      var t = this.left.check();\n      if (t !== this.right.check()) throw L();\n      return t + (this.isRed() ? 0 : 1);\n    }\n  }]);\n\n  return mn;\n}(); // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nmn.EMPTY = null, mn.RED = !0, mn.BLACK = !1; // end LLRBEmptyNode\n\nmn.EMPTY = new (\n/*#__PURE__*/\n// Represents an empty node (a leaf node in the Red-Black Tree).\nfunction () {\n  function _class2() {\n    _classCallCheck(this, _class2);\n\n    this.size = 0;\n  }\n\n  _createClass(_class2, [{\n    key: \"key\",\n    get: function get() {\n      throw L();\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      throw L();\n    }\n  }, {\n    key: \"color\",\n    get: function get() {\n      throw L();\n    }\n  }, {\n    key: \"left\",\n    get: function get() {\n      throw L();\n    }\n  }, {\n    key: \"right\",\n    get: function get() {\n      throw L();\n    } // Returns a copy of the current node.\n\n  }, {\n    key: \"copy\",\n    value: function copy(t, e, n, s, i) {\n      return this;\n    } // Returns a copy of the tree, with the specified key/value added.\n\n  }, {\n    key: \"insert\",\n    value: function insert(t, e, n) {\n      return new mn(t, e);\n    } // Returns a copy of the tree, with the specified key removed.\n\n  }, {\n    key: \"remove\",\n    value: function remove(t, e) {\n      return this;\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return !0;\n    }\n  }, {\n    key: \"inorderTraversal\",\n    value: function inorderTraversal(t) {\n      return !1;\n    }\n  }, {\n    key: \"reverseTraversal\",\n    value: function reverseTraversal(t) {\n      return !1;\n    }\n  }, {\n    key: \"minKey\",\n    value: function minKey() {\n      return null;\n    }\n  }, {\n    key: \"maxKey\",\n    value: function maxKey() {\n      return null;\n    }\n  }, {\n    key: \"isRed\",\n    value: function isRed() {\n      return !1;\n    } // For testing.\n\n  }, {\n    key: \"checkMaxDepth\",\n    value: function checkMaxDepth() {\n      return !0;\n    }\n  }, {\n    key: \"check\",\n    value: function check() {\n      return 0;\n    }\n  }]);\n\n  return _class2;\n}())();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\n\nvar gn = /*#__PURE__*/function () {\n  function gn(t) {\n    _classCallCheck(this, gn);\n\n    this.comparator = t, this.data = new wn(this.comparator);\n  }\n\n  _createClass(gn, [{\n    key: \"has\",\n    value: function has(t) {\n      return null !== this.data.get(t);\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.data.minKey();\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      return this.data.maxKey();\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this.data.size;\n    }\n  }, {\n    key: \"indexOf\",\n    value: function indexOf(t) {\n      return this.data.indexOf(t);\n    }\n    /** Iterates elements in order defined by \"comparator\" */\n\n  }, {\n    key: \"forEach\",\n    value: function forEach(t) {\n      this.data.inorderTraversal(function (e, n) {\n        return t(e), !1;\n      });\n    }\n    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */\n\n  }, {\n    key: \"forEachInRange\",\n    value: function forEachInRange(t, e) {\n      var n = this.data.getIteratorFrom(t[0]);\n\n      for (; n.hasNext();) {\n        var s = n.getNext();\n        if (this.comparator(s.key, t[1]) >= 0) return;\n        e(s.key);\n      }\n    }\n    /**\n     * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n     */\n\n  }, {\n    key: \"forEachWhile\",\n    value: function forEachWhile(t, e) {\n      var n;\n\n      for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext();) {\n        if (!t(n.getNext().key)) return;\n      }\n    }\n    /** Finds the least element greater than or equal to `elem`. */\n\n  }, {\n    key: \"firstAfterOrEqual\",\n    value: function firstAfterOrEqual(t) {\n      var e = this.data.getIteratorFrom(t);\n      return e.hasNext() ? e.getNext().key : null;\n    }\n  }, {\n    key: \"getIterator\",\n    value: function getIterator() {\n      return new yn(this.data.getIterator());\n    }\n  }, {\n    key: \"getIteratorFrom\",\n    value: function getIteratorFrom(t) {\n      return new yn(this.data.getIteratorFrom(t));\n    }\n    /** Inserts or updates an element */\n\n  }, {\n    key: \"add\",\n    value: function add(t) {\n      return this.copy(this.data.remove(t).insert(t, !0));\n    }\n    /** Deletes an element */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      return this.has(t) ? this.copy(this.data.remove(t)) : this;\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.data.isEmpty();\n    }\n  }, {\n    key: \"unionWith\",\n    value: function unionWith(t) {\n      var e = this; // Make sure `result` always refers to the larger one of the two sets.\n\n      return e.size < t.size && (e = t, t = this), t.forEach(function (t) {\n        e = e.add(t);\n      }), e;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      if (!(t instanceof gn)) return !1;\n      if (this.size !== t.size) return !1;\n      var e = this.data.getIterator(),\n          n = t.data.getIterator();\n\n      for (; e.hasNext();) {\n        var _t19 = e.getNext().key,\n            s = n.getNext().key;\n        if (0 !== this.comparator(_t19, s)) return !1;\n      }\n\n      return !0;\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      var t = [];\n      return this.forEach(function (e) {\n        t.push(e);\n      }), t;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var t = [];\n      return this.forEach(function (e) {\n        return t.push(e);\n      }), \"SortedSet(\" + t.toString() + \")\";\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(t) {\n      var e = new gn(this.comparator);\n      return e.data = t, e;\n    }\n  }]);\n\n  return gn;\n}();\n\nvar yn = /*#__PURE__*/function () {\n  function yn(t) {\n    _classCallCheck(this, yn);\n\n    this.iter = t;\n  }\n\n  _createClass(yn, [{\n    key: \"getNext\",\n    value: function getNext() {\n      return this.iter.getNext().key;\n    }\n  }, {\n    key: \"hasNext\",\n    value: function hasNext() {\n      return this.iter.hasNext();\n    }\n  }]);\n\n  return yn;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar pn = new wn(Pt.comparator);\n\nfunction Tn() {\n  return pn;\n}\n\nvar En = new wn(Pt.comparator);\n\nfunction In() {\n  return En;\n}\n\nvar An = new wn(Pt.comparator);\n\nfunction Rn() {\n  return An;\n}\n\nvar bn = new gn(Pt.comparator);\n\nfunction Pn() {\n  var e = bn;\n\n  for (var _len5 = arguments.length, t = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n    t[_key5] = arguments[_key5];\n  }\n\n  for (var _i3 = 0, _t20 = t; _i3 < _t20.length; _i3++) {\n    var n = _t20[_i3];\n    e = e.add(n);\n  }\n\n  return e;\n}\n\nvar vn = new gn(et);\n\nfunction Vn() {\n  return vn;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An event from the RemoteStore. It is split into targetChanges (changes to the\n * state or the set of documents in our watched targets) and documentUpdates\n * (changes to the actual documents).\n */\n\n\nvar Sn = /*#__PURE__*/function () {\n  function Sn(\n  /**\n   * The snapshot version this event brings us up to, or MIN if not set.\n   */\n  t,\n  /**\n   * A map from target to changes to the target. See TargetChange.\n   */\n  e,\n  /**\n   * A set of targets that is known to be inconsistent. Listens for these\n   * targets should be re-established without resume tokens.\n   */\n  n,\n  /**\n   * A set of which documents have changed or been deleted, along with the\n   * doc's new values (if not deleted).\n   */\n  s,\n  /**\n   * A set of which document updates are due only to limbo resolution targets.\n   */\n  i) {\n    _classCallCheck(this, Sn);\n\n    this.snapshotVersion = t, this.targetChanges = e, this.targetMismatches = n, this.documentUpdates = s, this.resolvedLimboDocuments = i;\n  }\n  /**\n   * HACK: Views require RemoteEvents in order to determine whether the view is\n   * CURRENT, but secondary tabs don't receive remote events. So this method is\n   * used to create a synthesized RemoteEvent that can be used to apply a\n   * CURRENT status change to a View, for queries executed in a different tab.\n   */\n  // PORTING NOTE: Multi-tab only\n\n\n  _createClass(Sn, null, [{\n    key: \"createSynthesizedRemoteEventForCurrentChange\",\n    value: function createSynthesizedRemoteEventForCurrentChange(t, e) {\n      var n = new Map();\n      return n.set(t, Dn.createSynthesizedTargetChangeForCurrentChange(t, e)), new Sn(rt.min(), n, Vn(), Tn(), Pn());\n    }\n  }]);\n\n  return Sn;\n}();\n/**\n * A TargetChange specifies the set of changes for a specific target as part of\n * a RemoteEvent. These changes track which documents are added, modified or\n * removed, as well as the target's resume token and whether the target is\n * marked CURRENT.\n * The actual changes *to* documents are not part of the TargetChange since\n * documents may be part of multiple targets.\n */\n\n\nvar Dn = /*#__PURE__*/function () {\n  function Dn(\n  /**\n   * An opaque, server-assigned token that allows watching a query to be resumed\n   * after disconnecting without retransmitting all the data that matches the\n   * query. The resume token essentially identifies a point in time from which\n   * the server should resume sending results.\n   */\n  t,\n  /**\n   * The \"current\" (synced) status of this target. Note that \"current\"\n   * has special meaning in the RPC protocol that implies that a target is\n   * both up-to-date and consistent with the rest of the watch stream.\n   */\n  e,\n  /**\n   * The set of documents that were newly assigned to this target as part of\n   * this remote event.\n   */\n  n,\n  /**\n   * The set of documents that were already assigned to this target but received\n   * an update during this remote event.\n   */\n  s,\n  /**\n   * The set of documents that were removed from this target as part of this\n   * remote event.\n   */\n  i) {\n    _classCallCheck(this, Dn);\n\n    this.resumeToken = t, this.current = e, this.addedDocuments = n, this.modifiedDocuments = s, this.removedDocuments = i;\n  }\n  /**\n   * This method is used to create a synthesized TargetChanges that can be used to\n   * apply a CURRENT status change to a View (for queries executed in a different\n   * tab) or for new queries (to raise snapshots with correct CURRENT status).\n   */\n\n\n  _createClass(Dn, null, [{\n    key: \"createSynthesizedTargetChangeForCurrentChange\",\n    value: function createSynthesizedTargetChangeForCurrentChange(t, e) {\n      return new Dn(_t.EMPTY_BYTE_STRING, e, Pn(), Pn(), Pn());\n    }\n  }]);\n\n  return Dn;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents a changed document and a list of target ids to which this change\n * applies.\n *\n * If document has been deleted NoDocument will be provided.\n */\n\n\nvar Cn = function Cn(\n/** The new document applies to all of these targets. */\nt,\n/** The new document is removed from all of these targets. */\ne,\n/** The key of the document for this change. */\nn,\n/**\n * The new document or NoDocument if it was deleted. Is null if the\n * document went out of view without the server sending a new document.\n */\ns) {\n  _classCallCheck(this, Cn);\n\n  this.k = t, this.removedTargetIds = e, this.key = n, this.$ = s;\n};\n\nvar Nn = function Nn(t, e) {\n  _classCallCheck(this, Nn);\n\n  this.targetId = t, this.O = e;\n};\n\nvar xn = function xn(\n/** What kind of change occurred to the watch target. */\nt,\n/** The target IDs that were added/removed/set. */\ne) {\n  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _t.EMPTY_BYTE_STRING;\n  var s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  _classCallCheck(this, xn);\n\n  this.state = t, this.targetIds = e, this.resumeToken = n, this.cause = s;\n};\n/** Tracks the internal state of a Watch target. */\n\n\nvar kn = /*#__PURE__*/function () {\n  function kn() {\n    _classCallCheck(this, kn);\n\n    /**\n     * The number of pending responses (adds or removes) that we are waiting on.\n     * We only consider targets active that have no pending responses.\n     */\n    this.F = 0,\n    /**\n     * Keeps track of the document changes since the last raised snapshot.\n     *\n     * These changes are continuously updated as we receive document updates and\n     * always reflect the current set of changes against the last issued snapshot.\n     */\n    this.M = Fn(),\n    /** See public getters for explanations of these fields. */\n    this.L = _t.EMPTY_BYTE_STRING, this.B = !1,\n    /**\n     * Whether this target state should be included in the next snapshot. We\n     * initialize to true so that newly-added targets are included in the next\n     * RemoteEvent.\n     */\n    this.U = !0;\n  }\n  /**\n   * Whether this target has been marked 'current'.\n   *\n   * 'Current' has special meaning in the RPC protocol: It implies that the\n   * Watch backend has sent us all changes up to the point at which the target\n   * was added and that the target is consistent with the rest of the watch\n   * stream.\n   */\n\n\n  _createClass(kn, [{\n    key: \"current\",\n    get: function get() {\n      return this.B;\n    }\n    /** The last resume token sent to us for this target. */\n\n  }, {\n    key: \"resumeToken\",\n    get: function get() {\n      return this.L;\n    }\n    /** Whether this target has pending target adds or target removes. */\n\n  }, {\n    key: \"q\",\n    get: function get() {\n      return 0 !== this.F;\n    }\n    /** Whether we have modified any state that should trigger a snapshot. */\n\n  }, {\n    key: \"K\",\n    get: function get() {\n      return this.U;\n    }\n    /**\n     * Applies the resume token to the TargetChange, but only when it has a new\n     * value. Empty resumeTokens are discarded.\n     */\n\n  }, {\n    key: \"j\",\n    value: function j(t) {\n      t.approximateByteSize() > 0 && (this.U = !0, this.L = t);\n    }\n    /**\n     * Creates a target change from the current set of changes.\n     *\n     * To reset the document changes after raising this snapshot, call\n     * `clearPendingChanges()`.\n     */\n\n  }, {\n    key: \"W\",\n    value: function W() {\n      var t = Pn(),\n          e = Pn(),\n          n = Pn();\n      return this.M.forEach(function (s, i) {\n        switch (i) {\n          case 0\n          /* Added */\n          :\n            t = t.add(s);\n            break;\n\n          case 2\n          /* Modified */\n          :\n            e = e.add(s);\n            break;\n\n          case 1\n          /* Removed */\n          :\n            n = n.add(s);\n            break;\n\n          default:\n            L();\n        }\n      }), new Dn(this.L, this.B, t, e, n);\n    }\n    /**\n     * Resets the document changes and sets `hasPendingChanges` to false.\n     */\n\n  }, {\n    key: \"G\",\n    value: function G() {\n      this.U = !1, this.M = Fn();\n    }\n  }, {\n    key: \"H\",\n    value: function H(t, e) {\n      this.U = !0, this.M = this.M.insert(t, e);\n    }\n  }, {\n    key: \"J\",\n    value: function J(t) {\n      this.U = !0, this.M = this.M.remove(t);\n    }\n  }, {\n    key: \"Y\",\n    value: function Y() {\n      this.F += 1;\n    }\n  }, {\n    key: \"X\",\n    value: function X() {\n      this.F -= 1;\n    }\n  }, {\n    key: \"Z\",\n    value: function Z() {\n      this.U = !0, this.B = !0;\n    }\n  }]);\n\n  return kn;\n}();\n/**\n * A helper class to accumulate watch changes into a RemoteEvent.\n */\n\n\nvar $n = /*#__PURE__*/function () {\n  function $n(t) {\n    _classCallCheck(this, $n);\n\n    this.tt = t,\n    /** The internal state of all tracked targets. */\n    this.et = new Map(),\n    /** Keeps track of the documents to update since the last raised snapshot. */\n    this.nt = Tn(),\n    /** A mapping of document keys to their set of target IDs. */\n    this.st = On(),\n    /**\n     * A list of targets with existence filter mismatches. These targets are\n     * known to be inconsistent and their listens needs to be re-established by\n     * RemoteStore.\n     */\n    this.it = new gn(et);\n  }\n  /**\n   * Processes and adds the DocumentWatchChange to the current set of changes.\n   */\n\n\n  _createClass($n, [{\n    key: \"rt\",\n    value: function rt(t) {\n      var _iterator16 = _createForOfIteratorHelper(t.k),\n          _step16;\n\n      try {\n        for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n          var e = _step16.value;\n          t.$ && t.$.isFoundDocument() ? this.ot(e, t.$) : this.ct(e, t.key, t.$);\n        }\n      } catch (err) {\n        _iterator16.e(err);\n      } finally {\n        _iterator16.f();\n      }\n\n      var _iterator17 = _createForOfIteratorHelper(t.removedTargetIds),\n          _step17;\n\n      try {\n        for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n          var _e11 = _step17.value;\n          this.ct(_e11, t.key, t.$);\n        }\n      } catch (err) {\n        _iterator17.e(err);\n      } finally {\n        _iterator17.f();\n      }\n    }\n    /** Processes and adds the WatchTargetChange to the current set of changes. */\n\n  }, {\n    key: \"at\",\n    value: function at(t) {\n      var _this20 = this;\n\n      this.forEachTarget(t, function (e) {\n        var n = _this20.ut(e);\n\n        switch (t.state) {\n          case 0\n          /* NoChange */\n          :\n            _this20.ht(e) && n.j(t.resumeToken);\n            break;\n\n          case 1\n          /* Added */\n          :\n            // We need to decrement the number of pending acks needed from watch\n            // for this targetId.\n            n.X(), n.q || // We have a freshly added target, so we need to reset any state\n            // that we had previously. This can happen e.g. when remove and add\n            // back a target for existence filter mismatches.\n            n.G(), n.j(t.resumeToken);\n            break;\n\n          case 2\n          /* Removed */\n          :\n            // We need to keep track of removed targets to we can post-filter and\n            // remove any target changes.\n            // We need to decrement the number of pending acks needed from watch\n            // for this targetId.\n            n.X(), n.q || _this20.removeTarget(e);\n            break;\n\n          case 3\n          /* Current */\n          :\n            _this20.ht(e) && (n.Z(), n.j(t.resumeToken));\n            break;\n\n          case 4\n          /* Reset */\n          :\n            _this20.ht(e) && ( // Reset the target and synthesizes removes for all existing\n            // documents. The backend will re-add any documents that still\n            // match the target before it sends the next global snapshot.\n            _this20.lt(e), n.j(t.resumeToken));\n            break;\n\n          default:\n            L();\n        }\n      });\n    }\n    /**\n     * Iterates over all targetIds that the watch change applies to: either the\n     * targetIds explicitly listed in the change or the targetIds of all currently\n     * active targets.\n     */\n\n  }, {\n    key: \"forEachTarget\",\n    value: function forEachTarget(t, e) {\n      var _this21 = this;\n\n      t.targetIds.length > 0 ? t.targetIds.forEach(e) : this.et.forEach(function (t, n) {\n        _this21.ht(n) && e(n);\n      });\n    }\n    /**\n     * Handles existence filters and synthesizes deletes for filter mismatches.\n     * Targets that are invalidated by filter mismatches are added to\n     * `pendingTargetResets`.\n     */\n\n  }, {\n    key: \"ft\",\n    value: function ft(t) {\n      var e = t.targetId,\n          n = t.O.count,\n          s = this.dt(e);\n\n      if (s) {\n        var _t21 = s.target;\n        if (Ht(_t21)) {\n          if (0 === n) {\n            // The existence filter told us the document does not exist. We deduce\n            // that this document does not exist and apply a deleted document to\n            // our updates. Without applying this deleted document there might be\n            // another query that will raise this document as part of a snapshot\n            // until it is resolved, essentially exposing inconsistency between\n            // queries.\n            var _n8 = new Pt(_t21.path);\n\n            this.ct(e, _n8, Kt.newNoDocument(_n8, rt.min()));\n          } else B(1 === n);\n        } else {\n          this.wt(e) !== n && ( // Existence filter mismatch: We reset the mapping and raise a new\n          // snapshot with `isFromCache:true`.\n          this.lt(e), this.it = this.it.add(e));\n        }\n      }\n    }\n    /**\n     * Converts the currently accumulated state into a remote event at the\n     * provided snapshot version. Resets the accumulated changes before returning.\n     */\n\n  }, {\n    key: \"_t\",\n    value: function _t(t) {\n      var _this22 = this;\n\n      var e = new Map();\n      this.et.forEach(function (n, s) {\n        var i = _this22.dt(s);\n\n        if (i) {\n          if (n.current && Ht(i.target)) {\n            // Document queries for document that don't exist can produce an empty\n            // result set. To update our local cache, we synthesize a document\n            // delete if we have not previously received the document. This\n            // resolves the limbo state of the document, removing it from\n            // limboDocumentRefs.\n            // TODO(dimond): Ideally we would have an explicit lookup target\n            // instead resulting in an explicit delete message and we could\n            // remove this special logic.\n            var _e12 = new Pt(i.target.path);\n\n            null !== _this22.nt.get(_e12) || _this22.gt(s, _e12) || _this22.ct(s, _e12, Kt.newNoDocument(_e12, t));\n          }\n\n          n.K && (e.set(s, n.W()), n.G());\n        }\n      });\n      var n = Pn(); // We extract the set of limbo-only document updates as the GC logic\n      // special-cases documents that do not appear in the target cache.\n      // TODO(gsoltis): Expand on this comment once GC is available in the JS\n      // client.\n\n      this.st.forEach(function (t, e) {\n        var s = !0;\n        e.forEachWhile(function (t) {\n          var e = _this22.dt(t);\n\n          return !e || 2\n          /* LimboResolution */\n          === e.purpose || (s = !1, !1);\n        }), s && (n = n.add(t));\n      });\n      var s = new Sn(t, e, this.it, this.nt, n);\n      return this.nt = Tn(), this.st = On(), this.it = new gn(et), s;\n    }\n    /**\n     * Adds the provided document to the internal list of document updates and\n     * its document key to the given target's mapping.\n     */\n    // Visible for testing.\n\n  }, {\n    key: \"ot\",\n    value: function ot(t, e) {\n      if (!this.ht(t)) return;\n      var n = this.gt(t, e.key) ? 2\n      /* Modified */\n      : 0\n      /* Added */\n      ;\n      this.ut(t).H(e.key, n), this.nt = this.nt.insert(e.key, e), this.st = this.st.insert(e.key, this.yt(e.key).add(t));\n    }\n    /**\n     * Removes the provided document from the target mapping. If the\n     * document no longer matches the target, but the document's state is still\n     * known (e.g. we know that the document was deleted or we received the change\n     * that caused the filter mismatch), the new document can be provided\n     * to update the remote document cache.\n     */\n    // Visible for testing.\n\n  }, {\n    key: \"ct\",\n    value: function ct(t, e, n) {\n      if (!this.ht(t)) return;\n      var s = this.ut(t);\n      this.gt(t, e) ? s.H(e, 1\n      /* Removed */\n      ) : // The document may have entered and left the target before we raised a\n      // snapshot, so we can just ignore the change.\n      s.J(e), this.st = this.st.insert(e, this.yt(e).delete(t)), n && (this.nt = this.nt.insert(e, n));\n    }\n  }, {\n    key: \"removeTarget\",\n    value: function removeTarget(t) {\n      this.et.delete(t);\n    }\n    /**\n     * Returns the current count of documents in the target. This includes both\n     * the number of documents that the LocalStore considers to be part of the\n     * target as well as any accumulated changes.\n     */\n\n  }, {\n    key: \"wt\",\n    value: function wt(t) {\n      var e = this.ut(t).W();\n      return this.tt.getRemoteKeysForTarget(t).size + e.addedDocuments.size - e.removedDocuments.size;\n    }\n    /**\n     * Increment the number of acks needed from watch before we can consider the\n     * server to be 'in-sync' with the client's active targets.\n     */\n\n  }, {\n    key: \"Y\",\n    value: function Y(t) {\n      this.ut(t).Y();\n    }\n  }, {\n    key: \"ut\",\n    value: function ut(t) {\n      var e = this.et.get(t);\n      return e || (e = new kn(), this.et.set(t, e)), e;\n    }\n  }, {\n    key: \"yt\",\n    value: function yt(t) {\n      var e = this.st.get(t);\n      return e || (e = new gn(et), this.st = this.st.insert(t, e)), e;\n    }\n    /**\n     * Verifies that the user is still interested in this target (by calling\n     * `getTargetDataForTarget()`) and that we are not waiting for pending ADDs\n     * from watch.\n     */\n\n  }, {\n    key: \"ht\",\n    value: function ht(t) {\n      var e = null !== this.dt(t);\n      return e || $(\"WatchChangeAggregator\", \"Detected inactive target\", t), e;\n    }\n    /**\n     * Returns the TargetData for an active target (i.e. a target that the user\n     * is still interested in that has no outstanding target change requests).\n     */\n\n  }, {\n    key: \"dt\",\n    value: function dt(t) {\n      var e = this.et.get(t);\n      return e && e.q ? null : this.tt.Tt(t);\n    }\n    /**\n     * Resets the state of a Watch target to its initial state (e.g. sets\n     * 'current' to false, clears the resume token and removes its target mapping\n     * from all documents).\n     */\n\n  }, {\n    key: \"lt\",\n    value: function lt(t) {\n      var _this23 = this;\n\n      this.et.set(t, new kn());\n      this.tt.getRemoteKeysForTarget(t).forEach(function (e) {\n        _this23.ct(t, e,\n        /*updatedDocument=*/\n        null);\n      });\n    }\n    /**\n     * Returns whether the LocalStore considers the document to be part of the\n     * specified target.\n     */\n\n  }, {\n    key: \"gt\",\n    value: function gt(t, e) {\n      return this.tt.getRemoteKeysForTarget(t).has(e);\n    }\n  }]);\n\n  return $n;\n}();\n\nfunction On() {\n  return new wn(Pt.comparator);\n}\n\nfunction Fn() {\n  return new wn(Pt.comparator);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar Mn = function () {\n  var t = {\n    asc: \"ASCENDING\",\n    desc: \"DESCENDING\"\n  };\n  return t;\n}(),\n    Ln = function () {\n  var t = {\n    \"<\": \"LESS_THAN\",\n    \"<=\": \"LESS_THAN_OR_EQUAL\",\n    \">\": \"GREATER_THAN\",\n    \">=\": \"GREATER_THAN_OR_EQUAL\",\n    \"==\": \"EQUAL\",\n    \"!=\": \"NOT_EQUAL\",\n    \"array-contains\": \"ARRAY_CONTAINS\",\n    in: \"IN\",\n    \"not-in\": \"NOT_IN\",\n    \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n  };\n  return t;\n}();\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\n\n\nvar Bn = function Bn(t, e) {\n  _classCallCheck(this, Bn);\n\n  this.databaseId = t, this.D = e;\n};\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\n\n\nfunction Un(t, e) {\n  if (t.D) {\n    return \"\".concat(new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\"), \".\").concat((\"000000000\" + e.nanoseconds).slice(-9), \"Z\");\n  }\n\n  return {\n    seconds: \"\" + e.seconds,\n    nanos: e.nanoseconds\n  };\n}\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\n\n\nfunction qn(t, e) {\n  return t.D ? e.toBase64() : e.toUint8Array();\n}\n/**\n * Returns a ByteString based on the proto string value.\n */\n\n\nfunction Kn(t, e) {\n  return Un(t, e.toTimestamp());\n}\n\nfunction jn(t) {\n  return B(!!t), rt.fromTimestamp(function (t) {\n    var e = gt(t);\n    return new it(e.seconds, e.nanos);\n  }(t));\n}\n\nfunction Qn(t, e) {\n  return function (t) {\n    return new ht([\"projects\", t.projectId, \"databases\", t.database]);\n  }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction Wn(t) {\n  var e = ht.fromString(t);\n  return B(Ts(e)), e;\n}\n\nfunction Gn(t, e) {\n  return Qn(t.databaseId, e.path);\n}\n\nfunction _zn(t, e) {\n  var n = Wn(e);\n  if (n.get(1) !== t.databaseId.projectId) throw new j(K.INVALID_ARGUMENT, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n  if (n.get(3) !== t.databaseId.database) throw new j(K.INVALID_ARGUMENT, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n  return new Pt(Xn(n));\n}\n\nfunction Hn(t, e) {\n  return Qn(t.databaseId, e);\n}\n\nfunction Jn(t) {\n  var e = Wn(t); // In v1beta1 queries for collections at the root did not have a trailing\n  // \"/documents\". In v1 all resource paths contain \"/documents\". Preserve the\n  // ability to read the v1beta1 form for compatibility with queries persisted\n  // in the local target cache.\n\n  return 4 === e.length ? ht.emptyPath() : Xn(e);\n}\n\nfunction Yn(t) {\n  return new ht([\"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database]).canonicalString();\n}\n\nfunction Xn(t) {\n  return B(t.length > 4 && \"documents\" === t.get(4)), t.popFirst(5);\n}\n/** Creates a Document proto from key and fields (but no create/update time) */\n\n\nfunction Zn(t, e, n) {\n  return {\n    name: Gn(t, e),\n    fields: n.value.mapValue.fields\n  };\n}\n\nfunction ts(t, e, n) {\n  var s = _zn(t, e.name),\n      i = jn(e.updateTime),\n      r = new Ut({\n    mapValue: {\n      fields: e.fields\n    }\n  }),\n      o = Kt.newFoundDocument(s, i, r);\n\n  return n && o.setHasCommittedMutations(), n ? o.setHasCommittedMutations() : o;\n}\n\nfunction es(t, e) {\n  return \"found\" in e ? function (t, e) {\n    B(!!e.found), e.found.name, e.found.updateTime;\n\n    var n = _zn(t, e.found.name),\n        s = jn(e.found.updateTime),\n        i = new Ut({\n      mapValue: {\n        fields: e.found.fields\n      }\n    });\n\n    return Kt.newFoundDocument(n, s, i);\n  }(t, e) : \"missing\" in e ? function (t, e) {\n    B(!!e.missing), B(!!e.readTime);\n\n    var n = _zn(t, e.missing),\n        s = jn(e.readTime);\n\n    return Kt.newNoDocument(n, s);\n  }(t, e) : L();\n}\n\nfunction ns(t, e) {\n  var n;\n\n  if (\"targetChange\" in e) {\n    e.targetChange; // proto3 default value is unset in JSON (undefined), so use 'NO_CHANGE'\n    // if unset\n\n    var s = function (t) {\n      return \"NO_CHANGE\" === t ? 0\n      /* NoChange */\n      : \"ADD\" === t ? 1\n      /* Added */\n      : \"REMOVE\" === t ? 2\n      /* Removed */\n      : \"CURRENT\" === t ? 3\n      /* Current */\n      : \"RESET\" === t ? 4\n      /* Reset */\n      : L();\n    }(e.targetChange.targetChangeType || \"NO_CHANGE\"),\n        i = e.targetChange.targetIds || [],\n        r = function (t, e) {\n      return t.D ? (B(void 0 === e || \"string\" == typeof e), _t.fromBase64String(e || \"\")) : (B(void 0 === e || e instanceof Uint8Array), _t.fromUint8Array(e || new Uint8Array()));\n    }(t, e.targetChange.resumeToken),\n        o = e.targetChange.cause,\n        c = o && function (t) {\n      var e = void 0 === t.code ? K.UNKNOWN : dn(t.code);\n      return new j(e, t.message || \"\");\n    }\n    /**\n    * Returns a value for a number (or null) that's appropriate to put into\n    * a google.protobuf.Int32Value proto.\n    * DO NOT USE THIS FOR ANYTHING ELSE.\n    * This method cheats. It's typed as returning \"number\" because that's what\n    * our generated proto interfaces say Int32Value must be. But GRPC actually\n    * expects a { value: <number> } struct.\n    */\n    (o);\n\n    n = new xn(s, i, r, c || null);\n  } else if (\"documentChange\" in e) {\n    e.documentChange;\n    var _s2 = e.documentChange;\n    _s2.document, _s2.document.name, _s2.document.updateTime;\n\n    var _i4 = _zn(t, _s2.document.name),\n        _r2 = jn(_s2.document.updateTime),\n        _o2 = new Ut({\n      mapValue: {\n        fields: _s2.document.fields\n      }\n    }),\n        _c2 = Kt.newFoundDocument(_i4, _r2, _o2),\n        a = _s2.targetIds || [],\n        u = _s2.removedTargetIds || [];\n\n    n = new Cn(a, u, _c2.key, _c2);\n  } else if (\"documentDelete\" in e) {\n    e.documentDelete;\n    var _s3 = e.documentDelete;\n    _s3.document;\n\n    var _i5 = _zn(t, _s3.document),\n        _r3 = _s3.readTime ? jn(_s3.readTime) : rt.min(),\n        _o3 = Kt.newNoDocument(_i5, _r3),\n        _c3 = _s3.removedTargetIds || [];\n\n    n = new Cn([], _c3, _o3.key, _o3);\n  } else if (\"documentRemove\" in e) {\n    e.documentRemove;\n    var _s4 = e.documentRemove;\n    _s4.document;\n\n    var _i6 = _zn(t, _s4.document),\n        _r4 = _s4.removedTargetIds || [];\n\n    n = new Cn([], _r4, _i6, null);\n  } else {\n    if (!(\"filter\" in e)) return L();\n    {\n      e.filter;\n      var _t22 = e.filter;\n      _t22.targetId;\n\n      var _s5 = _t22.count || 0,\n          _i7 = new un(_s5),\n          _r5 = _t22.targetId;\n\n      n = new Nn(_r5, _i7);\n    }\n  }\n\n  return n;\n}\n\nfunction ss(t, e) {\n  var n;\n  if (e instanceof en) n = {\n    update: Zn(t, e.key, e.value)\n  };else if (e instanceof cn) n = {\n    delete: Gn(t, e.key)\n  };else if (e instanceof nn) n = {\n    update: Zn(t, e.key, e.data),\n    updateMask: ps(e.fieldMask)\n  };else {\n    if (!(e instanceof an)) return L();\n    n = {\n      verify: Gn(t, e.key)\n    };\n  }\n  return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map(function (t) {\n    return function (t, e) {\n      var n = e.transform;\n      if (n instanceof Oe) return {\n        fieldPath: e.field.canonicalString(),\n        setToServerValue: \"REQUEST_TIME\"\n      };\n      if (n instanceof Fe) return {\n        fieldPath: e.field.canonicalString(),\n        appendMissingElements: {\n          values: n.elements\n        }\n      };\n      if (n instanceof Le) return {\n        fieldPath: e.field.canonicalString(),\n        removeAllFromArray: {\n          values: n.elements\n        }\n      };\n      if (n instanceof Ue) return {\n        fieldPath: e.field.canonicalString(),\n        increment: n.C\n      };\n      throw L();\n    }(0, t);\n  })), e.precondition.isNone || (n.currentDocument = function (t, e) {\n    return void 0 !== e.updateTime ? {\n      updateTime: Kn(t, e.updateTime)\n    } : void 0 !== e.exists ? {\n      exists: e.exists\n    } : L();\n  }(t, e.precondition)), n;\n}\n\nfunction is(t, e) {\n  var n = e.currentDocument ? function (t) {\n    return void 0 !== t.updateTime ? Ge.updateTime(jn(t.updateTime)) : void 0 !== t.exists ? Ge.exists(t.exists) : Ge.none();\n  }(e.currentDocument) : Ge.none(),\n      s = e.updateTransforms ? e.updateTransforms.map(function (e) {\n    return function (t, e) {\n      var n = null;\n      if (\"setToServerValue\" in e) B(\"REQUEST_TIME\" === e.setToServerValue), n = new Oe();else if (\"appendMissingElements\" in e) {\n        var _t23 = e.appendMissingElements.values || [];\n\n        n = new Fe(_t23);\n      } else if (\"removeAllFromArray\" in e) {\n        var _t24 = e.removeAllFromArray.values || [];\n\n        n = new Le(_t24);\n      } else \"increment\" in e ? n = new Ue(t, e.increment) : L();\n      var s = ft.fromServerFormat(e.fieldPath);\n      return new je(s, n);\n    }(t, e);\n  }) : [];\n\n  if (e.update) {\n    e.update.name;\n\n    var i = _zn(t, e.update.name),\n        r = new Ut({\n      mapValue: {\n        fields: e.update.fields\n      }\n    });\n\n    if (e.updateMask) {\n      var _t25 = function (t) {\n        var e = t.fieldPaths || [];\n        return new dt(e.map(function (t) {\n          return ft.fromServerFormat(t);\n        }));\n      }(e.updateMask);\n\n      return new nn(i, r, _t25, n, s);\n    }\n\n    return new en(i, r, n, s);\n  }\n\n  if (e.delete) {\n    var _s6 = _zn(t, e.delete);\n\n    return new cn(_s6, n);\n  }\n\n  if (e.verify) {\n    var _s7 = _zn(t, e.verify);\n\n    return new an(_s7, n);\n  }\n\n  return L();\n}\n\nfunction rs(t, e) {\n  return t && t.length > 0 ? (B(void 0 !== e), t.map(function (t) {\n    return function (t, e) {\n      // NOTE: Deletes don't have an updateTime.\n      var n = t.updateTime ? jn(t.updateTime) : jn(e);\n      return n.isEqual(rt.min()) && ( // The Firestore Emulator currently returns an update time of 0 for\n      // deletes of non-existing documents (rather than null). This breaks the\n      // test \"get deleted doc while offline with source=cache\" as NoDocuments\n      // with version 0 are filtered by IndexedDb's RemoteDocumentCache.\n      // TODO(#2149): Remove this when Emulator is fixed\n      n = jn(e)), new We(n, t.transformResults || []);\n    }(t, e);\n  })) : [];\n}\n\nfunction os(t, e) {\n  return {\n    documents: [Hn(t, e.path)]\n  };\n}\n\nfunction cs(t, e) {\n  // Dissect the path into parent, collectionId, and optional key filter.\n  var n = {\n    structuredQuery: {}\n  },\n      s = e.path;\n  null !== e.collectionGroup ? (n.parent = Hn(t, s), n.structuredQuery.from = [{\n    collectionId: e.collectionGroup,\n    allDescendants: !0\n  }]) : (n.parent = Hn(t, s.popLast()), n.structuredQuery.from = [{\n    collectionId: s.lastSegment()\n  }]);\n\n  var i = function (t) {\n    if (0 === t.length) return;\n    var e = t.map(function (t) {\n      return (// visible for testing\n        function (t) {\n          if (\"==\"\n          /* EQUAL */\n          === t.op) {\n            if (Mt(t.value)) return {\n              unaryFilter: {\n                field: _s(t.field),\n                op: \"IS_NAN\"\n              }\n            };\n            if (Ft(t.value)) return {\n              unaryFilter: {\n                field: _s(t.field),\n                op: \"IS_NULL\"\n              }\n            };\n          } else if (\"!=\"\n          /* NOT_EQUAL */\n          === t.op) {\n            if (Mt(t.value)) return {\n              unaryFilter: {\n                field: _s(t.field),\n                op: \"IS_NOT_NAN\"\n              }\n            };\n            if (Ft(t.value)) return {\n              unaryFilter: {\n                field: _s(t.field),\n                op: \"IS_NOT_NULL\"\n              }\n            };\n          }\n\n          return {\n            fieldFilter: {\n              field: _s(t.field),\n              op: ws(t.op),\n              value: t.value\n            }\n          };\n        }(t)\n      );\n    });\n    if (1 === e.length) return e[0];\n    return {\n      compositeFilter: {\n        op: \"AND\",\n        filters: e\n      }\n    };\n  }(e.filters);\n\n  i && (n.structuredQuery.where = i);\n\n  var r = function (t) {\n    if (0 === t.length) return;\n    return t.map(function (t) {\n      return (// visible for testing\n        function (t) {\n          return {\n            field: _s(t.field),\n            direction: ds(t.dir)\n          };\n        }(t)\n      );\n    });\n  }(e.orderBy);\n\n  r && (n.structuredQuery.orderBy = r);\n\n  var o = function (t, e) {\n    return t.D || At(e) ? e : {\n      value: e\n    };\n  }\n  /**\n  * Returns a number (or null) from a google.protobuf.Int32Value proto.\n  */\n  (t, e.limit);\n\n  return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = ls(e.startAt)), e.endAt && (n.structuredQuery.endAt = ls(e.endAt)), n;\n}\n\nfunction as(t) {\n  var e = Jn(t.parent);\n  var n = t.structuredQuery,\n      s = n.from ? n.from.length : 0;\n  var i = null;\n\n  if (s > 0) {\n    B(1 === s);\n    var _t26 = n.from[0];\n    _t26.allDescendants ? i = _t26.collectionId : e = e.child(_t26.collectionId);\n  }\n\n  var r = [];\n  n.where && (r = hs(n.where));\n  var o = [];\n  n.orderBy && (o = n.orderBy.map(function (t) {\n    return function (t) {\n      return new ae(ms(t.field), // visible for testing\n      function (t) {\n        switch (t) {\n          case \"ASCENDING\":\n            return \"asc\"\n            /* ASCENDING */\n            ;\n\n          case \"DESCENDING\":\n            return \"desc\"\n            /* DESCENDING */\n            ;\n\n          default:\n            return;\n        }\n      } // visible for testing\n      (t.direction));\n    }(t);\n  }));\n  var c = null;\n  n.limit && (c = function (t) {\n    var e;\n    return e = \"object\" == typeof t ? t.value : t, At(e) ? null : e;\n  }(n.limit));\n  var a = null;\n  n.startAt && (a = fs(n.startAt));\n  var u = null;\n  return n.endAt && (u = fs(n.endAt)), de(e, i, o, r, c, \"F\"\n  /* First */\n  , a, u);\n}\n\nfunction us(t, e) {\n  var n = function (t, e) {\n    switch (e) {\n      case 0\n      /* Listen */\n      :\n        return null;\n\n      case 1\n      /* ExistenceFilterMismatch */\n      :\n        return \"existence-filter-mismatch\";\n\n      case 2\n      /* LimboResolution */\n      :\n        return \"limbo-document\";\n\n      default:\n        return L();\n    }\n  }(0, e.purpose);\n\n  return null == n ? null : {\n    \"goog-listen-tags\": n\n  };\n}\n\nfunction hs(t) {\n  return t ? void 0 !== t.unaryFilter ? [ys(t)] : void 0 !== t.fieldFilter ? [gs(t)] : void 0 !== t.compositeFilter ? t.compositeFilter.filters.map(function (t) {\n    return hs(t);\n  }).reduce(function (t, e) {\n    return t.concat(e);\n  }) : L() : [];\n}\n\nfunction ls(t) {\n  return {\n    before: t.before,\n    values: t.position\n  };\n}\n\nfunction fs(t) {\n  var e = !!t.before,\n      n = t.values || [];\n  return new oe(n, e);\n} // visible for testing\n\n\nfunction ds(t) {\n  return Mn[t];\n}\n\nfunction ws(t) {\n  return Ln[t];\n}\n\nfunction _s(t) {\n  return {\n    fieldPath: t.canonicalString()\n  };\n}\n\nfunction ms(t) {\n  return ft.fromServerFormat(t.fieldPath);\n}\n\nfunction gs(t) {\n  return Jt.create(ms(t.fieldFilter.field), function (t) {\n    switch (t) {\n      case \"EQUAL\":\n        return \"==\"\n        /* EQUAL */\n        ;\n\n      case \"NOT_EQUAL\":\n        return \"!=\"\n        /* NOT_EQUAL */\n        ;\n\n      case \"GREATER_THAN\":\n        return \">\"\n        /* GREATER_THAN */\n        ;\n\n      case \"GREATER_THAN_OR_EQUAL\":\n        return \">=\"\n        /* GREATER_THAN_OR_EQUAL */\n        ;\n\n      case \"LESS_THAN\":\n        return \"<\"\n        /* LESS_THAN */\n        ;\n\n      case \"LESS_THAN_OR_EQUAL\":\n        return \"<=\"\n        /* LESS_THAN_OR_EQUAL */\n        ;\n\n      case \"ARRAY_CONTAINS\":\n        return \"array-contains\"\n        /* ARRAY_CONTAINS */\n        ;\n\n      case \"IN\":\n        return \"in\"\n        /* IN */\n        ;\n\n      case \"NOT_IN\":\n        return \"not-in\"\n        /* NOT_IN */\n        ;\n\n      case \"ARRAY_CONTAINS_ANY\":\n        return \"array-contains-any\"\n        /* ARRAY_CONTAINS_ANY */\n        ;\n\n      default:\n        return L();\n    }\n  }(t.fieldFilter.op), t.fieldFilter.value);\n}\n\nfunction ys(t) {\n  switch (t.unaryFilter.op) {\n    case \"IS_NAN\":\n      var e = ms(t.unaryFilter.field);\n      return Jt.create(e, \"==\"\n      /* EQUAL */\n      , {\n        doubleValue: NaN\n      });\n\n    case \"IS_NULL\":\n      var n = ms(t.unaryFilter.field);\n      return Jt.create(n, \"==\"\n      /* EQUAL */\n      , {\n        nullValue: \"NULL_VALUE\"\n      });\n\n    case \"IS_NOT_NAN\":\n      var s = ms(t.unaryFilter.field);\n      return Jt.create(s, \"!=\"\n      /* NOT_EQUAL */\n      , {\n        doubleValue: NaN\n      });\n\n    case \"IS_NOT_NULL\":\n      var i = ms(t.unaryFilter.field);\n      return Jt.create(i, \"!=\"\n      /* NOT_EQUAL */\n      , {\n        nullValue: \"NULL_VALUE\"\n      });\n\n    default:\n      return L();\n  }\n}\n\nfunction ps(t) {\n  var e = [];\n  return t.fields.forEach(function (t) {\n    return e.push(t.canonicalString());\n  }), {\n    fieldPaths: e\n  };\n}\n\nfunction Ts(t) {\n  // Resource names have at least 4 components (project ID, database ID)\n  return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Encodes a resource path into a IndexedDb-compatible string form.\n */\n\n\nfunction Es(t) {\n  var e = \"\";\n\n  for (var n = 0; n < t.length; n++) {\n    e.length > 0 && (e = As(e)), e = Is(t.get(n), e);\n  }\n\n  return As(e);\n}\n/** Encodes a single segment of a resource path into the given result */\n\n\nfunction Is(t, e) {\n  var n = e;\n  var s = t.length;\n\n  for (var _e13 = 0; _e13 < s; _e13++) {\n    var _s8 = t.charAt(_e13);\n\n    switch (_s8) {\n      case \"\\0\":\n        n += \"\u0001\u0010\";\n        break;\n\n      case \"\u0001\":\n        n += \"\u0001\u0011\";\n        break;\n\n      default:\n        n += _s8;\n    }\n  }\n\n  return n;\n}\n/** Encodes a path separator into the given result */\n\n\nfunction As(t) {\n  return t + \"\u0001\u0001\";\n}\n/**\n * Decodes the given IndexedDb-compatible string form of a resource path into\n * a ResourcePath instance. Note that this method is not suitable for use with\n * decoding resource names from the server; those are One Platform format\n * strings.\n */\n\n\nfunction Rs(t) {\n  // Event the empty path must encode as a path of at least length 2. A path\n  // with exactly 2 must be the empty path.\n  var e = t.length;\n  if (B(e >= 2), 2 === e) return B(\"\u0001\" === t.charAt(0) && \"\u0001\" === t.charAt(1)), ht.emptyPath(); // Escape characters cannot exist past the second-to-last position in the\n  // source value.\n\n  var n = e - 2,\n      s = [];\n  var i = \"\";\n\n  for (var r = 0; r < e;) {\n    // The last two characters of a valid encoded path must be a separator, so\n    // there must be an end to this segment.\n    var _e14 = t.indexOf(\"\u0001\", r);\n\n    (_e14 < 0 || _e14 > n) && L();\n\n    switch (t.charAt(_e14 + 1)) {\n      case \"\u0001\":\n        var _n9 = t.substring(r, _e14);\n\n        var o = void 0;\n        0 === i.length ? // Avoid copying for the common case of a segment that excludes \\0\n        // and \\001\n        o = _n9 : (i += _n9, o = i, i = \"\"), s.push(o);\n        break;\n\n      case \"\u0010\":\n        i += t.substring(r, _e14), i += \"\\0\";\n        break;\n\n      case \"\u0011\":\n        // The escape character can be used in the output to encode itself.\n        i += t.substring(r, _e14 + 1);\n        break;\n\n      default:\n        L();\n    }\n\n    r = _e14 + 2;\n  }\n\n  return new ht(s);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Schema Version for the Web client:\n * 1.  Initial version including Mutation Queue, Query Cache, and Remote\n *     Document Cache\n * 2.  Used to ensure a targetGlobal object exists and add targetCount to it. No\n *     longer required because migration 3 unconditionally clears it.\n * 3.  Dropped and re-created Query Cache to deal with cache corruption related\n *     to limbo resolution. Addresses\n *     https://github.com/firebase/firebase-ios-sdk/issues/1548\n * 4.  Multi-Tab Support.\n * 5.  Removal of held write acks.\n * 6.  Create document global for tracking document cache size.\n * 7.  Ensure every cached document has a sentinel row with a sequence number.\n * 8.  Add collection-parent index for Collection Group queries.\n * 9.  Change RemoteDocumentChanges store to be keyed by readTime rather than\n *     an auto-incrementing ID. This is required for Index-Free queries.\n * 10. Rewrite the canonical IDs to the explicit Protobuf-based format.\n * 11. Add bundles and named_queries for bundle support.\n */\n\n/**\n * Wrapper class to store timestamps (seconds and nanos) in IndexedDb objects.\n */\n\n\nvar bs = function bs(t, e) {\n  _classCallCheck(this, bs);\n\n  this.seconds = t, this.nanoseconds = e;\n};\n/**\n * A singleton object to be stored in the 'owner' store in IndexedDb.\n *\n * A given database can have a single primary tab assigned at a given time. That\n * tab must validate that it is still holding the primary lease before every\n * operation that requires locked access. The primary tab should regularly\n * write an updated timestamp to this lease to prevent other tabs from\n * \"stealing\" the primary lease\n */\n\n\nvar Ps = function Ps(t,\n/** Whether to allow shared access from multiple tabs. */\ne, n) {\n  _classCallCheck(this, Ps);\n\n  this.ownerId = t, this.allowTabSynchronization = e, this.leaseTimestampMs = n;\n};\n/**\n * Name of the IndexedDb object store.\n *\n * Note that the name 'owner' is chosen to ensure backwards compatibility with\n * older clients that only supported single locked access to the persistence\n * layer.\n */\n\n\nPs.store = \"owner\",\n/**\n * The key string used for the single object that exists in the\n * DbPrimaryClient store.\n */\nPs.key = \"owner\";\n/**\n * An object to be stored in the 'mutationQueues' store in IndexedDb.\n *\n * Each user gets a single queue of MutationBatches to apply to the server.\n * DbMutationQueue tracks the metadata about the queue.\n */\n\nvar vs = function vs(\n/**\n * The normalized user ID to which this queue belongs.\n */\nt,\n/**\n * An identifier for the highest numbered batch that has been acknowledged\n * by the server. All MutationBatches in this queue with batchIds less\n * than or equal to this value are considered to have been acknowledged by\n * the server.\n *\n * NOTE: this is deprecated and no longer used by the code.\n */\ne,\n/**\n * A stream token that was previously sent by the server.\n *\n * See StreamingWriteRequest in datastore.proto for more details about\n * usage.\n *\n * After sending this token, earlier tokens may not be used anymore so\n * only a single stream token is retained.\n *\n * NOTE: this is deprecated and no longer used by the code.\n */\nn) {\n  _classCallCheck(this, vs);\n\n  this.userId = t, this.lastAcknowledgedBatchId = e, this.lastStreamToken = n;\n};\n/** Name of the IndexedDb object store.  */\n\n\nvs.store = \"mutationQueues\",\n/** Keys are automatically assigned via the userId property. */\nvs.keyPath = \"userId\";\n/**\n * An object to be stored in the 'mutations' store in IndexedDb.\n *\n * Represents a batch of user-level mutations intended to be sent to the server\n * in a single write. Each user-level batch gets a separate DbMutationBatch\n * with a new batchId.\n */\n\nvar Vs = function Vs(\n/**\n * The normalized user ID to which this batch belongs.\n */\nt,\n/**\n * An identifier for this batch, allocated using an auto-generated key.\n */\ne,\n/**\n * The local write time of the batch, stored as milliseconds since the\n * epoch.\n */\nn,\n/**\n * A list of \"mutations\" that represent a partial base state from when this\n * write batch was initially created. During local application of the write\n * batch, these baseMutations are applied prior to the real writes in order\n * to override certain document fields from the remote document cache. This\n * is necessary in the case of non-idempotent writes (e.g. `increment()`\n * transforms) to make sure that the local view of the modified documents\n * doesn't flicker if the remote document cache receives the result of the\n * non-idempotent write before the write is removed from the queue.\n *\n * These mutations are never sent to the backend.\n */\ns,\n/**\n * A list of mutations to apply. All mutations will be applied atomically.\n *\n * Mutations are serialized via toMutation().\n */\ni) {\n  _classCallCheck(this, Vs);\n\n  this.userId = t, this.batchId = e, this.localWriteTimeMs = n, this.baseMutations = s, this.mutations = i;\n};\n/** Name of the IndexedDb object store.  */\n\n\nVs.store = \"mutations\",\n/** Keys are automatically assigned via the userId, batchId properties. */\nVs.keyPath = \"batchId\",\n/** The index name for lookup of mutations by user. */\nVs.userMutationsIndex = \"userMutationsIndex\",\n/** The user mutations index is keyed by [userId, batchId] pairs. */\nVs.userMutationsKeyPath = [\"userId\", \"batchId\"];\n/**\n * An object to be stored in the 'documentMutations' store in IndexedDb.\n *\n * A manually maintained index of all the mutation batches that affect a given\n * document key. The rows in this table are references based on the contents of\n * DbMutationBatch.mutations.\n */\n\nvar Ss = /*#__PURE__*/function () {\n  function Ss() {\n    _classCallCheck(this, Ss);\n  }\n  /**\n   * Creates a [userId] key for use in the DbDocumentMutations index to iterate\n   * over all of a user's document mutations.\n   */\n\n\n  _createClass(Ss, null, [{\n    key: \"prefixForUser\",\n    value: function prefixForUser(t) {\n      return [t];\n    }\n    /**\n     * Creates a [userId, encodedPath] key for use in the DbDocumentMutations\n     * index to iterate over all at document mutations for a given path or lower.\n     */\n\n  }, {\n    key: \"prefixForPath\",\n    value: function prefixForPath(t, e) {\n      return [t, Es(e)];\n    }\n    /**\n     * Creates a full index key of [userId, encodedPath, batchId] for inserting\n     * and deleting into the DbDocumentMutations index.\n     */\n\n  }, {\n    key: \"key\",\n    value: function key(t, e, n) {\n      return [t, Es(e), n];\n    }\n  }]);\n\n  return Ss;\n}();\n\nSs.store = \"documentMutations\",\n/**\n * Because we store all the useful information for this store in the key,\n * there is no useful information to store as the value. The raw (unencoded)\n * path cannot be stored because IndexedDb doesn't store prototype\n * information.\n */\nSs.PLACEHOLDER = new Ss();\n/**\n * Represents the known absence of a document at a particular version.\n * Stored in IndexedDb as part of a DbRemoteDocument object.\n */\n\nvar Ds = function Ds(t, e) {\n  _classCallCheck(this, Ds);\n\n  this.path = t, this.readTime = e;\n};\n/**\n * Represents a document that is known to exist but whose data is unknown.\n * Stored in IndexedDb as part of a DbRemoteDocument object.\n */\n\n\nvar Cs = function Cs(t, e) {\n  _classCallCheck(this, Cs);\n\n  this.path = t, this.version = e;\n};\n/**\n * An object to be stored in the 'remoteDocuments' store in IndexedDb.\n * It represents either:\n *\n * - A complete document.\n * - A \"no document\" representing a document that is known not to exist (at\n * some version).\n * - An \"unknown document\" representing a document that is known to exist (at\n * some version) but whose contents are unknown.\n *\n * Note: This is the persisted equivalent of a MaybeDocument and could perhaps\n * be made more general if necessary.\n */\n\n\nvar Ns = // TODO: We are currently storing full document keys almost three times\n// (once as part of the primary key, once - partly - as `parentPath` and once\n// inside the encoded documents). During our next migration, we should\n// rewrite the primary key as parentPath + document ID which would allow us\n// to drop one value.\nfunction Ns(\n/**\n * Set to an instance of DbUnknownDocument if the data for a document is\n * not known, but it is known that a document exists at the specified\n * version (e.g. it had a successful update applied to it)\n */\nt,\n/**\n * Set to an instance of a DbNoDocument if it is known that no document\n * exists.\n */\ne,\n/**\n * Set to an instance of a Document if there's a cached version of the\n * document.\n */\nn,\n/**\n * Documents that were written to the remote document store based on\n * a write acknowledgment are marked with `hasCommittedMutations`. These\n * documents are potentially inconsistent with the backend's copy and use\n * the write's commit version as their document version.\n */\ns,\n/**\n * When the document was read from the backend. Undefined for data written\n * prior to schema version 9.\n */\ni,\n/**\n * The path of the collection this document is part of. Undefined for data\n * written prior to schema version 9.\n */\nr) {\n  _classCallCheck(this, Ns);\n\n  this.unknownDocument = t, this.noDocument = e, this.document = n, this.hasCommittedMutations = s, this.readTime = i, this.parentPath = r;\n};\n\nNs.store = \"remoteDocuments\",\n/**\n * An index that provides access to all entries sorted by read time (which\n * corresponds to the last modification time of each row).\n *\n * This index is used to provide a changelog for Multi-Tab.\n */\nNs.readTimeIndex = \"readTimeIndex\", Ns.readTimeIndexPath = \"readTime\",\n/**\n * An index that provides access to documents in a collection sorted by read\n * time.\n *\n * This index is used to allow the RemoteDocumentCache to fetch newly changed\n * documents in a collection.\n */\nNs.collectionReadTimeIndex = \"collectionReadTimeIndex\", Ns.collectionReadTimeIndexPath = [\"parentPath\", \"readTime\"];\n/**\n * Contains a single entry that has metadata about the remote document cache.\n */\n\nvar xs =\n/**\n * @param byteSize - Approximately the total size in bytes of all the\n * documents in the document cache.\n */\nfunction xs(t) {\n  _classCallCheck(this, xs);\n\n  this.byteSize = t;\n};\n\nxs.store = \"remoteDocumentGlobal\", xs.key = \"remoteDocumentGlobalKey\";\n/**\n * An object to be stored in the 'targets' store in IndexedDb.\n *\n * This is based on and should be kept in sync with the proto used in the iOS\n * client.\n *\n * Each query the client listens to against the server is tracked on disk so\n * that the query can be efficiently resumed on restart.\n */\n\nvar ks = function ks(\n/**\n * An auto-generated sequential numeric identifier for the query.\n *\n * Queries are stored using their canonicalId as the key, but these\n * canonicalIds can be quite long so we additionally assign a unique\n * queryId which can be used by referenced data structures (e.g.\n * indexes) to minimize the on-disk cost.\n */\nt,\n/**\n * The canonical string representing this query. This is not unique.\n */\ne,\n/**\n * The last readTime received from the Watch Service for this query.\n *\n * This is the same value as TargetChange.read_time in the protos.\n */\nn,\n/**\n * An opaque, server-assigned token that allows watching a query to be\n * resumed after disconnecting without retransmitting all the data\n * that matches the query. The resume token essentially identifies a\n * point in time from which the server should resume sending results.\n *\n * This is related to the snapshotVersion in that the resumeToken\n * effectively also encodes that value, but the resumeToken is opaque\n * and sometimes encodes additional information.\n *\n * A consequence of this is that the resumeToken should be used when\n * asking the server to reason about where this client is in the watch\n * stream, but the client should use the snapshotVersion for its own\n * purposes.\n *\n * This is the same value as TargetChange.resume_token in the protos.\n */\ns,\n/**\n * A sequence number representing the last time this query was\n * listened to, used for garbage collection purposes.\n *\n * Conventionally this would be a timestamp value, but device-local\n * clocks are unreliable and they must be able to create new listens\n * even while disconnected. Instead this should be a monotonically\n * increasing number that's incremented on each listen call.\n *\n * This is different from the queryId since the queryId is an\n * immutable identifier assigned to the Query on first use while\n * lastListenSequenceNumber is updated every time the query is\n * listened to.\n */\ni,\n/**\n * Denotes the maximum snapshot version at which the associated query view\n * contained no limbo documents.  Undefined for data written prior to\n * schema version 9.\n */\nr,\n/**\n * The query for this target.\n *\n * Because canonical ids are not unique we must store the actual query. We\n * use the proto to have an object we can persist without having to\n * duplicate translation logic to and from a `Query` object.\n */\no) {\n  _classCallCheck(this, ks);\n\n  this.targetId = t, this.canonicalId = e, this.readTime = n, this.resumeToken = s, this.lastListenSequenceNumber = i, this.lastLimboFreeSnapshotVersion = r, this.query = o;\n};\n\nks.store = \"targets\",\n/** Keys are automatically assigned via the targetId property. */\nks.keyPath = \"targetId\",\n/** The name of the queryTargets index. */\nks.queryTargetsIndexName = \"queryTargetsIndex\",\n/**\n * The index of all canonicalIds to the targets that they match. This is not\n * a unique mapping because canonicalId does not promise a unique name for all\n * possible queries, so we append the targetId to make the mapping unique.\n */\nks.queryTargetsKeyPath = [\"canonicalId\", \"targetId\"];\n/**\n * An object representing an association between a target and a document, or a\n * sentinel row marking the last sequence number at which a document was used.\n * Each document cached must have a corresponding sentinel row before lru\n * garbage collection is enabled.\n *\n * The target associations and sentinel rows are co-located so that orphaned\n * documents and their sequence numbers can be identified efficiently via a scan\n * of this store.\n */\n\nvar $s = function $s(\n/**\n * The targetId identifying a target or 0 for a sentinel row.\n */\nt,\n/**\n * The path to the document, as encoded in the key.\n */\ne,\n/**\n * If this is a sentinel row, this should be the sequence number of the last\n * time the document specified by `path` was used. Otherwise, it should be\n * `undefined`.\n */\nn) {\n  _classCallCheck(this, $s);\n\n  this.targetId = t, this.path = e, this.sequenceNumber = n;\n};\n/** Name of the IndexedDb object store.  */\n\n\n$s.store = \"targetDocuments\",\n/** Keys are automatically assigned via the targetId, path properties. */\n$s.keyPath = [\"targetId\", \"path\"],\n/** The index name for the reverse index. */\n$s.documentTargetsIndex = \"documentTargetsIndex\",\n/** We also need to create the reverse index for these properties. */\n$s.documentTargetsKeyPath = [\"path\", \"targetId\"];\n/**\n * A record of global state tracked across all Targets, tracked separately\n * to avoid the need for extra indexes.\n *\n * This should be kept in-sync with the proto used in the iOS client.\n */\n\nvar Os = function Os(\n/**\n * The highest numbered target id across all targets.\n *\n * See DbTarget.targetId.\n */\nt,\n/**\n * The highest numbered lastListenSequenceNumber across all targets.\n *\n * See DbTarget.lastListenSequenceNumber.\n */\ne,\n/**\n * A global snapshot version representing the last consistent snapshot we\n * received from the backend. This is monotonically increasing and any\n * snapshots received from the backend prior to this version (e.g. for\n * targets resumed with a resumeToken) should be suppressed (buffered)\n * until the backend has caught up to this snapshot version again. This\n * prevents our cache from ever going backwards in time.\n */\nn,\n/**\n * The number of targets persisted.\n */\ns) {\n  _classCallCheck(this, Os);\n\n  this.highestTargetId = t, this.highestListenSequenceNumber = e, this.lastRemoteSnapshotVersion = n, this.targetCount = s;\n};\n/**\n * The key string used for the single object that exists in the\n * DbTargetGlobal store.\n */\n\n\nOs.key = \"targetGlobalKey\", Os.store = \"targetGlobal\";\n/**\n * An object representing an association between a Collection id (e.g. 'messages')\n * to a parent path (e.g. '/chats/123') that contains it as a (sub)collection.\n * This is used to efficiently find all collections to query when performing\n * a Collection Group query.\n */\n\nvar Fs = function Fs(\n/**\n * The collectionId (e.g. 'messages')\n */\nt,\n/**\n * The path to the parent (either a document location or an empty path for\n * a root-level collection).\n */\ne) {\n  _classCallCheck(this, Fs);\n\n  this.collectionId = t, this.parent = e;\n};\n/** Name of the IndexedDb object store. */\n\n\nFs.store = \"collectionParents\",\n/** Keys are automatically assigned via the collectionId, parent properties. */\nFs.keyPath = [\"collectionId\", \"parent\"];\n/**\n * A record of the metadata state of each client.\n *\n * PORTING NOTE: This is used to synchronize multi-tab state and does not need\n * to be ported to iOS or Android.\n */\n\nvar Ms = function Ms( // Note: Previous schema versions included a field\n// \"lastProcessedDocumentChangeId\". Don't use anymore.\n\n/** The auto-generated client id assigned at client startup. */\nt,\n/** The last time this state was updated. */\ne,\n/** Whether the client's network connection is enabled. */\nn,\n/** Whether this client is running in a foreground tab. */\ns) {\n  _classCallCheck(this, Ms);\n\n  this.clientId = t, this.updateTimeMs = e, this.networkEnabled = n, this.inForeground = s;\n};\n/** Name of the IndexedDb object store. */\n\n\nMs.store = \"clientMetadata\",\n/** Keys are automatically assigned via the clientId properties. */\nMs.keyPath = \"clientId\";\n/**\n * A object representing a bundle loaded by the SDK.\n */\n\nvar Ls = function Ls(\n/** The ID of the loaded bundle. */\nt,\n/** The create time of the loaded bundle. */\ne,\n/** The schema version of the loaded bundle. */\nn) {\n  _classCallCheck(this, Ls);\n\n  this.bundleId = t, this.createTime = e, this.version = n;\n};\n/** Name of the IndexedDb object store. */\n\n\nLs.store = \"bundles\", Ls.keyPath = \"bundleId\";\n/**\n * A object representing a named query loaded by the SDK via a bundle.\n */\n\nvar Bs = function Bs(\n/** The name of the query. */\nt,\n/** The read time of the results saved in the bundle from the named query. */\ne,\n/** The query saved in the bundle. */\nn) {\n  _classCallCheck(this, Bs);\n\n  this.name = t, this.readTime = e, this.bundledQuery = n;\n};\n/** Name of the IndexedDb object store. */\n\n\nBs.store = \"namedQueries\", Bs.keyPath = \"name\"; // Visible for testing\n\nvar Us = [vs.store, Vs.store, Ss.store, Ns.store, ks.store, Ps.store, Os.store, $s.store].concat([Ms.store]).concat([xs.store]).concat([Fs.store]).concat([Ls.store, Bs.store]),\n    qs = \"The current tab is not in the required state to perform this operation. It might be necessary to refresh the browser tab.\"; // V2 is no longer usable (see comment at top of file)\n// Visible for testing\n\n/**\n * A base class representing a persistence transaction, encapsulating both the\n * transaction's sequence numbers as well as a list of onCommitted listeners.\n *\n * When you call Persistence.runTransaction(), it will create a transaction and\n * pass it to your callback. You then pass it to any method that operates\n * on persistence.\n */\n\nvar Ks = /*#__PURE__*/function () {\n  function Ks() {\n    _classCallCheck(this, Ks);\n\n    this.onCommittedListeners = [];\n  }\n\n  _createClass(Ks, [{\n    key: \"addOnCommittedListener\",\n    value: function addOnCommittedListener(t) {\n      this.onCommittedListeners.push(t);\n    }\n  }, {\n    key: \"raiseOnCommittedEvent\",\n    value: function raiseOnCommittedEvent() {\n      this.onCommittedListeners.forEach(function (t) {\n        return t();\n      });\n    }\n  }]);\n\n  return Ks;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * PersistencePromise is essentially a re-implementation of Promise except\n * it has a .next() method instead of .then() and .next() and .catch() callbacks\n * are executed synchronously when a PersistencePromise resolves rather than\n * asynchronously (Promise implementations use setImmediate() or similar).\n *\n * This is necessary to interoperate with IndexedDB which will automatically\n * commit transactions if control is returned to the event loop without\n * synchronously initiating another operation on the transaction.\n *\n * NOTE: .then() and .catch() only allow a single consumer, unlike normal\n * Promises.\n */\n\n\nvar js = /*#__PURE__*/function () {\n  function js(t) {\n    var _this24 = this;\n\n    _classCallCheck(this, js);\n\n    // NOTE: next/catchCallback will always point to our own wrapper functions,\n    // not the user's raw next() or catch() callbacks.\n    this.nextCallback = null, this.catchCallback = null, // When the operation resolves, we'll set result or error and mark isDone.\n    this.result = void 0, this.error = void 0, this.isDone = !1, // Set to true when .then() or .catch() are called and prevents additional\n    // chaining.\n    this.callbackAttached = !1, t(function (t) {\n      _this24.isDone = !0, _this24.result = t, _this24.nextCallback && // value should be defined unless T is Void, but we can't express\n      // that in the type system.\n      _this24.nextCallback(t);\n    }, function (t) {\n      _this24.isDone = !0, _this24.error = t, _this24.catchCallback && _this24.catchCallback(t);\n    });\n  }\n\n  _createClass(js, [{\n    key: \"catch\",\n    value: function _catch(t) {\n      return this.next(void 0, t);\n    }\n  }, {\n    key: \"next\",\n    value: function next(t, e) {\n      var _this25 = this;\n\n      return this.callbackAttached && L(), this.callbackAttached = !0, this.isDone ? this.error ? this.wrapFailure(e, this.error) : this.wrapSuccess(t, this.result) : new js(function (n, s) {\n        _this25.nextCallback = function (e) {\n          _this25.wrapSuccess(t, e).next(n, s);\n        }, _this25.catchCallback = function (t) {\n          _this25.wrapFailure(e, t).next(n, s);\n        };\n      });\n    }\n  }, {\n    key: \"toPromise\",\n    value: function toPromise() {\n      var _this26 = this;\n\n      return new Promise(function (t, e) {\n        _this26.next(t, e);\n      });\n    }\n  }, {\n    key: \"wrapUserFunction\",\n    value: function wrapUserFunction(t) {\n      try {\n        var e = t();\n        return e instanceof js ? e : js.resolve(e);\n      } catch (t) {\n        return js.reject(t);\n      }\n    }\n  }, {\n    key: \"wrapSuccess\",\n    value: function wrapSuccess(t, e) {\n      return t ? this.wrapUserFunction(function () {\n        return t(e);\n      }) : js.resolve(e);\n    }\n  }, {\n    key: \"wrapFailure\",\n    value: function wrapFailure(t, e) {\n      return t ? this.wrapUserFunction(function () {\n        return t(e);\n      }) : js.reject(e);\n    }\n  }], [{\n    key: \"resolve\",\n    value: function resolve(t) {\n      return new js(function (e, n) {\n        e(t);\n      });\n    }\n  }, {\n    key: \"reject\",\n    value: function reject(t) {\n      return new js(function (e, n) {\n        n(t);\n      });\n    }\n  }, {\n    key: \"waitFor\",\n    value: function waitFor( // Accept all Promise types in waitFor().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t) {\n      return new js(function (e, n) {\n        var s = 0,\n            i = 0,\n            r = !1;\n        t.forEach(function (t) {\n          ++s, t.next(function () {\n            ++i, r && i === s && e();\n          }, function (t) {\n            return n(t);\n          });\n        }), r = !0, i === s && e();\n      });\n    }\n    /**\n     * Given an array of predicate functions that asynchronously evaluate to a\n     * boolean, implements a short-circuiting `or` between the results. Predicates\n     * will be evaluated until one of them returns `true`, then stop. The final\n     * result will be whether any of them returned `true`.\n     */\n\n  }, {\n    key: \"or\",\n    value: function or(t) {\n      var e = js.resolve(!1);\n\n      var _iterator18 = _createForOfIteratorHelper(t),\n          _step18;\n\n      try {\n        var _loop3 = function _loop3() {\n          var n = _step18.value;\n          e = e.next(function (t) {\n            return t ? js.resolve(t) : n();\n          });\n        };\n\n        for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n          _loop3();\n        }\n      } catch (err) {\n        _iterator18.e(err);\n      } finally {\n        _iterator18.f();\n      }\n\n      return e;\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(t, e) {\n      var _this27 = this;\n\n      var n = [];\n      return t.forEach(function (t, s) {\n        n.push(e.call(_this27, t, s));\n      }), this.waitFor(n);\n    }\n  }]);\n\n  return js;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// References to `window` are guarded by SimpleDb.isAvailable()\n\n/* eslint-disable no-restricted-globals */\n\n/**\n * Wraps an IDBTransaction and exposes a store() method to get a handle to a\n * specific object store.\n */\n\n\nvar Qs = /*#__PURE__*/function () {\n  function Qs(t, e) {\n    var _this28 = this;\n\n    _classCallCheck(this, Qs);\n\n    this.action = t, this.transaction = e, this.aborted = !1,\n    /**\n     * A `Promise` that resolves with the result of the IndexedDb transaction.\n     */\n    this.Et = new Q(), this.transaction.oncomplete = function () {\n      _this28.Et.resolve();\n    }, this.transaction.onabort = function () {\n      e.error ? _this28.Et.reject(new zs(t, e.error)) : _this28.Et.resolve();\n    }, this.transaction.onerror = function (e) {\n      var n = Zs(e.target.error);\n\n      _this28.Et.reject(new zs(t, n));\n    };\n  }\n\n  _createClass(Qs, [{\n    key: \"It\",\n    get: function get() {\n      return this.Et.promise;\n    }\n  }, {\n    key: \"abort\",\n    value: function abort(t) {\n      t && this.Et.reject(t), this.aborted || ($(\"SimpleDb\", \"Aborting transaction:\", t ? t.message : \"Client-initiated abort\"), this.aborted = !0, this.transaction.abort());\n    }\n    /**\n     * Returns a SimpleDbStore<KeyType, ValueType> for the specified store. All\n     * operations performed on the SimpleDbStore happen within the context of this\n     * transaction and it cannot be used anymore once the transaction is\n     * completed.\n     *\n     * Note that we can't actually enforce that the KeyType and ValueType are\n     * correct, but they allow type safety through the rest of the consuming code.\n     */\n\n  }, {\n    key: \"store\",\n    value: function store(t) {\n      var e = this.transaction.objectStore(t);\n      return new Js(e);\n    }\n  }], [{\n    key: \"open\",\n    value: function open(t, e, n, s) {\n      try {\n        return new Qs(e, t.transaction(s, n));\n      } catch (t) {\n        throw new zs(e, t);\n      }\n    }\n  }]);\n\n  return Qs;\n}();\n/**\n * Provides a wrapper around IndexedDb with a simplified interface that uses\n * Promise-like return values to chain operations. Real promises cannot be used\n * since .then() continuations are executed asynchronously (e.g. via\n * .setImmediate), which would cause IndexedDB to end the transaction.\n * See PersistencePromise for more details.\n */\n\n\nvar Ws = /*#__PURE__*/function () {\n  /*\n   * Creates a new SimpleDb wrapper for IndexedDb database `name`.\n   *\n   * Note that `version` must not be a downgrade. IndexedDB does not support\n   * downgrading the schema version. We currently do not support any way to do\n   * versioning outside of IndexedDB's versioning mechanism, as only\n   * version-upgrade transactions are allowed to do things like create\n   * objectstores.\n   */\n  function Ws(t, e, n) {\n    _classCallCheck(this, Ws);\n\n    this.name = t, this.version = e, this.At = n; // NOTE: According to https://bugs.webkit.org/show_bug.cgi?id=197050, the\n    // bug we're checking for should exist in iOS >= 12.2 and < 13, but for\n    // whatever reason it's much harder to hit after 12.2 so we only proactively\n    // log on 12.2.\n\n    12.2 === Ws.Rt(getUA()) && O(\"Firestore persistence suffers from a bug in iOS 12.2 Safari that may cause your app to stop working. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.\");\n  }\n  /** Deletes the specified database. */\n\n\n  _createClass(Ws, [{\n    key: \"Dt\",\n    value:\n    /**\n     * Opens the specified database, creating or upgrading it if necessary.\n     */\n    function () {\n      var _Dt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(t) {\n        var _this29 = this;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.t0 = this.db;\n\n                if (_context2.t0) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                $(\"SimpleDb\", \"Opening database:\", this.name);\n                _context2.next = 5;\n                return new Promise(function (e, n) {\n                  // TODO(mikelehen): Investigate browser compatibility.\n                  // https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB\n                  // suggests IE9 and older WebKit browsers handle upgrade\n                  // differently. They expect setVersion, as described here:\n                  // https://developer.mozilla.org/en-US/docs/Web/API/IDBVersionChangeRequest/setVersion\n                  var s = indexedDB.open(_this29.name, _this29.version);\n                  s.onsuccess = function (t) {\n                    var n = t.target.result;\n                    e(n);\n                  }, s.onblocked = function () {\n                    n(new zs(t, \"Cannot upgrade IndexedDB schema while another tab is open. Close all tabs that access Firestore and reload this page to proceed.\"));\n                  }, s.onerror = function (e) {\n                    var s = e.target.error;\n                    \"VersionError\" === s.name ? n(new j(K.FAILED_PRECONDITION, \"A newer version of the Firestore SDK was previously used and so the persisted data is not compatible with the version of the SDK you are now using. The SDK will operate with persistence disabled. If you need persistence, please re-upgrade to a newer version of the SDK or else clear the persisted IndexedDB data for your app to start fresh.\")) : \"InvalidStateError\" === s.name ? n(new j(K.FAILED_PRECONDITION, \"Unable to open an IndexedDB connection. This could be due to running in a private browsing session on a browser whose private browsing sessions do not support IndexedDB: \" + s)) : n(new zs(t, s));\n                  }, s.onupgradeneeded = function (t) {\n                    $(\"SimpleDb\", 'Database \"' + _this29.name + '\" requires upgrade from version:', t.oldVersion);\n                    var e = t.target.result;\n\n                    _this29.At.Ct(e, s.transaction, t.oldVersion, _this29.version).next(function () {\n                      $(\"SimpleDb\", \"Database upgrade to version \" + _this29.version + \" complete\");\n                    });\n                  };\n                });\n\n              case 5:\n                this.db = _context2.sent;\n\n              case 6:\n                this.Nt && (this.db.onversionchange = function (t) {\n                  return _this29.Nt(t);\n                });\n                return _context2.abrupt(\"return\", this.db);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function Dt(_x) {\n        return _Dt.apply(this, arguments);\n      }\n\n      return Dt;\n    }()\n  }, {\n    key: \"xt\",\n    value: function xt(t) {\n      this.Nt = t, this.db && (this.db.onversionchange = function (e) {\n        return t(e);\n      });\n    }\n  }, {\n    key: \"runTransaction\",\n    value: function () {\n      var _runTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(t, e, n, s) {\n        var _this30 = this;\n\n        var i, r, _ret, _e15;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                i = \"readonly\" === e;\n                r = 0;\n\n              case 2:\n                ++r;\n                _context4.prev = 3;\n                return _context4.delegateYield( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n                  var e, r;\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          _context3.next = 2;\n                          return _this30.Dt(t);\n\n                        case 2:\n                          _this30.db = _context3.sent;\n                          e = Qs.open(_this30.db, t, i ? \"readonly\" : \"readwrite\", n), r = s(e).catch(function (t) {\n                            return (// Abort the transaction if there was an error.\n                              e.abort(t), js.reject(t)\n                            );\n                          }).toPromise(); // As noted above, errors are propagated by aborting the transaction. So\n                          // we swallow any error here to avoid the browser logging it as unhandled.\n\n                          r.catch(function () {});\n                          _context3.next = 7;\n                          return e.It;\n\n                        case 7:\n                          _context3.t0 = r;\n                          return _context3.abrupt(\"return\", {\n                            v: _context3.t0\n                          });\n\n                        case 9:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                })(), \"t0\", 5);\n\n              case 5:\n                _ret = _context4.t0;\n\n                if (!(typeof _ret === \"object\")) {\n                  _context4.next = 8;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", _ret.v);\n\n              case 8:\n                _context4.next = 15;\n                break;\n\n              case 10:\n                _context4.prev = 10;\n                _context4.t1 = _context4[\"catch\"](3);\n                // TODO(schmidt-sebastian): We could probably be smarter about this and\n                // not retry exceptions that are likely unrecoverable (such as quota\n                // exceeded errors).\n                // Note: We cannot use an instanceof check for FirestoreException, since the\n                // exception is wrapped in a generic error by our async/await handling.\n                _e15 = \"FirebaseError\" !== _context4.t1.name && r < 3;\n\n                if (!($(\"SimpleDb\", \"Transaction failed with error:\", _context4.t1.message, \"Retrying:\", _e15), this.close(), !_e15)) {\n                  _context4.next = 15;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", Promise.reject(_context4.t1));\n\n              case 15:\n                _context4.next = 2;\n                break;\n\n              case 17:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[3, 10]]);\n      }));\n\n      function runTransaction(_x2, _x3, _x4, _x5) {\n        return _runTransaction.apply(this, arguments);\n      }\n\n      return runTransaction;\n    }()\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.db && this.db.close(), this.db = void 0;\n    }\n  }], [{\n    key: \"delete\",\n    value: function _delete(t) {\n      return $(\"SimpleDb\", \"Removing database:\", t), Ys(window.indexedDB.deleteDatabase(t)).toPromise();\n    }\n    /** Returns true if IndexedDB is available in the current environment. */\n\n  }, {\n    key: \"bt\",\n    value: function bt() {\n      if (!isIndexedDBAvailable()) return !1;\n      if (Ws.Pt()) return !0; // We extensively use indexed array values and compound keys,\n      // which IE and Edge do not support. However, they still have indexedDB\n      // defined on the window, so we need to check for them here and make sure\n      // to return that persistence is not enabled for those browsers.\n      // For tracking support of this feature, see here:\n      // https://developer.microsoft.com/en-us/microsoft-edge/platform/status/indexeddbarraysandmultientrysupport/\n      // Check the UA string to find out the browser.\n\n      var t = getUA(),\n          e = Ws.Rt(t),\n          n = 0 < e && e < 10,\n          s = Ws.vt(t),\n          i = 0 < s && s < 4.5; // IE 10\n      // ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';\n      // IE 11\n      // ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';\n      // Edge\n      // ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML,\n      // like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';\n      // iOS Safari: Disable for users running iOS version < 10.\n\n      return !(t.indexOf(\"MSIE \") > 0 || t.indexOf(\"Trident/\") > 0 || t.indexOf(\"Edge/\") > 0 || n || i);\n    }\n    /**\n     * Returns true if the backing IndexedDB store is the Node IndexedDBShim\n     * (see https://github.com/axemclion/IndexedDBShim).\n     */\n\n  }, {\n    key: \"Pt\",\n    value: function Pt() {\n      var t;\n      return \"undefined\" != typeof process && \"YES\" === (null === (t = process.env) || void 0 === t ? void 0 : t.Vt);\n    }\n    /** Helper to get a typed SimpleDbStore from a transaction. */\n\n  }, {\n    key: \"St\",\n    value: function St(t, e) {\n      return t.store(e);\n    } // visible for testing\n\n    /** Parse User Agent to determine iOS version. Returns -1 if not found. */\n\n  }, {\n    key: \"Rt\",\n    value: function Rt(t) {\n      var e = t.match(/i(?:phone|pad|pod) os ([\\d_]+)/i),\n          n = e ? e[1].split(\"_\").slice(0, 2).join(\".\") : \"-1\";\n      return Number(n);\n    } // visible for testing\n\n    /** Parse User Agent to determine Android version. Returns -1 if not found. */\n\n  }, {\n    key: \"vt\",\n    value: function vt(t) {\n      var e = t.match(/Android ([\\d.]+)/i),\n          n = e ? e[1].split(\".\").slice(0, 2).join(\".\") : \"-1\";\n      return Number(n);\n    }\n  }]);\n\n  return Ws;\n}();\n/**\n * A controller for iterating over a key range or index. It allows an iterate\n * callback to delete the currently-referenced object, or jump to a new key\n * within the key range or index.\n */\n\n\nvar Gs = /*#__PURE__*/function () {\n  function Gs(t) {\n    _classCallCheck(this, Gs);\n\n    this.kt = t, this.$t = !1, this.Ot = null;\n  }\n\n  _createClass(Gs, [{\n    key: \"isDone\",\n    get: function get() {\n      return this.$t;\n    }\n  }, {\n    key: \"Ft\",\n    get: function get() {\n      return this.Ot;\n    }\n  }, {\n    key: \"cursor\",\n    set: function set(t) {\n      this.kt = t;\n    }\n    /**\n     * This function can be called to stop iteration at any point.\n     */\n\n  }, {\n    key: \"done\",\n    value: function done() {\n      this.$t = !0;\n    }\n    /**\n     * This function can be called to skip to that next key, which could be\n     * an index or a primary key.\n     */\n\n  }, {\n    key: \"Mt\",\n    value: function Mt(t) {\n      this.Ot = t;\n    }\n    /**\n     * Delete the current cursor value from the object store.\n     *\n     * NOTE: You CANNOT do this with a keysOnly query.\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      return Ys(this.kt.delete());\n    }\n  }]);\n\n  return Gs;\n}();\n/** An error that wraps exceptions that thrown during IndexedDB execution. */\n\n\nvar zs = /*#__PURE__*/function (_j) {\n  _inherits(zs, _j);\n\n  var _super20 = _createSuper(zs);\n\n  function zs(t, e) {\n    var _this31;\n\n    _classCallCheck(this, zs);\n\n    _this31 = _super20.call(this, K.UNAVAILABLE, \"IndexedDB transaction '\".concat(t, \"' failed: \").concat(e)), _this31.name = \"IndexedDbTransactionError\";\n    return _this31;\n  }\n\n  return zs;\n}(j);\n/** Verifies whether `e` is an IndexedDbTransactionError. */\n\n\nfunction Hs(t) {\n  // Use name equality, as instanceof checks on errors don't work with errors\n  // that wrap other errors.\n  return \"IndexedDbTransactionError\" === t.name;\n}\n/**\n * A wrapper around an IDBObjectStore providing an API that:\n *\n * 1) Has generic KeyType / ValueType parameters to provide strongly-typed\n * methods for acting against the object store.\n * 2) Deals with IndexedDB's onsuccess / onerror event callbacks, making every\n * method return a PersistencePromise instead.\n * 3) Provides a higher-level API to avoid needing to do excessive wrapping of\n * intermediate IndexedDB types (IDBCursorWithValue, etc.)\n */\n\n\nvar Js = /*#__PURE__*/function () {\n  function Js(t) {\n    _classCallCheck(this, Js);\n\n    this.store = t;\n  }\n\n  _createClass(Js, [{\n    key: \"put\",\n    value: function put(t, e) {\n      var n;\n      return void 0 !== e ? ($(\"SimpleDb\", \"PUT\", this.store.name, t, e), n = this.store.put(e, t)) : ($(\"SimpleDb\", \"PUT\", this.store.name, \"<auto-key>\", t), n = this.store.put(t)), Ys(n);\n    }\n    /**\n     * Adds a new value into an Object Store and returns the new key. Similar to\n     * IndexedDb's `add()`, this method will fail on primary key collisions.\n     *\n     * @param value - The object to write.\n     * @returns The key of the value to add.\n     */\n\n  }, {\n    key: \"add\",\n    value: function add(t) {\n      $(\"SimpleDb\", \"ADD\", this.store.name, t, t);\n      return Ys(this.store.add(t));\n    }\n    /**\n     * Gets the object with the specified key from the specified store, or null\n     * if no object exists with the specified key.\n     *\n     * @key The key of the object to get.\n     * @returns The object with the specified key or null if no object exists.\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(t) {\n      var _this32 = this;\n\n      // We're doing an unsafe cast to ValueType.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return Ys(this.store.get(t)).next(function (e) {\n        return (// Normalize nonexistence to null.\n          void 0 === e && (e = null), $(\"SimpleDb\", \"GET\", _this32.store.name, t, e), e\n        );\n      });\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      $(\"SimpleDb\", \"DELETE\", this.store.name, t);\n      return Ys(this.store.delete(t));\n    }\n    /**\n     * If we ever need more of the count variants, we can add overloads. For now,\n     * all we need is to count everything in a store.\n     *\n     * Returns the number of rows in the store.\n     */\n\n  }, {\n    key: \"count\",\n    value: function count() {\n      $(\"SimpleDb\", \"COUNT\", this.store.name);\n      return Ys(this.store.count());\n    }\n  }, {\n    key: \"Lt\",\n    value: function Lt(t, e) {\n      var n = this.cursor(this.options(t, e)),\n          s = [];\n      return this.Bt(n, function (t, e) {\n        s.push(e);\n      }).next(function () {\n        return s;\n      });\n    }\n  }, {\n    key: \"Ut\",\n    value: function Ut(t, e) {\n      $(\"SimpleDb\", \"DELETE ALL\", this.store.name);\n      var n = this.options(t, e);\n      n.qt = !1;\n      var s = this.cursor(n);\n      return this.Bt(s, function (t, e, n) {\n        return n.delete();\n      });\n    }\n  }, {\n    key: \"Kt\",\n    value: function Kt(t, e) {\n      var n;\n      e ? n = t : (n = {}, e = t);\n      var s = this.cursor(n);\n      return this.Bt(s, e);\n    }\n    /**\n     * Iterates over a store, but waits for the given callback to complete for\n     * each entry before iterating the next entry. This allows the callback to do\n     * asynchronous work to determine if this iteration should continue.\n     *\n     * The provided callback should return `true` to continue iteration, and\n     * `false` otherwise.\n     */\n\n  }, {\n    key: \"jt\",\n    value: function jt(t) {\n      var e = this.cursor({});\n      return new js(function (n, s) {\n        e.onerror = function (t) {\n          var e = Zs(t.target.error);\n          s(e);\n        }, e.onsuccess = function (e) {\n          var s = e.target.result;\n          s ? t(s.primaryKey, s.value).next(function (t) {\n            t ? s.continue() : n();\n          }) : n();\n        };\n      });\n    }\n  }, {\n    key: \"Bt\",\n    value: function Bt(t, e) {\n      var n = [];\n      return new js(function (s, i) {\n        t.onerror = function (t) {\n          i(t.target.error);\n        }, t.onsuccess = function (t) {\n          var i = t.target.result;\n          if (!i) return void s();\n          var r = new Gs(i),\n              o = e(i.primaryKey, i.value, r);\n\n          if (o instanceof js) {\n            var _t27 = o.catch(function (t) {\n              return r.done(), js.reject(t);\n            });\n\n            n.push(_t27);\n          }\n\n          r.isDone ? s() : null === r.Ft ? i.continue() : i.continue(r.Ft);\n        };\n      }).next(function () {\n        return js.waitFor(n);\n      });\n    }\n  }, {\n    key: \"options\",\n    value: function options(t, e) {\n      var n;\n      return void 0 !== t && (\"string\" == typeof t ? n = t : e = t), {\n        index: n,\n        range: e\n      };\n    }\n  }, {\n    key: \"cursor\",\n    value: function cursor(t) {\n      var e = \"next\";\n\n      if (t.reverse && (e = \"prev\"), t.index) {\n        var n = this.store.index(t.index);\n        return t.qt ? n.openKeyCursor(t.range, e) : n.openCursor(t.range, e);\n      }\n\n      return this.store.openCursor(t.range, e);\n    }\n  }]);\n\n  return Js;\n}();\n/**\n * Wraps an IDBRequest in a PersistencePromise, using the onsuccess / onerror\n * handlers to resolve / reject the PersistencePromise as appropriate.\n */\n\n\nfunction Ys(t) {\n  return new js(function (e, n) {\n    t.onsuccess = function (t) {\n      var n = t.target.result;\n      e(n);\n    }, t.onerror = function (t) {\n      var e = Zs(t.target.error);\n      n(e);\n    };\n  });\n} // Guard so we only report the error once.\n\n\nvar Xs = !1;\n\nfunction Zs(t) {\n  var e = Ws.Rt(getUA());\n\n  if (e >= 12.2 && e < 13) {\n    var _e16 = \"An internal error was encountered in the Indexed Database server\";\n\n    if (t.message.indexOf(_e16) >= 0) {\n      // Wrap error in a more descriptive one.\n      var _t28 = new j(\"internal\", \"IOS_INDEXEDDB_BUG1: IndexedDb has thrown '\".concat(_e16, \"'. This is likely due to an unavoidable bug in iOS. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.\"));\n\n      return Xs || (Xs = !0, // Throw a global exception outside of this promise chain, for the user to\n      // potentially catch.\n      setTimeout(function () {\n        throw _t28;\n      }, 0)), _t28;\n    }\n  }\n\n  return t;\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar ti = /*#__PURE__*/function (_Ks) {\n  _inherits(ti, _Ks);\n\n  var _super21 = _createSuper(ti);\n\n  function ti(t, e) {\n    var _this33;\n\n    _classCallCheck(this, ti);\n\n    _this33 = _super21.call(this), _this33.Qt = t, _this33.currentSequenceNumber = e;\n    return _this33;\n  }\n\n  return ti;\n}(Ks);\n\nfunction ei(t, e) {\n  var n = q(t);\n  return Ws.St(n.Qt, e);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A batch of mutations that will be sent as one unit to the backend.\n */\n\n\nvar ni = /*#__PURE__*/function () {\n  /**\n   * @param batchId - The unique ID of this mutation batch.\n   * @param localWriteTime - The original write time of this mutation.\n   * @param baseMutations - Mutations that are used to populate the base\n   * values when this mutation is applied locally. This can be used to locally\n   * overwrite values that are persisted in the remote document cache. Base\n   * mutations are never sent to the backend.\n   * @param mutations - The user-provided mutations in this mutation batch.\n   * User-provided mutations are applied both locally and remotely on the\n   * backend.\n   */\n  function ni(t, e, n, s) {\n    _classCallCheck(this, ni);\n\n    this.batchId = t, this.localWriteTime = e, this.baseMutations = n, this.mutations = s;\n  }\n  /**\n   * Applies all the mutations in this MutationBatch to the specified document\n   * to compute the state of the remote document\n   *\n   * @param document - The document to apply mutations to.\n   * @param batchResult - The result of applying the MutationBatch to the\n   * backend.\n   */\n\n\n  _createClass(ni, [{\n    key: \"applyToRemoteDocument\",\n    value: function applyToRemoteDocument(t, e) {\n      var n = e.mutationResults;\n\n      for (var _e17 = 0; _e17 < this.mutations.length; _e17++) {\n        var s = this.mutations[_e17];\n\n        if (s.key.isEqual(t.key)) {\n          Je(s, t, n[_e17]);\n        }\n      }\n    }\n    /**\n     * Computes the local view of a document given all the mutations in this\n     * batch.\n     *\n     * @param document - The document to apply mutations to.\n     */\n\n  }, {\n    key: \"applyToLocalView\",\n    value: function applyToLocalView(t) {\n      // First, apply the base state. This allows us to apply non-idempotent\n      // transform against a consistent set of values.\n      var _iterator19 = _createForOfIteratorHelper(this.baseMutations),\n          _step19;\n\n      try {\n        for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n          var e = _step19.value;\n          e.key.isEqual(t.key) && Ye(e, t, this.localWriteTime);\n        } // Second, apply all user-provided mutations.\n\n      } catch (err) {\n        _iterator19.e(err);\n      } finally {\n        _iterator19.f();\n      }\n\n      var _iterator20 = _createForOfIteratorHelper(this.mutations),\n          _step20;\n\n      try {\n        for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n          var _e18 = _step20.value;\n          _e18.key.isEqual(t.key) && Ye(_e18, t, this.localWriteTime);\n        }\n      } catch (err) {\n        _iterator20.e(err);\n      } finally {\n        _iterator20.f();\n      }\n    }\n    /**\n     * Computes the local view for all provided documents given the mutations in\n     * this batch.\n     */\n\n  }, {\n    key: \"applyToLocalDocumentSet\",\n    value: function applyToLocalDocumentSet(t) {\n      var _this34 = this;\n\n      // TODO(mrschmidt): This implementation is O(n^2). If we apply the mutations\n      // directly (as done in `applyToLocalView()`), we can reduce the complexity\n      // to O(n).\n      this.mutations.forEach(function (e) {\n        var n = t.get(e.key),\n            s = n; // TODO(mutabledocuments): This method should take a MutableDocumentMap\n        // and we should remove this cast.\n\n        _this34.applyToLocalView(s), n.isValidDocument() || s.convertToNoDocument(rt.min());\n      });\n    }\n  }, {\n    key: \"keys\",\n    value: function keys() {\n      return this.mutations.reduce(function (t, e) {\n        return t.add(e.key);\n      }, Pn());\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this.batchId === t.batchId && nt(this.mutations, t.mutations, function (t, e) {\n        return Ze(t, e);\n      }) && nt(this.baseMutations, t.baseMutations, function (t, e) {\n        return Ze(t, e);\n      });\n    }\n  }]);\n\n  return ni;\n}();\n/** The result of applying a mutation batch to the backend. */\n\n\nvar si = /*#__PURE__*/function () {\n  function si(t, e, n,\n  /**\n   * A pre-computed mapping from each mutated document to the resulting\n   * version.\n   */\n  s) {\n    _classCallCheck(this, si);\n\n    this.batch = t, this.commitVersion = e, this.mutationResults = n, this.docVersions = s;\n  }\n  /**\n   * Creates a new MutationBatchResult for the given batch and results. There\n   * must be one result for each mutation in the batch. This static factory\n   * caches a document=&gt;version mapping (docVersions).\n   */\n\n\n  _createClass(si, null, [{\n    key: \"from\",\n    value: function from(t, e, n) {\n      B(t.mutations.length === n.length);\n      var s = Rn();\n      var i = t.mutations;\n\n      for (var _t29 = 0; _t29 < i.length; _t29++) {\n        s = s.insert(i[_t29].key, n[_t29].version);\n      }\n\n      return new si(t, e, n, s);\n    }\n  }]);\n\n  return si;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An immutable set of metadata that the local store tracks for each target.\n */\n\n\nvar ii = /*#__PURE__*/function () {\n  function ii(\n  /** The target being listened to. */\n  t,\n  /**\n   * The target ID to which the target corresponds; Assigned by the\n   * LocalStore for user listens and by the SyncEngine for limbo watches.\n   */\n  e,\n  /** The purpose of the target. */\n  n,\n  /**\n   * The sequence number of the last transaction during which this target data\n   * was modified.\n   */\n  s) {\n    var i = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : rt.min();\n    var r = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : rt.min();\n    var o = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : _t.EMPTY_BYTE_STRING;\n\n    _classCallCheck(this, ii);\n\n    this.target = t, this.targetId = e, this.purpose = n, this.sequenceNumber = s, this.snapshotVersion = i, this.lastLimboFreeSnapshotVersion = r, this.resumeToken = o;\n  }\n  /** Creates a new target data instance with an updated sequence number. */\n\n\n  _createClass(ii, [{\n    key: \"withSequenceNumber\",\n    value: function withSequenceNumber(t) {\n      return new ii(this.target, this.targetId, this.purpose, t, this.snapshotVersion, this.lastLimboFreeSnapshotVersion, this.resumeToken);\n    }\n    /**\n     * Creates a new target data instance with an updated resume token and\n     * snapshot version.\n     */\n\n  }, {\n    key: \"withResumeToken\",\n    value: function withResumeToken(t, e) {\n      return new ii(this.target, this.targetId, this.purpose, this.sequenceNumber, e, this.lastLimboFreeSnapshotVersion, t);\n    }\n    /**\n     * Creates a new target data instance with an updated last limbo free\n     * snapshot version number.\n     */\n\n  }, {\n    key: \"withLastLimboFreeSnapshotVersion\",\n    value: function withLastLimboFreeSnapshotVersion(t) {\n      return new ii(this.target, this.targetId, this.purpose, this.sequenceNumber, this.snapshotVersion, t, this.resumeToken);\n    }\n  }]);\n\n  return ii;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Serializer for values stored in the LocalStore. */\n\n\nvar ri = function ri(t) {\n  _classCallCheck(this, ri);\n\n  this.Wt = t;\n};\n/** Decodes a remote document from storage locally to a Document. */\n\n\nfunction oi(t, e) {\n  if (e.document) return ts(t.Wt, e.document, !!e.hasCommittedMutations);\n\n  if (e.noDocument) {\n    var _t30 = Pt.fromSegments(e.noDocument.path),\n        n = li(e.noDocument.readTime),\n        s = Kt.newNoDocument(_t30, n);\n\n    return e.hasCommittedMutations ? s.setHasCommittedMutations() : s;\n  }\n\n  if (e.unknownDocument) {\n    var _t31 = Pt.fromSegments(e.unknownDocument.path),\n        _n10 = li(e.unknownDocument.version);\n\n    return Kt.newUnknownDocument(_t31, _n10);\n  }\n\n  return L();\n}\n/** Encodes a document for storage locally. */\n\n\nfunction ci(t, e, n) {\n  var s = ai(n),\n      i = e.key.path.popLast().toArray();\n\n  if (e.isFoundDocument()) {\n    var _n11 = function (t, e) {\n      return {\n        name: Gn(t, e.key),\n        fields: e.data.value.mapValue.fields,\n        updateTime: Un(t, e.version.toTimestamp())\n      };\n    }(t.Wt, e),\n        r = e.hasCommittedMutations;\n\n    return new Ns(\n    /* unknownDocument= */\n    null,\n    /* noDocument= */\n    null, _n11, r, s, i);\n  }\n\n  if (e.isNoDocument()) {\n    var _t32 = e.key.path.toArray(),\n        _n12 = hi(e.version),\n        _r6 = e.hasCommittedMutations;\n\n    return new Ns(\n    /* unknownDocument= */\n    null, new Ds(_t32, _n12),\n    /* document= */\n    null, _r6, s, i);\n  }\n\n  if (e.isUnknownDocument()) {\n    var _t33 = e.key.path.toArray(),\n        _n13 = hi(e.version);\n\n    return new Ns(new Cs(_t33, _n13),\n    /* noDocument= */\n    null,\n    /* document= */\n    null,\n    /* hasCommittedMutations= */\n    !0, s, i);\n  }\n\n  return L();\n}\n\nfunction ai(t) {\n  var e = t.toTimestamp();\n  return [e.seconds, e.nanoseconds];\n}\n\nfunction ui(t) {\n  var e = new it(t[0], t[1]);\n  return rt.fromTimestamp(e);\n}\n\nfunction hi(t) {\n  var e = t.toTimestamp();\n  return new bs(e.seconds, e.nanoseconds);\n}\n\nfunction li(t) {\n  var e = new it(t.seconds, t.nanoseconds);\n  return rt.fromTimestamp(e);\n}\n/** Encodes a batch of mutations into a DbMutationBatch for local storage. */\n\n/** Decodes a DbMutationBatch into a MutationBatch */\n\n\nfunction fi(t, e) {\n  var n = (e.baseMutations || []).map(function (e) {\n    return is(t.Wt, e);\n  }); // Squash old transform mutations into existing patch or set mutations.\n  // The replacement of representing `transforms` with `update_transforms`\n  // on the SDK means that old `transform` mutations stored in IndexedDB need\n  // to be updated to `update_transforms`.\n  // TODO(b/174608374): Remove this code once we perform a schema migration.\n\n  for (var _t34 = 0; _t34 < e.mutations.length - 1; ++_t34) {\n    var _n14 = e.mutations[_t34];\n\n    if (_t34 + 1 < e.mutations.length && void 0 !== e.mutations[_t34 + 1].transform) {\n      var _s9 = e.mutations[_t34 + 1];\n      _n14.updateTransforms = _s9.transform.fieldTransforms, e.mutations.splice(_t34 + 1, 1), ++_t34;\n    }\n  }\n\n  var s = e.mutations.map(function (e) {\n    return is(t.Wt, e);\n  }),\n      i = it.fromMillis(e.localWriteTimeMs);\n  return new ni(e.batchId, i, n, s);\n}\n/** Decodes a DbTarget into TargetData */\n\n\nfunction di(t) {\n  var e = li(t.readTime),\n      n = void 0 !== t.lastLimboFreeSnapshotVersion ? li(t.lastLimboFreeSnapshotVersion) : rt.min();\n  var s;\n  var i;\n  return void 0 !== t.query.documents ? (B(1 === (i = t.query).documents.length), s = Ee(we(Jn(i.documents[0])))) : s = function (t) {\n    return Ee(as(t));\n  }(t.query), new ii(s, t.targetId, 0\n  /* Listen */\n  , t.lastListenSequenceNumber, e, n, _t.fromBase64String(t.resumeToken));\n}\n/** Encodes TargetData into a DbTarget for storage locally. */\n\n\nfunction wi(t, e) {\n  var n = hi(e.snapshotVersion),\n      s = hi(e.lastLimboFreeSnapshotVersion);\n  var i;\n  i = Ht(e.target) ? os(t.Wt, e.target) : cs(t.Wt, e.target); // We can't store the resumeToken as a ByteString in IndexedDb, so we\n  // convert it to a base64 string for storage.\n\n  var r = e.resumeToken.toBase64(); // lastListenSequenceNumber is always 0 until we do real GC.\n\n  return new ks(e.targetId, Wt(e.target), n, r, e.sequenceNumber, s, i);\n}\n/**\n * A helper function for figuring out what kind of query has been stored.\n */\n\n/**\n * Encodes a `BundledQuery` from bundle proto to a Query object.\n *\n * This reconstructs the original query used to build the bundle being loaded,\n * including features exists only in SDKs (for example: limit-to-last).\n */\n\n\nfunction _i(t) {\n  var e = as({\n    parent: t.parent,\n    structuredQuery: t.structuredQuery\n  });\n  return \"LAST\" === t.limitType ? Ie(e, e.limit, \"L\"\n  /* Last */\n  ) : e;\n}\n/** Encodes a NamedQuery proto object to a NamedQuery model object. */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar mi = /*#__PURE__*/function () {\n  function mi() {\n    _classCallCheck(this, mi);\n  }\n\n  _createClass(mi, [{\n    key: \"getBundleMetadata\",\n    value: function getBundleMetadata(t, e) {\n      return gi(t).get(e).next(function (t) {\n        if (t) return {\n          id: (e = t).bundleId,\n          createTime: li(e.createTime),\n          version: e.version\n        };\n        /** Encodes a DbBundle to a BundleMetadata object. */\n\n        var e;\n        /** Encodes a BundleMetadata to a DbBundle. */\n      });\n    }\n  }, {\n    key: \"saveBundleMetadata\",\n    value: function saveBundleMetadata(t, e) {\n      return gi(t).put({\n        bundleId: (n = e).id,\n        createTime: hi(jn(n.createTime)),\n        version: n.version\n      });\n      var n;\n      /** Encodes a DbNamedQuery to a NamedQuery. */\n    }\n  }, {\n    key: \"getNamedQuery\",\n    value: function getNamedQuery(t, e) {\n      return yi(t).get(e).next(function (t) {\n        if (t) return {\n          name: (e = t).name,\n          query: _i(e.bundledQuery),\n          readTime: li(e.readTime)\n        };\n        var e;\n        /** Encodes a NamedQuery from a bundle proto to a DbNamedQuery. */\n      });\n    }\n  }, {\n    key: \"saveNamedQuery\",\n    value: function saveNamedQuery(t, e) {\n      return yi(t).put(function (t) {\n        return {\n          name: t.name,\n          readTime: hi(jn(t.readTime)),\n          bundledQuery: t.bundledQuery\n        };\n      }(e));\n    }\n  }]);\n\n  return mi;\n}();\n/**\n * Helper to get a typed SimpleDbStore for the bundles object store.\n */\n\n\nfunction gi(t) {\n  return ei(t, Ls.store);\n}\n/**\n * Helper to get a typed SimpleDbStore for the namedQueries object store.\n */\n\n\nfunction yi(t) {\n  return ei(t, Bs.store);\n}\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An in-memory implementation of IndexManager.\n */\n\n\nvar pi = /*#__PURE__*/function () {\n  function pi() {\n    _classCallCheck(this, pi);\n\n    this.Gt = new Ti();\n  }\n\n  _createClass(pi, [{\n    key: \"addToCollectionParentIndex\",\n    value: function addToCollectionParentIndex(t, e) {\n      return this.Gt.add(e), js.resolve();\n    }\n  }, {\n    key: \"getCollectionParents\",\n    value: function getCollectionParents(t, e) {\n      return js.resolve(this.Gt.getEntries(e));\n    }\n  }]);\n\n  return pi;\n}();\n/**\n * Internal implementation of the collection-parent index exposed by MemoryIndexManager.\n * Also used for in-memory caching by IndexedDbIndexManager and initial index population\n * in indexeddb_schema.ts\n */\n\n\nvar Ti = /*#__PURE__*/function () {\n  function Ti() {\n    _classCallCheck(this, Ti);\n\n    this.index = {};\n  } // Returns false if the entry already existed.\n\n\n  _createClass(Ti, [{\n    key: \"add\",\n    value: function add(t) {\n      var e = t.lastSegment(),\n          n = t.popLast(),\n          s = this.index[e] || new gn(ht.comparator),\n          i = !s.has(n);\n      return this.index[e] = s.add(n), i;\n    }\n  }, {\n    key: \"has\",\n    value: function has(t) {\n      var e = t.lastSegment(),\n          n = t.popLast(),\n          s = this.index[e];\n      return s && s.has(n);\n    }\n  }, {\n    key: \"getEntries\",\n    value: function getEntries(t) {\n      return (this.index[t] || new gn(ht.comparator)).toArray();\n    }\n  }]);\n\n  return Ti;\n}();\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A persisted implementation of IndexManager.\n */\n\n\nvar Ei = /*#__PURE__*/function () {\n  function Ei() {\n    _classCallCheck(this, Ei);\n\n    /**\n     * An in-memory copy of the index entries we've already written since the SDK\n     * launched. Used to avoid re-writing the same entry repeatedly.\n     *\n     * This is *NOT* a complete cache of what's in persistence and so can never be used to\n     * satisfy reads.\n     */\n    this.zt = new Ti();\n  }\n  /**\n   * Adds a new entry to the collection parent index.\n   *\n   * Repeated calls for the same collectionPath should be avoided within a\n   * transaction as IndexedDbIndexManager only caches writes once a transaction\n   * has been committed.\n   */\n\n\n  _createClass(Ei, [{\n    key: \"addToCollectionParentIndex\",\n    value: function addToCollectionParentIndex(t, e) {\n      var _this35 = this;\n\n      if (!this.zt.has(e)) {\n        var n = e.lastSegment(),\n            s = e.popLast();\n        t.addOnCommittedListener(function () {\n          // Add the collection to the in memory cache only if the transaction was\n          // successfully committed.\n          _this35.zt.add(e);\n        });\n        var i = {\n          collectionId: n,\n          parent: Es(s)\n        };\n        return Ii(t).put(i);\n      }\n\n      return js.resolve();\n    }\n  }, {\n    key: \"getCollectionParents\",\n    value: function getCollectionParents(t, e) {\n      var n = [],\n          s = IDBKeyRange.bound([e, \"\"], [st(e), \"\"],\n      /*lowerOpen=*/\n      !1,\n      /*upperOpen=*/\n      !0);\n      return Ii(t).Lt(s).next(function (t) {\n        var _iterator21 = _createForOfIteratorHelper(t),\n            _step21;\n\n        try {\n          for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n            var _s10 = _step21.value;\n            // This collectionId guard shouldn't be necessary (and isn't as long\n            // as we're running in a real browser), but there's a bug in\n            // indexeddbshim that breaks our range in our tests running in node:\n            // https://github.com/axemclion/IndexedDBShim/issues/334\n            if (_s10.collectionId !== e) break;\n            n.push(Rs(_s10.parent));\n          }\n        } catch (err) {\n          _iterator21.e(err);\n        } finally {\n          _iterator21.f();\n        }\n\n        return n;\n      });\n    }\n  }]);\n\n  return Ei;\n}();\n/**\n * Helper to get a typed SimpleDbStore for the collectionParents\n * document store.\n */\n\n\nfunction Ii(t) {\n  return ei(t, Fs.store);\n}\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar Ai = {\n  didRun: !1,\n  sequenceNumbersCollected: 0,\n  targetsRemoved: 0,\n  documentsRemoved: 0\n};\n\nvar Ri = /*#__PURE__*/function () {\n  function Ri( // When we attempt to collect, we will only do so if the cache size is greater than this\n  // threshold. Passing `COLLECTION_DISABLED` here will cause collection to always be skipped.\n  t, // The percentage of sequence numbers that we will attempt to collect\n  e, // A cap on the total number of sequence numbers that will be collected. This prevents\n  // us from collecting a huge number of sequence numbers if the cache has grown very large.\n  n) {\n    _classCallCheck(this, Ri);\n\n    this.cacheSizeCollectionThreshold = t, this.percentileToCollect = e, this.maximumSequenceNumbersToCollect = n;\n  }\n\n  _createClass(Ri, null, [{\n    key: \"withCacheSize\",\n    value: function withCacheSize(t) {\n      return new Ri(t, Ri.DEFAULT_COLLECTION_PERCENTILE, Ri.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT);\n    }\n  }]);\n\n  return Ri;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Delete a mutation batch and the associated document mutations.\n * @returns A PersistencePromise of the document mutations that were removed.\n */\n\n\nfunction bi(t, e, n) {\n  var s = t.store(Vs.store),\n      i = t.store(Ss.store),\n      r = [],\n      o = IDBKeyRange.only(n.batchId);\n  var c = 0;\n  var a = s.Kt({\n    range: o\n  }, function (t, e, n) {\n    return c++, n.delete();\n  });\n  r.push(a.next(function () {\n    B(1 === c);\n  }));\n  var u = [];\n\n  var _iterator22 = _createForOfIteratorHelper(n.mutations),\n      _step22;\n\n  try {\n    for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n      var _t35 = _step22.value;\n\n      var _s11 = Ss.key(e, _t35.key.path, n.batchId);\n\n      r.push(i.delete(_s11)), u.push(_t35.key);\n    }\n  } catch (err) {\n    _iterator22.e(err);\n  } finally {\n    _iterator22.f();\n  }\n\n  return js.waitFor(r).next(function () {\n    return u;\n  });\n}\n/**\n * Returns an approximate size for the given document.\n */\n\n\nfunction Pi(t) {\n  if (!t) return 0;\n  var e;\n  if (t.document) e = t.document;else if (t.unknownDocument) e = t.unknownDocument;else {\n    if (!t.noDocument) throw L();\n    e = t.noDocument;\n  }\n  return JSON.stringify(e).length;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** A mutation queue for a specific user, backed by IndexedDB. */\n\n\nRi.DEFAULT_COLLECTION_PERCENTILE = 10, Ri.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT = 1e3, Ri.DEFAULT = new Ri(41943040, Ri.DEFAULT_COLLECTION_PERCENTILE, Ri.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT), Ri.DISABLED = new Ri(-1, 0, 0);\n\nvar vi = /*#__PURE__*/function () {\n  function vi(\n  /**\n   * The normalized userId (e.g. null UID => \"\" userId) used to store /\n   * retrieve mutations.\n   */\n  t, e, n, s) {\n    _classCallCheck(this, vi);\n\n    this.userId = t, this.N = e, this.Ht = n, this.referenceDelegate = s,\n    /**\n     * Caches the document keys for pending mutation batches. If the mutation\n     * has been removed from IndexedDb, the cached value may continue to\n     * be used to retrieve the batch's document keys. To remove a cached value\n     * locally, `removeCachedMutationKeys()` should be invoked either directly\n     * or through `removeMutationBatches()`.\n     *\n     * With multi-tab, when the primary client acknowledges or rejects a mutation,\n     * this cache is used by secondary clients to invalidate the local\n     * view of the documents that were previously affected by the mutation.\n     */\n    // PORTING NOTE: Multi-tab only.\n    this.Jt = {};\n  }\n  /**\n   * Creates a new mutation queue for the given user.\n   * @param user - The user for which to create a mutation queue.\n   * @param serializer - The serializer to use when persisting to IndexedDb.\n   */\n\n\n  _createClass(vi, [{\n    key: \"checkEmpty\",\n    value: function checkEmpty(t) {\n      var e = !0;\n      var n = IDBKeyRange.bound([this.userId, Number.NEGATIVE_INFINITY], [this.userId, Number.POSITIVE_INFINITY]);\n      return Si(t).Kt({\n        index: Vs.userMutationsIndex,\n        range: n\n      }, function (t, n, s) {\n        e = !1, s.done();\n      }).next(function () {\n        return e;\n      });\n    }\n  }, {\n    key: \"addMutationBatch\",\n    value: function addMutationBatch(t, e, n, s) {\n      var _this36 = this;\n\n      var i = Di(t),\n          r = Si(t); // The IndexedDb implementation in Chrome (and Firefox) does not handle\n      // compound indices that include auto-generated keys correctly. To ensure\n      // that the index entry is added correctly in all browsers, we perform two\n      // writes: The first write is used to retrieve the next auto-generated Batch\n      // ID, and the second write populates the index and stores the actual\n      // mutation batch.\n      // See: https://bugs.chromium.org/p/chromium/issues/detail?id=701972\n      // We write an empty object to obtain key\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      return r.add({}).next(function (o) {\n        B(\"number\" == typeof o);\n\n        var c = new ni(o, e, n, s),\n            a = function (t, e, n) {\n          var s = n.baseMutations.map(function (e) {\n            return ss(t.Wt, e);\n          }),\n              i = n.mutations.map(function (e) {\n            return ss(t.Wt, e);\n          });\n          return new Vs(e, n.batchId, n.localWriteTime.toMillis(), s, i);\n        }(_this36.N, _this36.userId, c),\n            u = [];\n\n        var h = new gn(function (t, e) {\n          return et(t.canonicalString(), e.canonicalString());\n        });\n\n        var _iterator23 = _createForOfIteratorHelper(s),\n            _step23;\n\n        try {\n          for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n            var _t36 = _step23.value;\n\n            var _e19 = Ss.key(_this36.userId, _t36.key.path, o);\n\n            h = h.add(_t36.key.path.popLast()), u.push(r.put(a)), u.push(i.put(_e19, Ss.PLACEHOLDER));\n          }\n        } catch (err) {\n          _iterator23.e(err);\n        } finally {\n          _iterator23.f();\n        }\n\n        return h.forEach(function (e) {\n          u.push(_this36.Ht.addToCollectionParentIndex(t, e));\n        }), t.addOnCommittedListener(function () {\n          _this36.Jt[o] = c.keys();\n        }), js.waitFor(u).next(function () {\n          return c;\n        });\n      });\n    }\n  }, {\n    key: \"lookupMutationBatch\",\n    value: function lookupMutationBatch(t, e) {\n      var _this37 = this;\n\n      return Si(t).get(e).next(function (t) {\n        return t ? (B(t.userId === _this37.userId), fi(_this37.N, t)) : null;\n      });\n    }\n    /**\n     * Returns the document keys for the mutation batch with the given batchId.\n     * For primary clients, this method returns `null` after\n     * `removeMutationBatches()` has been called. Secondary clients return a\n     * cached result until `removeCachedMutationKeys()` is invoked.\n     */\n    // PORTING NOTE: Multi-tab only.\n\n  }, {\n    key: \"Xt\",\n    value: function Xt(t, e) {\n      var _this38 = this;\n\n      return this.Jt[e] ? js.resolve(this.Jt[e]) : this.lookupMutationBatch(t, e).next(function (t) {\n        if (t) {\n          var n = t.keys();\n          return _this38.Jt[e] = n, n;\n        }\n\n        return null;\n      });\n    }\n  }, {\n    key: \"getNextMutationBatchAfterBatchId\",\n    value: function getNextMutationBatchAfterBatchId(t, e) {\n      var _this39 = this;\n\n      var n = e + 1,\n          s = IDBKeyRange.lowerBound([this.userId, n]);\n      var i = null;\n      return Si(t).Kt({\n        index: Vs.userMutationsIndex,\n        range: s\n      }, function (t, e, s) {\n        e.userId === _this39.userId && (B(e.batchId >= n), i = fi(_this39.N, e)), s.done();\n      }).next(function () {\n        return i;\n      });\n    }\n  }, {\n    key: \"getHighestUnacknowledgedBatchId\",\n    value: function getHighestUnacknowledgedBatchId(t) {\n      var e = IDBKeyRange.upperBound([this.userId, Number.POSITIVE_INFINITY]);\n      var n = -1;\n      return Si(t).Kt({\n        index: Vs.userMutationsIndex,\n        range: e,\n        reverse: !0\n      }, function (t, e, s) {\n        n = e.batchId, s.done();\n      }).next(function () {\n        return n;\n      });\n    }\n  }, {\n    key: \"getAllMutationBatches\",\n    value: function getAllMutationBatches(t) {\n      var _this40 = this;\n\n      var e = IDBKeyRange.bound([this.userId, -1], [this.userId, Number.POSITIVE_INFINITY]);\n      return Si(t).Lt(Vs.userMutationsIndex, e).next(function (t) {\n        return t.map(function (t) {\n          return fi(_this40.N, t);\n        });\n      });\n    }\n  }, {\n    key: \"getAllMutationBatchesAffectingDocumentKey\",\n    value: function getAllMutationBatchesAffectingDocumentKey(t, e) {\n      var _this41 = this;\n\n      // Scan the document-mutation index starting with a prefix starting with\n      // the given documentKey.\n      var n = Ss.prefixForPath(this.userId, e.path),\n          s = IDBKeyRange.lowerBound(n),\n          i = [];\n      return Di(t).Kt({\n        range: s\n      }, function (n, s, r) {\n        var _n15 = _slicedToArray(n, 3),\n            o = _n15[0],\n            c = _n15[1],\n            a = _n15[2],\n            u = Rs(c); // Only consider rows matching exactly the specific key of\n        // interest. Note that because we order by path first, and we\n        // order terminators before path separators, we'll encounter all\n        // the index rows for documentKey contiguously. In particular, all\n        // the rows for documentKey will occur before any rows for\n        // documents nested in a subcollection beneath documentKey so we\n        // can stop as soon as we hit any such row.\n\n\n        if (o === _this41.userId && e.path.isEqual(u)) // Look up the mutation batch in the store.\n          return Si(t).get(a).next(function (t) {\n            if (!t) throw L();\n            B(t.userId === _this41.userId), i.push(fi(_this41.N, t));\n          });\n        r.done();\n      }).next(function () {\n        return i;\n      });\n    }\n  }, {\n    key: \"getAllMutationBatchesAffectingDocumentKeys\",\n    value: function getAllMutationBatchesAffectingDocumentKeys(t, e) {\n      var _this42 = this;\n\n      var n = new gn(et);\n      var s = [];\n      return e.forEach(function (e) {\n        var i = Ss.prefixForPath(_this42.userId, e.path),\n            r = IDBKeyRange.lowerBound(i),\n            o = Di(t).Kt({\n          range: r\n        }, function (t, s, i) {\n          var _t37 = _slicedToArray(t, 3),\n              r = _t37[0],\n              o = _t37[1],\n              c = _t37[2],\n              a = Rs(o); // Only consider rows matching exactly the specific key of\n          // interest. Note that because we order by path first, and we\n          // order terminators before path separators, we'll encounter all\n          // the index rows for documentKey contiguously. In particular, all\n          // the rows for documentKey will occur before any rows for\n          // documents nested in a subcollection beneath documentKey so we\n          // can stop as soon as we hit any such row.\n\n\n          r === _this42.userId && e.path.isEqual(a) ? n = n.add(c) : i.done();\n        });\n        s.push(o);\n      }), js.waitFor(s).next(function () {\n        return _this42.Zt(t, n);\n      });\n    }\n  }, {\n    key: \"getAllMutationBatchesAffectingQuery\",\n    value: function getAllMutationBatchesAffectingQuery(t, e) {\n      var _this43 = this;\n\n      var n = e.path,\n          s = n.length + 1,\n          i = Ss.prefixForPath(this.userId, n),\n          r = IDBKeyRange.lowerBound(i); // Collect up unique batchIDs encountered during a scan of the index. Use a\n      // SortedSet to accumulate batch IDs so they can be traversed in order in a\n      // scan of the main table.\n\n      var o = new gn(et);\n      return Di(t).Kt({\n        range: r\n      }, function (t, e, i) {\n        var _t38 = _slicedToArray(t, 3),\n            r = _t38[0],\n            c = _t38[1],\n            a = _t38[2],\n            u = Rs(c);\n\n        r === _this43.userId && n.isPrefixOf(u) ? // Rows with document keys more than one segment longer than the\n        // query path can't be matches. For example, a query on 'rooms'\n        // can't match the document /rooms/abc/messages/xyx.\n        // TODO(mcg): we'll need a different scanner when we implement\n        // ancestor queries.\n        u.length === s && (o = o.add(a)) : i.done();\n      }).next(function () {\n        return _this43.Zt(t, o);\n      });\n    }\n  }, {\n    key: \"Zt\",\n    value: function Zt(t, e) {\n      var _this44 = this;\n\n      var n = [],\n          s = []; // TODO(rockwood): Implement this using iterate.\n\n      return e.forEach(function (e) {\n        s.push(Si(t).get(e).next(function (t) {\n          if (null === t) throw L();\n          B(t.userId === _this44.userId), n.push(fi(_this44.N, t));\n        }));\n      }), js.waitFor(s).next(function () {\n        return n;\n      });\n    }\n  }, {\n    key: \"removeMutationBatch\",\n    value: function removeMutationBatch(t, e) {\n      var _this45 = this;\n\n      return bi(t.Qt, this.userId, e).next(function (n) {\n        return t.addOnCommittedListener(function () {\n          _this45.te(e.batchId);\n        }), js.forEach(n, function (e) {\n          return _this45.referenceDelegate.markPotentiallyOrphaned(t, e);\n        });\n      });\n    }\n    /**\n     * Clears the cached keys for a mutation batch. This method should be\n     * called by secondary clients after they process mutation updates.\n     *\n     * Note that this method does not have to be called from primary clients as\n     * the corresponding cache entries are cleared when an acknowledged or\n     * rejected batch is removed from the mutation queue.\n     */\n    // PORTING NOTE: Multi-tab only\n\n  }, {\n    key: \"te\",\n    value: function te(t) {\n      delete this.Jt[t];\n    }\n  }, {\n    key: \"performConsistencyCheck\",\n    value: function performConsistencyCheck(t) {\n      var _this46 = this;\n\n      return this.checkEmpty(t).next(function (e) {\n        if (!e) return js.resolve(); // Verify that there are no entries in the documentMutations index if\n        // the queue is empty.\n\n        var n = IDBKeyRange.lowerBound(Ss.prefixForUser(_this46.userId)),\n            s = [];\n        return Di(t).Kt({\n          range: n\n        }, function (t, e, n) {\n          if (t[0] === _this46.userId) {\n            var _e20 = Rs(t[1]);\n\n            s.push(_e20);\n          } else n.done();\n        }).next(function () {\n          B(0 === s.length);\n        });\n      });\n    }\n  }, {\n    key: \"containsKey\",\n    value: function containsKey(t, e) {\n      return Vi(t, this.userId, e);\n    } // PORTING NOTE: Multi-tab only (state is held in memory in other clients).\n\n    /** Returns the mutation queue's metadata from IndexedDb. */\n\n  }, {\n    key: \"ee\",\n    value: function ee(t) {\n      var _this47 = this;\n\n      return Ci(t).get(this.userId).next(function (t) {\n        return t || new vs(_this47.userId, -1,\n        /*lastStreamToken=*/\n        \"\");\n      });\n    }\n  }], [{\n    key: \"Yt\",\n    value: function Yt(t, e, n, s) {\n      // TODO(mcg): Figure out what constraints there are on userIDs\n      // In particular, are there any reserved characters? are empty ids allowed?\n      // For the moment store these together in the same mutations table assuming\n      // that empty userIDs aren't allowed.\n      B(\"\" !== t.uid);\n      var i = t.isAuthenticated() ? t.uid : \"\";\n      return new vi(i, e, n, s);\n    }\n  }]);\n\n  return vi;\n}();\n/**\n * @returns true if the mutation queue for the given user contains a pending\n *         mutation for the given key.\n */\n\n\nfunction Vi(t, e, n) {\n  var s = Ss.prefixForPath(e, n.path),\n      i = s[1],\n      r = IDBKeyRange.lowerBound(s);\n  var o = !1;\n  return Di(t).Kt({\n    range: r,\n    qt: !0\n  }, function (t, n, s) {\n    var _t39 = _slicedToArray(t, 3),\n        r = _t39[0],\n        c = _t39[1],\n\n    /*batchID*/\n    a = _t39[2];\n\n    r === e && c === i && (o = !0), s.done();\n  }).next(function () {\n    return o;\n  });\n}\n/** Returns true if any mutation queue contains the given document. */\n\n/**\n * Helper to get a typed SimpleDbStore for the mutations object store.\n */\n\n\nfunction Si(t) {\n  return ei(t, Vs.store);\n}\n/**\n * Helper to get a typed SimpleDbStore for the mutationQueues object store.\n */\n\n\nfunction Di(t) {\n  return ei(t, Ss.store);\n}\n/**\n * Helper to get a typed SimpleDbStore for the mutationQueues object store.\n */\n\n\nfunction Ci(t) {\n  return ei(t, vs.store);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Offset to ensure non-overlapping target ids. */\n\n/**\n * Generates monotonically increasing target IDs for sending targets to the\n * watch stream.\n *\n * The client constructs two generators, one for the target cache, and one for\n * for the sync engine (to generate limbo documents targets). These\n * generators produce non-overlapping IDs (by using even and odd IDs\n * respectively).\n *\n * By separating the target ID space, the query cache can generate target IDs\n * that persist across client restarts, while sync engine can independently\n * generate in-memory target IDs that are transient and can be reused after a\n * restart.\n */\n\n\nvar Ni = /*#__PURE__*/function () {\n  function Ni(t) {\n    _classCallCheck(this, Ni);\n\n    this.ne = t;\n  }\n\n  _createClass(Ni, [{\n    key: \"next\",\n    value: function next() {\n      return this.ne += 2, this.ne;\n    }\n  }], [{\n    key: \"se\",\n    value: function se() {\n      // The target cache generator must return '2' in its first call to `next()`\n      // as there is no differentiation in the protocol layer between an unset\n      // number and the number '0'. If we were to sent a target with target ID\n      // '0', the backend would consider it unset and replace it with its own ID.\n      return new Ni(0);\n    }\n  }, {\n    key: \"ie\",\n    value: function ie() {\n      // Sync engine assigns target IDs for limbo document detection.\n      return new Ni(-1);\n    }\n  }]);\n\n  return Ni;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar xi = /*#__PURE__*/function () {\n  function xi(t, e) {\n    _classCallCheck(this, xi);\n\n    this.referenceDelegate = t, this.N = e;\n  } // PORTING NOTE: We don't cache global metadata for the target cache, since\n  // some of it (in particular `highestTargetId`) can be modified by secondary\n  // tabs. We could perhaps be more granular (and e.g. still cache\n  // `lastRemoteSnapshotVersion` in memory) but for simplicity we currently go\n  // to IndexedDb whenever we need to read metadata. We can revisit if it turns\n  // out to have a meaningful performance impact.\n\n\n  _createClass(xi, [{\n    key: \"allocateTargetId\",\n    value: function allocateTargetId(t) {\n      var _this48 = this;\n\n      return this.re(t).next(function (e) {\n        var n = new Ni(e.highestTargetId);\n        return e.highestTargetId = n.next(), _this48.oe(t, e).next(function () {\n          return e.highestTargetId;\n        });\n      });\n    }\n  }, {\n    key: \"getLastRemoteSnapshotVersion\",\n    value: function getLastRemoteSnapshotVersion(t) {\n      return this.re(t).next(function (t) {\n        return rt.fromTimestamp(new it(t.lastRemoteSnapshotVersion.seconds, t.lastRemoteSnapshotVersion.nanoseconds));\n      });\n    }\n  }, {\n    key: \"getHighestSequenceNumber\",\n    value: function getHighestSequenceNumber(t) {\n      return this.re(t).next(function (t) {\n        return t.highestListenSequenceNumber;\n      });\n    }\n  }, {\n    key: \"setTargetsMetadata\",\n    value: function setTargetsMetadata(t, e, n) {\n      var _this49 = this;\n\n      return this.re(t).next(function (s) {\n        return s.highestListenSequenceNumber = e, n && (s.lastRemoteSnapshotVersion = n.toTimestamp()), e > s.highestListenSequenceNumber && (s.highestListenSequenceNumber = e), _this49.oe(t, s);\n      });\n    }\n  }, {\n    key: \"addTargetData\",\n    value: function addTargetData(t, e) {\n      var _this50 = this;\n\n      return this.ce(t, e).next(function () {\n        return _this50.re(t).next(function (n) {\n          return n.targetCount += 1, _this50.ae(e, n), _this50.oe(t, n);\n        });\n      });\n    }\n  }, {\n    key: \"updateTargetData\",\n    value: function updateTargetData(t, e) {\n      return this.ce(t, e);\n    }\n  }, {\n    key: \"removeTargetData\",\n    value: function removeTargetData(t, e) {\n      var _this51 = this;\n\n      return this.removeMatchingKeysForTargetId(t, e.targetId).next(function () {\n        return ki(t).delete(e.targetId);\n      }).next(function () {\n        return _this51.re(t);\n      }).next(function (e) {\n        return B(e.targetCount > 0), e.targetCount -= 1, _this51.oe(t, e);\n      });\n    }\n    /**\n     * Drops any targets with sequence number less than or equal to the upper bound, excepting those\n     * present in `activeTargetIds`. Document associations for the removed targets are also removed.\n     * Returns the number of targets removed.\n     */\n\n  }, {\n    key: \"removeTargets\",\n    value: function removeTargets(t, e, n) {\n      var _this52 = this;\n\n      var s = 0;\n      var i = [];\n      return ki(t).Kt(function (r, o) {\n        var c = di(o);\n        c.sequenceNumber <= e && null === n.get(c.targetId) && (s++, i.push(_this52.removeTargetData(t, c)));\n      }).next(function () {\n        return js.waitFor(i);\n      }).next(function () {\n        return s;\n      });\n    }\n    /**\n     * Call provided function with each `TargetData` that we have cached.\n     */\n\n  }, {\n    key: \"forEachTarget\",\n    value: function forEachTarget(t, e) {\n      return ki(t).Kt(function (t, n) {\n        var s = di(n);\n        e(s);\n      });\n    }\n  }, {\n    key: \"re\",\n    value: function re(t) {\n      return $i(t).get(Os.key).next(function (t) {\n        return B(null !== t), t;\n      });\n    }\n  }, {\n    key: \"oe\",\n    value: function oe(t, e) {\n      return $i(t).put(Os.key, e);\n    }\n  }, {\n    key: \"ce\",\n    value: function ce(t, e) {\n      return ki(t).put(wi(this.N, e));\n    }\n    /**\n     * In-place updates the provided metadata to account for values in the given\n     * TargetData. Saving is done separately. Returns true if there were any\n     * changes to the metadata.\n     */\n\n  }, {\n    key: \"ae\",\n    value: function ae(t, e) {\n      var n = !1;\n      return t.targetId > e.highestTargetId && (e.highestTargetId = t.targetId, n = !0), t.sequenceNumber > e.highestListenSequenceNumber && (e.highestListenSequenceNumber = t.sequenceNumber, n = !0), n;\n    }\n  }, {\n    key: \"getTargetCount\",\n    value: function getTargetCount(t) {\n      return this.re(t).next(function (t) {\n        return t.targetCount;\n      });\n    }\n  }, {\n    key: \"getTargetData\",\n    value: function getTargetData(t, e) {\n      // Iterating by the canonicalId may yield more than one result because\n      // canonicalId values are not required to be unique per target. This query\n      // depends on the queryTargets index to be efficient.\n      var n = Wt(e),\n          s = IDBKeyRange.bound([n, Number.NEGATIVE_INFINITY], [n, Number.POSITIVE_INFINITY]);\n      var i = null;\n      return ki(t).Kt({\n        range: s,\n        index: ks.queryTargetsIndexName\n      }, function (t, n, s) {\n        var r = di(n); // After finding a potential match, check that the target is\n        // actually equal to the requested target.\n\n        zt(e, r.target) && (i = r, s.done());\n      }).next(function () {\n        return i;\n      });\n    }\n  }, {\n    key: \"addMatchingKeys\",\n    value: function addMatchingKeys(t, e, n) {\n      var _this53 = this;\n\n      // PORTING NOTE: The reverse index (documentsTargets) is maintained by\n      // IndexedDb.\n      var s = [],\n          i = Oi(t);\n      return e.forEach(function (e) {\n        var r = Es(e.path);\n        s.push(i.put(new $s(n, r))), s.push(_this53.referenceDelegate.addReference(t, n, e));\n      }), js.waitFor(s);\n    }\n  }, {\n    key: \"removeMatchingKeys\",\n    value: function removeMatchingKeys(t, e, n) {\n      var _this54 = this;\n\n      // PORTING NOTE: The reverse index (documentsTargets) is maintained by\n      // IndexedDb.\n      var s = Oi(t);\n      return js.forEach(e, function (e) {\n        var i = Es(e.path);\n        return js.waitFor([s.delete([n, i]), _this54.referenceDelegate.removeReference(t, n, e)]);\n      });\n    }\n  }, {\n    key: \"removeMatchingKeysForTargetId\",\n    value: function removeMatchingKeysForTargetId(t, e) {\n      var n = Oi(t),\n          s = IDBKeyRange.bound([e], [e + 1],\n      /*lowerOpen=*/\n      !1,\n      /*upperOpen=*/\n      !0);\n      return n.delete(s);\n    }\n  }, {\n    key: \"getMatchingKeysForTargetId\",\n    value: function getMatchingKeysForTargetId(t, e) {\n      var n = IDBKeyRange.bound([e], [e + 1],\n      /*lowerOpen=*/\n      !1,\n      /*upperOpen=*/\n      !0),\n          s = Oi(t);\n      var i = Pn();\n      return s.Kt({\n        range: n,\n        qt: !0\n      }, function (t, e, n) {\n        var s = Rs(t[1]),\n            r = new Pt(s);\n        i = i.add(r);\n      }).next(function () {\n        return i;\n      });\n    }\n  }, {\n    key: \"containsKey\",\n    value: function containsKey(t, e) {\n      var n = Es(e.path),\n          s = IDBKeyRange.bound([n], [st(n)],\n      /*lowerOpen=*/\n      !1,\n      /*upperOpen=*/\n      !0);\n      var i = 0;\n      return Oi(t).Kt({\n        index: $s.documentTargetsIndex,\n        qt: !0,\n        range: s\n      }, function (_ref3, n, s) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            t = _ref4[0],\n            e = _ref4[1];\n\n        // Having a sentinel row for a document does not count as containing that document;\n        // For the target cache, containing the document means the document is part of some\n        // target.\n        0 !== t && (i++, s.done());\n      }).next(function () {\n        return i > 0;\n      });\n    }\n    /**\n     * Looks up a TargetData entry by target ID.\n     *\n     * @param targetId - The target ID of the TargetData entry to look up.\n     * @returns The cached TargetData entry, or null if the cache has no entry for\n     * the target.\n     */\n    // PORTING NOTE: Multi-tab only.\n\n  }, {\n    key: \"Tt\",\n    value: function Tt(t, e) {\n      return ki(t).get(e).next(function (t) {\n        return t ? di(t) : null;\n      });\n    }\n  }]);\n\n  return xi;\n}();\n/**\n * Helper to get a typed SimpleDbStore for the queries object store.\n */\n\n\nfunction ki(t) {\n  return ei(t, ks.store);\n}\n/**\n * Helper to get a typed SimpleDbStore for the target globals object store.\n */\n\n\nfunction $i(t) {\n  return ei(t, Os.store);\n}\n/**\n * Helper to get a typed SimpleDbStore for the document target object store.\n */\n\n\nfunction Oi(t) {\n  return ei(t, $s.store);\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Verifies the error thrown by a LocalStore operation. If a LocalStore\n * operation fails because the primary lease has been taken by another client,\n * we ignore the error (the persistence layer will immediately call\n * `applyPrimaryLease` to propagate the primary state change). All other errors\n * are re-thrown.\n *\n * @param err - An error returned by a LocalStore operation.\n * @returns A Promise that resolves after we recovered, or the original error.\n */\n\n\nfunction Fi(_x6) {\n  return _Fi.apply(this, arguments);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction _Fi() {\n  _Fi = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee70(t) {\n    return _regeneratorRuntime.wrap(function _callee70$(_context70) {\n      while (1) {\n        switch (_context70.prev = _context70.next) {\n          case 0:\n            if (!(t.code !== K.FAILED_PRECONDITION || t.message !== qs)) {\n              _context70.next = 2;\n              break;\n            }\n\n            throw t;\n\n          case 2:\n            $(\"LocalStore\", \"Unexpectedly lost primary lease\");\n\n          case 3:\n          case \"end\":\n            return _context70.stop();\n        }\n      }\n    }, _callee70);\n  }));\n  return _Fi.apply(this, arguments);\n}\n\nfunction Mi(_ref5, _ref6) {\n  var _ref7 = _slicedToArray(_ref5, 2),\n      t = _ref7[0],\n      e = _ref7[1];\n\n  var _ref8 = _slicedToArray(_ref6, 2),\n      n = _ref8[0],\n      s = _ref8[1];\n\n  var i = et(t, n);\n  return 0 === i ? et(e, s) : i;\n}\n/**\n * Used to calculate the nth sequence number. Keeps a rolling buffer of the\n * lowest n values passed to `addElement`, and finally reports the largest of\n * them in `maxValue`.\n */\n\n\nvar Li = /*#__PURE__*/function () {\n  function Li(t) {\n    _classCallCheck(this, Li);\n\n    this.ue = t, this.buffer = new gn(Mi), this.he = 0;\n  }\n\n  _createClass(Li, [{\n    key: \"le\",\n    value: function le() {\n      return ++this.he;\n    }\n  }, {\n    key: \"fe\",\n    value: function fe(t) {\n      var e = [t, this.le()];\n      if (this.buffer.size < this.ue) this.buffer = this.buffer.add(e);else {\n        var _t40 = this.buffer.last();\n\n        Mi(e, _t40) < 0 && (this.buffer = this.buffer.delete(_t40).add(e));\n      }\n    }\n  }, {\n    key: \"maxValue\",\n    get: function get() {\n      // Guaranteed to be non-empty. If we decide we are not collecting any\n      // sequence numbers, nthSequenceNumber below short-circuits. If we have\n      // decided that we are collecting n sequence numbers, it's because n is some\n      // percentage of the existing sequence numbers. That means we should never\n      // be in a situation where we are collecting sequence numbers but don't\n      // actually have any.\n      return this.buffer.last()[0];\n    }\n  }]);\n\n  return Li;\n}();\n/**\n * This class is responsible for the scheduling of LRU garbage collection. It handles checking\n * whether or not GC is enabled, as well as which delay to use before the next run.\n */\n\n\nvar Bi = /*#__PURE__*/function () {\n  function Bi(t, e) {\n    _classCallCheck(this, Bi);\n\n    this.garbageCollector = t, this.asyncQueue = e, this.de = !1, this.we = null;\n  }\n\n  _createClass(Bi, [{\n    key: \"start\",\n    value: function start(t) {\n      -1 !== this.garbageCollector.params.cacheSizeCollectionThreshold && this._e(t);\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.we && (this.we.cancel(), this.we = null);\n    }\n  }, {\n    key: \"started\",\n    get: function get() {\n      return null !== this.we;\n    }\n  }, {\n    key: \"_e\",\n    value: function _e(t) {\n      var _this55 = this;\n\n      var e = this.de ? 3e5 : 6e4;\n      $(\"LruGarbageCollector\", \"Garbage collection scheduled in \".concat(e, \"ms\")), this.we = this.asyncQueue.enqueueAfterDelay(\"lru_garbage_collection\"\n      /* LruGarbageCollection */\n      , e, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _this55.we = null, _this55.de = !0;\n                _context5.prev = 1;\n                _context5.next = 4;\n                return t.collectGarbage(_this55.garbageCollector);\n\n              case 4:\n                _context5.next = 14;\n                break;\n\n              case 6:\n                _context5.prev = 6;\n                _context5.t0 = _context5[\"catch\"](1);\n\n                if (!Hs(_context5.t0)) {\n                  _context5.next = 12;\n                  break;\n                }\n\n                $(\"LruGarbageCollector\", \"Ignoring IndexedDB error during garbage collection: \", _context5.t0);\n                _context5.next = 14;\n                break;\n\n              case 12:\n                _context5.next = 14;\n                return Fi(_context5.t0);\n\n              case 14:\n                _context5.next = 16;\n                return _this55._e(t);\n\n              case 16:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[1, 6]]);\n      })));\n    }\n  }]);\n\n  return Bi;\n}();\n/** Implements the steps for LRU garbage collection. */\n\n\nvar Ui = /*#__PURE__*/function () {\n  function Ui(t, e) {\n    _classCallCheck(this, Ui);\n\n    this.me = t, this.params = e;\n  }\n\n  _createClass(Ui, [{\n    key: \"calculateTargetCount\",\n    value: function calculateTargetCount(t, e) {\n      return this.me.ge(t).next(function (t) {\n        return Math.floor(e / 100 * t);\n      });\n    }\n  }, {\n    key: \"nthSequenceNumber\",\n    value: function nthSequenceNumber(t, e) {\n      var _this56 = this;\n\n      if (0 === e) return js.resolve(X.T);\n      var n = new Li(e);\n      return this.me.forEachTarget(t, function (t) {\n        return n.fe(t.sequenceNumber);\n      }).next(function () {\n        return _this56.me.ye(t, function (t) {\n          return n.fe(t);\n        });\n      }).next(function () {\n        return n.maxValue;\n      });\n    }\n  }, {\n    key: \"removeTargets\",\n    value: function removeTargets(t, e, n) {\n      return this.me.removeTargets(t, e, n);\n    }\n  }, {\n    key: \"removeOrphanedDocuments\",\n    value: function removeOrphanedDocuments(t, e) {\n      return this.me.removeOrphanedDocuments(t, e);\n    }\n  }, {\n    key: \"collect\",\n    value: function collect(t, e) {\n      var _this57 = this;\n\n      return -1 === this.params.cacheSizeCollectionThreshold ? ($(\"LruGarbageCollector\", \"Garbage collection skipped; disabled\"), js.resolve(Ai)) : this.getCacheSize(t).next(function (n) {\n        return n < _this57.params.cacheSizeCollectionThreshold ? ($(\"LruGarbageCollector\", \"Garbage collection skipped; Cache size \".concat(n, \" is lower than threshold \").concat(_this57.params.cacheSizeCollectionThreshold)), Ai) : _this57.pe(t, e);\n      });\n    }\n  }, {\n    key: \"getCacheSize\",\n    value: function getCacheSize(t) {\n      return this.me.getCacheSize(t);\n    }\n  }, {\n    key: \"pe\",\n    value: function pe(t, e) {\n      var _this58 = this;\n\n      var n, s, i, r, o, a, u;\n      var h = Date.now();\n      return this.calculateTargetCount(t, this.params.percentileToCollect).next(function (e) {\n        return (// Cap at the configured max\n          e > _this58.params.maximumSequenceNumbersToCollect ? ($(\"LruGarbageCollector\", \"Capping sequence numbers to collect down to the maximum of \".concat(_this58.params.maximumSequenceNumbersToCollect, \" from \").concat(e)), s = _this58.params.maximumSequenceNumbersToCollect) : s = e, r = Date.now(), _this58.nthSequenceNumber(t, s)\n        );\n      }).next(function (s) {\n        return n = s, o = Date.now(), _this58.removeTargets(t, n, e);\n      }).next(function (e) {\n        return i = e, a = Date.now(), _this58.removeOrphanedDocuments(t, n);\n      }).next(function (t) {\n        if (u = Date.now(), x() <= LogLevel.DEBUG) {\n          $(\"LruGarbageCollector\", \"LRU Garbage Collection\\n\\tCounted targets in \".concat(r - h, \"ms\\n\\tDetermined least recently used \").concat(s, \" in \") + (o - r) + \"ms\\n\" + \"\\tRemoved \".concat(i, \" targets in \") + (a - o) + \"ms\\n\" + \"\\tRemoved \".concat(t, \" documents in \") + (u - a) + \"ms\\n\" + \"Total Duration: \".concat(u - h, \"ms\"));\n        }\n\n        return js.resolve({\n          didRun: !0,\n          sequenceNumbersCollected: s,\n          targetsRemoved: i,\n          documentsRemoved: t\n        });\n      });\n    }\n  }]);\n\n  return Ui;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Provides LRU functionality for IndexedDB persistence. */\n\n\nvar qi = /*#__PURE__*/function () {\n  function qi(t, e) {\n    _classCallCheck(this, qi);\n\n    this.db = t, this.garbageCollector = function (t, e) {\n      return new Ui(t, e);\n    }(this, e);\n  }\n\n  _createClass(qi, [{\n    key: \"ge\",\n    value: function ge(t) {\n      var e = this.Te(t);\n      return this.db.getTargetCache().getTargetCount(t).next(function (t) {\n        return e.next(function (e) {\n          return t + e;\n        });\n      });\n    }\n  }, {\n    key: \"Te\",\n    value: function Te(t) {\n      var e = 0;\n      return this.ye(t, function (t) {\n        e++;\n      }).next(function () {\n        return e;\n      });\n    }\n  }, {\n    key: \"forEachTarget\",\n    value: function forEachTarget(t, e) {\n      return this.db.getTargetCache().forEachTarget(t, e);\n    }\n  }, {\n    key: \"ye\",\n    value: function ye(t, e) {\n      return this.Ee(t, function (t, n) {\n        return e(n);\n      });\n    }\n  }, {\n    key: \"addReference\",\n    value: function addReference(t, e, n) {\n      return Ki(t, n);\n    }\n  }, {\n    key: \"removeReference\",\n    value: function removeReference(t, e, n) {\n      return Ki(t, n);\n    }\n  }, {\n    key: \"removeTargets\",\n    value: function removeTargets(t, e, n) {\n      return this.db.getTargetCache().removeTargets(t, e, n);\n    }\n  }, {\n    key: \"markPotentiallyOrphaned\",\n    value: function markPotentiallyOrphaned(t, e) {\n      return Ki(t, e);\n    }\n    /**\n     * Returns true if anything would prevent this document from being garbage\n     * collected, given that the document in question is not present in any\n     * targets and has a sequence number less than or equal to the upper bound for\n     * the collection run.\n     */\n\n  }, {\n    key: \"Ie\",\n    value: function Ie(t, e) {\n      return function (t, e) {\n        var n = !1;\n        return Ci(t).jt(function (s) {\n          return Vi(t, s, e).next(function (t) {\n            return t && (n = !0), js.resolve(!t);\n          });\n        }).next(function () {\n          return n;\n        });\n      }(t, e);\n    }\n  }, {\n    key: \"removeOrphanedDocuments\",\n    value: function removeOrphanedDocuments(t, e) {\n      var _this59 = this;\n\n      var n = this.db.getRemoteDocumentCache().newChangeBuffer(),\n          s = [];\n      var i = 0;\n      return this.Ee(t, function (r, o) {\n        if (o <= e) {\n          var _e21 = _this59.Ie(t, r).next(function (e) {\n            if (!e) // Our size accounting requires us to read all documents before\n              // removing them.\n              return i++, n.getEntry(t, r).next(function () {\n                return n.removeEntry(r), Oi(t).delete([0, Es(r.path)]);\n              });\n          });\n\n          s.push(_e21);\n        }\n      }).next(function () {\n        return js.waitFor(s);\n      }).next(function () {\n        return n.apply(t);\n      }).next(function () {\n        return i;\n      });\n    }\n  }, {\n    key: \"removeTarget\",\n    value: function removeTarget(t, e) {\n      var n = e.withSequenceNumber(t.currentSequenceNumber);\n      return this.db.getTargetCache().updateTargetData(t, n);\n    }\n  }, {\n    key: \"updateLimboDocument\",\n    value: function updateLimboDocument(t, e) {\n      return Ki(t, e);\n    }\n    /**\n     * Call provided function for each document in the cache that is 'orphaned'. Orphaned\n     * means not a part of any target, so the only entry in the target-document index for\n     * that document will be the sentinel row (targetId 0), which will also have the sequence\n     * number for the last time the document was accessed.\n     */\n\n  }, {\n    key: \"Ee\",\n    value: function Ee(t, e) {\n      var n = Oi(t);\n      var s,\n          i = X.T;\n      return n.Kt({\n        index: $s.documentTargetsIndex\n      }, function (_ref10, _ref11) {\n        var _ref12 = _slicedToArray(_ref10, 2),\n            t = _ref12[0],\n            n = _ref12[1];\n\n        var r = _ref11.path,\n            o = _ref11.sequenceNumber;\n        0 === t ? ( // if nextToReport is valid, report it, this is a new key so the\n        // last one must not be a member of any targets.\n        i !== X.T && e(new Pt(Rs(s)), i), // set nextToReport to be this sequence number. It's the next one we\n        // might report, if we don't find any targets for this document.\n        // Note that the sequence number must be defined when the targetId\n        // is 0.\n        i = o, s = r) : // set nextToReport to be invalid, we know we don't need to report\n        // this one since we found a target for it.\n        i = X.T;\n      }).next(function () {\n        // Since we report sequence numbers after getting to the next key, we\n        // need to check if the last key we iterated over was an orphaned\n        // document and report it.\n        i !== X.T && e(new Pt(Rs(s)), i);\n      });\n    }\n  }, {\n    key: \"getCacheSize\",\n    value: function getCacheSize(t) {\n      return this.db.getRemoteDocumentCache().getSize(t);\n    }\n  }]);\n\n  return qi;\n}();\n\nfunction Ki(t, e) {\n  return Oi(t).put(\n  /**\n  * @returns A value suitable for writing a sentinel row in the target-document\n  * store.\n  */\n  function (t, e) {\n    return new $s(0, Es(t.path), e);\n  }(e, t.currentSequenceNumber));\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A map implementation that uses objects as keys. Objects must have an\n * associated equals function and must be immutable. Entries in the map are\n * stored together with the key being produced from the mapKeyFn. This map\n * automatically handles collisions of keys.\n */\n\n\nvar ji = /*#__PURE__*/function () {\n  function ji(t, e) {\n    _classCallCheck(this, ji);\n\n    this.mapKeyFn = t, this.equalsFn = e,\n    /**\n     * The inner map for a key/value pair. Due to the possibility of collisions we\n     * keep a list of entries that we do a linear search through to find an actual\n     * match. Note that collisions should be rare, so we still expect near\n     * constant time lookups in practice.\n     */\n    this.inner = {};\n  }\n  /** Get a value for this key, or undefined if it does not exist. */\n\n\n  _createClass(ji, [{\n    key: \"get\",\n    value: function get(t) {\n      var e = this.mapKeyFn(t),\n          n = this.inner[e];\n\n      if (void 0 !== n) {\n        var _iterator24 = _createForOfIteratorHelper(n),\n            _step24;\n\n        try {\n          for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n            var _step24$value = _slicedToArray(_step24.value, 2),\n                _e22 = _step24$value[0],\n                s = _step24$value[1];\n\n            if (this.equalsFn(_e22, t)) return s;\n          }\n        } catch (err) {\n          _iterator24.e(err);\n        } finally {\n          _iterator24.f();\n        }\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(t) {\n      return void 0 !== this.get(t);\n    }\n    /** Put this key and value in the map. */\n\n  }, {\n    key: \"set\",\n    value: function set(t, e) {\n      var n = this.mapKeyFn(t),\n          s = this.inner[n];\n\n      if (void 0 !== s) {\n        for (var _n16 = 0; _n16 < s.length; _n16++) {\n          if (this.equalsFn(s[_n16][0], t)) return void (s[_n16] = [t, e]);\n        }\n\n        s.push([t, e]);\n      } else this.inner[n] = [[t, e]];\n    }\n    /**\n     * Remove this key from the map. Returns a boolean if anything was deleted.\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      var e = this.mapKeyFn(t),\n          n = this.inner[e];\n      if (void 0 === n) return !1;\n\n      for (var s = 0; s < n.length; s++) {\n        if (this.equalsFn(n[s][0], t)) return 1 === n.length ? delete this.inner[e] : n.splice(s, 1), !0;\n      }\n\n      return !1;\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(t) {\n      ct(this.inner, function (e, n) {\n        var _iterator25 = _createForOfIteratorHelper(n),\n            _step25;\n\n        try {\n          for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {\n            var _step25$value = _slicedToArray(_step25.value, 2),\n                _e23 = _step25$value[0],\n                s = _step25$value[1];\n\n            t(_e23, s);\n          }\n        } catch (err) {\n          _iterator25.e(err);\n        } finally {\n          _iterator25.f();\n        }\n      });\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return at(this.inner);\n    }\n  }]);\n\n  return ji;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An in-memory buffer of entries to be written to a RemoteDocumentCache.\n * It can be used to batch up a set of changes to be written to the cache, but\n * additionally supports reading entries back with the `getEntry()` method,\n * falling back to the underlying RemoteDocumentCache if no entry is\n * buffered.\n *\n * Entries added to the cache *must* be read first. This is to facilitate\n * calculating the size delta of the pending changes.\n *\n * PORTING NOTE: This class was implemented then removed from other platforms.\n * If byte-counting ends up being needed on the other platforms, consider\n * porting this class as part of that implementation work.\n */\n\n\nvar Qi = /*#__PURE__*/function () {\n  function Qi() {\n    _classCallCheck(this, Qi);\n\n    // A mapping of document key to the new cache entry that should be written (or null if any\n    // existing cache entry should be removed).\n    this.changes = new ji(function (t) {\n      return t.toString();\n    }, function (t, e) {\n      return t.isEqual(e);\n    }), this.changesApplied = !1;\n  }\n\n  _createClass(Qi, [{\n    key: \"getReadTime\",\n    value: function getReadTime(t) {\n      var e = this.changes.get(t);\n      return e ? e.readTime : rt.min();\n    }\n    /**\n     * Buffers a `RemoteDocumentCache.addEntry()` call.\n     *\n     * You can only modify documents that have already been retrieved via\n     * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).\n     */\n\n  }, {\n    key: \"addEntry\",\n    value: function addEntry(t, e) {\n      this.assertNotApplied(), this.changes.set(t.key, {\n        document: t,\n        readTime: e\n      });\n    }\n    /**\n     * Buffers a `RemoteDocumentCache.removeEntry()` call.\n     *\n     * You can only remove documents that have already been retrieved via\n     * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).\n     */\n\n  }, {\n    key: \"removeEntry\",\n    value: function removeEntry(t) {\n      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      this.assertNotApplied(), this.changes.set(t, {\n        document: Kt.newInvalidDocument(t),\n        readTime: e\n      });\n    }\n    /**\n     * Looks up an entry in the cache. The buffered changes will first be checked,\n     * and if no buffered change applies, this will forward to\n     * `RemoteDocumentCache.getEntry()`.\n     *\n     * @param transaction - The transaction in which to perform any persistence\n     *     operations.\n     * @param documentKey - The key of the entry to look up.\n     * @returns The cached document or an invalid document if we have nothing\n     * cached.\n     */\n\n  }, {\n    key: \"getEntry\",\n    value: function getEntry(t, e) {\n      this.assertNotApplied();\n      var n = this.changes.get(e);\n      return void 0 !== n ? js.resolve(n.document) : this.getFromCache(t, e);\n    }\n    /**\n     * Looks up several entries in the cache, forwarding to\n     * `RemoteDocumentCache.getEntry()`.\n     *\n     * @param transaction - The transaction in which to perform any persistence\n     *     operations.\n     * @param documentKeys - The keys of the entries to look up.\n     * @returns A map of cached documents, indexed by key. If an entry cannot be\n     *     found, the corresponding key will be mapped to an invalid document.\n     */\n\n  }, {\n    key: \"getEntries\",\n    value: function getEntries(t, e) {\n      return this.getAllFromCache(t, e);\n    }\n    /**\n     * Applies buffered changes to the underlying RemoteDocumentCache, using\n     * the provided transaction.\n     */\n\n  }, {\n    key: \"apply\",\n    value: function apply(t) {\n      return this.assertNotApplied(), this.changesApplied = !0, this.applyChanges(t);\n    }\n    /** Helper to assert this.changes is not null  */\n\n  }, {\n    key: \"assertNotApplied\",\n    value: function assertNotApplied() {}\n  }]);\n\n  return Qi;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The RemoteDocumentCache for IndexedDb. To construct, invoke\n * `newIndexedDbRemoteDocumentCache()`.\n */\n\n\nvar Wi = /*#__PURE__*/function () {\n  /**\n   * @param serializer - The document serializer.\n   * @param indexManager - The query indexes that need to be maintained.\n   */\n  function Wi(t, e) {\n    _classCallCheck(this, Wi);\n\n    this.N = t, this.Ht = e;\n  }\n  /**\n   * Adds the supplied entries to the cache.\n   *\n   * All calls of `addEntry` are required to go through the RemoteDocumentChangeBuffer\n   * returned by `newChangeBuffer()` to ensure proper accounting of metadata.\n   */\n\n\n  _createClass(Wi, [{\n    key: \"addEntry\",\n    value: function addEntry(t, e, n) {\n      return Hi(t).put(Ji(e), n);\n    }\n    /**\n     * Removes a document from the cache.\n     *\n     * All calls of `removeEntry`  are required to go through the RemoteDocumentChangeBuffer\n     * returned by `newChangeBuffer()` to ensure proper accounting of metadata.\n     */\n\n  }, {\n    key: \"removeEntry\",\n    value: function removeEntry(t, e) {\n      var n = Hi(t),\n          s = Ji(e);\n      return n.delete(s);\n    }\n    /**\n     * Updates the current cache size.\n     *\n     * Callers to `addEntry()` and `removeEntry()` *must* call this afterwards to update the\n     * cache's metadata.\n     */\n\n  }, {\n    key: \"updateMetadata\",\n    value: function updateMetadata(t, e) {\n      var _this60 = this;\n\n      return this.getMetadata(t).next(function (n) {\n        return n.byteSize += e, _this60.Ae(t, n);\n      });\n    }\n  }, {\n    key: \"getEntry\",\n    value: function getEntry(t, e) {\n      var _this61 = this;\n\n      return Hi(t).get(Ji(e)).next(function (t) {\n        return _this61.Re(e, t);\n      });\n    }\n    /**\n     * Looks up an entry in the cache.\n     *\n     * @param documentKey - The key of the entry to look up.\n     * @returns The cached document entry and its size.\n     */\n\n  }, {\n    key: \"be\",\n    value: function be(t, e) {\n      var _this62 = this;\n\n      return Hi(t).get(Ji(e)).next(function (t) {\n        return {\n          document: _this62.Re(e, t),\n          size: Pi(t)\n        };\n      });\n    }\n  }, {\n    key: \"getEntries\",\n    value: function getEntries(t, e) {\n      var _this63 = this;\n\n      var n = Tn();\n      return this.Pe(t, e, function (t, e) {\n        var s = _this63.Re(t, e);\n\n        n = n.insert(t, s);\n      }).next(function () {\n        return n;\n      });\n    }\n    /**\n     * Looks up several entries in the cache.\n     *\n     * @param documentKeys - The set of keys entries to look up.\n     * @returns A map of documents indexed by key and a map of sizes indexed by\n     *     key (zero if the document does not exist).\n     */\n\n  }, {\n    key: \"ve\",\n    value: function ve(t, e) {\n      var _this64 = this;\n\n      var n = Tn(),\n          s = new wn(Pt.comparator);\n      return this.Pe(t, e, function (t, e) {\n        var i = _this64.Re(t, e);\n\n        n = n.insert(t, i), s = s.insert(t, Pi(e));\n      }).next(function () {\n        return {\n          documents: n,\n          Ve: s\n        };\n      });\n    }\n  }, {\n    key: \"Pe\",\n    value: function Pe(t, e, n) {\n      if (e.isEmpty()) return js.resolve();\n      var s = IDBKeyRange.bound(e.first().path.toArray(), e.last().path.toArray()),\n          i = e.getIterator();\n      var r = i.getNext();\n      return Hi(t).Kt({\n        range: s\n      }, function (t, e, s) {\n        var o = Pt.fromSegments(t); // Go through keys not found in cache.\n\n        for (; r && Pt.comparator(r, o) < 0;) {\n          n(r, null), r = i.getNext();\n        }\n\n        r && r.isEqual(o) && ( // Key found in cache.\n        n(r, e), r = i.hasNext() ? i.getNext() : null), // Skip to the next key (if there is one).\n        r ? s.Mt(r.path.toArray()) : s.done();\n      }).next(function () {\n        // The rest of the keys are not in the cache. One case where `iterate`\n        // above won't go through them is when the cache is empty.\n        for (; r;) {\n          n(r, null), r = i.hasNext() ? i.getNext() : null;\n        }\n      });\n    }\n  }, {\n    key: \"getDocumentsMatchingQuery\",\n    value: function getDocumentsMatchingQuery(t, e, n) {\n      var _this65 = this;\n\n      var s = Tn();\n      var i = e.path.length + 1,\n          r = {};\n\n      if (n.isEqual(rt.min())) {\n        // Documents are ordered by key, so we can use a prefix scan to narrow\n        // down the documents we need to match the query against.\n        var _t41 = e.path.toArray();\n\n        r.range = IDBKeyRange.lowerBound(_t41);\n      } else {\n        // Execute an index-free query and filter by read time. This is safe\n        // since all document changes to queries that have a\n        // lastLimboFreeSnapshotVersion (`sinceReadTime`) have a read time set.\n        var _t42 = e.path.toArray(),\n            _s12 = ai(n);\n\n        r.range = IDBKeyRange.lowerBound([_t42, _s12],\n        /* open= */\n        !0), r.index = Ns.collectionReadTimeIndex;\n      }\n\n      return Hi(t).Kt(r, function (t, n, r) {\n        // The query is actually returning any path that starts with the query\n        // path prefix which may include documents in subcollections. For\n        // example, a query on 'rooms' will return rooms/abc/messages/xyx but we\n        // shouldn't match it. Fix this by discarding rows with document keys\n        // more than one segment longer than the query path.\n        if (t.length !== i) return;\n        var o = oi(_this65.N, n);\n        e.path.isPrefixOf(o.key.path) ? Pe(e, o) && (s = s.insert(o.key, o)) : r.done();\n      }).next(function () {\n        return s;\n      });\n    }\n  }, {\n    key: \"newChangeBuffer\",\n    value: function newChangeBuffer(t) {\n      return new Gi(this, !!t && t.trackRemovals);\n    }\n  }, {\n    key: \"getSize\",\n    value: function getSize(t) {\n      return this.getMetadata(t).next(function (t) {\n        return t.byteSize;\n      });\n    }\n  }, {\n    key: \"getMetadata\",\n    value: function getMetadata(t) {\n      return zi(t).get(xs.key).next(function (t) {\n        return B(!!t), t;\n      });\n    }\n  }, {\n    key: \"Ae\",\n    value: function Ae(t, e) {\n      return zi(t).put(xs.key, e);\n    }\n    /**\n     * Decodes `remoteDoc` and returns the document (or null, if the document\n     * corresponds to the format used for sentinel deletes).\n     */\n\n  }, {\n    key: \"Re\",\n    value: function Re(t, e) {\n      if (e) {\n        var _t43 = oi(this.N, e); // Whether the document is a sentinel removal and should only be used in the\n        // `getNewDocumentChanges()`\n\n\n        if (!(_t43.isNoDocument() && _t43.version.isEqual(rt.min()))) return _t43;\n      }\n\n      return Kt.newInvalidDocument(t);\n    }\n  }]);\n\n  return Wi;\n}();\n/**\n * Creates a new IndexedDbRemoteDocumentCache.\n *\n * @param serializer - The document serializer.\n * @param indexManager - The query indexes that need to be maintained.\n */\n\n/**\n * Handles the details of adding and updating documents in the IndexedDbRemoteDocumentCache.\n *\n * Unlike the MemoryRemoteDocumentChangeBuffer, the IndexedDb implementation computes the size\n * delta for all submitted changes. This avoids having to re-read all documents from IndexedDb\n * when we apply the changes.\n */\n\n\nvar Gi = /*#__PURE__*/function (_Qi) {\n  _inherits(Gi, _Qi);\n\n  var _super22 = _createSuper(Gi);\n\n  /**\n   * @param documentCache - The IndexedDbRemoteDocumentCache to apply the changes to.\n   * @param trackRemovals - Whether to create sentinel deletes that can be tracked by\n   * `getNewDocumentChanges()`.\n   */\n  function Gi(t, e) {\n    var _this66;\n\n    _classCallCheck(this, Gi);\n\n    _this66 = _super22.call(this), _this66.Se = t, _this66.trackRemovals = e, // A map of document sizes prior to applying the changes in this buffer.\n    _this66.De = new ji(function (t) {\n      return t.toString();\n    }, function (t, e) {\n      return t.isEqual(e);\n    });\n    return _this66;\n  }\n\n  _createClass(Gi, [{\n    key: \"applyChanges\",\n    value: function applyChanges(t) {\n      var _this67 = this;\n\n      var e = [];\n      var n = 0,\n          s = new gn(function (t, e) {\n        return et(t.canonicalString(), e.canonicalString());\n      });\n      return this.changes.forEach(function (i, r) {\n        var o = _this67.De.get(i);\n\n        if (r.document.isValidDocument()) {\n          var c = ci(_this67.Se.N, r.document, _this67.getReadTime(i));\n          s = s.add(i.path.popLast());\n          var a = Pi(c);\n          n += a - o, e.push(_this67.Se.addEntry(t, i, c));\n        } else if (n -= o, _this67.trackRemovals) {\n          // In order to track removals, we store a \"sentinel delete\" in the\n          // RemoteDocumentCache. This entry is represented by a NoDocument\n          // with a version of 0 and ignored by `maybeDecodeDocument()` but\n          // preserved in `getNewDocumentChanges()`.\n          var _n17 = ci(_this67.Se.N, Kt.newNoDocument(i, rt.min()), _this67.getReadTime(i));\n\n          e.push(_this67.Se.addEntry(t, i, _n17));\n        } else e.push(_this67.Se.removeEntry(t, i));\n      }), s.forEach(function (n) {\n        e.push(_this67.Se.Ht.addToCollectionParentIndex(t, n));\n      }), e.push(this.Se.updateMetadata(t, n)), js.waitFor(e);\n    }\n  }, {\n    key: \"getFromCache\",\n    value: function getFromCache(t, e) {\n      var _this68 = this;\n\n      // Record the size of everything we load from the cache so we can compute a delta later.\n      return this.Se.be(t, e).next(function (t) {\n        return _this68.De.set(e, t.size), t.document;\n      });\n    }\n  }, {\n    key: \"getAllFromCache\",\n    value: function getAllFromCache(t, e) {\n      var _this69 = this;\n\n      // Record the size of everything we load from the cache so we can compute\n      // a delta later.\n      return this.Se.ve(t, e).next(function (_ref13) {\n        var t = _ref13.documents,\n            e = _ref13.Ve;\n        return (// Note: `getAllFromCache` returns two maps instead of a single map from\n          // keys to `DocumentSizeEntry`s. This is to allow returning the\n          // `MutableDocumentMap` directly, without a conversion.\n          e.forEach(function (t, e) {\n            _this69.De.set(t, e);\n          }), t\n        );\n      });\n    }\n  }]);\n\n  return Gi;\n}(Qi);\n\nfunction zi(t) {\n  return ei(t, xs.store);\n}\n/**\n * Helper to get a typed SimpleDbStore for the remoteDocuments object store.\n */\n\n\nfunction Hi(t) {\n  return ei(t, Ns.store);\n}\n\nfunction Ji(t) {\n  return t.path.toArray();\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Performs database creation and schema upgrades. */\n\n\nvar Yi = /*#__PURE__*/function () {\n  function Yi(t) {\n    _classCallCheck(this, Yi);\n\n    this.N = t;\n  }\n  /**\n   * Performs database creation and schema upgrades.\n   *\n   * Note that in production, this method is only ever used to upgrade the schema\n   * to SCHEMA_VERSION. Different values of toVersion are only used for testing\n   * and local feature development.\n   */\n\n\n  _createClass(Yi, [{\n    key: \"Ct\",\n    value: function Ct(t, e, n, s) {\n      var _this70 = this;\n\n      B(n < s && n >= 0 && s <= 11);\n      var i = new Qs(\"createOrUpgrade\", e);\n      n < 1 && s >= 1 && (function (t) {\n        t.createObjectStore(Ps.store);\n      }(t), function (t) {\n        t.createObjectStore(vs.store, {\n          keyPath: vs.keyPath\n        });\n        t.createObjectStore(Vs.store, {\n          keyPath: Vs.keyPath,\n          autoIncrement: !0\n        }).createIndex(Vs.userMutationsIndex, Vs.userMutationsKeyPath, {\n          unique: !0\n        }), t.createObjectStore(Ss.store);\n      }\n      /**\n      * Upgrade function to migrate the 'mutations' store from V1 to V3. Loads\n      * and rewrites all data.\n      */\n      (t), Xi(t), function (t) {\n        t.createObjectStore(Ns.store);\n      }(t)); // Migration 2 to populate the targetGlobal object no longer needed since\n      // migration 3 unconditionally clears it.\n\n      var r = js.resolve();\n      return n < 3 && s >= 3 && ( // Brand new clients don't need to drop and recreate--only clients that\n      // potentially have corrupt data.\n      0 !== n && (!function (t) {\n        t.deleteObjectStore($s.store), t.deleteObjectStore(ks.store), t.deleteObjectStore(Os.store);\n      }(t), Xi(t)), r = r.next(function () {\n        return (\n          /**\n          * Creates the target global singleton row.\n          *\n          * @param txn - The version upgrade transaction for indexeddb\n          */\n          function (t) {\n            var e = t.store(Os.store),\n                n = new Os(\n            /*highestTargetId=*/\n            0,\n            /*lastListenSequenceNumber=*/\n            0, rt.min().toTimestamp(),\n            /*targetCount=*/\n            0);\n            return e.put(Os.key, n);\n          }\n          /**\n          * Creates indices on the RemoteDocuments store used for both multi-tab\n          * and Index-Free queries.\n          */\n          (i)\n        );\n      })), n < 4 && s >= 4 && (0 !== n && ( // Schema version 3 uses auto-generated keys to generate globally unique\n      // mutation batch IDs (this was previously ensured internally by the\n      // client). To migrate to the new schema, we have to read all mutations\n      // and write them back out. We preserve the existing batch IDs to guarantee\n      // consistency with other object stores. Any further mutation batch IDs will\n      // be auto-generated.\n      r = r.next(function () {\n        return function (t, e) {\n          return e.store(Vs.store).Lt().next(function (n) {\n            t.deleteObjectStore(Vs.store);\n            t.createObjectStore(Vs.store, {\n              keyPath: Vs.keyPath,\n              autoIncrement: !0\n            }).createIndex(Vs.userMutationsIndex, Vs.userMutationsKeyPath, {\n              unique: !0\n            });\n            var s = e.store(Vs.store),\n                i = n.map(function (t) {\n              return s.put(t);\n            });\n            return js.waitFor(i);\n          });\n        }(t, i);\n      })), r = r.next(function () {\n        !function (t) {\n          t.createObjectStore(Ms.store, {\n            keyPath: Ms.keyPath\n          });\n        }(t);\n      })), n < 5 && s >= 5 && (r = r.next(function () {\n        return _this70.Ce(i);\n      })), n < 6 && s >= 6 && (r = r.next(function () {\n        return function (t) {\n          t.createObjectStore(xs.store);\n        }(t), _this70.Ne(i);\n      })), n < 7 && s >= 7 && (r = r.next(function () {\n        return _this70.xe(i);\n      })), n < 8 && s >= 8 && (r = r.next(function () {\n        return _this70.ke(t, i);\n      })), n < 9 && s >= 9 && (r = r.next(function () {\n        // Multi-Tab used to manage its own changelog, but this has been moved\n        // to the DbRemoteDocument object store itself. Since the previous change\n        // log only contained transient data, we can drop its object store.\n        !function (t) {\n          t.objectStoreNames.contains(\"remoteDocumentChanges\") && t.deleteObjectStore(\"remoteDocumentChanges\");\n        }(t), function (t) {\n          var e = t.objectStore(Ns.store);\n          e.createIndex(Ns.readTimeIndex, Ns.readTimeIndexPath, {\n            unique: !1\n          }), e.createIndex(Ns.collectionReadTimeIndex, Ns.collectionReadTimeIndexPath, {\n            unique: !1\n          });\n        }(e);\n      })), n < 10 && s >= 10 && (r = r.next(function () {\n        return _this70.$e(i);\n      })), n < 11 && s >= 11 && (r = r.next(function () {\n        !function (t) {\n          t.createObjectStore(Ls.store, {\n            keyPath: Ls.keyPath\n          });\n        }(t), function (t) {\n          t.createObjectStore(Bs.store, {\n            keyPath: Bs.keyPath\n          });\n        }\n        /**\n        * @license\n        * Copyright 2017 Google LLC\n        *\n        * Licensed under the Apache License, Version 2.0 (the \"License\");\n        * you may not use this file except in compliance with the License.\n        * You may obtain a copy of the License at\n        *\n        *   http://www.apache.org/licenses/LICENSE-2.0\n        *\n        * Unless required by applicable law or agreed to in writing, software\n        * distributed under the License is distributed on an \"AS IS\" BASIS,\n        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n        * See the License for the specific language governing permissions and\n        * limitations under the License.\n        */\n        (t);\n      })), r;\n    }\n  }, {\n    key: \"Ne\",\n    value: function Ne(t) {\n      var e = 0;\n      return t.store(Ns.store).Kt(function (t, n) {\n        e += Pi(n);\n      }).next(function () {\n        var n = new xs(e);\n        return t.store(xs.store).put(xs.key, n);\n      });\n    }\n  }, {\n    key: \"Ce\",\n    value: function Ce(t) {\n      var _this71 = this;\n\n      var e = t.store(vs.store),\n          n = t.store(Vs.store);\n      return e.Lt().next(function (e) {\n        return js.forEach(e, function (e) {\n          var s = IDBKeyRange.bound([e.userId, -1], [e.userId, e.lastAcknowledgedBatchId]);\n          return n.Lt(Vs.userMutationsIndex, s).next(function (n) {\n            return js.forEach(n, function (n) {\n              B(n.userId === e.userId);\n              var s = fi(_this71.N, n);\n              return bi(t, e.userId, s).next(function () {});\n            });\n          });\n        });\n      });\n    }\n    /**\n     * Ensures that every document in the remote document cache has a corresponding sentinel row\n     * with a sequence number. Missing rows are given the most recently used sequence number.\n     */\n\n  }, {\n    key: \"xe\",\n    value: function xe(t) {\n      var e = t.store($s.store),\n          n = t.store(Ns.store);\n      return t.store(Os.store).get(Os.key).next(function (t) {\n        var s = [];\n        return n.Kt(function (n, i) {\n          var r = new ht(n),\n              o = function (t) {\n            return [0, Es(t)];\n          }(r);\n\n          s.push(e.get(o).next(function (n) {\n            return n ? js.resolve() : function (n) {\n              return e.put(new $s(0, Es(n), t.highestListenSequenceNumber));\n            }(r);\n          }));\n        }).next(function () {\n          return js.waitFor(s);\n        });\n      });\n    }\n  }, {\n    key: \"ke\",\n    value: function ke(t, e) {\n      // Create the index.\n      t.createObjectStore(Fs.store, {\n        keyPath: Fs.keyPath\n      });\n\n      var n = e.store(Fs.store),\n          s = new Ti(),\n          i = function i(t) {\n        if (s.add(t)) {\n          var _e24 = t.lastSegment(),\n              _s13 = t.popLast();\n\n          return n.put({\n            collectionId: _e24,\n            parent: Es(_s13)\n          });\n        }\n      }; // Helper to add an index entry iff we haven't already written it.\n      // Index existing remote documents.\n\n\n      return e.store(Ns.store).Kt({\n        qt: !0\n      }, function (t, e) {\n        var n = new ht(t);\n        return i(n.popLast());\n      }).next(function () {\n        return e.store(Ss.store).Kt({\n          qt: !0\n        }, function (_ref14, s) {\n          var _ref15 = _slicedToArray(_ref14, 3),\n              t = _ref15[0],\n              e = _ref15[1],\n              n = _ref15[2];\n\n          var r = Rs(e);\n          return i(r.popLast());\n        });\n      });\n    }\n  }, {\n    key: \"$e\",\n    value: function $e(t) {\n      var _this72 = this;\n\n      var e = t.store(ks.store);\n      return e.Kt(function (t, n) {\n        var s = di(n),\n            i = wi(_this72.N, s);\n        return e.put(i);\n      });\n    }\n  }]);\n\n  return Yi;\n}();\n\nfunction Xi(t) {\n  t.createObjectStore($s.store, {\n    keyPath: $s.keyPath\n  }).createIndex($s.documentTargetsIndex, $s.documentTargetsKeyPath, {\n    unique: !0\n  }); // NOTE: This is unique only because the TargetId is the suffix.\n\n  t.createObjectStore(ks.store, {\n    keyPath: ks.keyPath\n  }).createIndex(ks.queryTargetsIndexName, ks.queryTargetsKeyPath, {\n    unique: !0\n  }), t.createObjectStore(Os.store);\n}\n\nvar Zi = \"Failed to obtain exclusive access to the persistence layer. To allow shared access, multi-tab synchronization has to be enabled in all tabs. If you are using `experimentalForceOwningTab:true`, make sure that only one tab has persistence enabled at any given time.\";\n/**\n * Oldest acceptable age in milliseconds for client metadata before the client\n * is considered inactive and its associated data is garbage collected.\n */\n\n/**\n * An IndexedDB-backed instance of Persistence. Data is stored persistently\n * across sessions.\n *\n * On Web only, the Firestore SDKs support shared access to its persistence\n * layer. This allows multiple browser tabs to read and write to IndexedDb and\n * to synchronize state even without network connectivity. Shared access is\n * currently optional and not enabled unless all clients invoke\n * `enablePersistence()` with `{synchronizeTabs:true}`.\n *\n * In multi-tab mode, if multiple clients are active at the same time, the SDK\n * will designate one client as the “primary client”. An effort is made to pick\n * a visible, network-connected and active client, and this client is\n * responsible for letting other clients know about its presence. The primary\n * client writes a unique client-generated identifier (the client ID) to\n * IndexedDb’s “owner” store every 4 seconds. If the primary client fails to\n * update this entry, another client can acquire the lease and take over as\n * primary.\n *\n * Some persistence operations in the SDK are designated as primary-client only\n * operations. This includes the acknowledgment of mutations and all updates of\n * remote documents. The effects of these operations are written to persistence\n * and then broadcast to other tabs via LocalStorage (see\n * `WebStorageSharedClientState`), which then refresh their state from\n * persistence.\n *\n * Similarly, the primary client listens to notifications sent by secondary\n * clients to discover persistence changes written by secondary clients, such as\n * the addition of new mutations and query targets.\n *\n * If multi-tab is not enabled and another tab already obtained the primary\n * lease, IndexedDbPersistence enters a failed state and all subsequent\n * operations will automatically fail.\n *\n * Additionally, there is an optimization so that when a tab is closed, the\n * primary lease is released immediately (this is especially important to make\n * sure that a refreshed tab is able to immediately re-acquire the primary\n * lease). Unfortunately, IndexedDB cannot be reliably used in window.unload\n * since it is an asynchronous API. So in addition to attempting to give up the\n * lease, the leaseholder writes its client ID to a \"zombiedClient\" entry in\n * LocalStorage which acts as an indicator that another tab should go ahead and\n * take the primary lease immediately regardless of the current lease timestamp.\n *\n * TODO(b/114226234): Remove `synchronizeTabs` section when multi-tab is no\n * longer optional.\n */\n\nvar tr = /*#__PURE__*/function () {\n  function tr(\n  /**\n   * Whether to synchronize the in-memory state of multiple tabs and share\n   * access to local persistence.\n   */\n  t, e, n, s, i, r, o, c, a,\n  /**\n   * If set to true, forcefully obtains database access. Existing tabs will\n   * no longer be able to access IndexedDB.\n   */\n  u) {\n    _classCallCheck(this, tr);\n\n    if (this.allowTabSynchronization = t, this.persistenceKey = e, this.clientId = n, this.Oe = i, this.window = r, this.document = o, this.Fe = a, this.Me = u, this.Le = null, this.Be = !1, this.isPrimary = !1, this.networkEnabled = !0,\n    /** Our window.unload handler, if registered. */\n    this.Ue = null, this.inForeground = !1,\n    /** Our 'visibilitychange' listener if registered. */\n    this.qe = null,\n    /** The client metadata refresh task. */\n    this.Ke = null,\n    /** The last time we garbage collected the client metadata object store. */\n    this.je = Number.NEGATIVE_INFINITY,\n    /** A listener to notify on primary state changes. */\n    this.Qe = function (t) {\n      return Promise.resolve();\n    }, !tr.bt()) throw new j(K.UNIMPLEMENTED, \"This platform is either missing IndexedDB or is known to have an incomplete implementation. Offline persistence has been disabled.\");\n    this.referenceDelegate = new qi(this, s), this.We = e + \"main\", this.N = new ri(c), this.Ge = new Ws(this.We, 11, new Yi(this.N)), this.ze = new xi(this.referenceDelegate, this.N), this.Ht = new Ei(), this.He = function (t, e) {\n      return new Wi(t, e);\n    }\n    /**\n    * Returns the set of documents that have changed since the specified read\n    * time.\n    */\n    // PORTING NOTE: This is only used for multi-tab synchronization.\n    (this.N, this.Ht), this.Je = new mi(), this.window && this.window.localStorage ? this.Ye = this.window.localStorage : (this.Ye = null, !1 === u && O(\"IndexedDbPersistence\", \"LocalStorage is unavailable. As a result, persistence may not work reliably. In particular enablePersistence() could fail immediately after refreshing the page.\"));\n  }\n  /**\n   * Attempt to start IndexedDb persistence.\n   *\n   * @returns Whether persistence was enabled.\n   */\n\n\n  _createClass(tr, [{\n    key: \"start\",\n    value: function start() {\n      var _this73 = this;\n\n      // NOTE: This is expected to fail sometimes (in the case of another tab\n      // already having the persistence lock), so it's the first thing we should\n      // do.\n      return this.Xe().then(function () {\n        if (!_this73.isPrimary && !_this73.allowTabSynchronization) // Fail `start()` if `synchronizeTabs` is disabled and we cannot\n          // obtain the primary lease.\n          throw new j(K.FAILED_PRECONDITION, Zi);\n        return _this73.Ze(), _this73.tn(), _this73.en(), _this73.runTransaction(\"getHighestListenSequenceNumber\", \"readonly\", function (t) {\n          return _this73.ze.getHighestSequenceNumber(t);\n        });\n      }).then(function (t) {\n        _this73.Le = new X(t, _this73.Fe);\n      }).then(function () {\n        _this73.Be = !0;\n      }).catch(function (t) {\n        return _this73.Ge && _this73.Ge.close(), Promise.reject(t);\n      });\n    }\n    /**\n     * Registers a listener that gets called when the primary state of the\n     * instance changes. Upon registering, this listener is invoked immediately\n     * with the current primary state.\n     *\n     * PORTING NOTE: This is only used for Web multi-tab.\n     */\n\n  }, {\n    key: \"nn\",\n    value: function nn(t) {\n      var _this74 = this;\n\n      return this.Qe = /*#__PURE__*/function () {\n        var _ref16 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(e) {\n          return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  if (!_this74.started) {\n                    _context6.next = 2;\n                    break;\n                  }\n\n                  return _context6.abrupt(\"return\", t(e));\n\n                case 2:\n                case \"end\":\n                  return _context6.stop();\n              }\n            }\n          }, _callee6);\n        }));\n\n        return function (_x7) {\n          return _ref16.apply(this, arguments);\n        };\n      }(), t(this.isPrimary);\n    }\n    /**\n     * Registers a listener that gets called when the database receives a\n     * version change event indicating that it has deleted.\n     *\n     * PORTING NOTE: This is only used for Web multi-tab.\n     */\n\n  }, {\n    key: \"setDatabaseDeletedListener\",\n    value: function setDatabaseDeletedListener(t) {\n      this.Ge.xt( /*#__PURE__*/function () {\n        var _ref17 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(e) {\n          return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  _context7.t0 = null === e.newVersion;\n\n                  if (!_context7.t0) {\n                    _context7.next = 4;\n                    break;\n                  }\n\n                  _context7.next = 4;\n                  return t();\n\n                case 4:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7);\n        }));\n\n        return function (_x8) {\n          return _ref17.apply(this, arguments);\n        };\n      }());\n    }\n    /**\n     * Adjusts the current network state in the client's metadata, potentially\n     * affecting the primary lease.\n     *\n     * PORTING NOTE: This is only used for Web multi-tab.\n     */\n\n  }, {\n    key: \"setNetworkEnabled\",\n    value: function setNetworkEnabled(t) {\n      var _this75 = this;\n\n      this.networkEnabled !== t && (this.networkEnabled = t, // Schedule a primary lease refresh for immediate execution. The eventual\n      // lease update will be propagated via `primaryStateListener`.\n      this.Oe.enqueueAndForget( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.t0 = _this75.started;\n\n                if (!_context8.t0) {\n                  _context8.next = 4;\n                  break;\n                }\n\n                _context8.next = 4;\n                return _this75.Xe();\n\n              case 4:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }))));\n    }\n    /**\n     * Updates the client metadata in IndexedDb and attempts to either obtain or\n     * extend the primary lease for the local client. Asynchronously notifies the\n     * primary state listener if the client either newly obtained or released its\n     * primary lease.\n     */\n\n  }, {\n    key: \"Xe\",\n    value: function Xe() {\n      var _this76 = this;\n\n      return this.runTransaction(\"updateClientMetadataAndTryBecomePrimary\", \"readwrite\", function (t) {\n        return nr(t).put(new Ms(_this76.clientId, Date.now(), _this76.networkEnabled, _this76.inForeground)).next(function () {\n          if (_this76.isPrimary) return _this76.sn(t).next(function (t) {\n            t || (_this76.isPrimary = !1, _this76.Oe.enqueueRetryable(function () {\n              return _this76.Qe(!1);\n            }));\n          });\n        }).next(function () {\n          return _this76.rn(t);\n        }).next(function (e) {\n          return _this76.isPrimary && !e ? _this76.on(t).next(function () {\n            return !1;\n          }) : !!e && _this76.cn(t).next(function () {\n            return !0;\n          });\n        });\n      }).catch(function (t) {\n        if (Hs(t)) // Proceed with the existing state. Any subsequent access to\n          // IndexedDB will verify the lease.\n          return $(\"IndexedDbPersistence\", \"Failed to extend owner lease: \", t), _this76.isPrimary;\n        if (!_this76.allowTabSynchronization) throw t;\n        return $(\"IndexedDbPersistence\", \"Releasing owner lease after error during lease refresh\", t),\n        /* isPrimary= */\n        !1;\n      }).then(function (t) {\n        _this76.isPrimary !== t && _this76.Oe.enqueueRetryable(function () {\n          return _this76.Qe(t);\n        }), _this76.isPrimary = t;\n      });\n    }\n  }, {\n    key: \"sn\",\n    value: function sn(t) {\n      var _this77 = this;\n\n      return er(t).get(Ps.key).next(function (t) {\n        return js.resolve(_this77.an(t));\n      });\n    }\n  }, {\n    key: \"un\",\n    value: function un(t) {\n      return nr(t).delete(this.clientId);\n    }\n    /**\n     * If the garbage collection threshold has passed, prunes the\n     * RemoteDocumentChanges and the ClientMetadata store based on the last update\n     * time of all clients.\n     */\n\n  }, {\n    key: \"hn\",\n    value: function () {\n      var _hn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        var _this78 = this;\n\n        var t, _iterator26, _step26, e;\n\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                if (!(this.isPrimary && !this.ln(this.je, 18e5))) {\n                  _context9.next = 6;\n                  break;\n                }\n\n                this.je = Date.now();\n                _context9.next = 4;\n                return this.runTransaction(\"maybeGarbageCollectMultiClientState\", \"readwrite-primary\", function (t) {\n                  var e = ei(t, Ms.store);\n                  return e.Lt().next(function (t) {\n                    var n = _this78.fn(t, 18e5),\n                        s = t.filter(function (t) {\n                      return -1 === n.indexOf(t);\n                    }); // Delete metadata for clients that are no longer considered active.\n\n\n                    // Delete metadata for clients that are no longer considered active.\n                    return js.forEach(s, function (t) {\n                      return e.delete(t.clientId);\n                    }).next(function () {\n                      return s;\n                    });\n                  });\n                }).catch(function () {\n                  return [];\n                });\n\n              case 4:\n                t = _context9.sent;\n\n                // Delete potential leftover entries that may continue to mark the\n                // inactive clients as zombied in LocalStorage.\n                // Ideally we'd delete the IndexedDb and LocalStorage zombie entries for\n                // the client atomically, but we can't. So we opt to delete the IndexedDb\n                // entries first to avoid potentially reviving a zombied client.\n                if (this.Ye) {\n                  _iterator26 = _createForOfIteratorHelper(t);\n\n                  try {\n                    for (_iterator26.s(); !(_step26 = _iterator26.n()).done;) {\n                      e = _step26.value;\n                      this.Ye.removeItem(this.dn(e.clientId));\n                    }\n                  } catch (err) {\n                    _iterator26.e(err);\n                  } finally {\n                    _iterator26.f();\n                  }\n                }\n\n              case 6:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function hn() {\n        return _hn.apply(this, arguments);\n      }\n\n      return hn;\n    }()\n    /**\n     * Schedules a recurring timer to update the client metadata and to either\n     * extend or acquire the primary lease if the client is eligible.\n     */\n\n  }, {\n    key: \"en\",\n    value: function en() {\n      var _this79 = this;\n\n      this.Ke = this.Oe.enqueueAfterDelay(\"client_metadata_refresh\"\n      /* ClientMetadataRefresh */\n      , 4e3, function () {\n        return _this79.Xe().then(function () {\n          return _this79.hn();\n        }).then(function () {\n          return _this79.en();\n        });\n      });\n    }\n    /** Checks whether `client` is the local client. */\n\n  }, {\n    key: \"an\",\n    value: function an(t) {\n      return !!t && t.ownerId === this.clientId;\n    }\n    /**\n     * Evaluate the state of all active clients and determine whether the local\n     * client is or can act as the holder of the primary lease. Returns whether\n     * the client is eligible for the lease, but does not actually acquire it.\n     * May return 'false' even if there is no active leaseholder and another\n     * (foreground) client should become leaseholder instead.\n     */\n\n  }, {\n    key: \"rn\",\n    value: function rn(t) {\n      var _this80 = this;\n\n      if (this.Me) return js.resolve(!0);\n      return er(t).get(Ps.key).next(function (e) {\n        // A client is eligible for the primary lease if:\n        // - its network is enabled and the client's tab is in the foreground.\n        // - its network is enabled and no other client's tab is in the\n        //   foreground.\n        // - every clients network is disabled and the client's tab is in the\n        //   foreground.\n        // - every clients network is disabled and no other client's tab is in\n        //   the foreground.\n        // - the `forceOwningTab` setting was passed in.\n        if (null !== e && _this80.ln(e.leaseTimestampMs, 5e3) && !_this80.wn(e.ownerId)) {\n          if (_this80.an(e) && _this80.networkEnabled) return !0;\n\n          if (!_this80.an(e)) {\n            if (!e.allowTabSynchronization) // Fail the `canActAsPrimary` check if the current leaseholder has\n              // not opted into multi-tab synchronization. If this happens at\n              // client startup, we reject the Promise returned by\n              // `enablePersistence()` and the user can continue to use Firestore\n              // with in-memory persistence.\n              // If this fails during a lease refresh, we will instead block the\n              // AsyncQueue from executing further operations. Note that this is\n              // acceptable since mixing & matching different `synchronizeTabs`\n              // settings is not supported.\n              // TODO(b/114226234): Remove this check when `synchronizeTabs` can\n              // no longer be turned off.\n              throw new j(K.FAILED_PRECONDITION, Zi);\n            return !1;\n          }\n        }\n\n        return !(!_this80.networkEnabled || !_this80.inForeground) || nr(t).Lt().next(function (t) {\n          return void 0 === _this80.fn(t, 5e3).find(function (t) {\n            if (_this80.clientId !== t.clientId) {\n              var _e25 = !_this80.networkEnabled && t.networkEnabled,\n                  n = !_this80.inForeground && t.inForeground,\n                  s = _this80.networkEnabled === t.networkEnabled;\n\n              if (_e25 || n && s) return !0;\n            }\n\n            return !1;\n          });\n        });\n      }).next(function (t) {\n        return _this80.isPrimary !== t && $(\"IndexedDbPersistence\", \"Client \".concat(t ? \"is\" : \"is not\", \" eligible for a primary lease.\")), t;\n      });\n    }\n  }, {\n    key: \"shutdown\",\n    value: function () {\n      var _shutdown = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n        var _this81 = this;\n\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                this.Be = !1;\n\n                this._n();\n\n                this.Ke && (this.Ke.cancel(), this.Ke = null);\n                this.mn();\n                this.gn();\n                _context10.next = 7;\n                return this.Ge.runTransaction(\"shutdown\", \"readwrite\", [Ps.store, Ms.store], function (t) {\n                  var e = new ti(t, X.T);\n                  return _this81.on(e).next(function () {\n                    return _this81.un(e);\n                  });\n                });\n\n              case 7:\n                this.Ge.close();\n                // Remove the entry marking the client as zombied from LocalStorage since\n                // we successfully deleted its metadata from IndexedDb.\n                this.yn();\n\n              case 9:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function shutdown() {\n        return _shutdown.apply(this, arguments);\n      }\n\n      return shutdown;\n    }()\n    /**\n     * Returns clients that are not zombied and have an updateTime within the\n     * provided threshold.\n     */\n\n  }, {\n    key: \"fn\",\n    value: function fn(t, e) {\n      var _this82 = this;\n\n      return t.filter(function (t) {\n        return _this82.ln(t.updateTimeMs, e) && !_this82.wn(t.clientId);\n      });\n    }\n    /**\n     * Returns the IDs of the clients that are currently active. If multi-tab\n     * is not supported, returns an array that only contains the local client's\n     * ID.\n     *\n     * PORTING NOTE: This is only used for Web multi-tab.\n     */\n\n  }, {\n    key: \"pn\",\n    value: function pn() {\n      var _this83 = this;\n\n      return this.runTransaction(\"getActiveClients\", \"readonly\", function (t) {\n        return nr(t).Lt().next(function (t) {\n          return _this83.fn(t, 18e5).map(function (t) {\n            return t.clientId;\n          });\n        });\n      });\n    }\n  }, {\n    key: \"started\",\n    get: function get() {\n      return this.Be;\n    }\n  }, {\n    key: \"getMutationQueue\",\n    value: function getMutationQueue(t) {\n      return vi.Yt(t, this.N, this.Ht, this.referenceDelegate);\n    }\n  }, {\n    key: \"getTargetCache\",\n    value: function getTargetCache() {\n      return this.ze;\n    }\n  }, {\n    key: \"getRemoteDocumentCache\",\n    value: function getRemoteDocumentCache() {\n      return this.He;\n    }\n  }, {\n    key: \"getIndexManager\",\n    value: function getIndexManager() {\n      return this.Ht;\n    }\n  }, {\n    key: \"getBundleCache\",\n    value: function getBundleCache() {\n      return this.Je;\n    }\n  }, {\n    key: \"runTransaction\",\n    value: function runTransaction(t, e, n) {\n      var _this84 = this;\n\n      $(\"IndexedDbPersistence\", \"Starting transaction:\", t);\n      var s = \"readonly\" === e ? \"readonly\" : \"readwrite\";\n      var i; // Do all transactions as readwrite against all object stores, since we\n      // are the only reader/writer.\n\n      return this.Ge.runTransaction(t, s, Us, function (s) {\n        return i = new ti(s, _this84.Le ? _this84.Le.next() : X.T), \"readwrite-primary\" === e ? _this84.sn(i).next(function (t) {\n          return !!t || _this84.rn(i);\n        }).next(function (e) {\n          if (!e) throw O(\"Failed to obtain primary lease for action '\".concat(t, \"'.\")), _this84.isPrimary = !1, _this84.Oe.enqueueRetryable(function () {\n            return _this84.Qe(!1);\n          }), new j(K.FAILED_PRECONDITION, qs);\n          return n(i);\n        }).next(function (t) {\n          return _this84.cn(i).next(function () {\n            return t;\n          });\n        }) : _this84.Tn(i).next(function () {\n          return n(i);\n        });\n      }).then(function (t) {\n        return i.raiseOnCommittedEvent(), t;\n      });\n    }\n    /**\n     * Verifies that the current tab is the primary leaseholder or alternatively\n     * that the leaseholder has opted into multi-tab synchronization.\n     */\n    // TODO(b/114226234): Remove this check when `synchronizeTabs` can no longer\n    // be turned off.\n\n  }, {\n    key: \"Tn\",\n    value: function Tn(t) {\n      var _this85 = this;\n\n      return er(t).get(Ps.key).next(function (t) {\n        if (null !== t && _this85.ln(t.leaseTimestampMs, 5e3) && !_this85.wn(t.ownerId) && !_this85.an(t) && !(_this85.Me || _this85.allowTabSynchronization && t.allowTabSynchronization)) throw new j(K.FAILED_PRECONDITION, Zi);\n      });\n    }\n    /**\n     * Obtains or extends the new primary lease for the local client. This\n     * method does not verify that the client is eligible for this lease.\n     */\n\n  }, {\n    key: \"cn\",\n    value: function cn(t) {\n      var e = new Ps(this.clientId, this.allowTabSynchronization, Date.now());\n      return er(t).put(Ps.key, e);\n    }\n  }, {\n    key: \"on\",\n    value:\n    /** Checks the primary lease and removes it if we are the current primary. */\n    function on(t) {\n      var _this86 = this;\n\n      var e = er(t);\n      return e.get(Ps.key).next(function (t) {\n        return _this86.an(t) ? ($(\"IndexedDbPersistence\", \"Releasing primary lease.\"), e.delete(Ps.key)) : js.resolve();\n      });\n    }\n    /** Verifies that `updateTimeMs` is within `maxAgeMs`. */\n\n  }, {\n    key: \"ln\",\n    value: function ln(t, e) {\n      var n = Date.now();\n      return !(t < n - e) && (!(t > n) || (O(\"Detected an update time that is in the future: \".concat(t, \" > \").concat(n)), !1));\n    }\n  }, {\n    key: \"Ze\",\n    value: function Ze() {\n      var _this87 = this;\n\n      null !== this.document && \"function\" == typeof this.document.addEventListener && (this.qe = function () {\n        _this87.Oe.enqueueAndForget(function () {\n          return _this87.inForeground = \"visible\" === _this87.document.visibilityState, _this87.Xe();\n        });\n      }, this.document.addEventListener(\"visibilitychange\", this.qe), this.inForeground = \"visible\" === this.document.visibilityState);\n    }\n  }, {\n    key: \"mn\",\n    value: function mn() {\n      this.qe && (this.document.removeEventListener(\"visibilitychange\", this.qe), this.qe = null);\n    }\n    /**\n     * Attaches a window.unload handler that will synchronously write our\n     * clientId to a \"zombie client id\" location in LocalStorage. This can be used\n     * by tabs trying to acquire the primary lease to determine that the lease\n     * is no longer valid even if the timestamp is recent. This is particularly\n     * important for the refresh case (so the tab correctly re-acquires the\n     * primary lease). LocalStorage is used for this rather than IndexedDb because\n     * it is a synchronous API and so can be used reliably from  an unload\n     * handler.\n     */\n\n  }, {\n    key: \"tn\",\n    value: function tn() {\n      var _this88 = this;\n\n      var t;\n      \"function\" == typeof (null === (t = this.window) || void 0 === t ? void 0 : t.addEventListener) && (this.Ue = function () {\n        // Note: In theory, this should be scheduled on the AsyncQueue since it\n        // accesses internal state. We execute this code directly during shutdown\n        // to make sure it gets a chance to run.\n        _this88._n(), isSafari() && navigator.appVersion.match(\"Version/14\") && // On Safari 14, we do not run any cleanup actions as it might trigger\n        // a bug that prevents Safari from re-opening IndexedDB during the\n        // next page load.\n        // See https://bugs.webkit.org/show_bug.cgi?id=226547\n        _this88.Oe.enterRestrictedMode(\n        /* purgeExistingTasks= */\n        !0), _this88.Oe.enqueueAndForget(function () {\n          return _this88.shutdown();\n        });\n      }, this.window.addEventListener(\"pagehide\", this.Ue));\n    }\n  }, {\n    key: \"gn\",\n    value: function gn() {\n      this.Ue && (this.window.removeEventListener(\"pagehide\", this.Ue), this.Ue = null);\n    }\n    /**\n     * Returns whether a client is \"zombied\" based on its LocalStorage entry.\n     * Clients become zombied when their tab closes without running all of the\n     * cleanup logic in `shutdown()`.\n     */\n\n  }, {\n    key: \"wn\",\n    value: function wn(t) {\n      var e;\n\n      try {\n        var n = null !== (null === (e = this.Ye) || void 0 === e ? void 0 : e.getItem(this.dn(t)));\n        return $(\"IndexedDbPersistence\", \"Client '\".concat(t, \"' \").concat(n ? \"is\" : \"is not\", \" zombied in LocalStorage\")), n;\n      } catch (t) {\n        // Gracefully handle if LocalStorage isn't working.\n        return O(\"IndexedDbPersistence\", \"Failed to get zombied client id.\", t), !1;\n      }\n    }\n    /**\n     * Record client as zombied (a client that had its tab closed). Zombied\n     * clients are ignored during primary tab selection.\n     */\n\n  }, {\n    key: \"_n\",\n    value: function _n() {\n      if (this.Ye) try {\n        this.Ye.setItem(this.dn(this.clientId), String(Date.now()));\n      } catch (t) {\n        // Gracefully handle if LocalStorage isn't available / working.\n        O(\"Failed to set zombie client id.\", t);\n      }\n    }\n    /** Removes the zombied client entry if it exists. */\n\n  }, {\n    key: \"yn\",\n    value: function yn() {\n      if (this.Ye) try {\n        this.Ye.removeItem(this.dn(this.clientId));\n      } catch (t) {// Ignore\n      }\n    }\n  }, {\n    key: \"dn\",\n    value: function dn(t) {\n      return \"firestore_zombie_\".concat(this.persistenceKey, \"_\").concat(t);\n    }\n  }], [{\n    key: \"bt\",\n    value: function bt() {\n      return Ws.bt();\n    }\n  }]);\n\n  return tr;\n}();\n/**\n * Helper to get a typed SimpleDbStore for the primary client object store.\n */\n\n\nfunction er(t) {\n  return ei(t, Ps.store);\n}\n/**\n * Helper to get a typed SimpleDbStore for the client metadata object store.\n */\n\n\nfunction nr(t) {\n  return ei(t, Ms.store);\n}\n/**\n * Generates a string used as a prefix when storing data in IndexedDB and\n * LocalStorage.\n */\n\n\nfunction sr(t, e) {\n  // Use two different prefix formats:\n  //   * firestore / persistenceKey / projectID . databaseID / ...\n  //   * firestore / persistenceKey / projectID / ...\n  // projectIDs are DNS-compatible names and cannot contain dots\n  // so there's no danger of collisions.\n  var n = t.projectId;\n  return t.isDefaultDatabase || (n += \".\" + t.database), \"firestore/\" + e + \"/\" + n + \"/\";\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar ir = function ir(t, e) {\n  _classCallCheck(this, ir);\n\n  this.progress = t, this.En = e;\n};\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A readonly view of the local state of all documents we're tracking (i.e. we\n * have a cached version in remoteDocumentCache or local mutations for the\n * document). The view is computed by applying the mutations in the\n * MutationQueue to the RemoteDocumentCache.\n */\n\n\nvar rr = /*#__PURE__*/function () {\n  function rr(t, e, n) {\n    _classCallCheck(this, rr);\n\n    this.He = t, this.In = e, this.Ht = n;\n  }\n  /**\n   * Get the local view of the document identified by `key`.\n   *\n   * @returns Local view of the document or null if we don't have any cached\n   * state for it.\n   */\n\n\n  _createClass(rr, [{\n    key: \"An\",\n    value: function An(t, e) {\n      var _this89 = this;\n\n      return this.In.getAllMutationBatchesAffectingDocumentKey(t, e).next(function (n) {\n        return _this89.Rn(t, e, n);\n      });\n    }\n    /** Internal version of `getDocument` that allows reusing batches. */\n\n  }, {\n    key: \"Rn\",\n    value: function Rn(t, e, n) {\n      return this.He.getEntry(t, e).next(function (t) {\n        var _iterator27 = _createForOfIteratorHelper(n),\n            _step27;\n\n        try {\n          for (_iterator27.s(); !(_step27 = _iterator27.n()).done;) {\n            var _e26 = _step27.value;\n\n            _e26.applyToLocalView(t);\n          }\n        } catch (err) {\n          _iterator27.e(err);\n        } finally {\n          _iterator27.f();\n        }\n\n        return t;\n      });\n    } // Returns the view of the given `docs` as they would appear after applying\n    // all mutations in the given `batches`.\n\n  }, {\n    key: \"bn\",\n    value: function bn(t, e) {\n      t.forEach(function (t, n) {\n        var _iterator28 = _createForOfIteratorHelper(e),\n            _step28;\n\n        try {\n          for (_iterator28.s(); !(_step28 = _iterator28.n()).done;) {\n            var _t44 = _step28.value;\n\n            _t44.applyToLocalView(n);\n          }\n        } catch (err) {\n          _iterator28.e(err);\n        } finally {\n          _iterator28.f();\n        }\n      });\n    }\n    /**\n     * Gets the local view of the documents identified by `keys`.\n     *\n     * If we don't have cached state for a document in `keys`, a NoDocument will\n     * be stored for that key in the resulting set.\n     */\n\n  }, {\n    key: \"Pn\",\n    value: function Pn(t, e) {\n      var _this90 = this;\n\n      return this.He.getEntries(t, e).next(function (e) {\n        return _this90.vn(t, e).next(function () {\n          return e;\n        });\n      });\n    }\n    /**\n     * Applies the local view the given `baseDocs` without retrieving documents\n     * from the local store.\n     */\n\n  }, {\n    key: \"vn\",\n    value: function vn(t, e) {\n      var _this91 = this;\n\n      return this.In.getAllMutationBatchesAffectingDocumentKeys(t, e).next(function (t) {\n        return _this91.bn(e, t);\n      });\n    }\n    /**\n     * Performs a query against the local view of all documents.\n     *\n     * @param transaction - The persistence transaction.\n     * @param query - The query to match documents against.\n     * @param sinceReadTime - If not set to SnapshotVersion.min(), return only\n     *     documents that have been read since this snapshot version (exclusive).\n     */\n\n  }, {\n    key: \"getDocumentsMatchingQuery\",\n    value: function getDocumentsMatchingQuery(t, e, n) {\n      /**\n      * Returns whether the query matches a single document by path (rather than a\n      * collection).\n      */\n      return function (t) {\n        return Pt.isDocumentKey(t.path) && null === t.collectionGroup && 0 === t.filters.length;\n      }(e) ? this.Vn(t, e.path) : pe(e) ? this.Sn(t, e, n) : this.Dn(t, e, n);\n    }\n  }, {\n    key: \"Vn\",\n    value: function Vn(t, e) {\n      // Just do a simple document lookup.\n      return this.An(t, new Pt(e)).next(function (t) {\n        var e = In();\n        return t.isFoundDocument() && (e = e.insert(t.key, t)), e;\n      });\n    }\n  }, {\n    key: \"Sn\",\n    value: function Sn(t, e, n) {\n      var _this92 = this;\n\n      var s = e.collectionGroup;\n      var i = In();\n      return this.Ht.getCollectionParents(t, s).next(function (r) {\n        return js.forEach(r, function (r) {\n          var o = function (t, e) {\n            return new fe(e,\n            /*collectionGroup=*/\n            null, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n          }\n          /**\n          * Returns true if this query does not specify any query constraints that\n          * could remove results.\n          */\n          (e, r.child(s));\n\n          return _this92.Dn(t, o, n).next(function (t) {\n            t.forEach(function (t, e) {\n              i = i.insert(t, e);\n            });\n          });\n        }).next(function () {\n          return i;\n        });\n      });\n    }\n  }, {\n    key: \"Dn\",\n    value: function Dn(t, e, n) {\n      var _this93 = this;\n\n      // Query the remote documents and overlay mutations.\n      var s, i;\n      return this.He.getDocumentsMatchingQuery(t, e, n).next(function (n) {\n        return s = n, _this93.In.getAllMutationBatchesAffectingQuery(t, e);\n      }).next(function (e) {\n        return i = e, _this93.Cn(t, i, s).next(function (t) {\n          s = t;\n\n          var _iterator29 = _createForOfIteratorHelper(i),\n              _step29;\n\n          try {\n            for (_iterator29.s(); !(_step29 = _iterator29.n()).done;) {\n              var _t45 = _step29.value;\n\n              var _iterator30 = _createForOfIteratorHelper(_t45.mutations),\n                  _step30;\n\n              try {\n                for (_iterator30.s(); !(_step30 = _iterator30.n()).done;) {\n                  var _e27 = _step30.value;\n                  var _n18 = _e27.key;\n\n                  var _i8 = s.get(_n18);\n\n                  null == _i8 && ( // Create invalid document to apply mutations on top of\n                  _i8 = Kt.newInvalidDocument(_n18), s = s.insert(_n18, _i8)), Ye(_e27, _i8, _t45.localWriteTime), _i8.isFoundDocument() || (s = s.remove(_n18));\n                }\n              } catch (err) {\n                _iterator30.e(err);\n              } finally {\n                _iterator30.f();\n              }\n            }\n          } catch (err) {\n            _iterator29.e(err);\n          } finally {\n            _iterator29.f();\n          }\n        });\n      }).next(function () {\n        return (// Finally, filter out any documents that don't actually match\n          // the query.\n          s.forEach(function (t, n) {\n            Pe(e, n) || (s = s.remove(t));\n          }), s\n        );\n      });\n    }\n  }, {\n    key: \"Cn\",\n    value: function Cn(t, e, n) {\n      var s = Pn();\n\n      var _iterator31 = _createForOfIteratorHelper(e),\n          _step31;\n\n      try {\n        for (_iterator31.s(); !(_step31 = _iterator31.n()).done;) {\n          var _t46 = _step31.value;\n\n          var _iterator32 = _createForOfIteratorHelper(_t46.mutations),\n              _step32;\n\n          try {\n            for (_iterator32.s(); !(_step32 = _iterator32.n()).done;) {\n              var _e28 = _step32.value;\n              _e28 instanceof nn && null === n.get(_e28.key) && (s = s.add(_e28.key));\n            }\n          } catch (err) {\n            _iterator32.e(err);\n          } finally {\n            _iterator32.f();\n          }\n        }\n      } catch (err) {\n        _iterator31.e(err);\n      } finally {\n        _iterator31.f();\n      }\n\n      var i = n;\n      return this.He.getEntries(t, s).next(function (t) {\n        return t.forEach(function (t, e) {\n          e.isFoundDocument() && (i = i.insert(t, e));\n        }), i;\n      });\n    }\n  }]);\n\n  return rr;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A set of changes to what documents are currently in view and out of view for\n * a given query. These changes are sent to the LocalStore by the View (via\n * the SyncEngine) and are used to pin / unpin documents as appropriate.\n */\n\n\nvar or = /*#__PURE__*/function () {\n  function or(t, e, n, s) {\n    _classCallCheck(this, or);\n\n    this.targetId = t, this.fromCache = e, this.Nn = n, this.xn = s;\n  }\n\n  _createClass(or, null, [{\n    key: \"kn\",\n    value: function kn(t, e) {\n      var n = Pn(),\n          s = Pn();\n\n      var _iterator33 = _createForOfIteratorHelper(e.docChanges),\n          _step33;\n\n      try {\n        for (_iterator33.s(); !(_step33 = _iterator33.n()).done;) {\n          var _t47 = _step33.value;\n\n          switch (_t47.type) {\n            case 0\n            /* Added */\n            :\n              n = n.add(_t47.doc.key);\n              break;\n\n            case 1\n            /* Removed */\n            :\n              s = s.add(_t47.doc.key);\n            // do nothing\n          }\n        }\n      } catch (err) {\n        _iterator33.e(err);\n      } finally {\n        _iterator33.f();\n      }\n\n      return new or(t, e.fromCache, n, s);\n    }\n  }]);\n\n  return or;\n}();\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A query engine that takes advantage of the target document mapping in the\n * QueryCache. Query execution is optimized by only reading the documents that\n * previously matched a query plus any documents that were edited after the\n * query was last listened to.\n *\n * There are some cases when this optimization is not guaranteed to produce\n * the same results as full collection scans. In these cases, query\n * processing falls back to full scans. These cases are:\n *\n * - Limit queries where a document that matched the query previously no longer\n *   matches the query.\n *\n * - Limit queries where a document edit may cause the document to sort below\n *   another document that is in the local cache.\n *\n * - Queries that have never been CURRENT or free of limbo documents.\n */\n\n\nvar cr = /*#__PURE__*/function () {\n  function cr() {\n    _classCallCheck(this, cr);\n  }\n\n  _createClass(cr, [{\n    key: \"$n\",\n    value:\n    /** Sets the document view to query against. */\n    function $n(t) {\n      this.On = t;\n    }\n    /** Returns all local documents matching the specified query. */\n\n  }, {\n    key: \"getDocumentsMatchingQuery\",\n    value: function getDocumentsMatchingQuery(t, e, n, s) {\n      var _this94 = this;\n\n      // Queries that match all documents don't benefit from using\n      // key-based lookups. It is more efficient to scan all documents in a\n      // collection, rather than to perform individual lookups.\n      return function (t) {\n        return 0 === t.filters.length && null === t.limit && null == t.startAt && null == t.endAt && (0 === t.explicitOrderBy.length || 1 === t.explicitOrderBy.length && t.explicitOrderBy[0].field.isKeyField());\n      }(e) || n.isEqual(rt.min()) ? this.Fn(t, e) : this.On.Pn(t, s).next(function (i) {\n        var r = _this94.Mn(e, i);\n\n        return (_e(e) || me(e)) && _this94.Ln(e.limitType, r, s, n) ? _this94.Fn(t, e) : (x() <= LogLevel.DEBUG && $(\"QueryEngine\", \"Re-using previous result from %s to execute query: %s\", n.toString(), be(e)), _this94.On.getDocumentsMatchingQuery(t, e, n).next(function (t) {\n          return (// We merge `previousResults` into `updateResults`, since\n            // `updateResults` is already a DocumentMap. If a document is\n            // contained in both lists, then its contents are the same.\n            r.forEach(function (e) {\n              t = t.insert(e.key, e);\n            }), t\n          );\n        }));\n      }); // Queries that have never seen a snapshot without limbo free documents\n      // should also be run as a full collection scan.\n    }\n    /** Applies the query filter and sorting to the provided documents.  */\n\n  }, {\n    key: \"Mn\",\n    value: function Mn(t, e) {\n      // Sort the documents and re-apply the query filter since previously\n      // matching documents do not necessarily still match the query.\n      var n = new gn(ve(t));\n      return e.forEach(function (e, s) {\n        Pe(t, s) && (n = n.add(s));\n      }), n;\n    }\n    /**\n     * Determines if a limit query needs to be refilled from cache, making it\n     * ineligible for index-free execution.\n     *\n     * @param sortedPreviousResults - The documents that matched the query when it\n     * was last synchronized, sorted by the query's comparator.\n     * @param remoteKeys - The document keys that matched the query at the last\n     * snapshot.\n     * @param limboFreeSnapshotVersion - The version of the snapshot when the\n     * query was last synchronized.\n     */\n\n  }, {\n    key: \"Ln\",\n    value: function Ln(t, e, n, s) {\n      // The query needs to be refilled if a previously matching document no\n      // longer matches.\n      if (n.size !== e.size) return !0; // Limit queries are not eligible for index-free query execution if there is\n      // a potential that an older document from cache now sorts before a document\n      // that was previously part of the limit. This, however, can only happen if\n      // the document at the edge of the limit goes out of limit.\n      // If a document that is not the limit boundary sorts differently,\n      // the boundary of the limit itself did not change and documents from cache\n      // will continue to be \"rejected\" by this boundary. Therefore, we can ignore\n      // any modifications that don't affect the last document.\n\n      var i = \"F\"\n      /* First */\n      === t ? e.last() : e.first();\n      return !!i && (i.hasPendingWrites || i.version.compareTo(s) > 0);\n    }\n  }, {\n    key: \"Fn\",\n    value: function Fn(t, e) {\n      return x() <= LogLevel.DEBUG && $(\"QueryEngine\", \"Using full collection scan to execute query:\", be(e)), this.On.getDocumentsMatchingQuery(t, e, rt.min());\n    }\n  }]);\n\n  return cr;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Implements `LocalStore` interface.\n *\n * Note: some field defined in this class might have public access level, but\n * the class is not exported so they are only accessible from this module.\n * This is useful to implement optional features (like bundles) in free\n * functions, such that they are tree-shakeable.\n */\n\n\nvar ar = /*#__PURE__*/function () {\n  function ar(\n  /** Manages our in-memory or durable persistence. */\n  t, e, n, s) {\n    _classCallCheck(this, ar);\n\n    this.persistence = t, this.Bn = e, this.N = s,\n    /**\n     * Maps a targetID to data about its target.\n     *\n     * PORTING NOTE: We are using an immutable data structure on Web to make re-runs\n     * of `applyRemoteEvent()` idempotent.\n     */\n    this.Un = new wn(et),\n    /** Maps a target to its targetID. */\n    // TODO(wuandy): Evaluate if TargetId can be part of Target.\n    this.qn = new ji(function (t) {\n      return Wt(t);\n    }, zt),\n    /**\n     * The read time of the last entry processed by `getNewDocumentChanges()`.\n     *\n     * PORTING NOTE: This is only used for multi-tab synchronization.\n     */\n    this.Kn = rt.min(), this.In = t.getMutationQueue(n), this.jn = t.getRemoteDocumentCache(), this.ze = t.getTargetCache(), this.Qn = new rr(this.jn, this.In, this.persistence.getIndexManager()), this.Je = t.getBundleCache(), this.Bn.$n(this.Qn);\n  }\n\n  _createClass(ar, [{\n    key: \"collectGarbage\",\n    value: function collectGarbage(t) {\n      var _this95 = this;\n\n      return this.persistence.runTransaction(\"Collect garbage\", \"readwrite-primary\", function (e) {\n        return t.collect(e, _this95.Un);\n      });\n    }\n  }]);\n\n  return ar;\n}();\n\nfunction ur(\n/** Manages our in-memory or durable persistence. */\nt, e, n, s) {\n  return new ar(t, e, n, s);\n}\n/**\n * Tells the LocalStore that the currently authenticated user has changed.\n *\n * In response the local store switches the mutation queue to the new user and\n * returns any resulting document changes.\n */\n// PORTING NOTE: Android and iOS only return the documents affected by the\n// change.\n\n\nfunction hr(_x9, _x10) {\n  return _hr.apply(this, arguments);\n}\n/* Accepts locally generated Mutations and commit them to storage. */\n\n/**\n * Acknowledges the given batch.\n *\n * On the happy path when a batch is acknowledged, the local store will\n *\n *  + remove the batch from the mutation queue;\n *  + apply the changes to the remote document cache;\n *  + recalculate the latency compensated view implied by those changes (there\n *    may be mutations in the queue that affect the documents but haven't been\n *    acknowledged yet); and\n *  + give the changed documents back the sync engine\n *\n * @returns The resulting (modified) documents.\n */\n\n\nfunction _hr() {\n  _hr = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee71(t, e) {\n    var n, s, i, r;\n    return _regeneratorRuntime.wrap(function _callee71$(_context71) {\n      while (1) {\n        switch (_context71.prev = _context71.next) {\n          case 0:\n            n = q(t);\n            s = n.In, i = n.Qn;\n            _context71.next = 4;\n            return n.persistence.runTransaction(\"Handle user change\", \"readonly\", function (t) {\n              // Swap out the mutation queue, grabbing the pending mutation batches\n              // before and after.\n              var r;\n              return n.In.getAllMutationBatches(t).next(function (o) {\n                return r = o, s = n.persistence.getMutationQueue(e), // Recreate our LocalDocumentsView using the new\n                // MutationQueue.\n                i = new rr(n.jn, s, n.persistence.getIndexManager()), s.getAllMutationBatches(t);\n              }).next(function (e) {\n                var n = [],\n                    s = []; // Union the old/new changed keys.\n\n                // Union the old/new changed keys.\n                var o = Pn();\n\n                var _iterator58 = _createForOfIteratorHelper(r),\n                    _step58;\n\n                try {\n                  for (_iterator58.s(); !(_step58 = _iterator58.n()).done;) {\n                    var _t85 = _step58.value;\n                    n.push(_t85.batchId);\n\n                    var _iterator60 = _createForOfIteratorHelper(_t85.mutations),\n                        _step60;\n\n                    try {\n                      for (_iterator60.s(); !(_step60 = _iterator60.n()).done;) {\n                        var _e44 = _step60.value;\n                        o = o.add(_e44.key);\n                      }\n                    } catch (err) {\n                      _iterator60.e(err);\n                    } finally {\n                      _iterator60.f();\n                    }\n                  }\n                } catch (err) {\n                  _iterator58.e(err);\n                } finally {\n                  _iterator58.f();\n                }\n\n                var _iterator59 = _createForOfIteratorHelper(e),\n                    _step59;\n\n                try {\n                  for (_iterator59.s(); !(_step59 = _iterator59.n()).done;) {\n                    var _t86 = _step59.value;\n                    s.push(_t86.batchId);\n\n                    var _iterator61 = _createForOfIteratorHelper(_t86.mutations),\n                        _step61;\n\n                    try {\n                      for (_iterator61.s(); !(_step61 = _iterator61.n()).done;) {\n                        var _e45 = _step61.value;\n                        o = o.add(_e45.key);\n                      }\n                    } catch (err) {\n                      _iterator61.e(err);\n                    } finally {\n                      _iterator61.f();\n                    }\n                  } // Return the set of all (potentially) changed documents and the list\n                  // of mutation batch IDs that were affected by change.\n\n                } catch (err) {\n                  _iterator59.e(err);\n                } finally {\n                  _iterator59.f();\n                } // Return the set of all (potentially) changed documents and the list\n                // of mutation batch IDs that were affected by change.\n\n\n                // Return the set of all (potentially) changed documents and the list\n                // of mutation batch IDs that were affected by change.\n                return i.Pn(t, o).next(function (t) {\n                  return {\n                    Wn: t,\n                    removedBatchIds: n,\n                    addedBatchIds: s\n                  };\n                });\n              });\n            });\n\n          case 4:\n            r = _context71.sent;\n            return _context71.abrupt(\"return\", (n.In = s, n.Qn = i, n.Bn.$n(n.Qn), r));\n\n          case 6:\n          case \"end\":\n            return _context71.stop();\n        }\n      }\n    }, _callee71);\n  }));\n  return _hr.apply(this, arguments);\n}\n\nfunction lr(t, e) {\n  var n = q(t);\n  return n.persistence.runTransaction(\"Acknowledge batch\", \"readwrite-primary\", function (t) {\n    var s = e.batch.keys(),\n        i = n.jn.newChangeBuffer({\n      trackRemovals: !0\n    });\n    return function (t, e, n, s) {\n      var i = n.batch,\n          r = i.keys();\n      var o = js.resolve();\n      return r.forEach(function (t) {\n        o = o.next(function () {\n          return s.getEntry(e, t);\n        }).next(function (e) {\n          var r = n.docVersions.get(t);\n          B(null !== r), e.version.compareTo(r) < 0 && (i.applyToRemoteDocument(e, n), e.isValidDocument() && // We use the commitVersion as the readTime rather than the\n          // document's updateTime since the updateTime is not advanced\n          // for updates that do not modify the underlying document.\n          s.addEntry(e, n.commitVersion));\n        });\n      }), o.next(function () {\n        return t.In.removeMutationBatch(e, i);\n      });\n    }\n    /** Returns the local view of the documents affected by a mutation batch. */\n    // PORTING NOTE: Multi-Tab only.\n    (n, t, e, i).next(function () {\n      return i.apply(t);\n    }).next(function () {\n      return n.In.performConsistencyCheck(t);\n    }).next(function () {\n      return n.Qn.Pn(t, s);\n    });\n  });\n}\n/**\n * Removes mutations from the MutationQueue for the specified batch;\n * LocalDocuments will be recalculated.\n *\n * @returns The resulting modified documents.\n */\n\n/**\n * Returns the last consistent snapshot processed (used by the RemoteStore to\n * determine whether to buffer incoming snapshots from the backend).\n */\n\n\nfunction fr(t) {\n  var e = q(t);\n  return e.persistence.runTransaction(\"Get last remote snapshot version\", \"readonly\", function (t) {\n    return e.ze.getLastRemoteSnapshotVersion(t);\n  });\n}\n/**\n * Updates the \"ground-state\" (remote) documents. We assume that the remote\n * event reflects any write batches that have been acknowledged or rejected\n * (i.e. we do not re-apply local mutations to updates from this event).\n *\n * LocalDocuments are re-calculated if there are remaining mutations in the\n * queue.\n */\n\n\nfunction dr(t, e) {\n  var n = q(t),\n      s = e.snapshotVersion;\n  var i = n.Un;\n  return n.persistence.runTransaction(\"Apply remote event\", \"readwrite-primary\", function (t) {\n    var r = n.jn.newChangeBuffer({\n      trackRemovals: !0\n    }); // Reset newTargetDataByTargetMap in case this transaction gets re-run.\n\n    i = n.Un;\n    var o = [];\n    e.targetChanges.forEach(function (e, r) {\n      var c = i.get(r);\n      if (!c) return; // Only update the remote keys if the target is still active. This\n      // ensures that we can persist the updated target data along with\n      // the updated assignment.\n\n      o.push(n.ze.removeMatchingKeys(t, e.removedDocuments, r).next(function () {\n        return n.ze.addMatchingKeys(t, e.addedDocuments, r);\n      }));\n      var a = e.resumeToken; // Update the resume token if the change includes one.\n\n      if (a.approximateByteSize() > 0) {\n        var u = c.withResumeToken(a, s).withSequenceNumber(t.currentSequenceNumber);\n        i = i.insert(r, u), // Update the target data if there are target changes (or if\n        // sufficient time has passed since the last update).\n\n        /**\n        * Returns true if the newTargetData should be persisted during an update of\n        * an active target. TargetData should always be persisted when a target is\n        * being released and should not call this function.\n        *\n        * While the target is active, TargetData updates can be omitted when nothing\n        * about the target has changed except metadata like the resume token or\n        * snapshot version. Occasionally it's worth the extra write to prevent these\n        * values from getting too stale after a crash, but this doesn't have to be\n        * too frequent.\n        */\n        function (t, e, n) {\n          // Always persist target data if we don't already have a resume token.\n          if (B(e.resumeToken.approximateByteSize() > 0), 0 === t.resumeToken.approximateByteSize()) return !0; // Don't allow resume token changes to be buffered indefinitely. This\n          // allows us to be reasonably up-to-date after a crash and avoids needing\n          // to loop over all active queries on shutdown. Especially in the browser\n          // we may not get time to do anything interesting while the current tab is\n          // closing.\n\n          if (e.snapshotVersion.toMicroseconds() - t.snapshotVersion.toMicroseconds() >= 3e8) return !0; // Otherwise if the only thing that has changed about a target is its resume\n          // token it's not worth persisting. Note that the RemoteStore keeps an\n          // in-memory view of the currently active targets which includes the current\n          // resume token, so stream failure or user changes will still use an\n          // up-to-date resume token regardless of what we do here.\n\n          return n.addedDocuments.size + n.modifiedDocuments.size + n.removedDocuments.size > 0;\n        }\n        /**\n        * Notifies local store of the changed views to locally pin documents.\n        */\n        (c, u, e) && o.push(n.ze.updateTargetData(t, u));\n      }\n    });\n    var c = Tn(); // HACK: The only reason we allow a null snapshot version is so that we\n    // can synthesize remote events when we get permission denied errors while\n    // trying to resolve the state of a locally cached document that is in\n    // limbo.\n\n    if (e.documentUpdates.forEach(function (s, i) {\n      e.resolvedLimboDocuments.has(s) && o.push(n.persistence.referenceDelegate.updateLimboDocument(t, s));\n    }), // Each loop iteration only affects its \"own\" doc, so it's safe to get all the remote\n    // documents in advance in a single call.\n    o.push(wr(t, r, e.documentUpdates, s, void 0).next(function (t) {\n      c = t;\n    })), !s.isEqual(rt.min())) {\n      var _e29 = n.ze.getLastRemoteSnapshotVersion(t).next(function (e) {\n        return n.ze.setTargetsMetadata(t, t.currentSequenceNumber, s);\n      });\n\n      o.push(_e29);\n    }\n\n    return js.waitFor(o).next(function () {\n      return r.apply(t);\n    }).next(function () {\n      return n.Qn.vn(t, c);\n    }).next(function () {\n      return c;\n    });\n  }).then(function (t) {\n    return n.Un = i, t;\n  });\n}\n/**\n * Populates document change buffer with documents from backend or a bundle.\n * Returns the document changes resulting from applying those documents.\n *\n * @param txn - Transaction to use to read existing documents from storage.\n * @param documentBuffer - Document buffer to collect the resulted changes to be\n *        applied to storage.\n * @param documents - Documents to be applied.\n * @param globalVersion - A `SnapshotVersion` representing the read time if all\n *        documents have the same read time.\n * @param documentVersions - A DocumentKey-to-SnapshotVersion map if documents\n *        have their own read time.\n *\n * Note: this function will use `documentVersions` if it is defined;\n * when it is not defined, resorts to `globalVersion`.\n */\n\n\nfunction wr(t, e, n, s, // TODO(wuandy): We could add `readTime` to MaybeDocument instead to remove\n// this parameter.\ni) {\n  var r = Pn();\n  return n.forEach(function (t) {\n    return r = r.add(t);\n  }), e.getEntries(t, r).next(function (t) {\n    var r = Tn();\n    return n.forEach(function (n, o) {\n      var c = t.get(n),\n          a = (null == i ? void 0 : i.get(n)) || s; // Note: The order of the steps below is important, since we want\n      // to ensure that rejected limbo resolutions (which fabricate\n      // NoDocuments with SnapshotVersion.min()) never add documents to\n      // cache.\n\n      o.isNoDocument() && o.version.isEqual(rt.min()) ? ( // NoDocuments with SnapshotVersion.min() are used in manufactured\n      // events. We remove these documents from cache since we lost\n      // access.\n      e.removeEntry(n, a), r = r.insert(n, o)) : !c.isValidDocument() || o.version.compareTo(c.version) > 0 || 0 === o.version.compareTo(c.version) && c.hasPendingWrites ? (e.addEntry(o, a), r = r.insert(n, o)) : $(\"LocalStore\", \"Ignoring outdated watch update for \", n, \". Current version:\", c.version, \" Watch version:\", o.version);\n    }), r;\n  });\n}\n/**\n * Gets the mutation batch after the passed in batchId in the mutation queue\n * or null if empty.\n * @param afterBatchId - If provided, the batch to search after.\n * @returns The next mutation or null if there wasn't one.\n */\n\n\nfunction _r(t, e) {\n  var n = q(t);\n  return n.persistence.runTransaction(\"Get next mutation batch\", \"readonly\", function (t) {\n    return void 0 === e && (e = -1), n.In.getNextMutationBatchAfterBatchId(t, e);\n  });\n}\n/**\n * Reads the current value of a Document with a given key or null if not\n * found - used for testing.\n */\n\n/**\n * Assigns the given target an internal ID so that its results can be pinned so\n * they don't get GC'd. A target must be allocated in the local store before\n * the store can be used to manage its view.\n *\n * Allocating an already allocated `Target` will return the existing `TargetData`\n * for that `Target`.\n */\n\n\nfunction mr(t, e) {\n  var n = q(t);\n  return n.persistence.runTransaction(\"Allocate target\", \"readwrite\", function (t) {\n    var s;\n    return n.ze.getTargetData(t, e).next(function (i) {\n      return i ? ( // This target has been listened to previously, so reuse the\n      // previous targetID.\n      // TODO(mcg): freshen last accessed date?\n      s = i, js.resolve(s)) : n.ze.allocateTargetId(t).next(function (i) {\n        return s = new ii(e, i, 0\n        /* Listen */\n        , t.currentSequenceNumber), n.ze.addTargetData(t, s).next(function () {\n          return s;\n        });\n      });\n    });\n  }).then(function (t) {\n    // If Multi-Tab is enabled, the existing target data may be newer than\n    // the in-memory data\n    var s = n.Un.get(t.targetId);\n    return (null === s || t.snapshotVersion.compareTo(s.snapshotVersion) > 0) && (n.Un = n.Un.insert(t.targetId, t), n.qn.set(e, t.targetId)), t;\n  });\n}\n/**\n * Returns the TargetData as seen by the LocalStore, including updates that may\n * have not yet been persisted to the TargetCache.\n */\n// Visible for testing.\n\n/**\n * Unpins all the documents associated with the given target. If\n * `keepPersistedTargetData` is set to false and Eager GC enabled, the method\n * directly removes the associated target data from the target cache.\n *\n * Releasing a non-existing `Target` is a no-op.\n */\n// PORTING NOTE: `keepPersistedTargetData` is multi-tab only.\n\n\nfunction gr(_x11, _x12, _x13) {\n  return _gr.apply(this, arguments);\n}\n/**\n * Runs the specified query against the local store and returns the results,\n * potentially taking advantage of query data from previous executions (such\n * as the set of remote keys).\n *\n * @param usePreviousResults - Whether results from previous executions can\n * be used to optimize this query execution.\n */\n\n\nfunction _gr() {\n  _gr = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee72(t, e, n) {\n    var s, i, r;\n    return _regeneratorRuntime.wrap(function _callee72$(_context72) {\n      while (1) {\n        switch (_context72.prev = _context72.next) {\n          case 0:\n            s = q(t), i = s.Un.get(e), r = n ? \"readwrite\" : \"readwrite-primary\";\n            _context72.prev = 1;\n            _context72.t0 = n;\n\n            if (_context72.t0) {\n              _context72.next = 6;\n              break;\n            }\n\n            _context72.next = 6;\n            return s.persistence.runTransaction(\"Release target\", r, function (t) {\n              return s.persistence.referenceDelegate.removeTarget(t, i);\n            });\n\n          case 6:\n            _context72.next = 13;\n            break;\n\n          case 8:\n            _context72.prev = 8;\n            _context72.t1 = _context72[\"catch\"](1);\n\n            if (Hs(_context72.t1)) {\n              _context72.next = 12;\n              break;\n            }\n\n            throw _context72.t1;\n\n          case 12:\n            // All `releaseTarget` does is record the final metadata state for the\n            // target, but we've been recording this periodically during target\n            // activity. If we lose this write this could cause a very slight\n            // difference in the order of target deletion during GC, but we\n            // don't define exact LRU semantics so this is acceptable.\n            $(\"LocalStore\", \"Failed to update sequence numbers for target \".concat(e, \": \").concat(_context72.t1));\n\n          case 13:\n            s.Un = s.Un.remove(e), s.qn.delete(i.target);\n\n          case 14:\n          case \"end\":\n            return _context72.stop();\n        }\n      }\n    }, _callee72, null, [[1, 8]]);\n  }));\n  return _gr.apply(this, arguments);\n}\n\nfunction yr(t, e, n) {\n  var s = q(t);\n  var i = rt.min(),\n      r = Pn();\n  return s.persistence.runTransaction(\"Execute query\", \"readonly\", function (t) {\n    return function (t, e, n) {\n      var s = q(t),\n          i = s.qn.get(n);\n      return void 0 !== i ? js.resolve(s.Un.get(i)) : s.ze.getTargetData(e, n);\n    }(s, t, Ee(e)).next(function (e) {\n      if (e) return i = e.lastLimboFreeSnapshotVersion, s.ze.getMatchingKeysForTargetId(t, e.targetId).next(function (t) {\n        r = t;\n      });\n    }).next(function () {\n      return s.Bn.getDocumentsMatchingQuery(t, e, n ? i : rt.min(), n ? r : Pn());\n    }).next(function (t) {\n      return {\n        documents: t,\n        Gn: r\n      };\n    });\n  });\n} // PORTING NOTE: Multi-Tab only.\n\n\nfunction pr(t, e) {\n  var n = q(t),\n      s = q(n.ze),\n      i = n.Un.get(e);\n  return i ? Promise.resolve(i.target) : n.persistence.runTransaction(\"Get target data\", \"readonly\", function (t) {\n    return s.Tt(t, e).next(function (t) {\n      return t ? t.target : null;\n    });\n  });\n}\n/**\n * Returns the set of documents that have been updated since the last call.\n * If this is the first call, returns the set of changes since client\n * initialization. Further invocations will return document that have changed\n * since the prior call.\n */\n// PORTING NOTE: Multi-Tab only.\n\n\nfunction Tr(t) {\n  var e = q(t);\n  return e.persistence.runTransaction(\"Get new document changes\", \"readonly\", function (t) {\n    return function (t, e, n) {\n      var s = q(t);\n      var i = Tn(),\n          r = ai(n);\n      var o = Hi(e),\n          c = IDBKeyRange.lowerBound(r, !0);\n      return o.Kt({\n        index: Ns.readTimeIndex,\n        range: c\n      }, function (t, e) {\n        // Unlike `getEntry()` and others, `getNewDocumentChanges()` parses\n        // the documents directly since we want to keep sentinel deletes.\n        var n = oi(s.N, e);\n        i = i.insert(n.key, n), r = e.readTime;\n      }).next(function () {\n        return {\n          En: i,\n          readTime: ui(r)\n        };\n      });\n    }\n    /**\n    * Returns the read time of the most recently read document in the cache, or\n    * SnapshotVersion.min() if not available.\n    */\n    // PORTING NOTE: This is only used for multi-tab synchronization.\n    (e.jn, t, e.Kn);\n  }).then(function (_ref19) {\n    var t = _ref19.En,\n        n = _ref19.readTime;\n    return e.Kn = n, t;\n  });\n}\n/**\n * Reads the newest document change from persistence and moves the internal\n * synchronization marker forward so that calls to `getNewDocumentChanges()`\n * only return changes that happened after client initialization.\n */\n// PORTING NOTE: Multi-Tab only.\n\n\nfunction Er(_x14) {\n  return _Er.apply(this, arguments);\n}\n/**\n * Creates a new target using the given bundle name, which will be used to\n * hold the keys of all documents from the bundle in query-document mappings.\n * This ensures that the loaded documents do not get garbage collected\n * right away.\n */\n\n/**\n * Applies the documents from a bundle to the \"ground-state\" (remote)\n * documents.\n *\n * LocalDocuments are re-calculated if there are remaining mutations in the\n * queue.\n */\n\n\nfunction _Er() {\n  _Er = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee73(t) {\n    var e;\n    return _regeneratorRuntime.wrap(function _callee73$(_context73) {\n      while (1) {\n        switch (_context73.prev = _context73.next) {\n          case 0:\n            e = q(t);\n            return _context73.abrupt(\"return\", e.persistence.runTransaction(\"Synchronize last document change read time\", \"readonly\", function (t) {\n              return function (t) {\n                var e = Hi(t); // If there are no existing entries, we return SnapshotVersion.min().\n\n                // If there are no existing entries, we return SnapshotVersion.min().\n                var n = rt.min();\n                return e.Kt({\n                  index: Ns.readTimeIndex,\n                  reverse: !0\n                }, function (t, e, s) {\n                  e.readTime && (n = ui(e.readTime)), s.done();\n                }).next(function () {\n                  return n;\n                });\n              }(t);\n            }).then(function (t) {\n              e.Kn = t;\n            }));\n\n          case 2:\n          case \"end\":\n            return _context73.stop();\n        }\n      }\n    }, _callee73);\n  }));\n  return _Er.apply(this, arguments);\n}\n\nfunction Ir(_x15, _x16, _x17, _x18) {\n  return _Ir.apply(this, arguments);\n}\n/**\n * Returns a promise of a boolean to indicate if the given bundle has already\n * been loaded and the create time is newer than the current loading bundle.\n */\n\n/**\n * Saves the given `NamedQuery` to local persistence.\n */\n\n\nfunction _Ir() {\n  _Ir = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee74(t, e, n, s) {\n    var i, r, o, c, _iterator62, _step62, _t87, _n34, a, u;\n\n    return _regeneratorRuntime.wrap(function _callee74$(_context74) {\n      while (1) {\n        switch (_context74.prev = _context74.next) {\n          case 0:\n            i = q(t);\n            r = Pn(), o = Tn(), c = Rn();\n            _iterator62 = _createForOfIteratorHelper(n);\n\n            try {\n              for (_iterator62.s(); !(_step62 = _iterator62.n()).done;) {\n                _t87 = _step62.value;\n                _n34 = e.zn(_t87.metadata.name);\n                _t87.document && (r = r.add(_n34)), o = o.insert(_n34, e.Hn(_t87)), c = c.insert(_n34, e.Jn(_t87.metadata.readTime));\n              }\n            } catch (err) {\n              _iterator62.e(err);\n            } finally {\n              _iterator62.f();\n            }\n\n            a = i.jn.newChangeBuffer({\n              trackRemovals: !0\n            });\n            _context74.next = 7;\n            return mr(i, function (t) {\n              // It is OK that the path used for the query is not valid, because this will\n              // not be read and queried.\n              return Ee(we(ht.fromString(\"__bundle__/docs/\".concat(t))));\n            }(s));\n\n          case 7:\n            u = _context74.sent;\n            return _context74.abrupt(\"return\", i.persistence.runTransaction(\"Apply bundle documents\", \"readwrite\", function (t) {\n              return wr(t, a, o, rt.min(), c).next(function (e) {\n                return a.apply(t), e;\n              }).next(function (e) {\n                return i.ze.removeMatchingKeysForTargetId(t, u.targetId).next(function () {\n                  return i.ze.addMatchingKeys(t, r, u.targetId);\n                }).next(function () {\n                  return i.Qn.vn(t, e);\n                }).next(function () {\n                  return e;\n                });\n              });\n            }));\n\n          case 9:\n          case \"end\":\n            return _context74.stop();\n        }\n      }\n    }, _callee74);\n  }));\n  return _Ir.apply(this, arguments);\n}\n\nfunction Ar(_x19, _x20) {\n  return _Ar.apply(this, arguments);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction _Ar() {\n  _Ar = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee75(t, e) {\n    var n,\n        s,\n        i,\n        _args75 = arguments;\n    return _regeneratorRuntime.wrap(function _callee75$(_context75) {\n      while (1) {\n        switch (_context75.prev = _context75.next) {\n          case 0:\n            n = _args75.length > 2 && _args75[2] !== undefined ? _args75[2] : Pn();\n            _context75.next = 3;\n            return mr(t, Ee(_i(e.bundledQuery)));\n\n          case 3:\n            s = _context75.sent;\n            i = q(t);\n            return _context75.abrupt(\"return\", i.persistence.runTransaction(\"Save named query\", \"readwrite\", function (t) {\n              var r = jn(e.readTime); // Simply save the query itself if it is older than what the SDK already\n              // has.\n\n              // Simply save the query itself if it is older than what the SDK already\n              // has.\n              if (s.snapshotVersion.compareTo(r) >= 0) return i.Je.saveNamedQuery(t, e); // Update existing target data because the query from the bundle is newer.\n\n              // Update existing target data because the query from the bundle is newer.\n              var o = s.withResumeToken(_t.EMPTY_BYTE_STRING, r);\n              return i.Un = i.Un.insert(o.targetId, o), i.ze.updateTargetData(t, o).next(function () {\n                return i.ze.removeMatchingKeysForTargetId(t, s.targetId);\n              }).next(function () {\n                return i.ze.addMatchingKeys(t, n, s.targetId);\n              }).next(function () {\n                return i.Je.saveNamedQuery(t, e);\n              });\n            }));\n\n          case 6:\n          case \"end\":\n            return _context75.stop();\n        }\n      }\n    }, _callee75);\n  }));\n  return _Ar.apply(this, arguments);\n}\n\nvar Rr = /*#__PURE__*/function () {\n  function Rr(t) {\n    _classCallCheck(this, Rr);\n\n    this.N = t, this.Yn = new Map(), this.Xn = new Map();\n  }\n\n  _createClass(Rr, [{\n    key: \"getBundleMetadata\",\n    value: function getBundleMetadata(t, e) {\n      return js.resolve(this.Yn.get(e));\n    }\n  }, {\n    key: \"saveBundleMetadata\",\n    value: function saveBundleMetadata(t, e) {\n      /** Decodes a BundleMetadata proto into a BundleMetadata object. */\n      var n;\n      return this.Yn.set(e.id, {\n        id: (n = e).id,\n        version: n.version,\n        createTime: jn(n.createTime)\n      }), js.resolve();\n    }\n  }, {\n    key: \"getNamedQuery\",\n    value: function getNamedQuery(t, e) {\n      return js.resolve(this.Xn.get(e));\n    }\n  }, {\n    key: \"saveNamedQuery\",\n    value: function saveNamedQuery(t, e) {\n      return this.Xn.set(e.name, function (t) {\n        return {\n          name: t.name,\n          query: _i(t.bundledQuery),\n          readTime: jn(t.readTime)\n        };\n      }(e)), js.resolve();\n    }\n  }]);\n\n  return Rr;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A collection of references to a document from some kind of numbered entity\n * (either a target ID or batch ID). As references are added to or removed from\n * the set corresponding events are emitted to a registered garbage collector.\n *\n * Each reference is represented by a DocumentReference object. Each of them\n * contains enough information to uniquely identify the reference. They are all\n * stored primarily in a set sorted by key. A document is considered garbage if\n * there's no references in that set (this can be efficiently checked thanks to\n * sorting by key).\n *\n * ReferenceSet also keeps a secondary set that contains references sorted by\n * IDs. This one is used to efficiently implement removal of all references by\n * some target ID.\n */\n\n\nvar br = /*#__PURE__*/function () {\n  function br() {\n    _classCallCheck(this, br);\n\n    // A set of outstanding references to a document sorted by key.\n    this.Zn = new gn(Pr.ts), // A set of outstanding references to a document sorted by target id.\n    this.es = new gn(Pr.ns);\n  }\n  /** Returns true if the reference set contains no references. */\n\n\n  _createClass(br, [{\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.Zn.isEmpty();\n    }\n    /** Adds a reference to the given document key for the given ID. */\n\n  }, {\n    key: \"addReference\",\n    value: function addReference(t, e) {\n      var n = new Pr(t, e);\n      this.Zn = this.Zn.add(n), this.es = this.es.add(n);\n    }\n    /** Add references to the given document keys for the given ID. */\n\n  }, {\n    key: \"ss\",\n    value: function ss(t, e) {\n      var _this96 = this;\n\n      t.forEach(function (t) {\n        return _this96.addReference(t, e);\n      });\n    }\n    /**\n     * Removes a reference to the given document key for the given\n     * ID.\n     */\n\n  }, {\n    key: \"removeReference\",\n    value: function removeReference(t, e) {\n      this.rs(new Pr(t, e));\n    }\n  }, {\n    key: \"os\",\n    value: function os(t, e) {\n      var _this97 = this;\n\n      t.forEach(function (t) {\n        return _this97.removeReference(t, e);\n      });\n    }\n    /**\n     * Clears all references with a given ID. Calls removeRef() for each key\n     * removed.\n     */\n\n  }, {\n    key: \"cs\",\n    value: function cs(t) {\n      var _this98 = this;\n\n      var e = new Pt(new ht([])),\n          n = new Pr(e, t),\n          s = new Pr(e, t + 1),\n          i = [];\n      return this.es.forEachInRange([n, s], function (t) {\n        _this98.rs(t), i.push(t.key);\n      }), i;\n    }\n  }, {\n    key: \"us\",\n    value: function us() {\n      var _this99 = this;\n\n      this.Zn.forEach(function (t) {\n        return _this99.rs(t);\n      });\n    }\n  }, {\n    key: \"rs\",\n    value: function rs(t) {\n      this.Zn = this.Zn.delete(t), this.es = this.es.delete(t);\n    }\n  }, {\n    key: \"hs\",\n    value: function hs(t) {\n      var e = new Pt(new ht([])),\n          n = new Pr(e, t),\n          s = new Pr(e, t + 1);\n      var i = Pn();\n      return this.es.forEachInRange([n, s], function (t) {\n        i = i.add(t.key);\n      }), i;\n    }\n  }, {\n    key: \"containsKey\",\n    value: function containsKey(t) {\n      var e = new Pr(t, 0),\n          n = this.Zn.firstAfterOrEqual(e);\n      return null !== n && t.isEqual(n.key);\n    }\n  }]);\n\n  return br;\n}();\n\nvar Pr = /*#__PURE__*/function () {\n  function Pr(t, e) {\n    _classCallCheck(this, Pr);\n\n    this.key = t, this.ls = e;\n  }\n  /** Compare by key then by ID */\n\n\n  _createClass(Pr, null, [{\n    key: \"ts\",\n    value: function ts(t, e) {\n      return Pt.comparator(t.key, e.key) || et(t.ls, e.ls);\n    }\n    /** Compare by ID then by key */\n\n  }, {\n    key: \"ns\",\n    value: function ns(t, e) {\n      return et(t.ls, e.ls) || Pt.comparator(t.key, e.key);\n    }\n  }]);\n\n  return Pr;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar vr = /*#__PURE__*/function () {\n  function vr(t, e) {\n    _classCallCheck(this, vr);\n\n    this.Ht = t, this.referenceDelegate = e,\n    /**\n     * The set of all mutations that have been sent but not yet been applied to\n     * the backend.\n     */\n    this.In = [],\n    /** Next value to use when assigning sequential IDs to each mutation batch. */\n    this.fs = 1,\n    /** An ordered mapping between documents and the mutations batch IDs. */\n    this.ds = new gn(Pr.ts);\n  }\n\n  _createClass(vr, [{\n    key: \"checkEmpty\",\n    value: function checkEmpty(t) {\n      return js.resolve(0 === this.In.length);\n    }\n  }, {\n    key: \"addMutationBatch\",\n    value: function addMutationBatch(t, e, n, s) {\n      var i = this.fs;\n      this.fs++, this.In.length > 0 && this.In[this.In.length - 1];\n      var r = new ni(i, e, n, s);\n      this.In.push(r); // Track references by document key and index collection parents.\n\n      var _iterator34 = _createForOfIteratorHelper(s),\n          _step34;\n\n      try {\n        for (_iterator34.s(); !(_step34 = _iterator34.n()).done;) {\n          var _e30 = _step34.value;\n          this.ds = this.ds.add(new Pr(_e30.key, i)), this.Ht.addToCollectionParentIndex(t, _e30.key.path.popLast());\n        }\n      } catch (err) {\n        _iterator34.e(err);\n      } finally {\n        _iterator34.f();\n      }\n\n      return js.resolve(r);\n    }\n  }, {\n    key: \"lookupMutationBatch\",\n    value: function lookupMutationBatch(t, e) {\n      return js.resolve(this.ws(e));\n    }\n  }, {\n    key: \"getNextMutationBatchAfterBatchId\",\n    value: function getNextMutationBatchAfterBatchId(t, e) {\n      var n = e + 1,\n          s = this._s(n),\n          i = s < 0 ? 0 : s; // The requested batchId may still be out of range so normalize it to the\n      // start of the queue.\n\n\n      return js.resolve(this.In.length > i ? this.In[i] : null);\n    }\n  }, {\n    key: \"getHighestUnacknowledgedBatchId\",\n    value: function getHighestUnacknowledgedBatchId() {\n      return js.resolve(0 === this.In.length ? -1 : this.fs - 1);\n    }\n  }, {\n    key: \"getAllMutationBatches\",\n    value: function getAllMutationBatches(t) {\n      return js.resolve(this.In.slice());\n    }\n  }, {\n    key: \"getAllMutationBatchesAffectingDocumentKey\",\n    value: function getAllMutationBatchesAffectingDocumentKey(t, e) {\n      var _this100 = this;\n\n      var n = new Pr(e, 0),\n          s = new Pr(e, Number.POSITIVE_INFINITY),\n          i = [];\n      return this.ds.forEachInRange([n, s], function (t) {\n        var e = _this100.ws(t.ls);\n\n        i.push(e);\n      }), js.resolve(i);\n    }\n  }, {\n    key: \"getAllMutationBatchesAffectingDocumentKeys\",\n    value: function getAllMutationBatchesAffectingDocumentKeys(t, e) {\n      var _this101 = this;\n\n      var n = new gn(et);\n      return e.forEach(function (t) {\n        var e = new Pr(t, 0),\n            s = new Pr(t, Number.POSITIVE_INFINITY);\n\n        _this101.ds.forEachInRange([e, s], function (t) {\n          n = n.add(t.ls);\n        });\n      }), js.resolve(this.gs(n));\n    }\n  }, {\n    key: \"getAllMutationBatchesAffectingQuery\",\n    value: function getAllMutationBatchesAffectingQuery(t, e) {\n      // Use the query path as a prefix for testing if a document matches the\n      // query.\n      var n = e.path,\n          s = n.length + 1; // Construct a document reference for actually scanning the index. Unlike\n      // the prefix the document key in this reference must have an even number of\n      // segments. The empty segment can be used a suffix of the query path\n      // because it precedes all other segments in an ordered traversal.\n\n      var i = n;\n      Pt.isDocumentKey(i) || (i = i.child(\"\"));\n      var r = new Pr(new Pt(i), 0); // Find unique batchIDs referenced by all documents potentially matching the\n      // query.\n\n      var o = new gn(et);\n      return this.ds.forEachWhile(function (t) {\n        var e = t.key.path;\n        return !!n.isPrefixOf(e) && ( // Rows with document keys more than one segment longer than the query\n        // path can't be matches. For example, a query on 'rooms' can't match\n        // the document /rooms/abc/messages/xyx.\n        // TODO(mcg): we'll need a different scanner when we implement\n        // ancestor queries.\n        e.length === s && (o = o.add(t.ls)), !0);\n      }, r), js.resolve(this.gs(o));\n    }\n  }, {\n    key: \"gs\",\n    value: function gs(t) {\n      var _this102 = this;\n\n      // Construct an array of matching batches, sorted by batchID to ensure that\n      // multiple mutations affecting the same document key are applied in order.\n      var e = [];\n      return t.forEach(function (t) {\n        var n = _this102.ws(t);\n\n        null !== n && e.push(n);\n      }), e;\n    }\n  }, {\n    key: \"removeMutationBatch\",\n    value: function removeMutationBatch(t, e) {\n      var _this103 = this;\n\n      B(0 === this.ys(e.batchId, \"removed\")), this.In.shift();\n      var n = this.ds;\n      return js.forEach(e.mutations, function (s) {\n        var i = new Pr(s.key, e.batchId);\n        return n = n.delete(i), _this103.referenceDelegate.markPotentiallyOrphaned(t, s.key);\n      }).next(function () {\n        _this103.ds = n;\n      });\n    }\n  }, {\n    key: \"te\",\n    value: function te(t) {// No-op since the memory mutation queue does not maintain a separate cache.\n    }\n  }, {\n    key: \"containsKey\",\n    value: function containsKey(t, e) {\n      var n = new Pr(e, 0),\n          s = this.ds.firstAfterOrEqual(n);\n      return js.resolve(e.isEqual(s && s.key));\n    }\n  }, {\n    key: \"performConsistencyCheck\",\n    value: function performConsistencyCheck(t) {\n      return this.In.length, js.resolve();\n    }\n    /**\n     * Finds the index of the given batchId in the mutation queue and asserts that\n     * the resulting index is within the bounds of the queue.\n     *\n     * @param batchId - The batchId to search for\n     * @param action - A description of what the caller is doing, phrased in passive\n     * form (e.g. \"acknowledged\" in a routine that acknowledges batches).\n     */\n\n  }, {\n    key: \"ys\",\n    value: function ys(t, e) {\n      return this._s(t);\n    }\n    /**\n     * Finds the index of the given batchId in the mutation queue. This operation\n     * is O(1).\n     *\n     * @returns The computed index of the batch with the given batchId, based on\n     * the state of the queue. Note this index can be negative if the requested\n     * batchId has already been remvoed from the queue or past the end of the\n     * queue if the batchId is larger than the last added batch.\n     */\n\n  }, {\n    key: \"_s\",\n    value: function _s(t) {\n      if (0 === this.In.length) // As an index this is past the end of the queue\n        return 0; // Examine the front of the queue to figure out the difference between the\n      // batchId and indexes in the array. Note that since the queue is ordered\n      // by batchId, if the first batch has a larger batchId then the requested\n      // batchId doesn't exist in the queue.\n\n      return t - this.In[0].batchId;\n    }\n    /**\n     * A version of lookupMutationBatch that doesn't return a promise, this makes\n     * other functions that uses this code easier to read and more efficent.\n     */\n\n  }, {\n    key: \"ws\",\n    value: function ws(t) {\n      var e = this._s(t);\n\n      if (e < 0 || e >= this.In.length) return null;\n      return this.In[e];\n    }\n  }]);\n\n  return vr;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The memory-only RemoteDocumentCache for IndexedDb. To construct, invoke\n * `newMemoryRemoteDocumentCache()`.\n */\n\n\nvar Vr = /*#__PURE__*/function () {\n  /**\n   * @param sizer - Used to assess the size of a document. For eager GC, this is\n   * expected to just return 0 to avoid unnecessarily doing the work of\n   * calculating the size.\n   */\n  function Vr(t, e) {\n    _classCallCheck(this, Vr);\n\n    this.Ht = t, this.ps = e,\n    /** Underlying cache of documents and their read times. */\n    this.docs = new wn(Pt.comparator),\n    /** Size of all cached documents. */\n    this.size = 0;\n  }\n  /**\n   * Adds the supplied entry to the cache and updates the cache size as appropriate.\n   *\n   * All calls of `addEntry`  are required to go through the RemoteDocumentChangeBuffer\n   * returned by `newChangeBuffer()`.\n   */\n\n\n  _createClass(Vr, [{\n    key: \"addEntry\",\n    value: function addEntry(t, e, n) {\n      var s = e.key,\n          i = this.docs.get(s),\n          r = i ? i.size : 0,\n          o = this.ps(e);\n      return this.docs = this.docs.insert(s, {\n        document: e.clone(),\n        size: o,\n        readTime: n\n      }), this.size += o - r, this.Ht.addToCollectionParentIndex(t, s.path.popLast());\n    }\n    /**\n     * Removes the specified entry from the cache and updates the cache size as appropriate.\n     *\n     * All calls of `removeEntry` are required to go through the RemoteDocumentChangeBuffer\n     * returned by `newChangeBuffer()`.\n     */\n\n  }, {\n    key: \"removeEntry\",\n    value: function removeEntry(t) {\n      var e = this.docs.get(t);\n      e && (this.docs = this.docs.remove(t), this.size -= e.size);\n    }\n  }, {\n    key: \"getEntry\",\n    value: function getEntry(t, e) {\n      var n = this.docs.get(e);\n      return js.resolve(n ? n.document.clone() : Kt.newInvalidDocument(e));\n    }\n  }, {\n    key: \"getEntries\",\n    value: function getEntries(t, e) {\n      var _this104 = this;\n\n      var n = Tn();\n      return e.forEach(function (t) {\n        var e = _this104.docs.get(t);\n\n        n = n.insert(t, e ? e.document.clone() : Kt.newInvalidDocument(t));\n      }), js.resolve(n);\n    }\n  }, {\n    key: \"getDocumentsMatchingQuery\",\n    value: function getDocumentsMatchingQuery(t, e, n) {\n      var s = Tn(); // Documents are ordered by key, so we can use a prefix scan to narrow down\n      // the documents we need to match the query against.\n\n      var i = new Pt(e.path.child(\"\")),\n          r = this.docs.getIteratorFrom(i);\n\n      for (; r.hasNext();) {\n        var _r$getNext = r.getNext(),\n            _t48 = _r$getNext.key,\n            _r$getNext$value = _r$getNext.value,\n            _i9 = _r$getNext$value.document,\n            o = _r$getNext$value.readTime;\n\n        if (!e.path.isPrefixOf(_t48.path)) break;\n        o.compareTo(n) <= 0 || Pe(e, _i9) && (s = s.insert(_i9.key, _i9.clone()));\n      }\n\n      return js.resolve(s);\n    }\n  }, {\n    key: \"Ts\",\n    value: function Ts(t, e) {\n      return js.forEach(this.docs, function (t) {\n        return e(t);\n      });\n    }\n  }, {\n    key: \"newChangeBuffer\",\n    value: function newChangeBuffer(t) {\n      // `trackRemovals` is ignores since the MemoryRemoteDocumentCache keeps\n      // a separate changelog and does not need special handling for removals.\n      return new Sr(this);\n    }\n  }, {\n    key: \"getSize\",\n    value: function getSize(t) {\n      return js.resolve(this.size);\n    }\n  }]);\n\n  return Vr;\n}();\n/**\n * Creates a new memory-only RemoteDocumentCache.\n *\n * @param indexManager - A class that manages collection group indices.\n * @param sizer - Used to assess the size of a document. For eager GC, this is\n * expected to just return 0 to avoid unnecessarily doing the work of\n * calculating the size.\n */\n\n/**\n * Handles the details of adding and updating documents in the MemoryRemoteDocumentCache.\n */\n\n\nvar Sr = /*#__PURE__*/function (_Qi2) {\n  _inherits(Sr, _Qi2);\n\n  var _super23 = _createSuper(Sr);\n\n  function Sr(t) {\n    var _this105;\n\n    _classCallCheck(this, Sr);\n\n    _this105 = _super23.call(this), _this105.Se = t;\n    return _this105;\n  }\n\n  _createClass(Sr, [{\n    key: \"applyChanges\",\n    value: function applyChanges(t) {\n      var _this106 = this;\n\n      var e = [];\n      return this.changes.forEach(function (n, s) {\n        s.document.isValidDocument() ? e.push(_this106.Se.addEntry(t, s.document, _this106.getReadTime(n))) : _this106.Se.removeEntry(n);\n      }), js.waitFor(e);\n    }\n  }, {\n    key: \"getFromCache\",\n    value: function getFromCache(t, e) {\n      return this.Se.getEntry(t, e);\n    }\n  }, {\n    key: \"getAllFromCache\",\n    value: function getAllFromCache(t, e) {\n      return this.Se.getEntries(t, e);\n    }\n  }]);\n\n  return Sr;\n}(Qi);\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar Dr = /*#__PURE__*/function () {\n  function Dr(t) {\n    _classCallCheck(this, Dr);\n\n    this.persistence = t,\n    /**\n     * Maps a target to the data about that target\n     */\n    this.Es = new ji(function (t) {\n      return Wt(t);\n    }, zt),\n    /** The last received snapshot version. */\n    this.lastRemoteSnapshotVersion = rt.min(),\n    /** The highest numbered target ID encountered. */\n    this.highestTargetId = 0,\n    /** The highest sequence number encountered. */\n    this.Is = 0,\n    /**\n     * A ordered bidirectional mapping between documents and the remote target\n     * IDs.\n     */\n    this.As = new br(), this.targetCount = 0, this.Rs = Ni.se();\n  }\n\n  _createClass(Dr, [{\n    key: \"forEachTarget\",\n    value: function forEachTarget(t, e) {\n      return this.Es.forEach(function (t, n) {\n        return e(n);\n      }), js.resolve();\n    }\n  }, {\n    key: \"getLastRemoteSnapshotVersion\",\n    value: function getLastRemoteSnapshotVersion(t) {\n      return js.resolve(this.lastRemoteSnapshotVersion);\n    }\n  }, {\n    key: \"getHighestSequenceNumber\",\n    value: function getHighestSequenceNumber(t) {\n      return js.resolve(this.Is);\n    }\n  }, {\n    key: \"allocateTargetId\",\n    value: function allocateTargetId(t) {\n      return this.highestTargetId = this.Rs.next(), js.resolve(this.highestTargetId);\n    }\n  }, {\n    key: \"setTargetsMetadata\",\n    value: function setTargetsMetadata(t, e, n) {\n      return n && (this.lastRemoteSnapshotVersion = n), e > this.Is && (this.Is = e), js.resolve();\n    }\n  }, {\n    key: \"ce\",\n    value: function ce(t) {\n      this.Es.set(t.target, t);\n      var e = t.targetId;\n      e > this.highestTargetId && (this.Rs = new Ni(e), this.highestTargetId = e), t.sequenceNumber > this.Is && (this.Is = t.sequenceNumber);\n    }\n  }, {\n    key: \"addTargetData\",\n    value: function addTargetData(t, e) {\n      return this.ce(e), this.targetCount += 1, js.resolve();\n    }\n  }, {\n    key: \"updateTargetData\",\n    value: function updateTargetData(t, e) {\n      return this.ce(e), js.resolve();\n    }\n  }, {\n    key: \"removeTargetData\",\n    value: function removeTargetData(t, e) {\n      return this.Es.delete(e.target), this.As.cs(e.targetId), this.targetCount -= 1, js.resolve();\n    }\n  }, {\n    key: \"removeTargets\",\n    value: function removeTargets(t, e, n) {\n      var _this107 = this;\n\n      var s = 0;\n      var i = [];\n      return this.Es.forEach(function (r, o) {\n        o.sequenceNumber <= e && null === n.get(o.targetId) && (_this107.Es.delete(r), i.push(_this107.removeMatchingKeysForTargetId(t, o.targetId)), s++);\n      }), js.waitFor(i).next(function () {\n        return s;\n      });\n    }\n  }, {\n    key: \"getTargetCount\",\n    value: function getTargetCount(t) {\n      return js.resolve(this.targetCount);\n    }\n  }, {\n    key: \"getTargetData\",\n    value: function getTargetData(t, e) {\n      var n = this.Es.get(e) || null;\n      return js.resolve(n);\n    }\n  }, {\n    key: \"addMatchingKeys\",\n    value: function addMatchingKeys(t, e, n) {\n      return this.As.ss(e, n), js.resolve();\n    }\n  }, {\n    key: \"removeMatchingKeys\",\n    value: function removeMatchingKeys(t, e, n) {\n      this.As.os(e, n);\n      var s = this.persistence.referenceDelegate,\n          i = [];\n      return s && e.forEach(function (e) {\n        i.push(s.markPotentiallyOrphaned(t, e));\n      }), js.waitFor(i);\n    }\n  }, {\n    key: \"removeMatchingKeysForTargetId\",\n    value: function removeMatchingKeysForTargetId(t, e) {\n      return this.As.cs(e), js.resolve();\n    }\n  }, {\n    key: \"getMatchingKeysForTargetId\",\n    value: function getMatchingKeysForTargetId(t, e) {\n      var n = this.As.hs(e);\n      return js.resolve(n);\n    }\n  }, {\n    key: \"containsKey\",\n    value: function containsKey(t, e) {\n      return js.resolve(this.As.containsKey(e));\n    }\n  }]);\n\n  return Dr;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A memory-backed instance of Persistence. Data is stored only in RAM and\n * not persisted across sessions.\n */\n\n\nvar Cr = /*#__PURE__*/function () {\n  /**\n   * The constructor accepts a factory for creating a reference delegate. This\n   * allows both the delegate and this instance to have strong references to\n   * each other without having nullable fields that would then need to be\n   * checked or asserted on every access.\n   */\n  function Cr(t, e) {\n    var _this108 = this;\n\n    _classCallCheck(this, Cr);\n\n    this.bs = {}, this.Le = new X(0), this.Be = !1, this.Be = !0, this.referenceDelegate = t(this), this.ze = new Dr(this);\n    this.Ht = new pi(), this.He = function (t, e) {\n      return new Vr(t, e);\n    }(this.Ht, function (t) {\n      return _this108.referenceDelegate.Ps(t);\n    }), this.N = new ri(e), this.Je = new Rr(this.N);\n  }\n\n  _createClass(Cr, [{\n    key: \"start\",\n    value: function start() {\n      return Promise.resolve();\n    }\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {\n      // No durable state to ensure is closed on shutdown.\n      return this.Be = !1, Promise.resolve();\n    }\n  }, {\n    key: \"started\",\n    get: function get() {\n      return this.Be;\n    }\n  }, {\n    key: \"setDatabaseDeletedListener\",\n    value: function setDatabaseDeletedListener() {// No op.\n    }\n  }, {\n    key: \"setNetworkEnabled\",\n    value: function setNetworkEnabled() {// No op.\n    }\n  }, {\n    key: \"getIndexManager\",\n    value: function getIndexManager() {\n      return this.Ht;\n    }\n  }, {\n    key: \"getMutationQueue\",\n    value: function getMutationQueue(t) {\n      var e = this.bs[t.toKey()];\n      return e || (e = new vr(this.Ht, this.referenceDelegate), this.bs[t.toKey()] = e), e;\n    }\n  }, {\n    key: \"getTargetCache\",\n    value: function getTargetCache() {\n      return this.ze;\n    }\n  }, {\n    key: \"getRemoteDocumentCache\",\n    value: function getRemoteDocumentCache() {\n      return this.He;\n    }\n  }, {\n    key: \"getBundleCache\",\n    value: function getBundleCache() {\n      return this.Je;\n    }\n  }, {\n    key: \"runTransaction\",\n    value: function runTransaction(t, e, n) {\n      var _this109 = this;\n\n      $(\"MemoryPersistence\", \"Starting transaction:\", t);\n      var s = new Nr(this.Le.next());\n      return this.referenceDelegate.vs(), n(s).next(function (t) {\n        return _this109.referenceDelegate.Vs(s).next(function () {\n          return t;\n        });\n      }).toPromise().then(function (t) {\n        return s.raiseOnCommittedEvent(), t;\n      });\n    }\n  }, {\n    key: \"Ss\",\n    value: function Ss(t, e) {\n      return js.or(Object.values(this.bs).map(function (n) {\n        return function () {\n          return n.containsKey(t, e);\n        };\n      }));\n    }\n  }]);\n\n  return Cr;\n}();\n/**\n * Memory persistence is not actually transactional, but future implementations\n * may have transaction-scoped state.\n */\n\n\nvar Nr = /*#__PURE__*/function (_Ks2) {\n  _inherits(Nr, _Ks2);\n\n  var _super24 = _createSuper(Nr);\n\n  function Nr(t) {\n    var _this110;\n\n    _classCallCheck(this, Nr);\n\n    _this110 = _super24.call(this), _this110.currentSequenceNumber = t;\n    return _this110;\n  }\n\n  return Nr;\n}(Ks);\n\nvar xr = /*#__PURE__*/function () {\n  function xr(t) {\n    _classCallCheck(this, xr);\n\n    this.persistence = t,\n    /** Tracks all documents that are active in Query views. */\n    this.Ds = new br(),\n    /** The list of documents that are potentially GCed after each transaction. */\n    this.Cs = null;\n  }\n\n  _createClass(xr, [{\n    key: \"xs\",\n    get: function get() {\n      if (this.Cs) return this.Cs;\n      throw L();\n    }\n  }, {\n    key: \"addReference\",\n    value: function addReference(t, e, n) {\n      return this.Ds.addReference(n, e), this.xs.delete(n.toString()), js.resolve();\n    }\n  }, {\n    key: \"removeReference\",\n    value: function removeReference(t, e, n) {\n      return this.Ds.removeReference(n, e), this.xs.add(n.toString()), js.resolve();\n    }\n  }, {\n    key: \"markPotentiallyOrphaned\",\n    value: function markPotentiallyOrphaned(t, e) {\n      return this.xs.add(e.toString()), js.resolve();\n    }\n  }, {\n    key: \"removeTarget\",\n    value: function removeTarget(t, e) {\n      var _this111 = this;\n\n      this.Ds.cs(e.targetId).forEach(function (t) {\n        return _this111.xs.add(t.toString());\n      });\n      var n = this.persistence.getTargetCache();\n      return n.getMatchingKeysForTargetId(t, e.targetId).next(function (t) {\n        t.forEach(function (t) {\n          return _this111.xs.add(t.toString());\n        });\n      }).next(function () {\n        return n.removeTargetData(t, e);\n      });\n    }\n  }, {\n    key: \"vs\",\n    value: function vs() {\n      this.Cs = new Set();\n    }\n  }, {\n    key: \"Vs\",\n    value: function Vs(t) {\n      var _this112 = this;\n\n      // Remove newly orphaned documents.\n      var e = this.persistence.getRemoteDocumentCache().newChangeBuffer();\n      return js.forEach(this.xs, function (n) {\n        var s = Pt.fromPath(n);\n        return _this112.ks(t, s).next(function (t) {\n          t || e.removeEntry(s);\n        });\n      }).next(function () {\n        return _this112.Cs = null, e.apply(t);\n      });\n    }\n  }, {\n    key: \"updateLimboDocument\",\n    value: function updateLimboDocument(t, e) {\n      var _this113 = this;\n\n      return this.ks(t, e).next(function (t) {\n        t ? _this113.xs.delete(e.toString()) : _this113.xs.add(e.toString());\n      });\n    }\n  }, {\n    key: \"Ps\",\n    value: function Ps(t) {\n      // For eager GC, we don't care about the document size, there are no size thresholds.\n      return 0;\n    }\n  }, {\n    key: \"ks\",\n    value: function ks(t, e) {\n      var _this114 = this;\n\n      return js.or([function () {\n        return js.resolve(_this114.Ds.containsKey(e));\n      }, function () {\n        return _this114.persistence.getTargetCache().containsKey(t, e);\n      }, function () {\n        return _this114.persistence.Ss(t, e);\n      }]);\n    }\n  }], [{\n    key: \"Ns\",\n    value: function Ns(t) {\n      return new xr(t);\n    }\n  }]);\n\n  return xr;\n}();\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The format of the LocalStorage key that stores the client state is:\n//     firestore_clients_<persistence_prefix>_<instance_key>\n\n/** Assembles the key for a client state in WebStorage */\n\n\nfunction kr(t, e) {\n  return \"firestore_clients_\".concat(t, \"_\").concat(e);\n} // The format of the WebStorage key that stores the mutation state is:\n//     firestore_mutations_<persistence_prefix>_<batch_id>\n//     (for unauthenticated users)\n// or: firestore_mutations_<persistence_prefix>_<batch_id>_<user_uid>\n// 'user_uid' is last to avoid needing to escape '_' characters that it might\n// contain.\n\n/** Assembles the key for a mutation batch in WebStorage */\n\n\nfunction $r(t, e, n) {\n  var s = \"firestore_mutations_\".concat(t, \"_\").concat(n);\n  return e.isAuthenticated() && (s += \"_\".concat(e.uid)), s;\n} // The format of the WebStorage key that stores a query target's metadata is:\n//     firestore_targets_<persistence_prefix>_<target_id>\n\n/** Assembles the key for a query state in WebStorage */\n\n\nfunction Or(t, e) {\n  return \"firestore_targets_\".concat(t, \"_\").concat(e);\n} // The WebStorage prefix that stores the primary tab's online state. The\n// format of the key is:\n//     firestore_online_state_<persistence_prefix>\n\n/**\n * Holds the state of a mutation batch, including its user ID, batch ID and\n * whether the batch is 'pending', 'acknowledged' or 'rejected'.\n */\n// Visible for testing\n\n\nvar Fr = /*#__PURE__*/function () {\n  function Fr(t, e, n, s) {\n    _classCallCheck(this, Fr);\n\n    this.user = t, this.batchId = e, this.state = n, this.error = s;\n  }\n  /**\n   * Parses a MutationMetadata from its JSON representation in WebStorage.\n   * Logs a warning and returns null if the format of the data is not valid.\n   */\n\n\n  _createClass(Fr, [{\n    key: \"Os\",\n    value: function Os() {\n      var t = {\n        state: this.state,\n        updateTimeMs: Date.now()\n      };\n      return this.error && (t.error = {\n        code: this.error.code,\n        message: this.error.message\n      }), JSON.stringify(t);\n    }\n  }], [{\n    key: \"$s\",\n    value: function $s(t, e, n) {\n      var s = JSON.parse(n);\n      var i,\n          r = \"object\" == typeof s && -1 !== [\"pending\", \"acknowledged\", \"rejected\"].indexOf(s.state) && (void 0 === s.error || \"object\" == typeof s.error);\n      return r && s.error && (r = \"string\" == typeof s.error.message && \"string\" == typeof s.error.code, r && (i = new j(s.error.code, s.error.message))), r ? new Fr(t, e, s.state, i) : (O(\"SharedClientState\", \"Failed to parse mutation state for ID '\".concat(e, \"': \").concat(n)), null);\n    }\n  }]);\n\n  return Fr;\n}();\n/**\n * Holds the state of a query target, including its target ID and whether the\n * target is 'not-current', 'current' or 'rejected'.\n */\n// Visible for testing\n\n\nvar Mr = /*#__PURE__*/function () {\n  function Mr(t, e, n) {\n    _classCallCheck(this, Mr);\n\n    this.targetId = t, this.state = e, this.error = n;\n  }\n  /**\n   * Parses a QueryTargetMetadata from its JSON representation in WebStorage.\n   * Logs a warning and returns null if the format of the data is not valid.\n   */\n\n\n  _createClass(Mr, [{\n    key: \"Os\",\n    value: function Os() {\n      var t = {\n        state: this.state,\n        updateTimeMs: Date.now()\n      };\n      return this.error && (t.error = {\n        code: this.error.code,\n        message: this.error.message\n      }), JSON.stringify(t);\n    }\n  }], [{\n    key: \"$s\",\n    value: function $s(t, e) {\n      var n = JSON.parse(e);\n      var s,\n          i = \"object\" == typeof n && -1 !== [\"not-current\", \"current\", \"rejected\"].indexOf(n.state) && (void 0 === n.error || \"object\" == typeof n.error);\n      return i && n.error && (i = \"string\" == typeof n.error.message && \"string\" == typeof n.error.code, i && (s = new j(n.error.code, n.error.message))), i ? new Mr(t, n.state, s) : (O(\"SharedClientState\", \"Failed to parse target state for ID '\".concat(t, \"': \").concat(e)), null);\n    }\n  }]);\n\n  return Mr;\n}();\n/**\n * This class represents the immutable ClientState for a client read from\n * WebStorage, containing the list of active query targets.\n */\n\n\nvar Lr = /*#__PURE__*/function () {\n  function Lr(t, e) {\n    _classCallCheck(this, Lr);\n\n    this.clientId = t, this.activeTargetIds = e;\n  }\n  /**\n   * Parses a RemoteClientState from the JSON representation in WebStorage.\n   * Logs a warning and returns null if the format of the data is not valid.\n   */\n\n\n  _createClass(Lr, null, [{\n    key: \"$s\",\n    value: function $s(t, e) {\n      var n = JSON.parse(e);\n      var s = \"object\" == typeof n && n.activeTargetIds instanceof Array,\n          i = Vn();\n\n      for (var _t49 = 0; s && _t49 < n.activeTargetIds.length; ++_t49) {\n        s = bt(n.activeTargetIds[_t49]), i = i.add(n.activeTargetIds[_t49]);\n      }\n\n      return s ? new Lr(t, i) : (O(\"SharedClientState\", \"Failed to parse client data for instance '\".concat(t, \"': \").concat(e)), null);\n    }\n  }]);\n\n  return Lr;\n}();\n/**\n * This class represents the online state for all clients participating in\n * multi-tab. The online state is only written to by the primary client, and\n * used in secondary clients to update their query views.\n */\n\n\nvar Br = /*#__PURE__*/function () {\n  function Br(t, e) {\n    _classCallCheck(this, Br);\n\n    this.clientId = t, this.onlineState = e;\n  }\n  /**\n   * Parses a SharedOnlineState from its JSON representation in WebStorage.\n   * Logs a warning and returns null if the format of the data is not valid.\n   */\n\n\n  _createClass(Br, null, [{\n    key: \"$s\",\n    value: function $s(t) {\n      var e = JSON.parse(t);\n      return \"object\" == typeof e && -1 !== [\"Unknown\", \"Online\", \"Offline\"].indexOf(e.onlineState) && \"string\" == typeof e.clientId ? new Br(e.clientId, e.onlineState) : (O(\"SharedClientState\", \"Failed to parse online state: \".concat(t)), null);\n    }\n  }]);\n\n  return Br;\n}();\n/**\n * Metadata state of the local client. Unlike `RemoteClientState`, this class is\n * mutable and keeps track of all pending mutations, which allows us to\n * update the range of pending mutation batch IDs as new mutations are added or\n * removed.\n *\n * The data in `LocalClientState` is not read from WebStorage and instead\n * updated via its instance methods. The updated state can be serialized via\n * `toWebStorageJSON()`.\n */\n// Visible for testing.\n\n\nvar Ur = /*#__PURE__*/function () {\n  function Ur() {\n    _classCallCheck(this, Ur);\n\n    this.activeTargetIds = Vn();\n  }\n\n  _createClass(Ur, [{\n    key: \"Fs\",\n    value: function Fs(t) {\n      this.activeTargetIds = this.activeTargetIds.add(t);\n    }\n  }, {\n    key: \"Ms\",\n    value: function Ms(t) {\n      this.activeTargetIds = this.activeTargetIds.delete(t);\n    }\n    /**\n     * Converts this entry into a JSON-encoded format we can use for WebStorage.\n     * Does not encode `clientId` as it is part of the key in WebStorage.\n     */\n\n  }, {\n    key: \"Os\",\n    value: function Os() {\n      var t = {\n        activeTargetIds: this.activeTargetIds.toArray(),\n        updateTimeMs: Date.now()\n      };\n      return JSON.stringify(t);\n    }\n  }]);\n\n  return Ur;\n}();\n/**\n * `WebStorageSharedClientState` uses WebStorage (window.localStorage) as the\n * backing store for the SharedClientState. It keeps track of all active\n * clients and supports modifications of the local client's data.\n */\n\n\nvar qr = /*#__PURE__*/function () {\n  function qr(t, e, n, s, i) {\n    _classCallCheck(this, qr);\n\n    this.window = t, this.Oe = e, this.persistenceKey = n, this.Ls = s, this.syncEngine = null, this.onlineStateHandler = null, this.sequenceNumberHandler = null, this.Bs = this.Us.bind(this), this.qs = new wn(et), this.started = !1,\n    /**\n     * Captures WebStorage events that occur before `start()` is called. These\n     * events are replayed once `WebStorageSharedClientState` is started.\n     */\n    this.Ks = []; // Escape the special characters mentioned here:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\n\n    var r = n.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    this.storage = this.window.localStorage, this.currentUser = i, this.js = kr(this.persistenceKey, this.Ls), this.Qs =\n    /** Assembles the key for the current sequence number. */\n    function (t) {\n      return \"firestore_sequence_number_\".concat(t);\n    }\n    /**\n    * @license\n    * Copyright 2018 Google LLC\n    *\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    *   http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    */\n    (this.persistenceKey), this.qs = this.qs.insert(this.Ls, new Ur()), this.Ws = new RegExp(\"^firestore_clients_\".concat(r, \"_([^_]*)$\")), this.Gs = new RegExp(\"^firestore_mutations_\".concat(r, \"_(\\\\d+)(?:_(.*))?$\")), this.zs = new RegExp(\"^firestore_targets_\".concat(r, \"_(\\\\d+)$\")), this.Hs =\n    /** Assembles the key for the online state of the primary tab. */\n    function (t) {\n      return \"firestore_online_state_\".concat(t);\n    } // The WebStorage prefix that plays as a event to indicate the remote documents\n    // might have changed due to some secondary tabs loading a bundle.\n    // format of the key is:\n    //     firestore_bundle_loaded_<persistenceKey>\n    (this.persistenceKey), this.Js = function (t) {\n      return \"firestore_bundle_loaded_\".concat(t);\n    } // The WebStorage key prefix for the key that stores the last sequence number allocated. The key\n    // looks like 'firestore_sequence_number_<persistence_prefix>'.\n    (this.persistenceKey), // Rather than adding the storage observer during start(), we add the\n    // storage observer during initialization. This ensures that we collect\n    // events before other components populate their initial state (during their\n    // respective start() calls). Otherwise, we might for example miss a\n    // mutation that is added after LocalStore's start() processed the existing\n    // mutations but before we observe WebStorage events.\n    this.window.addEventListener(\"storage\", this.Bs);\n  }\n  /** Returns 'true' if WebStorage is available in the current environment. */\n\n\n  _createClass(qr, [{\n    key: \"start\",\n    value: function () {\n      var _start = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n        var _this115 = this;\n\n        var t, _iterator35, _step35, _e31, _t51, n, e, _t50, _iterator36, _step36, _t52;\n\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return this.syncEngine.pn();\n\n              case 2:\n                t = _context11.sent;\n                _iterator35 = _createForOfIteratorHelper(t);\n                _context11.prev = 4;\n\n                _iterator35.s();\n\n              case 6:\n                if ((_step35 = _iterator35.n()).done) {\n                  _context11.next = 14;\n                  break;\n                }\n\n                _e31 = _step35.value;\n\n                if (!(_e31 === this.Ls)) {\n                  _context11.next = 10;\n                  break;\n                }\n\n                return _context11.abrupt(\"continue\", 12);\n\n              case 10:\n                _t51 = this.getItem(kr(this.persistenceKey, _e31));\n\n                if (_t51) {\n                  n = Lr.$s(_e31, _t51);\n                  n && (this.qs = this.qs.insert(n.clientId, n));\n                }\n\n              case 12:\n                _context11.next = 6;\n                break;\n\n              case 14:\n                _context11.next = 19;\n                break;\n\n              case 16:\n                _context11.prev = 16;\n                _context11.t0 = _context11[\"catch\"](4);\n\n                _iterator35.e(_context11.t0);\n\n              case 19:\n                _context11.prev = 19;\n\n                _iterator35.f();\n\n                return _context11.finish(19);\n\n              case 22:\n                this.Ys(); // Check if there is an existing online state and call the callback handler\n                // if applicable.\n\n                e = this.storage.getItem(this.Hs);\n\n                if (e) {\n                  _t50 = this.Xs(e);\n                  _t50 && this.Zs(_t50);\n                }\n\n                _iterator36 = _createForOfIteratorHelper(this.Ks);\n\n                try {\n                  for (_iterator36.s(); !(_step36 = _iterator36.n()).done;) {\n                    _t52 = _step36.value;\n                    this.Us(_t52);\n                  }\n                } catch (err) {\n                  _iterator36.e(err);\n                } finally {\n                  _iterator36.f();\n                }\n\n                this.Ks = [], // Register a window unload hook to remove the client metadata entry from\n                // WebStorage even if `shutdown()` was not called.\n                this.window.addEventListener(\"pagehide\", function () {\n                  return _this115.shutdown();\n                }), this.started = !0;\n\n              case 28:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this, [[4, 16, 19, 22]]);\n      }));\n\n      function start() {\n        return _start.apply(this, arguments);\n      }\n\n      return start;\n    }()\n  }, {\n    key: \"writeSequenceNumber\",\n    value: function writeSequenceNumber(t) {\n      this.setItem(this.Qs, JSON.stringify(t));\n    }\n  }, {\n    key: \"getAllActiveQueryTargets\",\n    value: function getAllActiveQueryTargets() {\n      return this.ti(this.qs);\n    }\n  }, {\n    key: \"isActiveQueryTarget\",\n    value: function isActiveQueryTarget(t) {\n      var e = !1;\n      return this.qs.forEach(function (n, s) {\n        s.activeTargetIds.has(t) && (e = !0);\n      }), e;\n    }\n  }, {\n    key: \"addPendingMutation\",\n    value: function addPendingMutation(t) {\n      this.ei(t, \"pending\");\n    }\n  }, {\n    key: \"updateMutationState\",\n    value: function updateMutationState(t, e, n) {\n      this.ei(t, e, n), // Once a final mutation result is observed by other clients, they no longer\n      // access the mutation's metadata entry. Since WebStorage replays events\n      // in order, it is safe to delete the entry right after updating it.\n      this.ni(t);\n    }\n  }, {\n    key: \"addLocalQueryTarget\",\n    value: function addLocalQueryTarget(t) {\n      var e = \"not-current\"; // Lookup an existing query state if the target ID was already registered\n      // by another tab\n\n      if (this.isActiveQueryTarget(t)) {\n        var n = this.storage.getItem(Or(this.persistenceKey, t));\n\n        if (n) {\n          var s = Mr.$s(t, n);\n          s && (e = s.state);\n        }\n      }\n\n      return this.si.Fs(t), this.Ys(), e;\n    }\n  }, {\n    key: \"removeLocalQueryTarget\",\n    value: function removeLocalQueryTarget(t) {\n      this.si.Ms(t), this.Ys();\n    }\n  }, {\n    key: \"isLocalQueryTarget\",\n    value: function isLocalQueryTarget(t) {\n      return this.si.activeTargetIds.has(t);\n    }\n  }, {\n    key: \"clearQueryState\",\n    value: function clearQueryState(t) {\n      this.removeItem(Or(this.persistenceKey, t));\n    }\n  }, {\n    key: \"updateQueryState\",\n    value: function updateQueryState(t, e, n) {\n      this.ii(t, e, n);\n    }\n  }, {\n    key: \"handleUserChange\",\n    value: function handleUserChange(t, e, n) {\n      var _this116 = this;\n\n      e.forEach(function (t) {\n        _this116.ni(t);\n      }), this.currentUser = t, n.forEach(function (t) {\n        _this116.addPendingMutation(t);\n      });\n    }\n  }, {\n    key: \"setOnlineState\",\n    value: function setOnlineState(t) {\n      this.ri(t);\n    }\n  }, {\n    key: \"notifyBundleLoaded\",\n    value: function notifyBundleLoaded() {\n      this.oi();\n    }\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {\n      this.started && (this.window.removeEventListener(\"storage\", this.Bs), this.removeItem(this.js), this.started = !1);\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem(t) {\n      var e = this.storage.getItem(t);\n      return $(\"SharedClientState\", \"READ\", t, e), e;\n    }\n  }, {\n    key: \"setItem\",\n    value: function setItem(t, e) {\n      $(\"SharedClientState\", \"SET\", t, e), this.storage.setItem(t, e);\n    }\n  }, {\n    key: \"removeItem\",\n    value: function removeItem(t) {\n      $(\"SharedClientState\", \"REMOVE\", t), this.storage.removeItem(t);\n    }\n  }, {\n    key: \"Us\",\n    value: function Us(t) {\n      var _this117 = this;\n\n      // Note: The function is typed to take Event to be interface-compatible with\n      // `Window.addEventListener`.\n      var e = t;\n\n      if (e.storageArea === this.storage) {\n        if ($(\"SharedClientState\", \"EVENT\", e.key, e.newValue), e.key === this.js) return void O(\"Received WebStorage notification for local change. Another client might have garbage-collected our state\");\n        this.Oe.enqueueRetryable( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n          var _t53, _t54, _t55, _t56, _t57, _t58;\n\n          return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n            while (1) {\n              switch (_context12.prev = _context12.next) {\n                case 0:\n                  if (!_this117.started) {\n                    _context12.next = 41;\n                    break;\n                  }\n\n                  if (!(null !== e.key)) {\n                    _context12.next = 39;\n                    break;\n                  }\n\n                  if (!_this117.Ws.test(e.key)) {\n                    _context12.next = 11;\n                    break;\n                  }\n\n                  if (!(null == e.newValue)) {\n                    _context12.next = 6;\n                    break;\n                  }\n\n                  _t53 = _this117.ci(e.key);\n                  return _context12.abrupt(\"return\", _this117.ai(_t53, null));\n\n                case 6:\n                  _t54 = _this117.ui(e.key, e.newValue);\n\n                  if (!_t54) {\n                    _context12.next = 9;\n                    break;\n                  }\n\n                  return _context12.abrupt(\"return\", _this117.ai(_t54.clientId, _t54));\n\n                case 9:\n                  _context12.next = 39;\n                  break;\n\n                case 11:\n                  if (!_this117.Gs.test(e.key)) {\n                    _context12.next = 18;\n                    break;\n                  }\n\n                  if (!(null !== e.newValue)) {\n                    _context12.next = 16;\n                    break;\n                  }\n\n                  _t55 = _this117.hi(e.key, e.newValue);\n\n                  if (!_t55) {\n                    _context12.next = 16;\n                    break;\n                  }\n\n                  return _context12.abrupt(\"return\", _this117.li(_t55));\n\n                case 16:\n                  _context12.next = 39;\n                  break;\n\n                case 18:\n                  if (!_this117.zs.test(e.key)) {\n                    _context12.next = 25;\n                    break;\n                  }\n\n                  if (!(null !== e.newValue)) {\n                    _context12.next = 23;\n                    break;\n                  }\n\n                  _t56 = _this117.fi(e.key, e.newValue);\n\n                  if (!_t56) {\n                    _context12.next = 23;\n                    break;\n                  }\n\n                  return _context12.abrupt(\"return\", _this117.di(_t56));\n\n                case 23:\n                  _context12.next = 39;\n                  break;\n\n                case 25:\n                  if (!(e.key === _this117.Hs)) {\n                    _context12.next = 32;\n                    break;\n                  }\n\n                  if (!(null !== e.newValue)) {\n                    _context12.next = 30;\n                    break;\n                  }\n\n                  _t57 = _this117.Xs(e.newValue);\n\n                  if (!_t57) {\n                    _context12.next = 30;\n                    break;\n                  }\n\n                  return _context12.abrupt(\"return\", _this117.Zs(_t57));\n\n                case 30:\n                  _context12.next = 39;\n                  break;\n\n                case 32:\n                  if (!(e.key === _this117.Qs)) {\n                    _context12.next = 37;\n                    break;\n                  }\n\n                  _t58 = function (t) {\n                    var e = X.T;\n                    if (null != t) try {\n                      var n = JSON.parse(t);\n                      B(\"number\" == typeof n), e = n;\n                    } catch (t) {\n                      O(\"SharedClientState\", \"Failed to read sequence number from WebStorage\", t);\n                    }\n                    return e;\n                  }\n                  /**\n                  * `MemorySharedClientState` is a simple implementation of SharedClientState for\n                  * clients using memory persistence. The state in this class remains fully\n                  * isolated and no synchronization is performed.\n                  */\n                  (e.newValue);\n\n                  _t58 !== X.T && _this117.sequenceNumberHandler(_t58);\n                  _context12.next = 39;\n                  break;\n\n                case 37:\n                  if (!(e.key === _this117.Js)) {\n                    _context12.next = 39;\n                    break;\n                  }\n\n                  return _context12.abrupt(\"return\", _this117.syncEngine.wi());\n\n                case 39:\n                  _context12.next = 42;\n                  break;\n\n                case 41:\n                  _this117.Ks.push(e);\n\n                case 42:\n                case \"end\":\n                  return _context12.stop();\n              }\n            }\n          }, _callee12);\n        })));\n      }\n    }\n  }, {\n    key: \"si\",\n    get: function get() {\n      return this.qs.get(this.Ls);\n    }\n  }, {\n    key: \"Ys\",\n    value: function Ys() {\n      this.setItem(this.js, this.si.Os());\n    }\n  }, {\n    key: \"ei\",\n    value: function ei(t, e, n) {\n      var s = new Fr(this.currentUser, t, e, n),\n          i = $r(this.persistenceKey, this.currentUser, t);\n      this.setItem(i, s.Os());\n    }\n  }, {\n    key: \"ni\",\n    value: function ni(t) {\n      var e = $r(this.persistenceKey, this.currentUser, t);\n      this.removeItem(e);\n    }\n  }, {\n    key: \"ri\",\n    value: function ri(t) {\n      var e = {\n        clientId: this.Ls,\n        onlineState: t\n      };\n      this.storage.setItem(this.Hs, JSON.stringify(e));\n    }\n  }, {\n    key: \"ii\",\n    value: function ii(t, e, n) {\n      var s = Or(this.persistenceKey, t),\n          i = new Mr(t, e, n);\n      this.setItem(s, i.Os());\n    }\n  }, {\n    key: \"oi\",\n    value: function oi() {\n      this.setItem(this.Js, \"value-not-used\");\n    }\n    /**\n     * Parses a client state key in WebStorage. Returns null if the key does not\n     * match the expected key format.\n     */\n\n  }, {\n    key: \"ci\",\n    value: function ci(t) {\n      var e = this.Ws.exec(t);\n      return e ? e[1] : null;\n    }\n    /**\n     * Parses a client state in WebStorage. Returns 'null' if the value could not\n     * be parsed.\n     */\n\n  }, {\n    key: \"ui\",\n    value: function ui(t, e) {\n      var n = this.ci(t);\n      return Lr.$s(n, e);\n    }\n    /**\n     * Parses a mutation batch state in WebStorage. Returns 'null' if the value\n     * could not be parsed.\n     */\n\n  }, {\n    key: \"hi\",\n    value: function hi(t, e) {\n      var n = this.Gs.exec(t),\n          s = Number(n[1]),\n          i = void 0 !== n[2] ? n[2] : null;\n      return Fr.$s(new D(i), s, e);\n    }\n    /**\n     * Parses a query target state from WebStorage. Returns 'null' if the value\n     * could not be parsed.\n     */\n\n  }, {\n    key: \"fi\",\n    value: function fi(t, e) {\n      var n = this.zs.exec(t),\n          s = Number(n[1]);\n      return Mr.$s(s, e);\n    }\n    /**\n     * Parses an online state from WebStorage. Returns 'null' if the value\n     * could not be parsed.\n     */\n\n  }, {\n    key: \"Xs\",\n    value: function Xs(t) {\n      return Br.$s(t);\n    }\n  }, {\n    key: \"li\",\n    value: function () {\n      var _li = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(t) {\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                if (!(t.user.uid === this.currentUser.uid)) {\n                  _context13.next = 2;\n                  break;\n                }\n\n                return _context13.abrupt(\"return\", this.syncEngine._i(t.batchId, t.state, t.error));\n\n              case 2:\n                $(\"SharedClientState\", \"Ignoring mutation for non-active user \".concat(t.user.uid));\n\n              case 3:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n\n      function li(_x21) {\n        return _li.apply(this, arguments);\n      }\n\n      return li;\n    }()\n  }, {\n    key: \"di\",\n    value: function di(t) {\n      return this.syncEngine.mi(t.targetId, t.state, t.error);\n    }\n  }, {\n    key: \"ai\",\n    value: function ai(t, e) {\n      var _this118 = this;\n\n      var n = e ? this.qs.insert(t, e) : this.qs.remove(t),\n          s = this.ti(this.qs),\n          i = this.ti(n),\n          r = [],\n          o = [];\n      return i.forEach(function (t) {\n        s.has(t) || r.push(t);\n      }), s.forEach(function (t) {\n        i.has(t) || o.push(t);\n      }), this.syncEngine.gi(r, o).then(function () {\n        _this118.qs = n;\n      });\n    }\n  }, {\n    key: \"Zs\",\n    value: function Zs(t) {\n      // We check whether the client that wrote this online state is still active\n      // by comparing its client ID to the list of clients kept active in\n      // IndexedDb. If a client does not update their IndexedDb client state\n      // within 5 seconds, it is considered inactive and we don't emit an online\n      // state event.\n      this.qs.get(t.clientId) && this.onlineStateHandler(t.onlineState);\n    }\n  }, {\n    key: \"ti\",\n    value: function ti(t) {\n      var e = Vn();\n      return t.forEach(function (t, n) {\n        e = e.unionWith(n.activeTargetIds);\n      }), e;\n    }\n  }], [{\n    key: \"bt\",\n    value: function bt(t) {\n      return !(!t || !t.localStorage);\n    }\n  }]);\n\n  return qr;\n}();\n\nvar Kr = /*#__PURE__*/function () {\n  function Kr() {\n    _classCallCheck(this, Kr);\n\n    this.yi = new Ur(), this.pi = {}, this.onlineStateHandler = null, this.sequenceNumberHandler = null;\n  }\n\n  _createClass(Kr, [{\n    key: \"addPendingMutation\",\n    value: function addPendingMutation(t) {// No op.\n    }\n  }, {\n    key: \"updateMutationState\",\n    value: function updateMutationState(t, e, n) {// No op.\n    }\n  }, {\n    key: \"addLocalQueryTarget\",\n    value: function addLocalQueryTarget(t) {\n      return this.yi.Fs(t), this.pi[t] || \"not-current\";\n    }\n  }, {\n    key: \"updateQueryState\",\n    value: function updateQueryState(t, e, n) {\n      this.pi[t] = e;\n    }\n  }, {\n    key: \"removeLocalQueryTarget\",\n    value: function removeLocalQueryTarget(t) {\n      this.yi.Ms(t);\n    }\n  }, {\n    key: \"isLocalQueryTarget\",\n    value: function isLocalQueryTarget(t) {\n      return this.yi.activeTargetIds.has(t);\n    }\n  }, {\n    key: \"clearQueryState\",\n    value: function clearQueryState(t) {\n      delete this.pi[t];\n    }\n  }, {\n    key: \"getAllActiveQueryTargets\",\n    value: function getAllActiveQueryTargets() {\n      return this.yi.activeTargetIds;\n    }\n  }, {\n    key: \"isActiveQueryTarget\",\n    value: function isActiveQueryTarget(t) {\n      return this.yi.activeTargetIds.has(t);\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      return this.yi = new Ur(), Promise.resolve();\n    }\n  }, {\n    key: \"handleUserChange\",\n    value: function handleUserChange(t, e, n) {// No op.\n    }\n  }, {\n    key: \"setOnlineState\",\n    value: function setOnlineState(t) {// No op.\n    }\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {}\n  }, {\n    key: \"writeSequenceNumber\",\n    value: function writeSequenceNumber(t) {}\n  }, {\n    key: \"notifyBundleLoaded\",\n    value: function notifyBundleLoaded() {// No op.\n    }\n  }]);\n\n  return Kr;\n}();\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar jr = /*#__PURE__*/function () {\n  function jr() {\n    _classCallCheck(this, jr);\n  }\n\n  _createClass(jr, [{\n    key: \"Ti\",\n    value: function Ti(t) {// No-op.\n    }\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {// No-op.\n    }\n  }]);\n\n  return jr;\n}();\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// References to `window` are guarded by BrowserConnectivityMonitor.isAvailable()\n\n/* eslint-disable no-restricted-globals */\n\n/**\n * Browser implementation of ConnectivityMonitor.\n */\n\n\nvar Qr = /*#__PURE__*/function () {\n  function Qr() {\n    var _this119 = this;\n\n    _classCallCheck(this, Qr);\n\n    this.Ei = function () {\n      return _this119.Ii();\n    }, this.Ai = function () {\n      return _this119.Ri();\n    }, this.bi = [], this.Pi();\n  }\n\n  _createClass(Qr, [{\n    key: \"Ti\",\n    value: function Ti(t) {\n      this.bi.push(t);\n    }\n  }, {\n    key: \"shutdown\",\n    value: function shutdown() {\n      window.removeEventListener(\"online\", this.Ei), window.removeEventListener(\"offline\", this.Ai);\n    }\n  }, {\n    key: \"Pi\",\n    value: function Pi() {\n      window.addEventListener(\"online\", this.Ei), window.addEventListener(\"offline\", this.Ai);\n    }\n  }, {\n    key: \"Ii\",\n    value: function Ii() {\n      $(\"ConnectivityMonitor\", \"Network connectivity changed: AVAILABLE\");\n\n      var _iterator37 = _createForOfIteratorHelper(this.bi),\n          _step37;\n\n      try {\n        for (_iterator37.s(); !(_step37 = _iterator37.n()).done;) {\n          var t = _step37.value;\n          t(0\n          /* AVAILABLE */\n          );\n        }\n      } catch (err) {\n        _iterator37.e(err);\n      } finally {\n        _iterator37.f();\n      }\n    }\n  }, {\n    key: \"Ri\",\n    value: function Ri() {\n      $(\"ConnectivityMonitor\", \"Network connectivity changed: UNAVAILABLE\");\n\n      var _iterator38 = _createForOfIteratorHelper(this.bi),\n          _step38;\n\n      try {\n        for (_iterator38.s(); !(_step38 = _iterator38.n()).done;) {\n          var t = _step38.value;\n          t(1\n          /* UNAVAILABLE */\n          );\n        }\n      } catch (err) {\n        _iterator38.e(err);\n      } finally {\n        _iterator38.f();\n      }\n    } // TODO(chenbrian): Consider passing in window either into this component or\n    // here for testing via FakeWindow.\n\n    /** Checks that all used attributes of window are available. */\n\n  }], [{\n    key: \"bt\",\n    value: function bt() {\n      return \"undefined\" != typeof window && void 0 !== window.addEventListener && void 0 !== window.removeEventListener;\n    }\n  }]);\n\n  return Qr;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar Wr = {\n  BatchGetDocuments: \"batchGet\",\n  Commit: \"commit\",\n  RunQuery: \"runQuery\"\n};\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provides a simple helper class that implements the Stream interface to\n * bridge to other implementations that are streams but do not implement the\n * interface. The stream callbacks are invoked with the callOn... methods.\n */\n\nvar Gr = /*#__PURE__*/function () {\n  function Gr(t) {\n    _classCallCheck(this, Gr);\n\n    this.vi = t.vi, this.Vi = t.Vi;\n  }\n\n  _createClass(Gr, [{\n    key: \"Si\",\n    value: function Si(t) {\n      this.Di = t;\n    }\n  }, {\n    key: \"Ci\",\n    value: function Ci(t) {\n      this.Ni = t;\n    }\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(t) {\n      this.xi = t;\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.Vi();\n    }\n  }, {\n    key: \"send\",\n    value: function send(t) {\n      this.vi(t);\n    }\n  }, {\n    key: \"ki\",\n    value: function ki() {\n      this.Di();\n    }\n  }, {\n    key: \"$i\",\n    value: function $i(t) {\n      this.Ni(t);\n    }\n  }, {\n    key: \"Oi\",\n    value: function Oi(t) {\n      this.xi(t);\n    }\n  }]);\n\n  return Gr;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar zr = /*#__PURE__*/function (_ref21) {\n  _inherits(zr, _ref21);\n\n  var _super25 = _createSuper(zr);\n\n  function zr(t) {\n    var _this120;\n\n    _classCallCheck(this, zr);\n\n    _this120 = _super25.call(this, t), _this120.forceLongPolling = t.forceLongPolling, _this120.autoDetectLongPolling = t.autoDetectLongPolling, _this120.useFetchStreams = t.useFetchStreams;\n    return _this120;\n  }\n\n  _createClass(zr, [{\n    key: \"qi\",\n    value: function qi(t, e, n, s) {\n      return new Promise(function (i, r) {\n        var o = new XhrIo();\n        o.listenOnce(EventType.COMPLETE, function () {\n          try {\n            switch (o.getLastErrorCode()) {\n              case ErrorCode.NO_ERROR:\n                var _e32 = o.getResponseJson();\n\n                $(\"Connection\", \"XHR received:\", JSON.stringify(_e32)), i(_e32);\n                break;\n\n              case ErrorCode.TIMEOUT:\n                $(\"Connection\", 'RPC \"' + t + '\" timed out'), r(new j(K.DEADLINE_EXCEEDED, \"Request time out\"));\n                break;\n\n              case ErrorCode.HTTP_ERROR:\n                var _n19 = o.getStatus();\n\n                if ($(\"Connection\", 'RPC \"' + t + '\" failed with status:', _n19, \"response text:\", o.getResponseText()), _n19 > 0) {\n                  var _t59 = o.getResponseJson().error;\n\n                  if (_t59 && _t59.status && _t59.message) {\n                    var _e33 = function (t) {\n                      var e = t.toLowerCase().replace(/_/g, \"-\");\n                      return Object.values(K).indexOf(e) >= 0 ? e : K.UNKNOWN;\n                    }(_t59.status);\n\n                    r(new j(_e33, _t59.message));\n                  } else r(new j(K.UNKNOWN, \"Server responded with status \" + o.getStatus()));\n                } else // If we received an HTTP_ERROR but there's no status code,\n                  // it's most probably a connection issue\n                  r(new j(K.UNAVAILABLE, \"Connection failed.\"));\n\n                break;\n\n              default:\n                L();\n            }\n          } finally {\n            $(\"Connection\", 'RPC \"' + t + '\" completed.');\n          }\n        });\n        var c = JSON.stringify(s);\n        o.send(e, \"POST\", c, n, 15);\n      });\n    }\n  }, {\n    key: \"ji\",\n    value: function ji(t, e) {\n      var n = [this.Fi, \"/\", \"google.firestore.v1.Firestore\", \"/\", t, \"/channel\"],\n          s = createWebChannelTransport(),\n          i = getStatEventTarget(),\n          r = {\n        // Required for backend stickiness, routing behavior is based on this\n        // parameter.\n        httpSessionIdParam: \"gsessionid\",\n        initMessageHeaders: {},\n        messageUrlParams: {\n          // This param is used to improve routing and project isolation by the\n          // backend and must be included in every request.\n          database: \"projects/\".concat(this.databaseId.projectId, \"/databases/\").concat(this.databaseId.database)\n        },\n        sendRawJson: !0,\n        supportsCrossDomainXhr: !0,\n        internalChannelParams: {\n          // Override the default timeout (randomized between 10-20 seconds) since\n          // a large write batch on a slow internet connection may take a long\n          // time to send to the backend. Rather than have WebChannel impose a\n          // tight timeout which could lead to infinite timeouts and retries, we\n          // set it very large (5-10 minutes) and rely on the browser's builtin\n          // timeouts to kick in if the request isn't working.\n          forwardChannelRequestTimeoutMs: 6e5\n        },\n        forceLongPolling: this.forceLongPolling,\n        detectBufferingProxy: this.autoDetectLongPolling\n      };\n      this.useFetchStreams && (r.xmlHttpFactory = new FetchXmlHttpFactory({})), this.Ui(r.initMessageHeaders, e), // Sending the custom headers we just added to request.initMessageHeaders\n      // (Authorization, etc.) will trigger the browser to make a CORS preflight\n      // request because the XHR will no longer meet the criteria for a \"simple\"\n      // CORS request:\n      // https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Simple_requests\n      // Therefore to avoid the CORS preflight request (an extra network\n      // roundtrip), we use the httpHeadersOverwriteParam option to specify that\n      // the headers should instead be encoded into a special \"$httpHeaders\" query\n      // parameter, which is recognized by the webchannel backend. This is\n      // formally defined here:\n      // https://github.com/google/closure-library/blob/b0e1815b13fb92a46d7c9b3c30de5d6a396a3245/closure/goog/net/rpc/httpcors.js#L32\n      // TODO(b/145624756): There is a backend bug where $httpHeaders isn't respected if the request\n      // doesn't have an Origin header. So we have to exclude a few browser environments that are\n      // known to (sometimes) not include an Origin. See\n      // https://github.com/firebase/firebase-js-sdk/issues/1491.\n      isMobileCordova() || isReactNative() || isElectron() || isIE() || isUWP() || isBrowserExtension() || (r.httpHeadersOverwriteParam = \"$httpHeaders\");\n      var o = n.join(\"\");\n      $(\"Connection\", \"Creating WebChannel: \" + o, r);\n      var c = s.createWebChannel(o, r); // WebChannel supports sending the first message with the handshake - saving\n      // a network round trip. However, it will have to call send in the same\n      // JS event loop as open. In order to enforce this, we delay actually\n      // opening the WebChannel until send is called. Whether we have called\n      // open is tracked with this variable.\n\n      var a = !1,\n          u = !1; // A flag to determine whether the stream was closed (by us or through an\n      // error/close event) to avoid delivering multiple close events or sending\n      // on a closed stream\n\n      var h = new Gr({\n        vi: function vi(t) {\n          u ? $(\"Connection\", \"Not sending because WebChannel is closed:\", t) : (a || ($(\"Connection\", \"Opening WebChannel transport.\"), c.open(), a = !0), $(\"Connection\", \"WebChannel sending:\", t), c.send(t));\n        },\n        Vi: function Vi() {\n          return c.close();\n        }\n      }),\n          g = function g(t, e, n) {\n        // TODO(dimond): closure typing seems broken because WebChannel does\n        // not implement goog.events.Listenable\n        t.listen(e, function (t) {\n          try {\n            n(t);\n          } catch (t) {\n            setTimeout(function () {\n              throw t;\n            }, 0);\n          }\n        });\n      }; // Closure events are guarded and exceptions are swallowed, so catch any\n      // exception and rethrow using a setTimeout so they become visible again.\n      // Note that eventually this function could go away if we are confident\n      // enough the code is exception free.\n\n\n      return g(c, WebChannel.EventType.OPEN, function () {\n        u || $(\"Connection\", \"WebChannel transport opened.\");\n      }), g(c, WebChannel.EventType.CLOSE, function () {\n        u || (u = !0, $(\"Connection\", \"WebChannel transport closed\"), h.$i());\n      }), g(c, WebChannel.EventType.ERROR, function (t) {\n        u || (u = !0, F(\"Connection\", \"WebChannel transport errored:\", t), h.$i(new j(K.UNAVAILABLE, \"The operation could not be completed\")));\n      }), g(c, WebChannel.EventType.MESSAGE, function (t) {\n        var e;\n\n        if (!u) {\n          var _n20 = t.data[0];\n          B(!!_n20); // TODO(b/35143891): There is a bug in One Platform that caused errors\n          // (and only errors) to be wrapped in an extra array. To be forward\n          // compatible with the bug we need to check either condition. The latter\n          // can be removed once the fix has been rolled out.\n          // Use any because msgData.error is not typed.\n\n          var _s14 = _n20,\n              _i10 = _s14.error || (null === (e = _s14[0]) || void 0 === e ? void 0 : e.error);\n\n          if (_i10) {\n            $(\"Connection\", \"WebChannel received error:\", _i10); // error.status will be a string like 'OK' or 'NOT_FOUND'.\n\n            var _t60 = _i10.status;\n\n            var _e34 =\n            /**\n            * Maps an error Code from a GRPC status identifier like 'NOT_FOUND'.\n            *\n            * @returns The Code equivalent to the given status string or undefined if\n            *     there is no match.\n            */\n            function (t) {\n              // lookup by string\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              var e = hn[t];\n              if (void 0 !== e) return dn(e);\n            }(_t60),\n                _n21 = _i10.message;\n\n            void 0 === _e34 && (_e34 = K.INTERNAL, _n21 = \"Unknown error status: \" + _t60 + \" with message \" + _i10.message), // Mark closed so no further events are propagated\n            u = !0, h.$i(new j(_e34, _n21)), c.close();\n          } else $(\"Connection\", \"WebChannel received:\", _n20), h.Oi(_n20);\n        }\n      }), g(i, Event.STAT_EVENT, function (t) {\n        t.stat === Stat.PROXY ? $(\"Connection\", \"Detected buffering proxy\") : t.stat === Stat.NOPROXY && $(\"Connection\", \"Detected no buffering proxy\");\n      }), setTimeout(function () {\n        // Technically we could/should wait for the WebChannel opened event,\n        // but because we want to send the first message with the WebChannel\n        // handshake we pretend the channel opened here (asynchronously), and\n        // then delay the actual open until the first message is sent.\n        h.ki();\n      }, 0), h;\n    }\n  }]);\n\n  return zr;\n}(\n/*#__PURE__*/\n\n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nfunction () {\n  function _class3(t) {\n    _classCallCheck(this, _class3);\n\n    this.databaseInfo = t, this.databaseId = t.databaseId;\n    var e = t.ssl ? \"https\" : \"http\";\n    this.Fi = e + \"://\" + t.host, this.Mi = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n  }\n\n  _createClass(_class3, [{\n    key: \"Li\",\n    value: function Li(t, e, n, s) {\n      var i = this.Bi(t, e);\n      $(\"RestConnection\", \"Sending: \", i, n);\n      var r = {};\n      return this.Ui(r, s), this.qi(t, i, r, n).then(function (t) {\n        return $(\"RestConnection\", \"Received: \", t), t;\n      }, function (e) {\n        throw F(\"RestConnection\", \"\".concat(t, \" failed with error: \"), e, \"url: \", i, \"request:\", n), e;\n      });\n    }\n  }, {\n    key: \"Ki\",\n    value: function Ki(t, e, n, s) {\n      // The REST API automatically aggregates all of the streamed results, so we\n      // can just use the normal invoke() method.\n      return this.Li(t, e, n, s);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */\n\n  }, {\n    key: \"Ui\",\n    value:\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */\n    function Ui(t, e) {\n      if (t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + C, // Content-Type: text/plain will avoid preflight requests which might\n      // mess with CORS and redirects by proxies. If we add custom headers\n      // we will need to change this code to potentially use the $httpOverwrite\n      // parameter supported by ESF to avoid triggering preflight requests.\n      t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), e) for (var n in e.authHeaders) {\n        e.authHeaders.hasOwnProperty(n) && (t[n] = e.authHeaders[n]);\n      }\n    }\n  }, {\n    key: \"Bi\",\n    value: function Bi(t, e) {\n      var n = Wr[t];\n      return \"\".concat(this.Fi, \"/v1/\").concat(e, \":\").concat(n);\n    }\n  }]);\n\n  return _class3;\n}());\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Initializes the WebChannelConnection for the browser. */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** The Platform's 'window' implementation or null if not available. */\n\n\nfunction Hr() {\n  // `window` is not always available, e.g. in ReactNative and WebWorkers.\n  // eslint-disable-next-line no-restricted-globals\n  return \"undefined\" != typeof window ? window : null;\n}\n/** The Platform's 'document' implementation or null if not available. */\n\n\nfunction Jr() {\n  // `document` is not always available, e.g. in ReactNative and WebWorkers.\n  // eslint-disable-next-line no-restricted-globals\n  return \"undefined\" != typeof document ? document : null;\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction Yr(t) {\n  return new Bn(t,\n  /* useProto3Json= */\n  !0);\n}\n/**\n * An instance of the Platform's 'TextEncoder' implementation.\n */\n\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\n\n\nvar Xr = /*#__PURE__*/function () {\n  function Xr(\n  /**\n   * The AsyncQueue to run backoff operations on.\n   */\n  t,\n  /**\n   * The ID to use when scheduling backoff operations on the AsyncQueue.\n   */\n  e) {\n    var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1e3;\n    var s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1.5;\n    var i = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 6e4;\n\n    _classCallCheck(this, Xr);\n\n    this.Oe = t, this.timerId = e, this.Qi = n, this.Wi = s, this.Gi = i, this.zi = 0, this.Hi = null,\n    /** The last backoff attempt, as epoch milliseconds. */\n    this.Ji = Date.now(), this.reset();\n  }\n  /**\n   * Resets the backoff delay.\n   *\n   * The very next backoffAndWait() will have no delay. If it is called again\n   * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n   * subsequent ones will increase according to the backoffFactor.\n   */\n\n\n  _createClass(Xr, [{\n    key: \"reset\",\n    value: function reset() {\n      this.zi = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */\n\n  }, {\n    key: \"Yi\",\n    value: function Yi() {\n      this.zi = this.Gi;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */\n\n  }, {\n    key: \"Xi\",\n    value: function Xi(t) {\n      var _this121 = this;\n\n      // Cancel any pending backoff operation.\n      this.cancel(); // First schedule using the current base (which may be 0 and should be\n      // honored as such).\n\n      var e = Math.floor(this.zi + this.Zi()),\n          n = Math.max(0, Date.now() - this.Ji),\n          s = Math.max(0, e - n); // Guard against lastAttemptTime being in the future due to a clock change.\n\n      s > 0 && $(\"ExponentialBackoff\", \"Backing off for \".concat(s, \" ms (base delay: \").concat(this.zi, \" ms, delay with jitter: \").concat(e, \" ms, last attempt: \").concat(n, \" ms ago)\")), this.Hi = this.Oe.enqueueAfterDelay(this.timerId, s, function () {\n        return _this121.Ji = Date.now(), t();\n      }), // Apply backoff factor to determine next delay and ensure it is within\n      // bounds.\n      this.zi *= this.Wi, this.zi < this.Qi && (this.zi = this.Qi), this.zi > this.Gi && (this.zi = this.Gi);\n    }\n  }, {\n    key: \"tr\",\n    value: function tr() {\n      null !== this.Hi && (this.Hi.skipDelay(), this.Hi = null);\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      null !== this.Hi && (this.Hi.cancel(), this.Hi = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */\n\n  }, {\n    key: \"Zi\",\n    value: function Zi() {\n      return (Math.random() - .5) * this.zi;\n    }\n  }]);\n\n  return Xr;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A PersistentStream is an abstract base class that represents a streaming RPC\n * to the Firestore backend. It's built on top of the connections own support\n * for streaming RPCs, and adds several critical features for our clients:\n *\n *   - Exponential backoff on failure\n *   - Authentication via CredentialsProvider\n *   - Dispatching all callbacks into the shared worker queue\n *   - Closing idle streams after 60 seconds of inactivity\n *\n * Subclasses of PersistentStream implement serialization of models to and\n * from the JSON representation of the protocol buffers for a specific\n * streaming RPC.\n *\n * ## Starting and Stopping\n *\n * Streaming RPCs are stateful and need to be start()ed before messages can\n * be sent and received. The PersistentStream will call the onOpen() function\n * of the listener once the stream is ready to accept requests.\n *\n * Should a start() fail, PersistentStream will call the registered onClose()\n * listener with a FirestoreError indicating what went wrong.\n *\n * A PersistentStream can be started and stopped repeatedly.\n *\n * Generic types:\n *  SendType: The type of the outgoing message of the underlying\n *    connection stream\n *  ReceiveType: The type of the incoming message of the underlying\n *    connection stream\n *  ListenerType: The type of the listener that will be used for callbacks\n */\n\n\nvar Zr = /*#__PURE__*/function () {\n  function Zr(t, e, n, s, i, r, o) {\n    _classCallCheck(this, Zr);\n\n    this.Oe = t, this.er = n, this.nr = s, this.sr = i, this.credentialsProvider = r, this.listener = o, this.state = 0\n    /* Initial */\n    ,\n    /**\n     * A close count that's incremented every time the stream is closed; used by\n     * getCloseGuardedDispatcher() to invalidate callbacks that happen after\n     * close.\n     */\n    this.ir = 0, this.rr = null, this.cr = null, this.stream = null, this.ar = new Xr(t, e);\n  }\n  /**\n   * Returns true if start() has been called and no error has occurred. True\n   * indicates the stream is open or in the process of opening (which\n   * encompasses respecting backoff, getting auth tokens, and starting the\n   * actual RPC). Use isOpen() to determine if the stream is open and ready for\n   * outbound requests.\n   */\n\n\n  _createClass(Zr, [{\n    key: \"ur\",\n    value: function ur() {\n      return 1\n      /* Starting */\n      === this.state || 5\n      /* Backoff */\n      === this.state || this.hr();\n    }\n    /**\n     * Returns true if the underlying RPC is open (the onOpen() listener has been\n     * called) and the stream is ready for outbound requests.\n     */\n\n  }, {\n    key: \"hr\",\n    value: function hr() {\n      return 2\n      /* Open */\n      === this.state || 3\n      /* Healthy */\n      === this.state;\n    }\n    /**\n     * Starts the RPC. Only allowed if isStarted() returns false. The stream is\n     * not immediately ready for use: onOpen() will be invoked when the RPC is\n     * ready for outbound requests, at which point isOpen() will return true.\n     *\n     * When start returns, isStarted() will return true.\n     */\n\n  }, {\n    key: \"start\",\n    value: function start() {\n      4\n      /* Error */\n      !== this.state ? this.auth() : this.lr();\n    }\n    /**\n     * Stops the RPC. This call is idempotent and allowed regardless of the\n     * current isStarted() state.\n     *\n     * When stop returns, isStarted() and isOpen() will both return false.\n     */\n\n  }, {\n    key: \"stop\",\n    value: function () {\n      var _stop = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14() {\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                _context14.t0 = this.ur();\n\n                if (!_context14.t0) {\n                  _context14.next = 4;\n                  break;\n                }\n\n                _context14.next = 4;\n                return this.close(0\n                /* Initial */\n                );\n\n              case 4:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this);\n      }));\n\n      function stop() {\n        return _stop.apply(this, arguments);\n      }\n\n      return stop;\n    }()\n    /**\n     * After an error the stream will usually back off on the next attempt to\n     * start it. If the error warrants an immediate restart of the stream, the\n     * sender can use this to indicate that the receiver should not back off.\n     *\n     * Each error will call the onClose() listener. That function can decide to\n     * inhibit backoff if required.\n     */\n\n  }, {\n    key: \"dr\",\n    value: function dr() {\n      this.state = 0\n      /* Initial */\n      , this.ar.reset();\n    }\n    /**\n     * Marks this stream as idle. If no further actions are performed on the\n     * stream for one minute, the stream will automatically close itself and\n     * notify the stream's onClose() handler with Status.OK. The stream will then\n     * be in a !isStarted() state, requiring the caller to start the stream again\n     * before further use.\n     *\n     * Only streams that are in state 'Open' can be marked idle, as all other\n     * states imply pending network operations.\n     */\n\n  }, {\n    key: \"wr\",\n    value: function wr() {\n      var _this122 = this;\n\n      // Starts the idle time if we are in state 'Open' and are not yet already\n      // running a timer (in which case the previous idle timeout still applies).\n      this.hr() && null === this.rr && (this.rr = this.Oe.enqueueAfterDelay(this.er, 6e4, function () {\n        return _this122._r();\n      }));\n    }\n    /** Sends a message to the underlying stream. */\n\n  }, {\n    key: \"mr\",\n    value: function mr(t) {\n      this.gr(), this.stream.send(t);\n    }\n    /** Called by the idle timer when the stream should close due to inactivity. */\n\n  }, {\n    key: \"_r\",\n    value: function () {\n      var _r7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15() {\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                if (!this.hr()) {\n                  _context15.next = 2;\n                  break;\n                }\n\n                return _context15.abrupt(\"return\", this.close(0\n                /* Initial */\n                ));\n\n              case 2:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function _r() {\n        return _r7.apply(this, arguments);\n      }\n\n      return _r;\n    }()\n    /** Marks the stream as active again. */\n\n  }, {\n    key: \"gr\",\n    value: function gr() {\n      this.rr && (this.rr.cancel(), this.rr = null);\n    }\n    /** Cancels the health check delayed operation. */\n\n  }, {\n    key: \"yr\",\n    value: function yr() {\n      this.cr && (this.cr.cancel(), this.cr = null);\n    }\n    /**\n     * Closes the stream and cleans up as necessary:\n     *\n     * * closes the underlying GRPC stream;\n     * * calls the onClose handler with the given 'error';\n     * * sets internal stream state to 'finalState';\n     * * adjusts the backoff timer based on the error\n     *\n     * A new stream can be opened by calling start().\n     *\n     * @param finalState - the intended state of the stream after closing.\n     * @param error - the error the connection was closed with.\n     */\n\n  }, {\n    key: \"close\",\n    value: function () {\n      var _close = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16(t, e) {\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                this.gr();\n                this.yr();\n                this.ar.cancel();\n                // Invalidates any stream-related callbacks (e.g. from auth or the\n                // underlying stream), guaranteeing they won't execute.\n                this.ir++;\n                4\n                /* Error */\n                !== t ? // If this is an intentional close ensure we don't delay our next connection attempt.\n                this.ar.reset() : e && e.code === K.RESOURCE_EXHAUSTED ? ( // Log the error. (Probably either 'quota exceeded' or 'max queue length reached'.)\n                O(e.toString()), O(\"Using maximum backoff delay to prevent overloading the backend.\"), this.ar.Yi()) : e && e.code === K.UNAUTHENTICATED && 3\n                /* Healthy */\n                !== this.state && // \"unauthenticated\" error means the token was rejected. This should rarely\n                // happen since both Auth and AppCheck ensure a sufficient TTL when we\n                // request a token. If a user manually resets their system clock this can\n                // fail, however. In this case, we should get a Code.UNAUTHENTICATED error\n                // before we received the first message and we need to invalidate the token\n                // to ensure that we fetch a new token.\n                this.credentialsProvider.invalidateToken();\n                // Clean up the underlying stream because we are no longer interested in events.\n                null !== this.stream && (this.pr(), this.stream.close(), this.stream = null);\n                // This state must be assigned before calling onClose() to allow the callback to\n                // inhibit backoff or otherwise manipulate the state in its non-started state.\n                this.state = t;\n                _context16.next = 9;\n                return this.listener.Ci(e);\n\n              case 9:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function close(_x22, _x23) {\n        return _close.apply(this, arguments);\n      }\n\n      return close;\n    }()\n    /**\n     * Can be overridden to perform additional cleanup before the stream is closed.\n     * Calling super.tearDown() is not required.\n     */\n\n  }, {\n    key: \"pr\",\n    value: function pr() {}\n  }, {\n    key: \"auth\",\n    value: function auth() {\n      var _this123 = this;\n\n      this.state = 1\n      /* Starting */\n      ;\n      var t = this.Tr(this.ir),\n          e = this.ir; // TODO(mikelehen): Just use dispatchIfNotClosed, but see TODO below.\n\n      this.credentialsProvider.getToken().then(function (t) {\n        // Stream can be stopped while waiting for authentication.\n        // TODO(mikelehen): We really should just use dispatchIfNotClosed\n        // and let this dispatch onto the queue, but that opened a spec test can\n        // of worms that I don't want to deal with in this PR.\n        _this123.ir === e && // Normally we'd have to schedule the callback on the AsyncQueue.\n        // However, the following calls are safe to be called outside the\n        // AsyncQueue since they don't chain asynchronous calls\n        _this123.Er(t);\n      }, function (e) {\n        t(function () {\n          var t = new j(K.UNKNOWN, \"Fetching auth token failed: \" + e.message);\n          return _this123.Ir(t);\n        });\n      });\n    }\n  }, {\n    key: \"Er\",\n    value: function Er(t) {\n      var _this124 = this;\n\n      var e = this.Tr(this.ir);\n      this.stream = this.Ar(t), this.stream.Si(function () {\n        e(function () {\n          return _this124.state = 2\n          /* Open */\n          , _this124.cr = _this124.Oe.enqueueAfterDelay(_this124.nr, 1e4, function () {\n            return _this124.hr() && (_this124.state = 3\n            /* Healthy */\n            ), Promise.resolve();\n          }), _this124.listener.Si();\n        });\n      }), this.stream.Ci(function (t) {\n        e(function () {\n          return _this124.Ir(t);\n        });\n      }), this.stream.onMessage(function (t) {\n        e(function () {\n          return _this124.onMessage(t);\n        });\n      });\n    }\n  }, {\n    key: \"lr\",\n    value: function lr() {\n      var _this125 = this;\n\n      this.state = 5\n      /* Backoff */\n      , this.ar.Xi( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17() {\n        return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                _this125.state = 0\n                /* Initial */\n                , _this125.start();\n\n              case 1:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17);\n      })));\n    } // Visible for tests\n\n  }, {\n    key: \"Ir\",\n    value: function Ir(t) {\n      // In theory the stream could close cleanly, however, in our current model\n      // we never expect this to happen because if we stop a stream ourselves,\n      // this callback will never be called. To prevent cases where we retry\n      // without a backoff accidentally, we set the stream to error in all cases.\n      return $(\"PersistentStream\", \"close with error: \".concat(t)), this.stream = null, this.close(4\n      /* Error */\n      , t);\n    }\n    /**\n     * Returns a \"dispatcher\" function that dispatches operations onto the\n     * AsyncQueue but only runs them if closeCount remains unchanged. This allows\n     * us to turn auth / stream callbacks into no-ops if the stream is closed /\n     * re-opened, etc.\n     */\n\n  }, {\n    key: \"Tr\",\n    value: function Tr(t) {\n      var _this126 = this;\n\n      return function (e) {\n        _this126.Oe.enqueueAndForget(function () {\n          return _this126.ir === t ? e() : ($(\"PersistentStream\", \"stream callback skipped by getCloseGuardedDispatcher.\"), Promise.resolve());\n        });\n      };\n    }\n  }]);\n\n  return Zr;\n}();\n/**\n * A PersistentStream that implements the Listen RPC.\n *\n * Once the Listen stream has called the onOpen() listener, any number of\n * listen() and unlisten() calls can be made to control what changes will be\n * sent from the server for ListenResponses.\n */\n\n\nvar to = /*#__PURE__*/function (_Zr) {\n  _inherits(to, _Zr);\n\n  var _super26 = _createSuper(to);\n\n  function to(t, e, n, s, i) {\n    var _this127;\n\n    _classCallCheck(this, to);\n\n    _this127 = _super26.call(this, t, \"listen_stream_connection_backoff\"\n    /* ListenStreamConnectionBackoff */\n    , \"listen_stream_idle\"\n    /* ListenStreamIdle */\n    , \"health_check_timeout\"\n    /* HealthCheckTimeout */\n    , e, n, i), _this127.N = s;\n    return _this127;\n  }\n\n  _createClass(to, [{\n    key: \"Ar\",\n    value: function Ar(t) {\n      return this.sr.ji(\"Listen\", t);\n    }\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(t) {\n      // A successful response means the stream is healthy\n      this.ar.reset();\n\n      var e = ns(this.N, t),\n          n = function (t) {\n        // We have only reached a consistent snapshot for the entire stream if there\n        // is a read_time set and it applies to all targets (i.e. the list of\n        // targets is empty). The backend is guaranteed to send such responses.\n        if (!(\"targetChange\" in t)) return rt.min();\n        var e = t.targetChange;\n        return e.targetIds && e.targetIds.length ? rt.min() : e.readTime ? jn(e.readTime) : rt.min();\n      }(t);\n\n      return this.listener.Rr(e, n);\n    }\n    /**\n     * Registers interest in the results of the given target. If the target\n     * includes a resumeToken it will be included in the request. Results that\n     * affect the target will be streamed back as WatchChange messages that\n     * reference the targetId.\n     */\n\n  }, {\n    key: \"br\",\n    value: function br(t) {\n      var e = {};\n      e.database = Yn(this.N), e.addTarget = function (t, e) {\n        var n;\n        var s = e.target;\n        return n = Ht(s) ? {\n          documents: os(t, s)\n        } : {\n          query: cs(t, s)\n        }, n.targetId = e.targetId, e.resumeToken.approximateByteSize() > 0 ? n.resumeToken = qn(t, e.resumeToken) : e.snapshotVersion.compareTo(rt.min()) > 0 && ( // TODO(wuandy): Consider removing above check because it is most likely true.\n        // Right now, many tests depend on this behaviour though (leaving min() out\n        // of serialization).\n        n.readTime = Un(t, e.snapshotVersion.toTimestamp())), n;\n      }(this.N, t);\n      var n = us(this.N, t);\n      n && (e.labels = n), this.mr(e);\n    }\n    /**\n     * Unregisters interest in the results of the target associated with the\n     * given targetId.\n     */\n\n  }, {\n    key: \"Pr\",\n    value: function Pr(t) {\n      var e = {};\n      e.database = Yn(this.N), e.removeTarget = t, this.mr(e);\n    }\n  }]);\n\n  return to;\n}(Zr);\n/**\n * A Stream that implements the Write RPC.\n *\n * The Write RPC requires the caller to maintain special streamToken\n * state in between calls, to help the server understand which responses the\n * client has processed by the time the next request is made. Every response\n * will contain a streamToken; this value must be passed to the next\n * request.\n *\n * After calling start() on this stream, the next request must be a handshake,\n * containing whatever streamToken is on hand. Once a response to this\n * request is received, all pending mutations may be submitted. When\n * submitting multiple batches of mutations at the same time, it's\n * okay to use the same streamToken for the calls to writeMutations.\n *\n * TODO(b/33271235): Use proto types\n */\n\n\nvar eo = /*#__PURE__*/function (_Zr2) {\n  _inherits(eo, _Zr2);\n\n  var _super27 = _createSuper(eo);\n\n  function eo(t, e, n, s, i) {\n    var _this128;\n\n    _classCallCheck(this, eo);\n\n    _this128 = _super27.call(this, t, \"write_stream_connection_backoff\"\n    /* WriteStreamConnectionBackoff */\n    , \"write_stream_idle\"\n    /* WriteStreamIdle */\n    , \"health_check_timeout\"\n    /* HealthCheckTimeout */\n    , e, n, i), _this128.N = s, _this128.vr = !1;\n    return _this128;\n  }\n  /**\n   * Tracks whether or not a handshake has been successfully exchanged and\n   * the stream is ready to accept mutations.\n   */\n\n\n  _createClass(eo, [{\n    key: \"Vr\",\n    get: function get() {\n      return this.vr;\n    } // Override of PersistentStream.start\n\n  }, {\n    key: \"start\",\n    value: function start() {\n      this.vr = !1, this.lastStreamToken = void 0, _get(_getPrototypeOf(eo.prototype), \"start\", this).call(this);\n    }\n  }, {\n    key: \"pr\",\n    value: function pr() {\n      this.vr && this.Sr([]);\n    }\n  }, {\n    key: \"Ar\",\n    value: function Ar(t) {\n      return this.sr.ji(\"Write\", t);\n    }\n  }, {\n    key: \"onMessage\",\n    value: function onMessage(t) {\n      if ( // Always capture the last stream token.\n      B(!!t.streamToken), this.lastStreamToken = t.streamToken, this.vr) {\n        // A successful first write response means the stream is healthy,\n        // Note, that we could consider a successful handshake healthy, however,\n        // the write itself might be causing an error we want to back off from.\n        this.ar.reset();\n        var e = rs(t.writeResults, t.commitTime),\n            n = jn(t.commitTime);\n        return this.listener.Dr(n, e);\n      } // The first response is always the handshake response\n\n\n      return B(!t.writeResults || 0 === t.writeResults.length), this.vr = !0, this.listener.Cr();\n    }\n    /**\n     * Sends an initial streamToken to the server, performing the handshake\n     * required to make the StreamingWrite RPC work. Subsequent\n     * calls should wait until onHandshakeComplete was called.\n     */\n\n  }, {\n    key: \"Nr\",\n    value: function Nr() {\n      // TODO(dimond): Support stream resumption. We intentionally do not set the\n      // stream token on the handshake, ignoring any stream token we might have.\n      var t = {};\n      t.database = Yn(this.N), this.mr(t);\n    }\n    /** Sends a group of mutations to the Firestore backend to apply. */\n\n  }, {\n    key: \"Sr\",\n    value: function Sr(t) {\n      var _this129 = this;\n\n      var e = {\n        streamToken: this.lastStreamToken,\n        writes: t.map(function (t) {\n          return ss(_this129.N, t);\n        })\n      };\n      this.mr(e);\n    }\n  }]);\n\n  return eo;\n}(Zr);\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\n\n\nvar no = /*#__PURE__*/function (_ref23) {\n  _inherits(no, _ref23);\n\n  var _super28 = _createSuper(no);\n\n  function no(t, e, n) {\n    var _this130;\n\n    _classCallCheck(this, no);\n\n    _this130 = _super28.call(this), _this130.credentials = t, _this130.sr = e, _this130.N = n, _this130.kr = !1;\n    return _this130;\n  }\n\n  _createClass(no, [{\n    key: \"$r\",\n    value: function $r() {\n      if (this.kr) throw new j(K.FAILED_PRECONDITION, \"The client has already been terminated.\");\n    }\n    /** Gets an auth token and invokes the provided RPC. */\n\n  }, {\n    key: \"Li\",\n    value: function Li(t, e, n) {\n      var _this131 = this;\n\n      return this.$r(), this.credentials.getToken().then(function (s) {\n        return _this131.sr.Li(t, e, n, s);\n      }).catch(function (t) {\n        throw \"FirebaseError\" === t.name ? (t.code === K.UNAUTHENTICATED && _this131.credentials.invalidateToken(), t) : new j(K.UNKNOWN, t.toString());\n      });\n    }\n    /** Gets an auth token and invokes the provided RPC with streamed results. */\n\n  }, {\n    key: \"Ki\",\n    value: function Ki(t, e, n) {\n      var _this132 = this;\n\n      return this.$r(), this.credentials.getToken().then(function (s) {\n        return _this132.sr.Ki(t, e, n, s);\n      }).catch(function (t) {\n        throw \"FirebaseError\" === t.name ? (t.code === K.UNAUTHENTICATED && _this132.credentials.invalidateToken(), t) : new j(K.UNKNOWN, t.toString());\n      });\n    }\n  }, {\n    key: \"terminate\",\n    value: function terminate() {\n      this.kr = !0;\n    }\n  }]);\n\n  return no;\n}( /*#__PURE__*/function () {\n  function _class4() {\n    _classCallCheck(this, _class4);\n  }\n\n  return _class4;\n}()); // TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\n\n/**\n * A component used by the RemoteStore to track the OnlineState (that is,\n * whether or not the client as a whole should be considered to be online or\n * offline), implementing the appropriate heuristics.\n *\n * In particular, when the client is trying to connect to the backend, we\n * allow up to MAX_WATCH_STREAM_FAILURES within ONLINE_STATE_TIMEOUT_MS for\n * a connection to succeed. If we have too many failures or the timeout elapses,\n * then we set the OnlineState to Offline, and the client will behave as if\n * it is offline (get()s will return cached data, etc.).\n */\n\n\nvar so = /*#__PURE__*/function () {\n  function so(t, e) {\n    _classCallCheck(this, so);\n\n    this.asyncQueue = t, this.onlineStateHandler = e,\n    /** The current OnlineState. */\n    this.state = \"Unknown\"\n    /* Unknown */\n    ,\n    /**\n     * A count of consecutive failures to open the stream. If it reaches the\n     * maximum defined by MAX_WATCH_STREAM_FAILURES, we'll set the OnlineState to\n     * Offline.\n     */\n    this.Or = 0,\n    /**\n     * A timer that elapses after ONLINE_STATE_TIMEOUT_MS, at which point we\n     * transition from OnlineState.Unknown to OnlineState.Offline without waiting\n     * for the stream to actually fail (MAX_WATCH_STREAM_FAILURES times).\n     */\n    this.Fr = null,\n    /**\n     * Whether the client should log a warning message if it fails to connect to\n     * the backend (initially true, cleared after a successful stream, or if we've\n     * logged the message already).\n     */\n    this.Mr = !0;\n  }\n  /**\n   * Called by RemoteStore when a watch stream is started (including on each\n   * backoff attempt).\n   *\n   * If this is the first attempt, it sets the OnlineState to Unknown and starts\n   * the onlineStateTimer.\n   */\n\n\n  _createClass(so, [{\n    key: \"Lr\",\n    value: function Lr() {\n      var _this133 = this;\n\n      0 === this.Or && (this.Br(\"Unknown\"\n      /* Unknown */\n      ), this.Fr = this.asyncQueue.enqueueAfterDelay(\"online_state_timeout\"\n      /* OnlineStateTimeout */\n      , 1e4, function () {\n        return _this133.Fr = null, _this133.Ur(\"Backend didn't respond within 10 seconds.\"), _this133.Br(\"Offline\"\n        /* Offline */\n        ), Promise.resolve();\n      }));\n    }\n    /**\n     * Updates our OnlineState as appropriate after the watch stream reports a\n     * failure. The first failure moves us to the 'Unknown' state. We then may\n     * allow multiple failures (based on MAX_WATCH_STREAM_FAILURES) before we\n     * actually transition to the 'Offline' state.\n     */\n\n  }, {\n    key: \"qr\",\n    value: function qr(t) {\n      \"Online\"\n      /* Online */\n      === this.state ? this.Br(\"Unknown\"\n      /* Unknown */\n      ) : (this.Or++, this.Or >= 1 && (this.Kr(), this.Ur(\"Connection failed 1 times. Most recent error: \".concat(t.toString())), this.Br(\"Offline\"\n      /* Offline */\n      )));\n    }\n    /**\n     * Explicitly sets the OnlineState to the specified state.\n     *\n     * Note that this resets our timers / failure counters, etc. used by our\n     * Offline heuristics, so must not be used in place of\n     * handleWatchStreamStart() and handleWatchStreamFailure().\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(t) {\n      this.Kr(), this.Or = 0, \"Online\"\n      /* Online */\n      === t && ( // We've connected to watch at least once. Don't warn the developer\n      // about being offline going forward.\n      this.Mr = !1), this.Br(t);\n    }\n  }, {\n    key: \"Br\",\n    value: function Br(t) {\n      t !== this.state && (this.state = t, this.onlineStateHandler(t));\n    }\n  }, {\n    key: \"Ur\",\n    value: function Ur(t) {\n      var e = \"Could not reach Cloud Firestore backend. \".concat(t, \"\\nThis typically indicates that your device does not have a healthy Internet connection at the moment. The client will operate in offline mode until it is able to successfully connect to the backend.\");\n      this.Mr ? (O(e), this.Mr = !1) : $(\"OnlineStateTracker\", e);\n    }\n  }, {\n    key: \"Kr\",\n    value: function Kr() {\n      null !== this.Fr && (this.Fr.cancel(), this.Fr = null);\n    }\n  }]);\n\n  return so;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar io = function io(\n/**\n * The local store, used to fill the write pipeline with outbound mutations.\n */\nt,\n/** The client-side proxy for interacting with the backend. */\ne, n, s, i) {\n  var _this134 = this;\n\n  _classCallCheck(this, io);\n\n  this.localStore = t, this.datastore = e, this.asyncQueue = n, this.remoteSyncer = {},\n  /**\n   * A list of up to MAX_PENDING_WRITES writes that we have fetched from the\n   * LocalStore via fillWritePipeline() and have or will send to the write\n   * stream.\n   *\n   * Whenever writePipeline.length > 0 the RemoteStore will attempt to start or\n   * restart the write stream. When the stream is established the writes in the\n   * pipeline will be sent in order.\n   *\n   * Writes remain in writePipeline until they are acknowledged by the backend\n   * and thus will automatically be re-sent if the stream is interrupted /\n   * restarted before they're acknowledged.\n   *\n   * Write responses from the backend are linked to their originating request\n   * purely based on order, and so we can just shift() writes from the front of\n   * the writePipeline as we receive responses.\n   */\n  this.jr = [],\n  /**\n   * A mapping of watched targets that the client cares about tracking and the\n   * user has explicitly called a 'listen' for this target.\n   *\n   * These targets may or may not have been sent to or acknowledged by the\n   * server. On re-establishing the listen stream, these targets should be sent\n   * to the server. The targets removed with unlistens are removed eagerly\n   * without waiting for confirmation from the listen stream.\n   */\n  this.Qr = new Map(),\n  /**\n   * A set of reasons for why the RemoteStore may be offline. If empty, the\n   * RemoteStore may start its network connections.\n   */\n  this.Wr = new Set(),\n  /**\n   * Event handlers that get called when the network is disabled or enabled.\n   *\n   * PORTING NOTE: These functions are used on the Web client to create the\n   * underlying streams (to support tree-shakeable streams). On Android and iOS,\n   * the streams are created during construction of RemoteStore.\n   */\n  this.Gr = [], this.zr = i, this.zr.Ti(function (t) {\n    n.enqueueAndForget( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19() {\n      return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n        while (1) {\n          switch (_context19.prev = _context19.next) {\n            case 0:\n              _context19.t0 = wo(_this134);\n\n              if (!_context19.t0) {\n                _context19.next = 5;\n                break;\n              }\n\n              $(\"RemoteStore\", \"Restarting streams for network reachability change.\");\n              _context19.next = 5;\n              return function () {\n                var _ref25 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18(t) {\n                  var e;\n                  return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n                    while (1) {\n                      switch (_context18.prev = _context18.next) {\n                        case 0:\n                          e = q(t);\n                          e.Wr.add(4\n                          /* ConnectivityChange */\n                          );\n                          _context18.next = 4;\n                          return oo(e);\n\n                        case 4:\n                          e.Hr.set(\"Unknown\"\n                          /* Unknown */\n                          );\n                          e.Wr.delete(4\n                          /* ConnectivityChange */\n                          );\n                          _context18.next = 8;\n                          return ro(e);\n\n                        case 8:\n                        case \"end\":\n                          return _context18.stop();\n                      }\n                    }\n                  }, _callee18);\n                }));\n\n                return function (_x24) {\n                  return _ref25.apply(this, arguments);\n                };\n              }()(_this134);\n\n            case 5:\n            case \"end\":\n              return _context19.stop();\n          }\n        }\n      }, _callee19);\n    })));\n  }), this.Hr = new so(n, s);\n};\n\nfunction ro(_x25) {\n  return _ro.apply(this, arguments);\n}\n/**\n * Temporarily disables the network. The network can be re-enabled using\n * enableNetwork().\n */\n\n\nfunction _ro() {\n  _ro = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee76(t) {\n    var _iterator63, _step63, e;\n\n    return _regeneratorRuntime.wrap(function _callee76$(_context76) {\n      while (1) {\n        switch (_context76.prev = _context76.next) {\n          case 0:\n            if (!wo(t)) {\n              _context76.next = 18;\n              break;\n            }\n\n            _iterator63 = _createForOfIteratorHelper(t.Gr);\n            _context76.prev = 2;\n\n            _iterator63.s();\n\n          case 4:\n            if ((_step63 = _iterator63.n()).done) {\n              _context76.next = 10;\n              break;\n            }\n\n            e = _step63.value;\n            _context76.next = 8;\n            return e(\n            /* enabled= */\n            !0);\n\n          case 8:\n            _context76.next = 4;\n            break;\n\n          case 10:\n            _context76.next = 15;\n            break;\n\n          case 12:\n            _context76.prev = 12;\n            _context76.t0 = _context76[\"catch\"](2);\n\n            _iterator63.e(_context76.t0);\n\n          case 15:\n            _context76.prev = 15;\n\n            _iterator63.f();\n\n            return _context76.finish(15);\n\n          case 18:\n          case \"end\":\n            return _context76.stop();\n        }\n      }\n    }, _callee76, null, [[2, 12, 15, 18]]);\n  }));\n  return _ro.apply(this, arguments);\n}\n\nfunction oo(_x26) {\n  return _oo.apply(this, arguments);\n}\n/**\n * Starts new listen for the given target. Uses resume token if provided. It\n * is a no-op if the target of given `TargetData` is already being listened to.\n */\n\n\nfunction _oo() {\n  _oo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee77(t) {\n    var _iterator64, _step64, e;\n\n    return _regeneratorRuntime.wrap(function _callee77$(_context77) {\n      while (1) {\n        switch (_context77.prev = _context77.next) {\n          case 0:\n            _iterator64 = _createForOfIteratorHelper(t.Gr);\n            _context77.prev = 1;\n\n            _iterator64.s();\n\n          case 3:\n            if ((_step64 = _iterator64.n()).done) {\n              _context77.next = 9;\n              break;\n            }\n\n            e = _step64.value;\n            _context77.next = 7;\n            return e(\n            /* enabled= */\n            !1);\n\n          case 7:\n            _context77.next = 3;\n            break;\n\n          case 9:\n            _context77.next = 14;\n            break;\n\n          case 11:\n            _context77.prev = 11;\n            _context77.t0 = _context77[\"catch\"](1);\n\n            _iterator64.e(_context77.t0);\n\n          case 14:\n            _context77.prev = 14;\n\n            _iterator64.f();\n\n            return _context77.finish(14);\n\n          case 17:\n          case \"end\":\n            return _context77.stop();\n        }\n      }\n    }, _callee77, null, [[1, 11, 14, 17]]);\n  }));\n  return _oo.apply(this, arguments);\n}\n\nfunction co(t, e) {\n  var n = q(t);\n  n.Qr.has(e.targetId) || ( // Mark this as something the client is currently listening for.\n  n.Qr.set(e.targetId, e), fo(n) ? // The listen will be sent in onWatchStreamOpen\n  lo(n) : Co(n).hr() && uo(n, e));\n}\n/**\n * Removes the listen from server. It is a no-op if the given target id is\n * not being listened to.\n */\n\n\nfunction ao(t, e) {\n  var n = q(t),\n      s = Co(n);\n  n.Qr.delete(e), s.hr() && ho(n, e), 0 === n.Qr.size && (s.hr() ? s.wr() : wo(n) && // Revert to OnlineState.Unknown if the watch stream is not open and we\n  // have no listeners, since without any listens to send we cannot\n  // confirm if the stream is healthy and upgrade to OnlineState.Online.\n  n.Hr.set(\"Unknown\"\n  /* Unknown */\n  ));\n}\n/**\n * We need to increment the the expected number of pending responses we're due\n * from watch so we wait for the ack to process any messages from this target.\n */\n\n\nfunction uo(t, e) {\n  t.Jr.Y(e.targetId), Co(t).br(e);\n}\n/**\n * We need to increment the expected number of pending responses we're due\n * from watch so we wait for the removal on the server before we process any\n * messages from this target.\n */\n\n\nfunction ho(t, e) {\n  t.Jr.Y(e), Co(t).Pr(e);\n}\n\nfunction lo(t) {\n  t.Jr = new $n({\n    getRemoteKeysForTarget: function getRemoteKeysForTarget(e) {\n      return t.remoteSyncer.getRemoteKeysForTarget(e);\n    },\n    Tt: function Tt(e) {\n      return t.Qr.get(e) || null;\n    }\n  }), Co(t).start(), t.Hr.Lr();\n}\n/**\n * Returns whether the watch stream should be started because it's necessary\n * and has not yet been started.\n */\n\n\nfunction fo(t) {\n  return wo(t) && !Co(t).ur() && t.Qr.size > 0;\n}\n\nfunction wo(t) {\n  return 0 === q(t).Wr.size;\n}\n\nfunction _o(t) {\n  t.Jr = void 0;\n}\n\nfunction mo(_x27) {\n  return _mo.apply(this, arguments);\n}\n\nfunction _mo() {\n  _mo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee78(t) {\n    return _regeneratorRuntime.wrap(function _callee78$(_context78) {\n      while (1) {\n        switch (_context78.prev = _context78.next) {\n          case 0:\n            t.Qr.forEach(function (e, n) {\n              uo(t, e);\n            });\n\n          case 1:\n          case \"end\":\n            return _context78.stop();\n        }\n      }\n    }, _callee78);\n  }));\n  return _mo.apply(this, arguments);\n}\n\nfunction go(_x28, _x29) {\n  return _go.apply(this, arguments);\n}\n\nfunction _go() {\n  _go = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee79(t, e) {\n    return _regeneratorRuntime.wrap(function _callee79$(_context79) {\n      while (1) {\n        switch (_context79.prev = _context79.next) {\n          case 0:\n            _o(t), // If we still need the watch stream, retry the connection.\n            fo(t) ? (t.Hr.qr(e), lo(t)) : // No need to restart watch stream because there are no active targets.\n            // The online state is set to unknown because there is no active attempt\n            // at establishing a connection\n            t.Hr.set(\"Unknown\"\n            /* Unknown */\n            );\n\n          case 1:\n          case \"end\":\n            return _context79.stop();\n        }\n      }\n    }, _callee79);\n  }));\n  return _go.apply(this, arguments);\n}\n\nfunction yo(_x30, _x31, _x32) {\n  return _yo.apply(this, arguments);\n}\n/**\n * Recovery logic for IndexedDB errors that takes the network offline until\n * `op` succeeds. Retries are scheduled with backoff using\n * `enqueueRetryable()`. If `op()` is not provided, IndexedDB access is\n * validated via a generic operation.\n *\n * The returned Promise is resolved once the network is disabled and before\n * any retry attempt.\n */\n\n\nfunction _yo() {\n  _yo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee81(t, e, n) {\n    var _e46;\n\n    return _regeneratorRuntime.wrap(function _callee81$(_context81) {\n      while (1) {\n        switch (_context81.prev = _context81.next) {\n          case 0:\n            if (!( // Mark the client as online since we got a message from the server\n            t.Hr.set(\"Online\"\n            /* Online */\n            ), e instanceof xn && 2\n            /* Removed */\n            === e.state && e.cause)) {\n              _context81.next = 13;\n              break;\n            }\n\n            _context81.prev = 1;\n            _context81.next = 4;\n            return (\n              /** Handles an error on a target */\n              function () {\n                var _ref59 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee80(t, e) {\n                  var n, _iterator65, _step65, s;\n\n                  return _regeneratorRuntime.wrap(function _callee80$(_context80) {\n                    while (1) {\n                      switch (_context80.prev = _context80.next) {\n                        case 0:\n                          n = e.cause;\n                          _iterator65 = _createForOfIteratorHelper(e.targetIds);\n                          _context80.prev = 2;\n\n                          _iterator65.s();\n\n                        case 4:\n                          if ((_step65 = _iterator65.n()).done) {\n                            _context80.next = 14;\n                            break;\n                          }\n\n                          s = _step65.value;\n                          _context80.t0 = t.Qr.has(s);\n\n                          if (!_context80.t0) {\n                            _context80.next = 12;\n                            break;\n                          }\n\n                          _context80.next = 10;\n                          return t.remoteSyncer.rejectListen(s, n);\n\n                        case 10:\n                          t.Qr.delete(s);\n                          t.Jr.removeTarget(s);\n\n                        case 12:\n                          _context80.next = 4;\n                          break;\n\n                        case 14:\n                          _context80.next = 19;\n                          break;\n\n                        case 16:\n                          _context80.prev = 16;\n                          _context80.t1 = _context80[\"catch\"](2);\n\n                          _iterator65.e(_context80.t1);\n\n                        case 19:\n                          _context80.prev = 19;\n\n                          _iterator65.f();\n\n                          return _context80.finish(19);\n\n                        case 22:\n                        case \"end\":\n                          return _context80.stop();\n                      }\n                    }\n                  }, _callee80, null, [[2, 16, 19, 22]]);\n                }));\n\n                return function (_x131, _x132) {\n                  return _ref59.apply(this, arguments);\n                };\n              }()\n              /**\n              * Attempts to fill our write pipeline with writes from the LocalStore.\n              *\n              * Called internally to bootstrap or refill the write pipeline and by\n              * SyncEngine whenever there are new mutations to process.\n              *\n              * Starts the write stream if necessary.\n              */\n              (t, e)\n            );\n\n          case 4:\n            _context81.next = 11;\n            break;\n\n          case 6:\n            _context81.prev = 6;\n            _context81.t0 = _context81[\"catch\"](1);\n            $(\"RemoteStore\", \"Failed to remove targets %s: %s \", e.targetIds.join(\",\"), _context81.t0);\n            _context81.next = 11;\n            return po(t, _context81.t0);\n\n          case 11:\n            _context81.next = 29;\n            break;\n\n          case 13:\n            if (!(e instanceof Cn ? t.Jr.rt(e) : e instanceof Nn ? t.Jr.ft(e) : t.Jr.at(e), !n.isEqual(rt.min()))) {\n              _context81.next = 29;\n              break;\n            }\n\n            _context81.prev = 14;\n            _context81.next = 17;\n            return fr(t.localStore);\n\n          case 17:\n            _e46 = _context81.sent;\n            _context81.t1 = n.compareTo(_e46) >= 0;\n\n            if (!_context81.t1) {\n              _context81.next = 22;\n              break;\n            }\n\n            _context81.next = 22;\n            return (\n              /**\n              * Takes a batch of changes from the Datastore, repackages them as a\n              * RemoteEvent, and passes that on to the listener, which is typically the\n              * SyncEngine.\n              */\n              function (t, e) {\n                var n = t.Jr._t(e); // Update in-memory resume tokens. LocalStore will update the\n                // persistent view of these when applying the completed RemoteEvent.\n\n\n                // Update in-memory resume tokens. LocalStore will update the\n                // persistent view of these when applying the completed RemoteEvent.\n                return n.targetChanges.forEach(function (n, s) {\n                  if (n.resumeToken.approximateByteSize() > 0) {\n                    var i = t.Qr.get(s); // A watched target might have been removed already.\n\n                    // A watched target might have been removed already.\n                    i && t.Qr.set(s, i.withResumeToken(n.resumeToken, e));\n                  }\n                }), // Re-establish listens for the targets that have been invalidated by\n                // existence filter mismatches.\n                n.targetMismatches.forEach(function (e) {\n                  var n = t.Qr.get(e);\n                  if (!n) // A watched target might have been removed already.\n                    return; // Clear the resume token for the target, since we're in a known mismatch\n                  // state.\n\n                  // Clear the resume token for the target, since we're in a known mismatch\n                  // state.\n                  t.Qr.set(e, n.withResumeToken(_t.EMPTY_BYTE_STRING, n.snapshotVersion)), // Cause a hard reset by unwatching and rewatching immediately, but\n                  // deliberately don't send a resume token so that we get a full update.\n                  ho(t, e); // Mark the target we send as being on behalf of an existence filter\n                  // mismatch, but don't actually retain that in listenTargets. This ensures\n                  // that we flag the first re-listen this way without impacting future\n                  // listens of this target (that might happen e.g. on reconnect).\n\n                  // Mark the target we send as being on behalf of an existence filter\n                  // mismatch, but don't actually retain that in listenTargets. This ensures\n                  // that we flag the first re-listen this way without impacting future\n                  // listens of this target (that might happen e.g. on reconnect).\n                  var s = new ii(n.target, e, 1\n                  /* ExistenceFilterMismatch */\n                  , n.sequenceNumber);\n                  uo(t, s);\n                }), t.remoteSyncer.applyRemoteEvent(n);\n              }(t, n)\n            );\n\n          case 22:\n            _context81.next = 29;\n            break;\n\n          case 24:\n            _context81.prev = 24;\n            _context81.t2 = _context81[\"catch\"](14);\n            $(\"RemoteStore\", \"Failed to raise snapshot:\", _context81.t2);\n            _context81.next = 29;\n            return po(t, _context81.t2);\n\n          case 29:\n          case \"end\":\n            return _context81.stop();\n        }\n      }\n    }, _callee81, null, [[1, 6], [14, 24]]);\n  }));\n  return _yo.apply(this, arguments);\n}\n\nfunction po(_x33, _x34, _x35) {\n  return _po.apply(this, arguments);\n}\n/**\n * Executes `op`. If `op` fails, takes the network offline until `op`\n * succeeds. Returns after the first attempt.\n */\n\n\nfunction _po() {\n  _po = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee83(t, e, n) {\n    return _regeneratorRuntime.wrap(function _callee83$(_context83) {\n      while (1) {\n        switch (_context83.prev = _context83.next) {\n          case 0:\n            if (Hs(e)) {\n              _context83.next = 2;\n              break;\n            }\n\n            throw e;\n\n          case 2:\n            t.Wr.add(1\n            /* IndexedDbFailed */\n            );\n            _context83.next = 5;\n            return oo(t);\n\n          case 5:\n            t.Hr.set(\"Offline\"\n            /* Offline */\n            );\n            n || ( // Use a simple read operation to determine if IndexedDB recovered.\n            // Ideally, we would expose a health check directly on SimpleDb, but\n            // RemoteStore only has access to persistence through LocalStore.\n            n = function n() {\n              return fr(t.localStore);\n            });\n            // Probe IndexedDB periodically and re-enable network\n            t.asyncQueue.enqueueRetryable( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee82() {\n              return _regeneratorRuntime.wrap(function _callee82$(_context82) {\n                while (1) {\n                  switch (_context82.prev = _context82.next) {\n                    case 0:\n                      $(\"RemoteStore\", \"Retrying IndexedDB access\");\n                      _context82.next = 3;\n                      return n();\n\n                    case 3:\n                      t.Wr.delete(1\n                      /* IndexedDbFailed */\n                      );\n                      _context82.next = 6;\n                      return ro(t);\n\n                    case 6:\n                    case \"end\":\n                      return _context82.stop();\n                  }\n                }\n              }, _callee82);\n            })));\n\n          case 8:\n          case \"end\":\n            return _context83.stop();\n        }\n      }\n    }, _callee83);\n  }));\n  return _po.apply(this, arguments);\n}\n\nfunction To(t, e) {\n  return e().catch(function (n) {\n    return po(t, n, e);\n  });\n}\n\nfunction Eo(_x36) {\n  return _Eo.apply(this, arguments);\n}\n/**\n * Returns true if we can add to the write pipeline (i.e. the network is\n * enabled and the write pipeline is not full).\n */\n\n\nfunction _Eo() {\n  _Eo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee84(t) {\n    var e, n, s, _t88;\n\n    return _regeneratorRuntime.wrap(function _callee84$(_context84) {\n      while (1) {\n        switch (_context84.prev = _context84.next) {\n          case 0:\n            e = q(t), n = No(e);\n            s = e.jr.length > 0 ? e.jr[e.jr.length - 1].batchId : -1;\n\n          case 2:\n            if (!Io(e)) {\n              _context84.next = 19;\n              break;\n            }\n\n            _context84.prev = 3;\n            _context84.next = 6;\n            return _r(e.localStore, s);\n\n          case 6:\n            _t88 = _context84.sent;\n\n            if (!(null === _t88)) {\n              _context84.next = 10;\n              break;\n            }\n\n            0 === e.jr.length && n.wr();\n            return _context84.abrupt(\"break\", 19);\n\n          case 10:\n            s = _t88.batchId, Ao(e, _t88);\n            _context84.next = 17;\n            break;\n\n          case 13:\n            _context84.prev = 13;\n            _context84.t0 = _context84[\"catch\"](3);\n            _context84.next = 17;\n            return po(e, _context84.t0);\n\n          case 17:\n            _context84.next = 2;\n            break;\n\n          case 19:\n            Ro(e) && bo(e);\n\n          case 20:\n          case \"end\":\n            return _context84.stop();\n        }\n      }\n    }, _callee84, null, [[3, 13]]);\n  }));\n  return _Eo.apply(this, arguments);\n}\n\nfunction Io(t) {\n  return wo(t) && t.jr.length < 10;\n}\n/**\n * Queues additional writes to be sent to the write stream, sending them\n * immediately if the write stream is established.\n */\n\n\nfunction Ao(t, e) {\n  t.jr.push(e);\n  var n = No(t);\n  n.hr() && n.Vr && n.Sr(e.mutations);\n}\n\nfunction Ro(t) {\n  return wo(t) && !No(t).ur() && t.jr.length > 0;\n}\n\nfunction bo(t) {\n  No(t).start();\n}\n\nfunction Po(_x37) {\n  return _Po.apply(this, arguments);\n}\n\nfunction _Po() {\n  _Po = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee85(t) {\n    return _regeneratorRuntime.wrap(function _callee85$(_context85) {\n      while (1) {\n        switch (_context85.prev = _context85.next) {\n          case 0:\n            No(t).Nr();\n\n          case 1:\n          case \"end\":\n            return _context85.stop();\n        }\n      }\n    }, _callee85);\n  }));\n  return _Po.apply(this, arguments);\n}\n\nfunction vo(_x38) {\n  return _vo.apply(this, arguments);\n}\n\nfunction _vo() {\n  _vo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee86(t) {\n    var e, _iterator66, _step66, n;\n\n    return _regeneratorRuntime.wrap(function _callee86$(_context86) {\n      while (1) {\n        switch (_context86.prev = _context86.next) {\n          case 0:\n            e = No(t); // Send the write pipeline now that the stream is established.\n\n            _iterator66 = _createForOfIteratorHelper(t.jr);\n\n            try {\n              for (_iterator66.s(); !(_step66 = _iterator66.n()).done;) {\n                n = _step66.value;\n                e.Sr(n.mutations);\n              }\n            } catch (err) {\n              _iterator66.e(err);\n            } finally {\n              _iterator66.f();\n            }\n\n          case 3:\n          case \"end\":\n            return _context86.stop();\n        }\n      }\n    }, _callee86);\n  }));\n  return _vo.apply(this, arguments);\n}\n\nfunction Vo(_x39, _x40, _x41) {\n  return _Vo.apply(this, arguments);\n}\n\nfunction _Vo() {\n  _Vo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee87(t, e, n) {\n    var s, i;\n    return _regeneratorRuntime.wrap(function _callee87$(_context87) {\n      while (1) {\n        switch (_context87.prev = _context87.next) {\n          case 0:\n            s = t.jr.shift(), i = si.from(s, e, n);\n            _context87.next = 3;\n            return To(t, function () {\n              return t.remoteSyncer.applySuccessfulWrite(i);\n            });\n\n          case 3:\n            _context87.next = 5;\n            return Eo(t);\n\n          case 5:\n          case \"end\":\n            return _context87.stop();\n        }\n      }\n    }, _callee87);\n  }));\n  return _Vo.apply(this, arguments);\n}\n\nfunction So(_x42, _x43) {\n  return _So.apply(this, arguments);\n}\n/**\n * Toggles the network state when the client gains or loses its primary lease.\n */\n\n\nfunction _So() {\n  _So = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee89(t, e) {\n    return _regeneratorRuntime.wrap(function _callee89$(_context89) {\n      while (1) {\n        switch (_context89.prev = _context89.next) {\n          case 0:\n            _context89.t0 = e && No(t).Vr;\n\n            if (!_context89.t0) {\n              _context89.next = 4;\n              break;\n            }\n\n            _context89.next = 4;\n            return function () {\n              var _ref61 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee88(t, e) {\n                var _n35, n;\n\n                return _regeneratorRuntime.wrap(function _callee88$(_context88) {\n                  while (1) {\n                    switch (_context88.prev = _context88.next) {\n                      case 0:\n                        if (!(n = e.code, fn(n) && n !== K.ABORTED)) {\n                          _context88.next = 7;\n                          break;\n                        }\n\n                        // This was a permanent error, the request itself was the problem\n                        // so it's not going to succeed if we resend it.\n                        _n35 = t.jr.shift(); // In this case it's also unlikely that the server itself is melting\n                        // down -- this was just a bad request so inhibit backoff on the next\n                        // restart.\n\n                        No(t).dr();\n                        _context88.next = 5;\n                        return To(t, function () {\n                          return t.remoteSyncer.rejectFailedWrite(_n35.batchId, e);\n                        });\n\n                      case 5:\n                        _context88.next = 7;\n                        return Eo(t);\n\n                      case 7:\n                      case \"end\":\n                        return _context88.stop();\n                    }\n                  }\n                }, _callee88);\n              }));\n\n              return function (_x133, _x134) {\n                return _ref61.apply(this, arguments);\n              };\n            }()(t, e);\n\n          case 4:\n            // The write stream might have been started by refilling the write\n            // pipeline for failed writes\n            Ro(t) && bo(t);\n\n          case 5:\n          case \"end\":\n            return _context89.stop();\n        }\n      }\n    }, _callee89);\n  }));\n  return _So.apply(this, arguments);\n}\n\nfunction Do(_x44, _x45) {\n  return _Do.apply(this, arguments);\n}\n/**\n * If not yet initialized, registers the WatchStream and its network state\n * callback with `remoteStoreImpl`. Returns the existing stream if one is\n * already available.\n *\n * PORTING NOTE: On iOS and Android, the WatchStream gets registered on startup.\n * This is not done on Web to allow it to be tree-shaken.\n */\n\n\nfunction _Do() {\n  _Do = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee90(t, e) {\n    var n;\n    return _regeneratorRuntime.wrap(function _callee90$(_context90) {\n      while (1) {\n        switch (_context90.prev = _context90.next) {\n          case 0:\n            n = q(t);\n\n            if (!e) {\n              _context90.next = 7;\n              break;\n            }\n\n            n.Wr.delete(2\n            /* IsSecondary */\n            );\n            _context90.next = 5;\n            return ro(n);\n\n          case 5:\n            _context90.next = 13;\n            break;\n\n          case 7:\n            _context90.t0 = e;\n\n            if (_context90.t0) {\n              _context90.next = 13;\n              break;\n            }\n\n            n.Wr.add(2\n            /* IsSecondary */\n            );\n            _context90.next = 12;\n            return oo(n);\n\n          case 12:\n            n.Hr.set(\"Unknown\"\n            /* Unknown */\n            );\n\n          case 13:\n          case \"end\":\n            return _context90.stop();\n        }\n      }\n    }, _callee90);\n  }));\n  return _Do.apply(this, arguments);\n}\n\nfunction Co(t) {\n  return t.Yr || ( // Create stream (but note that it is not started yet).\n  t.Yr = function (t, e, n) {\n    var s = q(t);\n    return s.$r(), new to(e, s.sr, s.credentials, s.N, n);\n  }\n  /**\n  * @license\n  * Copyright 2018 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n  (t.datastore, t.asyncQueue, {\n    Si: mo.bind(null, t),\n    Ci: go.bind(null, t),\n    Rr: yo.bind(null, t)\n  }), t.Gr.push( /*#__PURE__*/function () {\n    var _ref26 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee20(e) {\n      return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n        while (1) {\n          switch (_context20.prev = _context20.next) {\n            case 0:\n              if (!e) {\n                _context20.next = 4;\n                break;\n              }\n\n              t.Yr.dr(), fo(t) ? lo(t) : t.Hr.set(\"Unknown\"\n              /* Unknown */\n              );\n              _context20.next = 7;\n              break;\n\n            case 4:\n              _context20.next = 6;\n              return t.Yr.stop();\n\n            case 6:\n              _o(t);\n\n            case 7:\n            case \"end\":\n              return _context20.stop();\n          }\n        }\n      }, _callee20);\n    }));\n\n    return function (_x46) {\n      return _ref26.apply(this, arguments);\n    };\n  }())), t.Yr;\n}\n/**\n * If not yet initialized, registers the WriteStream and its network state\n * callback with `remoteStoreImpl`. Returns the existing stream if one is\n * already available.\n *\n * PORTING NOTE: On iOS and Android, the WriteStream gets registered on startup.\n * This is not done on Web to allow it to be tree-shaken.\n */\n\n\nfunction No(t) {\n  return t.Xr || ( // Create stream (but note that it is not started yet).\n  t.Xr = function (t, e, n) {\n    var s = q(t);\n    return s.$r(), new eo(e, s.sr, s.credentials, s.N, n);\n  }(t.datastore, t.asyncQueue, {\n    Si: Po.bind(null, t),\n    Ci: So.bind(null, t),\n    Cr: vo.bind(null, t),\n    Dr: Vo.bind(null, t)\n  }), t.Gr.push( /*#__PURE__*/function () {\n    var _ref27 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee21(e) {\n      return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n        while (1) {\n          switch (_context21.prev = _context21.next) {\n            case 0:\n              if (!e) {\n                _context21.next = 6;\n                break;\n              }\n\n              t.Xr.dr();\n              _context21.next = 4;\n              return Eo(t);\n\n            case 4:\n              _context21.next = 9;\n              break;\n\n            case 6:\n              _context21.next = 8;\n              return t.Xr.stop();\n\n            case 8:\n              t.jr.length > 0 && ($(\"RemoteStore\", \"Stopping write stream with \".concat(t.jr.length, \" pending writes\")), t.jr = []);\n\n            case 9:\n            case \"end\":\n              return _context21.stop();\n          }\n        }\n      }, _callee21);\n    }));\n\n    return function (_x47) {\n      return _ref27.apply(this, arguments);\n    };\n  }())), t.Xr;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */\n\n\nvar xo = /*#__PURE__*/function () {\n  function xo(t, e, n, s, i) {\n    _classCallCheck(this, xo);\n\n    this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = s, this.removalCallback = i, this.deferred = new Q(), this.then = this.deferred.promise.then.bind(this.deferred.promise), // It's normal for the deferred promise to be canceled (due to cancellation)\n    // and so we attach a dummy catch callback to avoid\n    // 'UnhandledPromiseRejectionWarning' log spam.\n    this.deferred.promise.catch(function (t) {});\n  }\n  /**\n   * Creates and returns a DelayedOperation that has been scheduled to be\n   * executed on the provided asyncQueue after the provided delayMs.\n   *\n   * @param asyncQueue - The queue to schedule the operation on.\n   * @param id - A Timer ID identifying the type of operation this is.\n   * @param delayMs - The delay (ms) before the operation should be scheduled.\n   * @param op - The operation to run.\n   * @param removalCallback - A callback to be called synchronously once the\n   *   operation is executed or canceled, notifying the AsyncQueue to remove it\n   *   from its delayedOperations list.\n   *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n   *   the DelayedOperation class public.\n   */\n\n\n  _createClass(xo, [{\n    key: \"start\",\n    value:\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */\n    function start(t) {\n      var _this135 = this;\n\n      this.timerHandle = setTimeout(function () {\n        return _this135.handleDelayElapsed();\n      }, t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */\n\n  }, {\n    key: \"skipDelay\",\n    value: function skipDelay() {\n      return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */\n\n  }, {\n    key: \"cancel\",\n    value: function cancel(t) {\n      null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new j(K.CANCELLED, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n  }, {\n    key: \"handleDelayElapsed\",\n    value: function handleDelayElapsed() {\n      var _this136 = this;\n\n      this.asyncQueue.enqueueAndForget(function () {\n        return null !== _this136.timerHandle ? (_this136.clearTimeout(), _this136.op().then(function (t) {\n          return _this136.deferred.resolve(t);\n        })) : Promise.resolve();\n      });\n    }\n  }, {\n    key: \"clearTimeout\",\n    value: function (_clearTimeout) {\n      function clearTimeout() {\n        return _clearTimeout.apply(this, arguments);\n      }\n\n      clearTimeout.toString = function () {\n        return _clearTimeout.toString();\n      };\n\n      return clearTimeout;\n    }(function () {\n      null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), this.timerHandle = null);\n    })\n  }], [{\n    key: \"createAndSchedule\",\n    value: function createAndSchedule(t, e, n, s, i) {\n      var r = Date.now() + n,\n          o = new xo(t, e, r, s, i);\n      return o.start(n), o;\n    }\n  }]);\n\n  return xo;\n}();\n/**\n * Returns a FirestoreError that can be surfaced to the user if the provided\n * error is an IndexedDbTransactionError. Re-throws the error otherwise.\n */\n\n\nfunction ko(t, e) {\n  if (O(\"AsyncQueue\", \"\".concat(e, \": \").concat(t)), Hs(t)) return new j(K.UNAVAILABLE, \"\".concat(e, \": \").concat(t));\n  throw t;\n}\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * DocumentSet is an immutable (copy-on-write) collection that holds documents\n * in order specified by the provided comparator. We always add a document key\n * comparator on top of what is provided to guarantee document equality based on\n * the key.\n */\n\n\nvar $o = /*#__PURE__*/function () {\n  /** The default ordering is by key if the comparator is omitted */\n  function $o(t) {\n    _classCallCheck(this, $o);\n\n    // We are adding document key comparator to the end as it's the only\n    // guaranteed unique property of a document.\n    this.comparator = t ? function (e, n) {\n      return t(e, n) || Pt.comparator(e.key, n.key);\n    } : function (t, e) {\n      return Pt.comparator(t.key, e.key);\n    }, this.keyedMap = In(), this.sortedSet = new wn(this.comparator);\n  }\n  /**\n   * Returns an empty copy of the existing DocumentSet, using the same\n   * comparator.\n   */\n\n\n  _createClass($o, [{\n    key: \"has\",\n    value: function has(t) {\n      return null != this.keyedMap.get(t);\n    }\n  }, {\n    key: \"get\",\n    value: function get(t) {\n      return this.keyedMap.get(t);\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.sortedSet.minKey();\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      return this.sortedSet.maxKey();\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.sortedSet.isEmpty();\n    }\n    /**\n     * Returns the index of the provided key in the document set, or -1 if the\n     * document key is not present in the set;\n     */\n\n  }, {\n    key: \"indexOf\",\n    value: function indexOf(t) {\n      var e = this.keyedMap.get(t);\n      return e ? this.sortedSet.indexOf(e) : -1;\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this.sortedSet.size;\n    }\n    /** Iterates documents in order defined by \"comparator\" */\n\n  }, {\n    key: \"forEach\",\n    value: function forEach(t) {\n      this.sortedSet.inorderTraversal(function (e, n) {\n        return t(e), !1;\n      });\n    }\n    /** Inserts or updates a document with the same key */\n\n  }, {\n    key: \"add\",\n    value: function add(t) {\n      // First remove the element if we have it.\n      var e = this.delete(t.key);\n      return e.copy(e.keyedMap.insert(t.key, t), e.sortedSet.insert(t, null));\n    }\n    /** Deletes a document with a given key */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      var e = this.get(t);\n      return e ? this.copy(this.keyedMap.remove(t), this.sortedSet.remove(e)) : this;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      if (!(t instanceof $o)) return !1;\n      if (this.size !== t.size) return !1;\n      var e = this.sortedSet.getIterator(),\n          n = t.sortedSet.getIterator();\n\n      for (; e.hasNext();) {\n        var _t61 = e.getNext().key,\n            s = n.getNext().key;\n        if (!_t61.isEqual(s)) return !1;\n      }\n\n      return !0;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var t = [];\n      return this.forEach(function (e) {\n        t.push(e.toString());\n      }), 0 === t.length ? \"DocumentSet ()\" : \"DocumentSet (\\n  \" + t.join(\"  \\n\") + \"\\n)\";\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(t, e) {\n      var n = new $o();\n      return n.comparator = this.comparator, n.keyedMap = t, n.sortedSet = e, n;\n    }\n  }], [{\n    key: \"emptySet\",\n    value: function emptySet(t) {\n      return new $o(t.comparator);\n    }\n  }]);\n\n  return $o;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * DocumentChangeSet keeps track of a set of changes to docs in a query, merging\n * duplicate events for the same doc.\n */\n\n\nvar Oo = /*#__PURE__*/function () {\n  function Oo() {\n    _classCallCheck(this, Oo);\n\n    this.Zr = new wn(Pt.comparator);\n  }\n\n  _createClass(Oo, [{\n    key: \"track\",\n    value: function track(t) {\n      var e = t.doc.key,\n          n = this.Zr.get(e);\n      n ? // Merge the new change with the existing change.\n      0\n      /* Added */\n      !== t.type && 3\n      /* Metadata */\n      === n.type ? this.Zr = this.Zr.insert(e, t) : 3\n      /* Metadata */\n      === t.type && 1\n      /* Removed */\n      !== n.type ? this.Zr = this.Zr.insert(e, {\n        type: n.type,\n        doc: t.doc\n      }) : 2\n      /* Modified */\n      === t.type && 2\n      /* Modified */\n      === n.type ? this.Zr = this.Zr.insert(e, {\n        type: 2\n        /* Modified */\n        ,\n        doc: t.doc\n      }) : 2\n      /* Modified */\n      === t.type && 0\n      /* Added */\n      === n.type ? this.Zr = this.Zr.insert(e, {\n        type: 0\n        /* Added */\n        ,\n        doc: t.doc\n      }) : 1\n      /* Removed */\n      === t.type && 0\n      /* Added */\n      === n.type ? this.Zr = this.Zr.remove(e) : 1\n      /* Removed */\n      === t.type && 2\n      /* Modified */\n      === n.type ? this.Zr = this.Zr.insert(e, {\n        type: 1\n        /* Removed */\n        ,\n        doc: n.doc\n      }) : 0\n      /* Added */\n      === t.type && 1\n      /* Removed */\n      === n.type ? this.Zr = this.Zr.insert(e, {\n        type: 2\n        /* Modified */\n        ,\n        doc: t.doc\n      }) : // This includes these cases, which don't make sense:\n      // Added->Added\n      // Removed->Removed\n      // Modified->Added\n      // Removed->Modified\n      // Metadata->Added\n      // Removed->Metadata\n      L() : this.Zr = this.Zr.insert(e, t);\n    }\n  }, {\n    key: \"eo\",\n    value: function eo() {\n      var t = [];\n      return this.Zr.inorderTraversal(function (e, n) {\n        t.push(n);\n      }), t;\n    }\n  }]);\n\n  return Oo;\n}();\n\nvar Fo = /*#__PURE__*/function () {\n  function Fo(t, e, n, s, i, r, o, c) {\n    _classCallCheck(this, Fo);\n\n    this.query = t, this.docs = e, this.oldDocs = n, this.docChanges = s, this.mutatedKeys = i, this.fromCache = r, this.syncStateChanged = o, this.excludesMetadataChanges = c;\n  }\n  /** Returns a view snapshot as if all documents in the snapshot were added. */\n\n\n  _createClass(Fo, [{\n    key: \"hasPendingWrites\",\n    get: function get() {\n      return !this.mutatedKeys.isEmpty();\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      if (!(this.fromCache === t.fromCache && this.syncStateChanged === t.syncStateChanged && this.mutatedKeys.isEqual(t.mutatedKeys) && Ae(this.query, t.query) && this.docs.isEqual(t.docs) && this.oldDocs.isEqual(t.oldDocs))) return !1;\n      var e = this.docChanges,\n          n = t.docChanges;\n      if (e.length !== n.length) return !1;\n\n      for (var _t62 = 0; _t62 < e.length; _t62++) {\n        if (e[_t62].type !== n[_t62].type || !e[_t62].doc.isEqual(n[_t62].doc)) return !1;\n      }\n\n      return !0;\n    }\n  }], [{\n    key: \"fromInitialDocuments\",\n    value: function fromInitialDocuments(t, e, n, s) {\n      var i = [];\n      return e.forEach(function (t) {\n        i.push({\n          type: 0\n          /* Added */\n          ,\n          doc: t\n        });\n      }), new Fo(t, e, $o.emptySet(e), i, n, s,\n      /* syncStateChanged= */\n      !0,\n      /* excludesMetadataChanges= */\n      !1);\n    }\n  }]);\n\n  return Fo;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Holds the listeners and the last received ViewSnapshot for a query being\n * tracked by EventManager.\n */\n\n\nvar Mo = function Mo() {\n  _classCallCheck(this, Mo);\n\n  this.no = void 0, this.listeners = [];\n};\n\nvar Lo = function Lo() {\n  _classCallCheck(this, Lo);\n\n  this.queries = new ji(function (t) {\n    return Re(t);\n  }, Ae), this.onlineState = \"Unknown\"\n  /* Unknown */\n  , this.so = new Set();\n};\n\nfunction Bo(_x48, _x49) {\n  return _Bo.apply(this, arguments);\n}\n\nfunction _Bo() {\n  _Bo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee91(t, e) {\n    var n, s, i, r, _n36;\n\n    return _regeneratorRuntime.wrap(function _callee91$(_context91) {\n      while (1) {\n        switch (_context91.prev = _context91.next) {\n          case 0:\n            n = q(t), s = e.query;\n            i = !1, r = n.queries.get(s);\n\n            if (!(r || (i = !0, r = new Mo()), i)) {\n              _context91.next = 13;\n              break;\n            }\n\n            _context91.prev = 3;\n            _context91.next = 6;\n            return n.onListen(s);\n\n          case 6:\n            r.no = _context91.sent;\n            _context91.next = 13;\n            break;\n\n          case 9:\n            _context91.prev = 9;\n            _context91.t0 = _context91[\"catch\"](3);\n            _n36 = ko(_context91.t0, \"Initialization of query '\".concat(be(e.query), \"' failed\"));\n            return _context91.abrupt(\"return\", void e.onError(_n36));\n\n          case 13:\n            if (n.queries.set(s, r), r.listeners.push(e), // Run global snapshot listeners if a consistent snapshot has been emitted.\n            e.io(n.onlineState), r.no) {\n              e.ro(r.no) && jo(n);\n            }\n\n          case 14:\n          case \"end\":\n            return _context91.stop();\n        }\n      }\n    }, _callee91, null, [[3, 9]]);\n  }));\n  return _Bo.apply(this, arguments);\n}\n\nfunction Uo(_x50, _x51) {\n  return _Uo.apply(this, arguments);\n}\n\nfunction _Uo() {\n  _Uo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee92(t, e) {\n    var n, s, i, r, _t89;\n\n    return _regeneratorRuntime.wrap(function _callee92$(_context92) {\n      while (1) {\n        switch (_context92.prev = _context92.next) {\n          case 0:\n            n = q(t), s = e.query;\n            i = !1;\n            r = n.queries.get(s);\n\n            if (r) {\n              _t89 = r.listeners.indexOf(e);\n              _t89 >= 0 && (r.listeners.splice(_t89, 1), i = 0 === r.listeners.length);\n            }\n\n            if (!i) {\n              _context92.next = 6;\n              break;\n            }\n\n            return _context92.abrupt(\"return\", (n.queries.delete(s), n.onUnlisten(s)));\n\n          case 6:\n          case \"end\":\n            return _context92.stop();\n        }\n      }\n    }, _callee92);\n  }));\n  return _Uo.apply(this, arguments);\n}\n\nfunction qo(t, e) {\n  var n = q(t);\n  var s = !1;\n\n  var _iterator39 = _createForOfIteratorHelper(e),\n      _step39;\n\n  try {\n    for (_iterator39.s(); !(_step39 = _iterator39.n()).done;) {\n      var _t63 = _step39.value;\n      var _e35 = _t63.query,\n          i = n.queries.get(_e35);\n\n      if (i) {\n        var _iterator40 = _createForOfIteratorHelper(i.listeners),\n            _step40;\n\n        try {\n          for (_iterator40.s(); !(_step40 = _iterator40.n()).done;) {\n            var _e36 = _step40.value;\n            _e36.ro(_t63) && (s = !0);\n          }\n        } catch (err) {\n          _iterator40.e(err);\n        } finally {\n          _iterator40.f();\n        }\n\n        i.no = _t63;\n      }\n    }\n  } catch (err) {\n    _iterator39.e(err);\n  } finally {\n    _iterator39.f();\n  }\n\n  s && jo(n);\n}\n\nfunction Ko(t, e, n) {\n  var s = q(t),\n      i = s.queries.get(e);\n\n  if (i) {\n    var _iterator41 = _createForOfIteratorHelper(i.listeners),\n        _step41;\n\n    try {\n      for (_iterator41.s(); !(_step41 = _iterator41.n()).done;) {\n        var _t64 = _step41.value;\n\n        _t64.onError(n);\n      }\n    } catch (err) {\n      _iterator41.e(err);\n    } finally {\n      _iterator41.f();\n    }\n  } // Remove all listeners. NOTE: We don't need to call syncEngine.unlisten()\n  // after an error.\n\n\n  s.queries.delete(e);\n} // Call all global snapshot listeners that have been set.\n\n\nfunction jo(t) {\n  t.so.forEach(function (t) {\n    t.next();\n  });\n}\n/**\n * QueryListener takes a series of internal view snapshots and determines\n * when to raise the event.\n *\n * It uses an Observer to dispatch events.\n */\n\n\nvar Qo = /*#__PURE__*/function () {\n  function Qo(t, e, n) {\n    _classCallCheck(this, Qo);\n\n    this.query = t, this.oo = e,\n    /**\n     * Initial snapshots (e.g. from cache) may not be propagated to the wrapped\n     * observer. This flag is set to true once we've actually raised an event.\n     */\n    this.co = !1, this.ao = null, this.onlineState = \"Unknown\"\n    /* Unknown */\n    , this.options = n || {};\n  }\n  /**\n   * Applies the new ViewSnapshot to this listener, raising a user-facing event\n   * if applicable (depending on what changed, whether the user has opted into\n   * metadata-only changes, etc.). Returns true if a user-facing event was\n   * indeed raised.\n   */\n\n\n  _createClass(Qo, [{\n    key: \"ro\",\n    value: function ro(t) {\n      if (!this.options.includeMetadataChanges) {\n        // Remove the metadata only changes.\n        var _e37 = [];\n\n        var _iterator42 = _createForOfIteratorHelper(t.docChanges),\n            _step42;\n\n        try {\n          for (_iterator42.s(); !(_step42 = _iterator42.n()).done;) {\n            var n = _step42.value;\n            3\n            /* Metadata */\n            !== n.type && _e37.push(n);\n          }\n        } catch (err) {\n          _iterator42.e(err);\n        } finally {\n          _iterator42.f();\n        }\n\n        t = new Fo(t.query, t.docs, t.oldDocs, _e37, t.mutatedKeys, t.fromCache, t.syncStateChanged,\n        /* excludesMetadataChanges= */\n        !0);\n      }\n\n      var e = !1;\n      return this.co ? this.uo(t) && (this.oo.next(t), e = !0) : this.ho(t, this.onlineState) && (this.lo(t), e = !0), this.ao = t, e;\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(t) {\n      this.oo.error(t);\n    }\n    /** Returns whether a snapshot was raised. */\n\n  }, {\n    key: \"io\",\n    value: function io(t) {\n      this.onlineState = t;\n      var e = !1;\n      return this.ao && !this.co && this.ho(this.ao, t) && (this.lo(this.ao), e = !0), e;\n    }\n  }, {\n    key: \"ho\",\n    value: function ho(t, e) {\n      // Always raise the first event when we're synced\n      if (!t.fromCache) return !0; // NOTE: We consider OnlineState.Unknown as online (it should become Offline\n      // or Online if we wait long enough).\n\n      var n = \"Offline\"\n      /* Offline */\n      !== e; // Don't raise the event if we're online, aren't synced yet (checked\n      // above) and are waiting for a sync.\n\n      return (!this.options.fo || !n) && (!t.docs.isEmpty() || \"Offline\"\n      /* Offline */\n      === e); // Raise data from cache if we have any documents or we are offline\n    }\n  }, {\n    key: \"uo\",\n    value: function uo(t) {\n      // We don't need to handle includeDocumentMetadataChanges here because\n      // the Metadata only changes have already been stripped out if needed.\n      // At this point the only changes we will see are the ones we should\n      // propagate.\n      if (t.docChanges.length > 0) return !0;\n      var e = this.ao && this.ao.hasPendingWrites !== t.hasPendingWrites;\n      return !(!t.syncStateChanged && !e) && !0 === this.options.includeMetadataChanges; // Generally we should have hit one of the cases above, but it's possible\n      // to get here if there were only metadata docChanges and they got\n      // stripped out.\n    }\n  }, {\n    key: \"lo\",\n    value: function lo(t) {\n      t = Fo.fromInitialDocuments(t.query, t.docs, t.mutatedKeys, t.fromCache), this.co = !0, this.oo.next(t);\n    }\n  }]);\n\n  return Qo;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A complete element in the bundle stream, together with the byte length it\n * occupies in the stream.\n */\n\n\nvar Wo = /*#__PURE__*/function () {\n  function Wo(t, // How many bytes this element takes to store in the bundle.\n  e) {\n    _classCallCheck(this, Wo);\n\n    this.payload = t, this.byteLength = e;\n  }\n\n  _createClass(Wo, [{\n    key: \"wo\",\n    value: function wo() {\n      return \"metadata\" in this.payload;\n    }\n  }]);\n\n  return Wo;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Helper to convert objects from bundles to model objects in the SDK.\n */\n\n\nvar Go = /*#__PURE__*/function () {\n  function Go(t) {\n    _classCallCheck(this, Go);\n\n    this.N = t;\n  }\n\n  _createClass(Go, [{\n    key: \"zn\",\n    value: function zn(t) {\n      return _zn(this.N, t);\n    }\n    /**\n     * Converts a BundleDocument to a MutableDocument.\n     */\n\n  }, {\n    key: \"Hn\",\n    value: function Hn(t) {\n      return t.metadata.exists ? ts(this.N, t.document, !1) : Kt.newNoDocument(this.zn(t.metadata.name), this.Jn(t.metadata.readTime));\n    }\n  }, {\n    key: \"Jn\",\n    value: function Jn(t) {\n      return jn(t);\n    }\n  }]);\n\n  return Go;\n}();\n/**\n * A class to process the elements from a bundle, load them into local\n * storage and provide progress update while loading.\n */\n\n\nvar zo = /*#__PURE__*/function () {\n  function zo(t, e, n) {\n    _classCallCheck(this, zo);\n\n    this._o = t, this.localStore = e, this.N = n,\n    /** Batched queries to be saved into storage */\n    this.queries = [],\n    /** Batched documents to be saved into storage */\n    this.documents = [], this.progress = Ho(t);\n  }\n  /**\n   * Adds an element from the bundle to the loader.\n   *\n   * Returns a new progress if adding the element leads to a new progress,\n   * otherwise returns null.\n   */\n\n\n  _createClass(zo, [{\n    key: \"mo\",\n    value: function mo(t) {\n      this.progress.bytesLoaded += t.byteLength;\n      var e = this.progress.documentsLoaded;\n      return t.payload.namedQuery ? this.queries.push(t.payload.namedQuery) : t.payload.documentMetadata ? (this.documents.push({\n        metadata: t.payload.documentMetadata\n      }), t.payload.documentMetadata.exists || ++e) : t.payload.document && (this.documents[this.documents.length - 1].document = t.payload.document, ++e), e !== this.progress.documentsLoaded ? (this.progress.documentsLoaded = e, Object.assign({}, this.progress)) : null;\n    }\n  }, {\n    key: \"yo\",\n    value: function yo(t) {\n      var e = new Map(),\n          n = new Go(this.N);\n\n      var _iterator43 = _createForOfIteratorHelper(t),\n          _step43;\n\n      try {\n        for (_iterator43.s(); !(_step43 = _iterator43.n()).done;) {\n          var s = _step43.value;\n\n          if (s.metadata.queries) {\n            var _t65 = n.zn(s.metadata.name);\n\n            var _iterator44 = _createForOfIteratorHelper(s.metadata.queries),\n                _step44;\n\n            try {\n              for (_iterator44.s(); !(_step44 = _iterator44.n()).done;) {\n                var _n22 = _step44.value;\n\n                var _s15 = (e.get(_n22) || Pn()).add(_t65);\n\n                e.set(_n22, _s15);\n              }\n            } catch (err) {\n              _iterator44.e(err);\n            } finally {\n              _iterator44.f();\n            }\n          }\n        }\n      } catch (err) {\n        _iterator43.e(err);\n      } finally {\n        _iterator43.f();\n      }\n\n      return e;\n    }\n    /**\n     * Update the progress to 'Success' and return the updated progress.\n     */\n\n  }, {\n    key: \"complete\",\n    value: function () {\n      var _complete = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee22() {\n        var t, e, _iterator45, _step45, _t66;\n\n        return _regeneratorRuntime.wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                _context22.next = 2;\n                return Ir(this.localStore, new Go(this.N), this.documents, this._o.id);\n\n              case 2:\n                t = _context22.sent;\n                e = this.yo(this.documents);\n                _iterator45 = _createForOfIteratorHelper(this.queries);\n                _context22.prev = 5;\n\n                _iterator45.s();\n\n              case 7:\n                if ((_step45 = _iterator45.n()).done) {\n                  _context22.next = 13;\n                  break;\n                }\n\n                _t66 = _step45.value;\n                _context22.next = 11;\n                return Ar(this.localStore, _t66, e.get(_t66.name));\n\n              case 11:\n                _context22.next = 7;\n                break;\n\n              case 13:\n                _context22.next = 18;\n                break;\n\n              case 15:\n                _context22.prev = 15;\n                _context22.t0 = _context22[\"catch\"](5);\n\n                _iterator45.e(_context22.t0);\n\n              case 18:\n                _context22.prev = 18;\n\n                _iterator45.f();\n\n                return _context22.finish(18);\n\n              case 21:\n                return _context22.abrupt(\"return\", (this.progress.taskState = \"Success\", new ir(Object.assign({}, this.progress), t)));\n\n              case 22:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22, this, [[5, 15, 18, 21]]);\n      }));\n\n      function complete() {\n        return _complete.apply(this, arguments);\n      }\n\n      return complete;\n    }()\n  }]);\n\n  return zo;\n}();\n/**\n * Returns a `LoadBundleTaskProgress` representing the initial progress of\n * loading a bundle.\n */\n\n\nfunction Ho(t) {\n  return {\n    taskState: \"Running\",\n    documentsLoaded: 0,\n    bytesLoaded: 0,\n    totalDocuments: t.totalDocuments,\n    totalBytes: t.totalBytes\n  };\n}\n/**\n * Returns a `LoadBundleTaskProgress` representing the progress that the loading\n * has succeeded.\n */\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar Jo = function Jo(t) {\n  _classCallCheck(this, Jo);\n\n  this.key = t;\n};\n\nvar Yo = function Yo(t) {\n  _classCallCheck(this, Yo);\n\n  this.key = t;\n};\n/**\n * View is responsible for computing the final merged truth of what docs are in\n * a query. It gets notified of local and remote changes to docs, and applies\n * the query filters and limits to determine the most correct possible results.\n */\n\n\nvar Xo = /*#__PURE__*/function () {\n  function Xo(t,\n  /** Documents included in the remote target */\n  e) {\n    _classCallCheck(this, Xo);\n\n    this.query = t, this.po = e, this.To = null,\n    /**\n     * A flag whether the view is current with the backend. A view is considered\n     * current after it has seen the current flag from the backend and did not\n     * lose consistency within the watch stream (e.g. because of an existence\n     * filter mismatch).\n     */\n    this.current = !1,\n    /** Documents in the view but not in the remote target */\n    this.Eo = Pn(),\n    /** Document Keys that have local changes */\n    this.mutatedKeys = Pn(), this.Io = ve(t), this.Ao = new $o(this.Io);\n  }\n  /**\n   * The set of remote documents that the server has told us belongs to the target associated with\n   * this view.\n   */\n\n\n  _createClass(Xo, [{\n    key: \"Ro\",\n    get: function get() {\n      return this.po;\n    }\n    /**\n     * Iterates over a set of doc changes, applies the query limit, and computes\n     * what the new results should be, what the changes were, and whether we may\n     * need to go back to the local cache for more results. Does not make any\n     * changes to the view.\n     * @param docChanges - The doc changes to apply to this view.\n     * @param previousChanges - If this is being called with a refill, then start\n     *        with this set of docs and changes instead of the current view.\n     * @returns a new set of docs, changes, and refill flag.\n     */\n\n  }, {\n    key: \"bo\",\n    value: function bo(t, e) {\n      var _this137 = this;\n\n      var n = e ? e.Po : new Oo(),\n          s = e ? e.Ao : this.Ao;\n      var i = e ? e.mutatedKeys : this.mutatedKeys,\n          r = s,\n          o = !1; // Track the last doc in a (full) limit. This is necessary, because some\n      // update (a delete, or an update moving a doc past the old limit) might\n      // mean there is some other document in the local cache that either should\n      // come (1) between the old last limit doc and the new last document, in the\n      // case of updates, or (2) after the new last document, in the case of\n      // deletes. So we keep this doc at the old limit to compare the updates to.\n      // Note that this should never get used in a refill (when previousChanges is\n      // set), because there will only be adds -- no deletes or updates.\n\n      var c = _e(this.query) && s.size === this.query.limit ? s.last() : null,\n          a = me(this.query) && s.size === this.query.limit ? s.first() : null; // Drop documents out to meet limit/limitToLast requirement.\n\n      if (t.inorderTraversal(function (t, e) {\n        var u = s.get(t),\n            h = Pe(_this137.query, e) ? e : null,\n            l = !!u && _this137.mutatedKeys.has(u.key),\n            f = !!h && (h.hasLocalMutations || // We only consider committed mutations for documents that were\n        // mutated during the lifetime of the view.\n        _this137.mutatedKeys.has(h.key) && h.hasCommittedMutations);\n\n        var d = !1; // Calculate change\n\n        if (u && h) {\n          u.data.isEqual(h.data) ? l !== f && (n.track({\n            type: 3\n            /* Metadata */\n            ,\n            doc: h\n          }), d = !0) : _this137.vo(u, h) || (n.track({\n            type: 2\n            /* Modified */\n            ,\n            doc: h\n          }), d = !0, (c && _this137.Io(h, c) > 0 || a && _this137.Io(h, a) < 0) && ( // This doc moved from inside the limit to outside the limit.\n          // That means there may be some other doc in the local cache\n          // that should be included instead.\n          o = !0));\n        } else !u && h ? (n.track({\n          type: 0\n          /* Added */\n          ,\n          doc: h\n        }), d = !0) : u && !h && (n.track({\n          type: 1\n          /* Removed */\n          ,\n          doc: u\n        }), d = !0, (c || a) && ( // A doc was removed from a full limit query. We'll need to\n        // requery from the local cache to see if we know about some other\n        // doc that should be in the results.\n        o = !0));\n\n        d && (h ? (r = r.add(h), i = f ? i.add(t) : i.delete(t)) : (r = r.delete(t), i = i.delete(t)));\n      }), _e(this.query) || me(this.query)) for (; r.size > this.query.limit;) {\n        var _t67 = _e(this.query) ? r.last() : r.first();\n\n        r = r.delete(_t67.key), i = i.delete(_t67.key), n.track({\n          type: 1\n          /* Removed */\n          ,\n          doc: _t67\n        });\n      }\n      return {\n        Ao: r,\n        Po: n,\n        Ln: o,\n        mutatedKeys: i\n      };\n    }\n  }, {\n    key: \"vo\",\n    value: function vo(t, e) {\n      // We suppress the initial change event for documents that were modified as\n      // part of a write acknowledgment (e.g. when the value of a server transform\n      // is applied) as Watch will send us the same document again.\n      // By suppressing the event, we only raise two user visible events (one with\n      // `hasPendingWrites` and the final state of the document) instead of three\n      // (one with `hasPendingWrites`, the modified document with\n      // `hasPendingWrites` and the final state of the document).\n      return t.hasLocalMutations && e.hasCommittedMutations && !e.hasLocalMutations;\n    }\n    /**\n     * Updates the view with the given ViewDocumentChanges and optionally updates\n     * limbo docs and sync state from the provided target change.\n     * @param docChanges - The set of changes to make to the view's docs.\n     * @param updateLimboDocuments - Whether to update limbo documents based on\n     *        this change.\n     * @param targetChange - A target change to apply for computing limbo docs and\n     *        sync state.\n     * @returns A new ViewChange with the given docs, changes, and sync state.\n     */\n    // PORTING NOTE: The iOS/Android clients always compute limbo document changes.\n\n  }, {\n    key: \"applyChanges\",\n    value: function applyChanges(t, e, n) {\n      var _this138 = this;\n\n      var s = this.Ao;\n      this.Ao = t.Ao, this.mutatedKeys = t.mutatedKeys; // Sort changes based on type and query comparator\n\n      var i = t.Po.eo();\n      i.sort(function (t, e) {\n        return function (t, e) {\n          var n = function n(t) {\n            switch (t) {\n              case 0\n              /* Added */\n              :\n                return 1;\n\n              case 2\n              /* Modified */\n              :\n              case 3\n              /* Metadata */\n              :\n                // A metadata change is converted to a modified change at the public\n                // api layer.  Since we sort by document key and then change type,\n                // metadata and modified changes must be sorted equivalently.\n                return 2;\n\n              case 1\n              /* Removed */\n              :\n                return 0;\n\n              default:\n                return L();\n            }\n          };\n\n          return n(t) - n(e);\n        }\n        /**\n        * @license\n        * Copyright 2020 Google LLC\n        *\n        * Licensed under the Apache License, Version 2.0 (the \"License\");\n        * you may not use this file except in compliance with the License.\n        * You may obtain a copy of the License at\n        *\n        *   http://www.apache.org/licenses/LICENSE-2.0\n        *\n        * Unless required by applicable law or agreed to in writing, software\n        * distributed under the License is distributed on an \"AS IS\" BASIS,\n        * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n        * See the License for the specific language governing permissions and\n        * limitations under the License.\n        */\n        (t.type, e.type) || _this138.Io(t.doc, e.doc);\n      }), this.Vo(n);\n      var r = e ? this.So() : [],\n          o = 0 === this.Eo.size && this.current ? 1\n      /* Synced */\n      : 0\n      /* Local */\n      ,\n          c = o !== this.To;\n\n      if (this.To = o, 0 !== i.length || c) {\n        return {\n          snapshot: new Fo(this.query, t.Ao, s, i, t.mutatedKeys, 0\n          /* Local */\n          === o, c,\n          /* excludesMetadataChanges= */\n          !1),\n          Do: r\n        };\n      } // no changes\n\n\n      return {\n        Do: r\n      };\n    }\n    /**\n     * Applies an OnlineState change to the view, potentially generating a\n     * ViewChange if the view's syncState changes as a result.\n     */\n\n  }, {\n    key: \"io\",\n    value: function io(t) {\n      return this.current && \"Offline\"\n      /* Offline */\n      === t ? ( // If we're offline, set `current` to false and then call applyChanges()\n      // to refresh our syncState and generate a ViewChange as appropriate. We\n      // are guaranteed to get a new TargetChange that sets `current` back to\n      // true once the client is back online.\n      this.current = !1, this.applyChanges({\n        Ao: this.Ao,\n        Po: new Oo(),\n        mutatedKeys: this.mutatedKeys,\n        Ln: !1\n      },\n      /* updateLimboDocuments= */\n      !1)) : {\n        Do: []\n      };\n    }\n    /**\n     * Returns whether the doc for the given key should be in limbo.\n     */\n\n  }, {\n    key: \"Co\",\n    value: function Co(t) {\n      // If the remote end says it's part of this query, it's not in limbo.\n      return !this.po.has(t) && // The local store doesn't think it's a result, so it shouldn't be in limbo.\n      !!this.Ao.has(t) && !this.Ao.get(t).hasLocalMutations;\n    }\n    /**\n     * Updates syncedDocuments, current, and limbo docs based on the given change.\n     * Returns the list of changes to which docs are in limbo.\n     */\n\n  }, {\n    key: \"Vo\",\n    value: function Vo(t) {\n      var _this139 = this;\n\n      t && (t.addedDocuments.forEach(function (t) {\n        return _this139.po = _this139.po.add(t);\n      }), t.modifiedDocuments.forEach(function (t) {}), t.removedDocuments.forEach(function (t) {\n        return _this139.po = _this139.po.delete(t);\n      }), this.current = t.current);\n    }\n  }, {\n    key: \"So\",\n    value: function So() {\n      var _this140 = this;\n\n      // We can only determine limbo documents when we're in-sync with the server.\n      if (!this.current) return []; // TODO(klimt): Do this incrementally so that it's not quadratic when\n      // updating many documents.\n\n      var t = this.Eo;\n      this.Eo = Pn(), this.Ao.forEach(function (t) {\n        _this140.Co(t.key) && (_this140.Eo = _this140.Eo.add(t.key));\n      }); // Diff the new limbo docs with the old limbo docs.\n\n      var e = [];\n      return t.forEach(function (t) {\n        _this140.Eo.has(t) || e.push(new Yo(t));\n      }), this.Eo.forEach(function (n) {\n        t.has(n) || e.push(new Jo(n));\n      }), e;\n    }\n    /**\n     * Update the in-memory state of the current view with the state read from\n     * persistence.\n     *\n     * We update the query view whenever a client's primary status changes:\n     * - When a client transitions from primary to secondary, it can miss\n     *   LocalStorage updates and its query views may temporarily not be\n     *   synchronized with the state on disk.\n     * - For secondary to primary transitions, the client needs to update the list\n     *   of `syncedDocuments` since secondary clients update their query views\n     *   based purely on synthesized RemoteEvents.\n     *\n     * @param queryResult.documents - The documents that match the query according\n     * to the LocalStore.\n     * @param queryResult.remoteKeys - The keys of the documents that match the\n     * query according to the backend.\n     *\n     * @returns The ViewChange that resulted from this synchronization.\n     */\n    // PORTING NOTE: Multi-tab only.\n\n  }, {\n    key: \"No\",\n    value: function No(t) {\n      this.po = t.Gn, this.Eo = Pn();\n      var e = this.bo(t.documents);\n      return this.applyChanges(e,\n      /*updateLimboDocuments=*/\n      !0);\n    }\n    /**\n     * Returns a view snapshot as if this query was just listened to. Contains\n     * a document add for every existing document and the `fromCache` and\n     * `hasPendingWrites` status of the already established view.\n     */\n    // PORTING NOTE: Multi-tab only.\n\n  }, {\n    key: \"xo\",\n    value: function xo() {\n      return Fo.fromInitialDocuments(this.query, this.Ao, this.mutatedKeys, 0\n      /* Local */\n      === this.To);\n    }\n  }]);\n\n  return Xo;\n}();\n/**\n * QueryView contains all of the data that SyncEngine needs to keep track of for\n * a particular query.\n */\n\n\nvar Zo = function Zo(\n/**\n * The query itself.\n */\nt,\n/**\n * The target number created by the client that is used in the watch\n * stream to identify this query.\n */\ne,\n/**\n * The view is responsible for computing the final merged truth of what\n * docs are in the query. It gets notified of local and remote changes,\n * and applies the query filters and limits to determine the most correct\n * possible results.\n */\nn) {\n  _classCallCheck(this, Zo);\n\n  this.query = t, this.targetId = e, this.view = n;\n};\n/** Tracks a limbo resolution. */\n\n\nvar tc = function tc(t) {\n  _classCallCheck(this, tc);\n\n  this.key = t,\n  /**\n   * Set to true once we've received a document. This is used in\n   * getRemoteKeysForTarget() and ultimately used by WatchChangeAggregator to\n   * decide whether it needs to manufacture a delete event for the target once\n   * the target is CURRENT.\n   */\n  this.ko = !1;\n};\n/**\n * An implementation of `SyncEngine` coordinating with other parts of SDK.\n *\n * The parts of SyncEngine that act as a callback to RemoteStore need to be\n * registered individually. This is done in `syncEngineWrite()` and\n * `syncEngineListen()` (as well as `applyPrimaryState()`) as these methods\n * serve as entry points to RemoteStore's functionality.\n *\n * Note: some field defined in this class might have public access level, but\n * the class is not exported so they are only accessible from this module.\n * This is useful to implement optional features (like bundles) in free\n * functions, such that they are tree-shakeable.\n */\n\n\nvar ec = /*#__PURE__*/function () {\n  function ec(t, e, n, // PORTING NOTE: Manages state synchronization in multi-tab environments.\n  s, i, r) {\n    _classCallCheck(this, ec);\n\n    this.localStore = t, this.remoteStore = e, this.eventManager = n, this.sharedClientState = s, this.currentUser = i, this.maxConcurrentLimboResolutions = r, this.$o = {}, this.Oo = new ji(function (t) {\n      return Re(t);\n    }, Ae), this.Fo = new Map(),\n    /**\n     * The keys of documents that are in limbo for which we haven't yet started a\n     * limbo resolution query. The strings in this set are the result of calling\n     * `key.path.canonicalString()` where `key` is a `DocumentKey` object.\n     *\n     * The `Set` type was chosen because it provides efficient lookup and removal\n     * of arbitrary elements and it also maintains insertion order, providing the\n     * desired queue-like FIFO semantics.\n     */\n    this.Mo = new Set(),\n    /**\n     * Keeps track of the target ID for each document that is in limbo with an\n     * active target.\n     */\n    this.Lo = new wn(Pt.comparator),\n    /**\n     * Keeps track of the information about an active limbo resolution for each\n     * active target ID that was started for the purpose of limbo resolution.\n     */\n    this.Bo = new Map(), this.Uo = new br(),\n    /** Stores user completion handlers, indexed by User and BatchId. */\n    this.qo = {},\n    /** Stores user callbacks waiting for all pending writes to be acknowledged. */\n    this.Ko = new Map(), this.jo = Ni.ie(), this.onlineState = \"Unknown\"\n    /* Unknown */\n    , // The primary state is set to `true` or `false` immediately after Firestore\n    // startup. In the interim, a client should only be considered primary if\n    // `isPrimary` is true.\n    this.Qo = void 0;\n  }\n\n  _createClass(ec, [{\n    key: \"isPrimaryClient\",\n    get: function get() {\n      return !0 === this.Qo;\n    }\n  }]);\n\n  return ec;\n}();\n/**\n * Initiates the new listen, resolves promise when listen enqueued to the\n * server. All the subsequent view snapshots or errors are sent to the\n * subscribed handlers. Returns the initial snapshot.\n */\n\n\nfunction nc(_x52, _x53) {\n  return _nc.apply(this, arguments);\n}\n/**\n * Registers a view for a previously unknown query and computes its initial\n * snapshot.\n */\n\n\nfunction _nc() {\n  _nc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee93(t, e) {\n    var n, s, i, r, _t90, _r10;\n\n    return _regeneratorRuntime.wrap(function _callee93$(_context93) {\n      while (1) {\n        switch (_context93.prev = _context93.next) {\n          case 0:\n            n = Cc(t);\n            r = n.Oo.get(e);\n\n            if (!r) {\n              _context93.next = 6;\n              break;\n            }\n\n            // PORTING NOTE: With Multi-Tab Web, it is possible that a query view\n            // already exists when EventManager calls us for the first time. This\n            // happens when the primary tab is already listening to this query on\n            // behalf of another tab and the user of the primary also starts listening\n            // to the query. EventManager will not have an assigned target ID in this\n            // case and calls `listen` to obtain this ID.\n            s = r.targetId, n.sharedClientState.addLocalQueryTarget(s), i = r.view.xo();\n            _context93.next = 15;\n            break;\n\n          case 6:\n            _context93.next = 8;\n            return mr(n.localStore, Ee(e));\n\n          case 8:\n            _t90 = _context93.sent;\n            _r10 = n.sharedClientState.addLocalQueryTarget(_t90.targetId);\n            s = _t90.targetId;\n            _context93.next = 13;\n            return sc(n, e, s, \"current\" === _r10);\n\n          case 13:\n            i = _context93.sent;\n            n.isPrimaryClient && co(n.remoteStore, _t90);\n\n          case 15:\n            return _context93.abrupt(\"return\", i);\n\n          case 16:\n          case \"end\":\n            return _context93.stop();\n        }\n      }\n    }, _callee93);\n  }));\n  return _nc.apply(this, arguments);\n}\n\nfunction sc(_x54, _x55, _x56, _x57) {\n  return _sc.apply(this, arguments);\n}\n/** Stops listening to the query. */\n\n\nfunction _sc() {\n  _sc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee95(t, e, n, s) {\n    var i, r, o, c, a, u;\n    return _regeneratorRuntime.wrap(function _callee95$(_context95) {\n      while (1) {\n        switch (_context95.prev = _context95.next) {\n          case 0:\n            // PORTING NOTE: On Web only, we inject the code that registers new Limbo\n            // targets based on view changes. This allows us to only depend on Limbo\n            // changes when user code includes queries.\n            t.Wo = function (e, n, s) {\n              return function () {\n                var _ref62 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee94(t, e, n, s) {\n                  var i, r, o;\n                  return _regeneratorRuntime.wrap(function _callee94$(_context94) {\n                    while (1) {\n                      switch (_context94.prev = _context94.next) {\n                        case 0:\n                          i = e.view.bo(n);\n                          _context94.t0 = i.Ln;\n\n                          if (!_context94.t0) {\n                            _context94.next = 6;\n                            break;\n                          }\n\n                          _context94.next = 5;\n                          return yr(t.localStore, e.query,\n                          /* usePreviousResults= */\n                          !1).then(function (_ref63) {\n                            var t = _ref63.documents;\n                            return e.view.bo(t, i);\n                          });\n\n                        case 5:\n                          i = _context94.sent;\n\n                        case 6:\n                          r = s && s.targetChanges.get(e.targetId), o = e.view.applyChanges(i,\n                          /* updateLimboDocuments= */\n                          t.isPrimaryClient, r);\n                          return _context94.abrupt(\"return\", (mc(t, e.targetId, o.Do), o.snapshot));\n\n                        case 8:\n                        case \"end\":\n                          return _context94.stop();\n                      }\n                    }\n                  }, _callee94);\n                }));\n\n                return function (_x135, _x136, _x137, _x138) {\n                  return _ref62.apply(this, arguments);\n                };\n              }()(t, e, n, s);\n            };\n\n            _context95.next = 3;\n            return yr(t.localStore, e,\n            /* usePreviousResults= */\n            !0);\n\n          case 3:\n            i = _context95.sent;\n            r = new Xo(e, i.Gn);\n            o = r.bo(i.documents);\n            c = Dn.createSynthesizedTargetChangeForCurrentChange(n, s && \"Offline\"\n            /* Offline */\n            !== t.onlineState);\n            a = r.applyChanges(o,\n            /* updateLimboDocuments= */\n            t.isPrimaryClient, c);\n            mc(t, n, a.Do);\n            u = new Zo(e, n, r);\n            return _context95.abrupt(\"return\", (t.Oo.set(e, u), t.Fo.has(n) ? t.Fo.get(n).push(e) : t.Fo.set(n, [e]), a.snapshot));\n\n          case 11:\n          case \"end\":\n            return _context95.stop();\n        }\n      }\n    }, _callee95);\n  }));\n  return _sc.apply(this, arguments);\n}\n\nfunction ic(_x58, _x59) {\n  return _ic.apply(this, arguments);\n}\n/**\n * Initiates the write of local mutation batch which involves adding the\n * writes to the mutation queue, notifying the remote store about new\n * mutations and raising events for any changes this write caused.\n *\n * The promise returned by this call is resolved when the above steps\n * have completed, *not* when the write was acked by the backend. The\n * userCallback is resolved once the write was acked/rejected by the\n * backend (or failed locally for any other reason).\n */\n\n\nfunction _ic() {\n  _ic = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee96(t, e) {\n    var n, s, i;\n    return _regeneratorRuntime.wrap(function _callee96$(_context96) {\n      while (1) {\n        switch (_context96.prev = _context96.next) {\n          case 0:\n            n = q(t), s = n.Oo.get(e), i = n.Fo.get(s.targetId);\n\n            if (!(i.length > 1)) {\n              _context96.next = 3;\n              break;\n            }\n\n            return _context96.abrupt(\"return\", (n.Fo.set(s.targetId, i.filter(function (t) {\n              return !Ae(t, e);\n            })), void n.Oo.delete(e)));\n\n          case 3:\n            if (!n.isPrimaryClient) {\n              _context96.next = 11;\n              break;\n            }\n\n            // We need to remove the local query target first to allow us to verify\n            // whether any other client is still interested in this target.\n            n.sharedClientState.removeLocalQueryTarget(s.targetId);\n            _context96.t0 = n.sharedClientState.isActiveQueryTarget(s.targetId);\n\n            if (_context96.t0) {\n              _context96.next = 9;\n              break;\n            }\n\n            _context96.next = 9;\n            return gr(n.localStore, s.targetId,\n            /*keepPersistedTargetData=*/\n            !1).then(function () {\n              n.sharedClientState.clearQueryState(s.targetId), ao(n.remoteStore, s.targetId), wc(n, s.targetId);\n            }).catch(Fi);\n\n          case 9:\n            _context96.next = 14;\n            break;\n\n          case 11:\n            wc(n, s.targetId);\n            _context96.next = 14;\n            return gr(n.localStore, s.targetId,\n            /*keepPersistedTargetData=*/\n            !0);\n\n          case 14:\n          case \"end\":\n            return _context96.stop();\n        }\n      }\n    }, _callee96);\n  }));\n  return _ic.apply(this, arguments);\n}\n\nfunction rc(_x60, _x61, _x62) {\n  return _rc.apply(this, arguments);\n}\n/**\n * Applies one remote event to the sync engine, notifying any views of the\n * changes, and releasing any pending mutation batches that would become\n * visible because of the snapshot version the remote event contains.\n */\n\n\nfunction _rc() {\n  _rc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee97(t, e, n) {\n    var s, _t91, _e48;\n\n    return _regeneratorRuntime.wrap(function _callee97$(_context97) {\n      while (1) {\n        switch (_context97.prev = _context97.next) {\n          case 0:\n            s = Nc(t);\n            _context97.prev = 1;\n            _context97.next = 4;\n            return function (t, e) {\n              var n = q(t),\n                  s = it.now(),\n                  i = e.reduce(function (t, e) {\n                return t.add(e.key);\n              }, Pn());\n              var r;\n              return n.persistence.runTransaction(\"Locally write mutations\", \"readwrite\", function (t) {\n                return n.Qn.Pn(t, i).next(function (i) {\n                  r = i; // For non-idempotent mutations (such as `FieldValue.increment()`),\n                  // we record the base state in a separate patch mutation. This is\n                  // later used to guarantee consistent values and prevents flicker\n                  // even if the backend sends us an update that already includes our\n                  // transform.\n\n                  // For non-idempotent mutations (such as `FieldValue.increment()`),\n                  // we record the base state in a separate patch mutation. This is\n                  // later used to guarantee consistent values and prevents flicker\n                  // even if the backend sends us an update that already includes our\n                  // transform.\n                  var o = [];\n\n                  var _iterator67 = _createForOfIteratorHelper(e),\n                      _step67;\n\n                  try {\n                    for (_iterator67.s(); !(_step67 = _iterator67.n()).done;) {\n                      var _t92 = _step67.value;\n\n                      var _e47 = Xe(_t92, r.get(_t92.key));\n\n                      null != _e47 && // NOTE: The base state should only be applied if there's some\n                      // existing document to override, so use a Precondition of\n                      // exists=true\n                      o.push(new nn(_t92.key, _e47, qt(_e47.value.mapValue), Ge.exists(!0)));\n                    }\n                  } catch (err) {\n                    _iterator67.e(err);\n                  } finally {\n                    _iterator67.f();\n                  }\n\n                  return n.In.addMutationBatch(t, s, o, e);\n                });\n              }).then(function (t) {\n                return t.applyToLocalDocumentSet(r), {\n                  batchId: t.batchId,\n                  changes: r\n                };\n              });\n            }(s.localStore, e);\n\n          case 4:\n            _t91 = _context97.sent;\n            s.sharedClientState.addPendingMutation(_t91.batchId);\n\n            (function (t, e, n) {\n              var s = t.qo[t.currentUser.toKey()];\n              s || (s = new wn(et));\n              s = s.insert(e, n), t.qo[t.currentUser.toKey()] = s;\n            }\n            /**\n            * Resolves or rejects the user callback for the given batch and then discards\n            * it.\n            */\n            )(s, _t91.batchId, n);\n\n            _context97.next = 9;\n            return pc(s, _t91.changes);\n\n          case 9:\n            _context97.next = 11;\n            return Eo(s.remoteStore);\n\n          case 11:\n            _context97.next = 17;\n            break;\n\n          case 13:\n            _context97.prev = 13;\n            _context97.t0 = _context97[\"catch\"](1);\n            // If we can't persist the mutation, we reject the user callback and\n            // don't send the mutation. The user can then retry the write.\n            _e48 = ko(_context97.t0, \"Failed to persist write\");\n            n.reject(_e48);\n\n          case 17:\n          case \"end\":\n            return _context97.stop();\n        }\n      }\n    }, _callee97, null, [[1, 13]]);\n  }));\n  return _rc.apply(this, arguments);\n}\n\nfunction oc(_x63, _x64) {\n  return _oc.apply(this, arguments);\n}\n/**\n * Applies an OnlineState change to the sync engine and notifies any views of\n * the change.\n */\n\n\nfunction _oc() {\n  _oc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee98(t, e) {\n    var n, _t93;\n\n    return _regeneratorRuntime.wrap(function _callee98$(_context98) {\n      while (1) {\n        switch (_context98.prev = _context98.next) {\n          case 0:\n            n = q(t);\n            _context98.prev = 1;\n            _context98.next = 4;\n            return dr(n.localStore, e);\n\n          case 4:\n            _t93 = _context98.sent;\n            e.targetChanges.forEach(function (t, e) {\n              var s = n.Bo.get(e);\n              s && ( // Since this is a limbo resolution lookup, it's for a single document\n              // and it could be added, modified, or removed, but not a combination.\n              B(t.addedDocuments.size + t.modifiedDocuments.size + t.removedDocuments.size <= 1), t.addedDocuments.size > 0 ? s.ko = !0 : t.modifiedDocuments.size > 0 ? B(s.ko) : t.removedDocuments.size > 0 && (B(s.ko), s.ko = !1));\n            });\n            _context98.next = 8;\n            return pc(n, _t93, e);\n\n          case 8:\n            _context98.next = 14;\n            break;\n\n          case 10:\n            _context98.prev = 10;\n            _context98.t0 = _context98[\"catch\"](1);\n            _context98.next = 14;\n            return Fi(_context98.t0);\n\n          case 14:\n          case \"end\":\n            return _context98.stop();\n        }\n      }\n    }, _callee98, null, [[1, 10]]);\n  }));\n  return _oc.apply(this, arguments);\n}\n\nfunction cc(t, e, n) {\n  var s = q(t); // If we are the secondary client, we explicitly ignore the remote store's\n  // online state (the local client may go offline, even though the primary\n  // tab remains online) and only apply the primary tab's online state from\n  // SharedClientState.\n\n  if (s.isPrimaryClient && 0\n  /* RemoteStore */\n  === n || !s.isPrimaryClient && 1\n  /* SharedClientState */\n  === n) {\n    var _t68 = [];\n    s.Oo.forEach(function (n, s) {\n      var i = s.view.io(e);\n      i.snapshot && _t68.push(i.snapshot);\n    }), function (t, e) {\n      var n = q(t);\n      n.onlineState = e;\n      var s = !1;\n      n.queries.forEach(function (t, n) {\n        var _iterator46 = _createForOfIteratorHelper(n.listeners),\n            _step46;\n\n        try {\n          for (_iterator46.s(); !(_step46 = _iterator46.n()).done;) {\n            var _t69 = _step46.value;\n            // Run global snapshot listeners if a consistent snapshot has been emitted.\n            _t69.io(e) && (s = !0);\n          }\n        } catch (err) {\n          _iterator46.e(err);\n        } finally {\n          _iterator46.f();\n        }\n      }), s && jo(n);\n    }(s.eventManager, e), _t68.length && s.$o.Rr(_t68), s.onlineState = e, s.isPrimaryClient && s.sharedClientState.setOnlineState(e);\n  }\n}\n/**\n * Rejects the listen for the given targetID. This can be triggered by the\n * backend for any active target.\n *\n * @param syncEngine - The sync engine implementation.\n * @param targetId - The targetID corresponds to one previously initiated by the\n * user as part of TargetData passed to listen() on RemoteStore.\n * @param err - A description of the condition that has forced the rejection.\n * Nearly always this will be an indication that the user is no longer\n * authorized to see the data matching the target.\n */\n\n\nfunction ac(_x65, _x66, _x67) {\n  return _ac.apply(this, arguments);\n}\n\nfunction _ac() {\n  _ac = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee99(t, e, n) {\n    var s, i, r, _t94, _n37, _i14;\n\n    return _regeneratorRuntime.wrap(function _callee99$(_context99) {\n      while (1) {\n        switch (_context99.prev = _context99.next) {\n          case 0:\n            s = q(t); // PORTING NOTE: Multi-tab only.\n\n            s.sharedClientState.updateQueryState(e, \"rejected\", n);\n            i = s.Bo.get(e), r = i && i.key;\n\n            if (!r) {\n              _context99.next = 14;\n              break;\n            }\n\n            // TODO(klimt): We really only should do the following on permission\n            // denied errors, but we don't have the cause code here.\n            // It's a limbo doc. Create a synthetic event saying it was deleted.\n            // This is kind of a hack. Ideally, we would have a method in the local\n            // store to purge a document. However, it would be tricky to keep all of\n            // the local store's invariants with another method.\n            _t94 = new wn(Pt.comparator);\n            _t94 = _t94.insert(r, Kt.newNoDocument(r, rt.min()));\n            _n37 = Pn().add(r), _i14 = new Sn(rt.min(),\n            /* targetChanges= */\n            new Map(),\n            /* targetMismatches= */\n            new gn(et), _t94, _n37);\n            _context99.next = 9;\n            return oc(s, _i14);\n\n          case 9:\n            // Since this query failed, we won't want to manually unlisten to it.\n            // We only remove it from bookkeeping after we successfully applied the\n            // RemoteEvent. If `applyRemoteEvent()` throws, we want to re-listen to\n            // this query when the RemoteStore restarts the Watch stream, which should\n            // re-trigger the target failure.\n            s.Lo = s.Lo.remove(r);\n            s.Bo.delete(e);\n            yc(s);\n            _context99.next = 16;\n            break;\n\n          case 14:\n            _context99.next = 16;\n            return gr(s.localStore, e,\n            /* keepPersistedTargetData */\n            !1).then(function () {\n              return wc(s, e, n);\n            }).catch(Fi);\n\n          case 16:\n          case \"end\":\n            return _context99.stop();\n        }\n      }\n    }, _callee99);\n  }));\n  return _ac.apply(this, arguments);\n}\n\nfunction uc(_x68, _x69) {\n  return _uc.apply(this, arguments);\n}\n\nfunction _uc() {\n  _uc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee100(t, e) {\n    var n, s, _t95;\n\n    return _regeneratorRuntime.wrap(function _callee100$(_context100) {\n      while (1) {\n        switch (_context100.prev = _context100.next) {\n          case 0:\n            n = q(t), s = e.batch.batchId;\n            _context100.prev = 1;\n            _context100.next = 4;\n            return lr(n.localStore, e);\n\n          case 4:\n            _t95 = _context100.sent;\n            dc(n, s,\n            /*error=*/\n            null);\n            fc(n, s);\n            n.sharedClientState.updateMutationState(s, \"acknowledged\");\n            _context100.next = 10;\n            return pc(n, _t95);\n\n          case 10:\n            _context100.next = 16;\n            break;\n\n          case 12:\n            _context100.prev = 12;\n            _context100.t0 = _context100[\"catch\"](1);\n            _context100.next = 16;\n            return Fi(_context100.t0);\n\n          case 16:\n          case \"end\":\n            return _context100.stop();\n        }\n      }\n    }, _callee100, null, [[1, 12]]);\n  }));\n  return _uc.apply(this, arguments);\n}\n\nfunction hc(_x70, _x71, _x72) {\n  return _hc.apply(this, arguments);\n}\n/**\n * Registers a user callback that resolves when all pending mutations at the moment of calling\n * are acknowledged .\n */\n\n\nfunction _hc() {\n  _hc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee101(t, e, n) {\n    var s, _t96;\n\n    return _regeneratorRuntime.wrap(function _callee101$(_context101) {\n      while (1) {\n        switch (_context101.prev = _context101.next) {\n          case 0:\n            s = q(t);\n            _context101.prev = 1;\n            _context101.next = 4;\n            return function (t, e) {\n              var n = q(t);\n              return n.persistence.runTransaction(\"Reject batch\", \"readwrite-primary\", function (t) {\n                var s;\n                return n.In.lookupMutationBatch(t, e).next(function (e) {\n                  return B(null !== e), s = e.keys(), n.In.removeMutationBatch(t, e);\n                }).next(function () {\n                  return n.In.performConsistencyCheck(t);\n                }).next(function () {\n                  return n.Qn.Pn(t, s);\n                });\n              });\n            }\n            /**\n            * Returns the largest (latest) batch id in mutation queue that is pending\n            * server response.\n            *\n            * Returns `BATCHID_UNKNOWN` if the queue is empty.\n            */\n            (s.localStore, e);\n\n          case 4:\n            _t96 = _context101.sent;\n            dc(s, e, n);\n            fc(s, e);\n            s.sharedClientState.updateMutationState(e, \"rejected\", n);\n            _context101.next = 10;\n            return pc(s, _t96);\n\n          case 10:\n            _context101.next = 16;\n            break;\n\n          case 12:\n            _context101.prev = 12;\n            _context101.t0 = _context101[\"catch\"](1);\n            _context101.next = 16;\n            return Fi(_context101.t0);\n\n          case 16:\n          case \"end\":\n            return _context101.stop();\n        }\n      }\n    }, _callee101, null, [[1, 12]]);\n  }));\n  return _hc.apply(this, arguments);\n}\n\nfunction lc(_x73, _x74) {\n  return _lc.apply(this, arguments);\n}\n/**\n * Triggers the callbacks that are waiting for this batch id to get acknowledged by server,\n * if there are any.\n */\n\n\nfunction _lc() {\n  _lc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee102(t, e) {\n    var n, _t97, s, _n38;\n\n    return _regeneratorRuntime.wrap(function _callee102$(_context102) {\n      while (1) {\n        switch (_context102.prev = _context102.next) {\n          case 0:\n            n = q(t);\n            wo(n.remoteStore) || $(\"SyncEngine\", \"The network is disabled. The task returned by 'awaitPendingWrites()' will not complete until the network is enabled.\");\n            _context102.prev = 2;\n            _context102.next = 5;\n            return function (t) {\n              var e = q(t);\n              return e.persistence.runTransaction(\"Get highest unacknowledged batch id\", \"readonly\", function (t) {\n                return e.In.getHighestUnacknowledgedBatchId(t);\n              });\n            }(n.localStore);\n\n          case 5:\n            _t97 = _context102.sent;\n\n            if (!(-1 === _t97)) {\n              _context102.next = 8;\n              break;\n            }\n\n            return _context102.abrupt(\"return\", void e.resolve());\n\n          case 8:\n            s = n.Ko.get(_t97) || [];\n            s.push(e), n.Ko.set(_t97, s);\n            _context102.next = 16;\n            break;\n\n          case 12:\n            _context102.prev = 12;\n            _context102.t0 = _context102[\"catch\"](2);\n            _n38 = ko(_context102.t0, \"Initialization of waitForPendingWrites() operation failed\");\n            e.reject(_n38);\n\n          case 16:\n          case \"end\":\n            return _context102.stop();\n        }\n      }\n    }, _callee102, null, [[2, 12]]);\n  }));\n  return _lc.apply(this, arguments);\n}\n\nfunction fc(t, e) {\n  (t.Ko.get(e) || []).forEach(function (t) {\n    t.resolve();\n  }), t.Ko.delete(e);\n}\n/** Reject all outstanding callbacks waiting for pending writes to complete. */\n\n\nfunction dc(t, e, n) {\n  var s = q(t);\n  var i = s.qo[s.currentUser.toKey()]; // NOTE: Mutations restored from persistence won't have callbacks, so it's\n  // okay for there to be no callback for this ID.\n\n  if (i) {\n    var _t70 = i.get(e);\n\n    _t70 && (n ? _t70.reject(n) : _t70.resolve(), i = i.remove(e)), s.qo[s.currentUser.toKey()] = i;\n  }\n}\n\nfunction wc(t, e) {\n  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  t.sharedClientState.removeLocalQueryTarget(e);\n\n  var _iterator47 = _createForOfIteratorHelper(t.Fo.get(e)),\n      _step47;\n\n  try {\n    for (_iterator47.s(); !(_step47 = _iterator47.n()).done;) {\n      var s = _step47.value;\n      t.Oo.delete(s), n && t.$o.Go(s, n);\n    }\n  } catch (err) {\n    _iterator47.e(err);\n  } finally {\n    _iterator47.f();\n  }\n\n  if (t.Fo.delete(e), t.isPrimaryClient) {\n    t.Uo.cs(e).forEach(function (e) {\n      t.Uo.containsKey(e) || // We removed the last reference for this key\n      _c(t, e);\n    });\n  }\n}\n\nfunction _c(t, e) {\n  t.Mo.delete(e.path.canonicalString()); // It's possible that the target already got removed because the query failed. In that case,\n  // the key won't exist in `limboTargetsByKey`. Only do the cleanup if we still have the target.\n\n  var n = t.Lo.get(e);\n  null !== n && (ao(t.remoteStore, n), t.Lo = t.Lo.remove(e), t.Bo.delete(n), yc(t));\n}\n\nfunction mc(t, e, n) {\n  var _iterator48 = _createForOfIteratorHelper(n),\n      _step48;\n\n  try {\n    for (_iterator48.s(); !(_step48 = _iterator48.n()).done;) {\n      var s = _step48.value;\n      if (s instanceof Jo) t.Uo.addReference(s.key, e), gc(t, s);else if (s instanceof Yo) {\n        $(\"SyncEngine\", \"Document no longer in limbo: \" + s.key), t.Uo.removeReference(s.key, e);\n        t.Uo.containsKey(s.key) || // We removed the last reference for this key\n        _c(t, s.key);\n      } else L();\n    }\n  } catch (err) {\n    _iterator48.e(err);\n  } finally {\n    _iterator48.f();\n  }\n}\n\nfunction gc(t, e) {\n  var n = e.key,\n      s = n.path.canonicalString();\n  t.Lo.get(n) || t.Mo.has(s) || ($(\"SyncEngine\", \"New document in limbo: \" + n), t.Mo.add(s), yc(t));\n}\n/**\n * Starts listens for documents in limbo that are enqueued for resolution,\n * subject to a maximum number of concurrent resolutions.\n *\n * Without bounding the number of concurrent resolutions, the server can fail\n * with \"resource exhausted\" errors which can lead to pathological client\n * behavior as seen in https://github.com/firebase/firebase-js-sdk/issues/2683.\n */\n\n\nfunction yc(t) {\n  for (; t.Mo.size > 0 && t.Lo.size < t.maxConcurrentLimboResolutions;) {\n    var e = t.Mo.values().next().value;\n    t.Mo.delete(e);\n    var n = new Pt(ht.fromString(e)),\n        s = t.jo.next();\n    t.Bo.set(s, new tc(n)), t.Lo = t.Lo.insert(n, s), co(t.remoteStore, new ii(Ee(we(n.path)), s, 2\n    /* LimboResolution */\n    , X.T));\n  }\n}\n\nfunction pc(_x75, _x76, _x77) {\n  return _pc.apply(this, arguments);\n}\n\nfunction _pc() {\n  _pc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee104(t, e, n) {\n    var s, i, r, o;\n    return _regeneratorRuntime.wrap(function _callee104$(_context104) {\n      while (1) {\n        switch (_context104.prev = _context104.next) {\n          case 0:\n            s = q(t), i = [], r = [], o = [];\n            _context104.t0 = s.Oo.isEmpty();\n\n            if (_context104.t0) {\n              _context104.next = 9;\n              break;\n            }\n\n            s.Oo.forEach(function (t, c) {\n              o.push(s.Wo(c, e, n).then(function (t) {\n                if (t) {\n                  s.isPrimaryClient && s.sharedClientState.updateQueryState(c.targetId, t.fromCache ? \"not-current\" : \"current\"), i.push(t);\n\n                  var _e49 = or.kn(c.targetId, t);\n\n                  r.push(_e49);\n                }\n              }));\n            });\n            _context104.next = 6;\n            return Promise.all(o);\n\n          case 6:\n            s.$o.Rr(i);\n            _context104.next = 9;\n            return function () {\n              var _ref64 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee103(t, e) {\n                var n, _iterator68, _step68, _t98, _e50, _t99, _s27, _i15;\n\n                return _regeneratorRuntime.wrap(function _callee103$(_context103) {\n                  while (1) {\n                    switch (_context103.prev = _context103.next) {\n                      case 0:\n                        n = q(t);\n                        _context103.prev = 1;\n                        _context103.next = 4;\n                        return n.persistence.runTransaction(\"notifyLocalViewChanges\", \"readwrite\", function (t) {\n                          return js.forEach(e, function (e) {\n                            return js.forEach(e.Nn, function (s) {\n                              return n.persistence.referenceDelegate.addReference(t, e.targetId, s);\n                            }).next(function () {\n                              return js.forEach(e.xn, function (s) {\n                                return n.persistence.referenceDelegate.removeReference(t, e.targetId, s);\n                              });\n                            });\n                          });\n                        });\n\n                      case 4:\n                        _context103.next = 11;\n                        break;\n\n                      case 6:\n                        _context103.prev = 6;\n                        _context103.t0 = _context103[\"catch\"](1);\n\n                        if (Hs(_context103.t0)) {\n                          _context103.next = 10;\n                          break;\n                        }\n\n                        throw _context103.t0;\n\n                      case 10:\n                        // If `notifyLocalViewChanges` fails, we did not advance the sequence\n                        // number for the documents that were included in this transaction.\n                        // This might trigger them to be deleted earlier than they otherwise\n                        // would have, but it should not invalidate the integrity of the data.\n                        $(\"LocalStore\", \"Failed to update sequence numbers: \" + _context103.t0);\n\n                      case 11:\n                        _iterator68 = _createForOfIteratorHelper(e);\n\n                        try {\n                          for (_iterator68.s(); !(_step68 = _iterator68.n()).done;) {\n                            _t98 = _step68.value;\n                            _e50 = _t98.targetId;\n\n                            if (!_t98.fromCache) {\n                              _t99 = n.Un.get(_e50), _s27 = _t99.snapshotVersion, _i15 = _t99.withLastLimboFreeSnapshotVersion(_s27); // Advance the last limbo free snapshot version\n\n                              // Advance the last limbo free snapshot version\n                              n.Un = n.Un.insert(_e50, _i15);\n                            }\n                          }\n                        } catch (err) {\n                          _iterator68.e(err);\n                        } finally {\n                          _iterator68.f();\n                        }\n\n                      case 13:\n                      case \"end\":\n                        return _context103.stop();\n                    }\n                  }\n                }, _callee103, null, [[1, 6]]);\n              }));\n\n              return function (_x139, _x140) {\n                return _ref64.apply(this, arguments);\n              };\n            }()(s.localStore, r);\n\n          case 9:\n          case \"end\":\n            return _context104.stop();\n        }\n      }\n    }, _callee104);\n  }));\n  return _pc.apply(this, arguments);\n}\n\nfunction Tc(_x78, _x79) {\n  return _Tc.apply(this, arguments);\n}\n\nfunction _Tc() {\n  _Tc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee105(t, e) {\n    var n, _t100;\n\n    return _regeneratorRuntime.wrap(function _callee105$(_context105) {\n      while (1) {\n        switch (_context105.prev = _context105.next) {\n          case 0:\n            n = q(t);\n\n            if (n.currentUser.isEqual(e)) {\n              _context105.next = 11;\n              break;\n            }\n\n            $(\"SyncEngine\", \"User change. New user:\", e.toKey());\n            _context105.next = 5;\n            return hr(n.localStore, e);\n\n          case 5:\n            _t100 = _context105.sent;\n            n.currentUser = e;\n\n            // Fails tasks waiting for pending writes requested by previous user.\n            (function (t, e) {\n              t.Ko.forEach(function (t) {\n                t.forEach(function (t) {\n                  t.reject(new j(K.CANCELLED, e));\n                });\n              }), t.Ko.clear();\n            })(n, \"'waitForPendingWrites' promise is rejected due to a user change.\");\n\n            // TODO(b/114226417): Consider calling this only in the primary tab.\n            n.sharedClientState.handleUserChange(e, _t100.removedBatchIds, _t100.addedBatchIds);\n            _context105.next = 11;\n            return pc(n, _t100.Wn);\n\n          case 11:\n          case \"end\":\n            return _context105.stop();\n        }\n      }\n    }, _callee105);\n  }));\n  return _Tc.apply(this, arguments);\n}\n\nfunction Ec(t, e) {\n  var n = q(t),\n      s = n.Bo.get(e);\n  if (s && s.ko) return Pn().add(s.key);\n  {\n    var _t71 = Pn();\n\n    var _s16 = n.Fo.get(e);\n\n    if (!_s16) return _t71;\n\n    var _iterator49 = _createForOfIteratorHelper(_s16),\n        _step49;\n\n    try {\n      for (_iterator49.s(); !(_step49 = _iterator49.n()).done;) {\n        var _e38 = _step49.value;\n\n        var _s17 = n.Oo.get(_e38);\n\n        _t71 = _t71.unionWith(_s17.view.Ro);\n      }\n    } catch (err) {\n      _iterator49.e(err);\n    } finally {\n      _iterator49.f();\n    }\n\n    return _t71;\n  }\n}\n/**\n * Reconcile the list of synced documents in an existing view with those\n * from persistence.\n */\n\n\nfunction Ic(_x80, _x81) {\n  return _Ic.apply(this, arguments);\n}\n/**\n * Retrieves newly changed documents from remote document cache and raises\n * snapshots if needed.\n */\n// PORTING NOTE: Multi-Tab only.\n\n\nfunction _Ic() {\n  _Ic = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee106(t, e) {\n    var n, s, i;\n    return _regeneratorRuntime.wrap(function _callee106$(_context106) {\n      while (1) {\n        switch (_context106.prev = _context106.next) {\n          case 0:\n            n = q(t);\n            _context106.next = 3;\n            return yr(n.localStore, e.query,\n            /* usePreviousResults= */\n            !0);\n\n          case 3:\n            s = _context106.sent;\n            i = e.view.No(s);\n            return _context106.abrupt(\"return\", (n.isPrimaryClient && mc(n, e.targetId, i.Do), i));\n\n          case 6:\n          case \"end\":\n            return _context106.stop();\n        }\n      }\n    }, _callee106);\n  }));\n  return _Ic.apply(this, arguments);\n}\n\nfunction Ac(_x82) {\n  return _Ac.apply(this, arguments);\n}\n/** Applies a mutation state to an existing batch.  */\n// PORTING NOTE: Multi-Tab only.\n\n\nfunction _Ac() {\n  _Ac = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee107(t) {\n    var e;\n    return _regeneratorRuntime.wrap(function _callee107$(_context107) {\n      while (1) {\n        switch (_context107.prev = _context107.next) {\n          case 0:\n            e = q(t);\n            return _context107.abrupt(\"return\", Tr(e.localStore).then(function (t) {\n              return pc(e, t);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context107.stop();\n        }\n      }\n    }, _callee107);\n  }));\n  return _Ac.apply(this, arguments);\n}\n\nfunction Rc(_x83, _x84, _x85, _x86) {\n  return _Rc.apply(this, arguments);\n}\n/** Applies a query target change from a different tab. */\n// PORTING NOTE: Multi-Tab only.\n\n\nfunction _Rc() {\n  _Rc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee108(t, e, n, s) {\n    var i, r;\n    return _regeneratorRuntime.wrap(function _callee108$(_context108) {\n      while (1) {\n        switch (_context108.prev = _context108.next) {\n          case 0:\n            i = q(t);\n            _context108.next = 3;\n            return function (t, e) {\n              var n = q(t),\n                  s = q(n.In);\n              return n.persistence.runTransaction(\"Lookup mutation documents\", \"readonly\", function (t) {\n                return s.Xt(t, e).next(function (e) {\n                  return e ? n.Qn.Pn(t, e) : js.resolve(null);\n                });\n              });\n            } // PORTING NOTE: Multi-Tab only.\n            (i.localStore, e);\n\n          case 3:\n            r = _context108.sent;\n\n            if (!(null !== r)) {\n              _context108.next = 15;\n              break;\n            }\n\n            if (!(\"pending\" === n)) {\n              _context108.next = 10;\n              break;\n            }\n\n            _context108.next = 8;\n            return Eo(i.remoteStore);\n\n          case 8:\n            _context108.next = 11;\n            break;\n\n          case 10:\n            \"acknowledged\" === n || \"rejected\" === n ? ( // NOTE: Both these methods are no-ops for batches that originated from\n            // other clients.\n            dc(i, e, s || null), fc(i, e), function (t, e) {\n              q(q(t).In).te(e);\n            } // PORTING NOTE: Multi-Tab only.\n            (i.localStore, e)) : L();\n\n          case 11:\n            _context108.next = 13;\n            return pc(i, r);\n\n          case 13:\n            _context108.next = 16;\n            break;\n\n          case 15:\n            // A throttled tab may not have seen the mutation before it was completed\n            // and removed from the mutation queue, in which case we won't have cached\n            // the affected documents. In this case we can safely ignore the update\n            // since that means we didn't apply the mutation locally at all (if we\n            // had, we would have cached the affected documents), and so we will just\n            // see any resulting document changes via normal remote document updates\n            // as applicable.\n            $(\"SyncEngine\", \"Cannot apply mutation batch with id: \" + e);\n\n          case 16:\n          case \"end\":\n            return _context108.stop();\n        }\n      }\n    }, _callee108);\n  }));\n  return _Rc.apply(this, arguments);\n}\n\nfunction bc(_x87, _x88) {\n  return _bc.apply(this, arguments);\n}\n\nfunction _bc() {\n  _bc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee109(t, e) {\n    var n, _t101, _e51, _iterator69, _step69, _t102, _t103, _e52;\n\n    return _regeneratorRuntime.wrap(function _callee109$(_context109) {\n      while (1) {\n        switch (_context109.prev = _context109.next) {\n          case 0:\n            n = q(t);\n\n            if (!(Cc(n), Nc(n), !0 === e && !0 !== n.Qo)) {\n              _context109.next = 13;\n              break;\n            }\n\n            _t101 = n.sharedClientState.getAllActiveQueryTargets();\n            _context109.next = 5;\n            return Pc(n, _t101.toArray());\n\n          case 5:\n            _e51 = _context109.sent;\n            n.Qo = !0;\n            _context109.next = 9;\n            return Do(n.remoteStore, !0);\n\n          case 9:\n            _iterator69 = _createForOfIteratorHelper(_e51);\n\n            try {\n              for (_iterator69.s(); !(_step69 = _iterator69.n()).done;) {\n                _t102 = _step69.value;\n                co(n.remoteStore, _t102);\n              }\n            } catch (err) {\n              _iterator69.e(err);\n            } finally {\n              _iterator69.f();\n            }\n\n            _context109.next = 25;\n            break;\n\n          case 13:\n            if (!(!1 === e && !1 !== n.Qo)) {\n              _context109.next = 25;\n              break;\n            }\n\n            _t103 = [];\n            _e52 = Promise.resolve();\n            n.Fo.forEach(function (s, i) {\n              n.sharedClientState.isLocalQueryTarget(i) ? _t103.push(i) : _e52 = _e52.then(function () {\n                return wc(n, i), gr(n.localStore, i,\n                /*keepPersistedTargetData=*/\n                !0);\n              }), ao(n.remoteStore, i);\n            });\n            _context109.next = 19;\n            return _e52;\n\n          case 19:\n            _context109.next = 21;\n            return Pc(n, _t103);\n\n          case 21:\n            // PORTING NOTE: Multi-Tab only.\n            (function (t) {\n              var e = q(t);\n              e.Bo.forEach(function (t, n) {\n                ao(e.remoteStore, n);\n              }), e.Uo.us(), e.Bo = new Map(), e.Lo = new wn(Pt.comparator);\n            }\n            /**\n            * Reconcile the query views of the provided query targets with the state from\n            * persistence. Raises snapshots for any changes that affect the local\n            * client and returns the updated state of all target's query data.\n            *\n            * @param syncEngine - The sync engine implementation\n            * @param targets - the list of targets with views that need to be recomputed\n            * @param transitionToPrimary - `true` iff the tab transitions from a secondary\n            * tab to a primary tab\n            */\n            // PORTING NOTE: Multi-Tab only.\n            )(n);\n\n            n.Qo = !1;\n            _context109.next = 25;\n            return Do(n.remoteStore, !1);\n\n          case 25:\n          case \"end\":\n            return _context109.stop();\n        }\n      }\n    }, _callee109);\n  }));\n  return _bc.apply(this, arguments);\n}\n\nfunction Pc(_x89, _x90, _x91) {\n  return _Pc.apply(this, arguments);\n}\n/**\n * Creates a `Query` object from the specified `Target`. There is no way to\n * obtain the original `Query`, so we synthesize a `Query` from the `Target`\n * object.\n *\n * The synthesized result might be different from the original `Query`, but\n * since the synthesized `Query` should return the same results as the\n * original one (only the presentation of results might differ), the potential\n * difference will not cause issues.\n */\n// PORTING NOTE: Multi-Tab only.\n\n\nfunction _Pc() {\n  _Pc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee110(t, e, n) {\n    var s, i, r, _iterator70, _step70, _t104, _e53, _n39, _iterator71, _step71, _t105, _e54, _n40, _n41;\n\n    return _regeneratorRuntime.wrap(function _callee110$(_context110) {\n      while (1) {\n        switch (_context110.prev = _context110.next) {\n          case 0:\n            s = q(t), i = [], r = [];\n            _iterator70 = _createForOfIteratorHelper(e);\n            _context110.prev = 2;\n\n            _iterator70.s();\n\n          case 4:\n            if ((_step70 = _iterator70.n()).done) {\n              _context110.next = 45;\n              break;\n            }\n\n            _t104 = _step70.value;\n            _e53 = void 0;\n            _n39 = s.Fo.get(_t104);\n\n            if (!(_n39 && 0 !== _n39.length)) {\n              _context110.next = 34;\n              break;\n            }\n\n            _context110.next = 11;\n            return mr(s.localStore, Ee(_n39[0]));\n\n          case 11:\n            _e53 = _context110.sent;\n            _iterator71 = _createForOfIteratorHelper(_n39);\n            _context110.prev = 13;\n\n            _iterator71.s();\n\n          case 15:\n            if ((_step71 = _iterator71.n()).done) {\n              _context110.next = 24;\n              break;\n            }\n\n            _t105 = _step71.value;\n            _e54 = s.Oo.get(_t105);\n            _context110.next = 20;\n            return Ic(s, _e54);\n\n          case 20:\n            _n40 = _context110.sent;\n            _n40.snapshot && r.push(_n40.snapshot);\n\n          case 22:\n            _context110.next = 15;\n            break;\n\n          case 24:\n            _context110.next = 29;\n            break;\n\n          case 26:\n            _context110.prev = 26;\n            _context110.t0 = _context110[\"catch\"](13);\n\n            _iterator71.e(_context110.t0);\n\n          case 29:\n            _context110.prev = 29;\n\n            _iterator71.f();\n\n            return _context110.finish(29);\n\n          case 32:\n            _context110.next = 42;\n            break;\n\n          case 34:\n            _context110.next = 36;\n            return pr(s.localStore, _t104);\n\n          case 36:\n            _n41 = _context110.sent;\n            _context110.next = 39;\n            return mr(s.localStore, _n41);\n\n          case 39:\n            _e53 = _context110.sent;\n            _context110.next = 42;\n            return sc(s, vc(_n41), _t104,\n            /*current=*/\n            !1);\n\n          case 42:\n            i.push(_e53);\n\n          case 43:\n            _context110.next = 4;\n            break;\n\n          case 45:\n            _context110.next = 50;\n            break;\n\n          case 47:\n            _context110.prev = 47;\n            _context110.t1 = _context110[\"catch\"](2);\n\n            _iterator70.e(_context110.t1);\n\n          case 50:\n            _context110.prev = 50;\n\n            _iterator70.f();\n\n            return _context110.finish(50);\n\n          case 53:\n            return _context110.abrupt(\"return\", (s.$o.Rr(r), i));\n\n          case 54:\n          case \"end\":\n            return _context110.stop();\n        }\n      }\n    }, _callee110, null, [[2, 47, 50, 53], [13, 26, 29, 32]]);\n  }));\n  return _Pc.apply(this, arguments);\n}\n\nfunction vc(t) {\n  return de(t.path, t.collectionGroup, t.orderBy, t.filters, t.limit, \"F\"\n  /* First */\n  , t.startAt, t.endAt);\n}\n/** Returns the IDs of the clients that are currently active. */\n// PORTING NOTE: Multi-Tab only.\n\n\nfunction Vc(t) {\n  var e = q(t);\n  return q(q(e.localStore).persistence).pn();\n}\n/** Applies a query target change from a different tab. */\n// PORTING NOTE: Multi-Tab only.\n\n\nfunction Sc(_x92, _x93, _x94, _x95) {\n  return _Sc.apply(this, arguments);\n}\n/** Adds or removes Watch targets for queries from different tabs. */\n\n\nfunction _Sc() {\n  _Sc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee111(t, e, n, s) {\n    var i, _t106, _s28;\n\n    return _regeneratorRuntime.wrap(function _callee111$(_context111) {\n      while (1) {\n        switch (_context111.prev = _context111.next) {\n          case 0:\n            i = q(t);\n\n            if (!i.Qo) {\n              _context111.next = 5;\n              break;\n            }\n\n            // If we receive a target state notification via WebStorage, we are\n            // either already secondary or another tab has taken the primary lease.\n            $(\"SyncEngine\", \"Ignoring unexpected query state notification.\");\n            _context111.next = 21;\n            break;\n\n          case 5:\n            if (!i.Fo.has(e)) {\n              _context111.next = 21;\n              break;\n            }\n\n            _context111.t0 = n;\n            _context111.next = _context111.t0 === \"current\" ? 9 : _context111.t0 === \"not-current\" ? 9 : _context111.t0 === \"rejected\" ? 16 : 20;\n            break;\n\n          case 9:\n            _context111.next = 11;\n            return Tr(i.localStore);\n\n          case 11:\n            _t106 = _context111.sent;\n            _s28 = Sn.createSynthesizedRemoteEventForCurrentChange(e, \"current\" === n);\n            _context111.next = 15;\n            return pc(i, _t106, _s28);\n\n          case 15:\n            return _context111.abrupt(\"break\", 21);\n\n          case 16:\n            _context111.next = 18;\n            return gr(i.localStore, e,\n            /* keepPersistedTargetData */\n            !0);\n\n          case 18:\n            wc(i, e, s);\n            return _context111.abrupt(\"break\", 21);\n\n          case 20:\n            L();\n\n          case 21:\n          case \"end\":\n            return _context111.stop();\n        }\n      }\n    }, _callee111);\n  }));\n  return _Sc.apply(this, arguments);\n}\n\nfunction Dc(_x96, _x97, _x98) {\n  return _Dc.apply(this, arguments);\n}\n\nfunction _Dc() {\n  _Dc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee112(t, e, n) {\n    var s, _iterator72, _step72, _t107, _e55, _n42, _iterator73, _step73, _loop4;\n\n    return _regeneratorRuntime.wrap(function _callee112$(_context113) {\n      while (1) {\n        switch (_context113.prev = _context113.next) {\n          case 0:\n            s = Cc(t);\n\n            if (!s.Qo) {\n              _context113.next = 45;\n              break;\n            }\n\n            _iterator72 = _createForOfIteratorHelper(e);\n            _context113.prev = 3;\n\n            _iterator72.s();\n\n          case 5:\n            if ((_step72 = _iterator72.n()).done) {\n              _context113.next = 21;\n              break;\n            }\n\n            _t107 = _step72.value;\n\n            if (!s.Fo.has(_t107)) {\n              _context113.next = 10;\n              break;\n            }\n\n            // A target might have been added in a previous attempt\n            $(\"SyncEngine\", \"Adding an already active target \" + _t107);\n            return _context113.abrupt(\"continue\", 19);\n\n          case 10:\n            _context113.next = 12;\n            return pr(s.localStore, _t107);\n\n          case 12:\n            _e55 = _context113.sent;\n            _context113.next = 15;\n            return mr(s.localStore, _e55);\n\n          case 15:\n            _n42 = _context113.sent;\n            _context113.next = 18;\n            return sc(s, vc(_e55), _n42.targetId,\n            /*current=*/\n            !1);\n\n          case 18:\n            co(s.remoteStore, _n42);\n\n          case 19:\n            _context113.next = 5;\n            break;\n\n          case 21:\n            _context113.next = 26;\n            break;\n\n          case 23:\n            _context113.prev = 23;\n            _context113.t0 = _context113[\"catch\"](3);\n\n            _iterator72.e(_context113.t0);\n\n          case 26:\n            _context113.prev = 26;\n\n            _iterator72.f();\n\n            return _context113.finish(26);\n\n          case 29:\n            _iterator73 = _createForOfIteratorHelper(n);\n            _context113.prev = 30;\n            _loop4 = /*#__PURE__*/_regeneratorRuntime.mark(function _loop4() {\n              var t;\n              return _regeneratorRuntime.wrap(function _loop4$(_context112) {\n                while (1) {\n                  switch (_context112.prev = _context112.next) {\n                    case 0:\n                      t = _step73.value;\n                      _context112.t0 = s.Fo.has(t);\n\n                      if (!_context112.t0) {\n                        _context112.next = 5;\n                        break;\n                      }\n\n                      _context112.next = 5;\n                      return gr(s.localStore, t,\n                      /* keepPersistedTargetData */\n                      !1).then(function () {\n                        ao(s.remoteStore, t), wc(s, t);\n                      }).catch(Fi);\n\n                    case 5:\n                    case \"end\":\n                      return _context112.stop();\n                  }\n                }\n              }, _loop4);\n            });\n\n            _iterator73.s();\n\n          case 33:\n            if ((_step73 = _iterator73.n()).done) {\n              _context113.next = 37;\n              break;\n            }\n\n            return _context113.delegateYield(_loop4(), \"t1\", 35);\n\n          case 35:\n            _context113.next = 33;\n            break;\n\n          case 37:\n            _context113.next = 42;\n            break;\n\n          case 39:\n            _context113.prev = 39;\n            _context113.t2 = _context113[\"catch\"](30);\n\n            _iterator73.e(_context113.t2);\n\n          case 42:\n            _context113.prev = 42;\n\n            _iterator73.f();\n\n            return _context113.finish(42);\n\n          case 45:\n          case \"end\":\n            return _context113.stop();\n        }\n      }\n    }, _callee112, null, [[3, 23, 26, 29], [30, 39, 42, 45]]);\n  }));\n  return _Dc.apply(this, arguments);\n}\n\nfunction Cc(t) {\n  var e = q(t);\n  return e.remoteStore.remoteSyncer.applyRemoteEvent = oc.bind(null, e), e.remoteStore.remoteSyncer.getRemoteKeysForTarget = Ec.bind(null, e), e.remoteStore.remoteSyncer.rejectListen = ac.bind(null, e), e.$o.Rr = qo.bind(null, e.eventManager), e.$o.Go = Ko.bind(null, e.eventManager), e;\n}\n\nfunction Nc(t) {\n  var e = q(t);\n  return e.remoteStore.remoteSyncer.applySuccessfulWrite = uc.bind(null, e), e.remoteStore.remoteSyncer.rejectFailedWrite = hc.bind(null, e), e;\n}\n/**\n * Loads a Firestore bundle into the SDK. The returned promise resolves when\n * the bundle finished loading.\n *\n * @param syncEngine - SyncEngine to use.\n * @param bundleReader - Bundle to load into the SDK.\n * @param task - LoadBundleTask used to update the loading progress to public API.\n */\n\n\nfunction xc(t, e, n) {\n  var s = q(t); // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n  (function () {\n    var _ref28 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee23(t, e, n) {\n      var _s18, i, r, _t72, o;\n\n      return _regeneratorRuntime.wrap(function _callee23$(_context23) {\n        while (1) {\n          switch (_context23.prev = _context23.next) {\n            case 0:\n              _context23.prev = 0;\n              _context23.next = 3;\n              return e.getMetadata();\n\n            case 3:\n              _s18 = _context23.sent;\n              _context23.next = 6;\n              return function (t, e) {\n                var n = q(t),\n                    s = jn(e.createTime);\n                return n.persistence.runTransaction(\"hasNewerBundle\", \"readonly\", function (t) {\n                  return n.Je.getBundleMetadata(t, e.id);\n                }).then(function (t) {\n                  return !!t && t.createTime.compareTo(s) >= 0;\n                });\n              }\n              /**\n              * Saves the given `BundleMetadata` to local persistence.\n              */\n              (t.localStore, _s18);\n\n            case 6:\n              if (!_context23.sent) {\n                _context23.next = 10;\n                break;\n              }\n\n              _context23.next = 9;\n              return e.close();\n\n            case 9:\n              return _context23.abrupt(\"return\", void n._completeWith(function (t) {\n                return {\n                  taskState: \"Success\",\n                  documentsLoaded: t.totalDocuments,\n                  bytesLoaded: t.totalBytes,\n                  totalDocuments: t.totalDocuments,\n                  totalBytes: t.totalBytes\n                };\n              }(_s18)));\n\n            case 10:\n              n._updateProgress(Ho(_s18));\n\n              i = new zo(_s18, t.localStore, e.N);\n              _context23.next = 14;\n              return e.zo();\n\n            case 14:\n              r = _context23.sent;\n\n            case 15:\n              if (!r) {\n                _context23.next = 25;\n                break;\n              }\n\n              _context23.next = 18;\n              return i.mo(r);\n\n            case 18:\n              _t72 = _context23.sent;\n              _t72 && n._updateProgress(_t72);\n              _context23.next = 22;\n              return e.zo();\n\n            case 22:\n              r = _context23.sent;\n\n            case 23:\n              _context23.next = 15;\n              break;\n\n            case 25:\n              _context23.next = 27;\n              return i.complete();\n\n            case 27:\n              o = _context23.sent;\n              _context23.next = 30;\n              return pc(t, o.En,\n              /* remoteEvent */\n              void 0);\n\n            case 30:\n              _context23.next = 32;\n              return function (t, e) {\n                var n = q(t);\n                return n.persistence.runTransaction(\"Save bundle\", \"readwrite\", function (t) {\n                  return n.Je.saveBundleMetadata(t, e);\n                });\n              }\n              /**\n              * Returns a promise of a `NamedQuery` associated with given query name. Promise\n              * resolves to undefined if no persisted data can be found.\n              */\n              (t.localStore, _s18);\n\n            case 32:\n              n._completeWith(o.progress);\n\n              _context23.next = 38;\n              break;\n\n            case 35:\n              _context23.prev = 35;\n              _context23.t0 = _context23[\"catch\"](0);\n              F(\"SyncEngine\", \"Loading bundle failed with \".concat(_context23.t0)), n._failWith(_context23.t0);\n\n            case 38:\n            case \"end\":\n              return _context23.stop();\n          }\n        }\n      }, _callee23, null, [[0, 35]]);\n    }));\n\n    return function (_x99, _x100, _x101) {\n      return _ref28.apply(this, arguments);\n    };\n  })()\n  /**\n  * @license\n  * Copyright 2020 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n\n  /**\n  * Provides all components needed for Firestore with in-memory persistence.\n  * Uses EagerGC garbage collection.\n  */\n  (s, e, n).then(function () {\n    s.sharedClientState.notifyBundleLoaded();\n  });\n}\n\nvar kc = /*#__PURE__*/function () {\n  function kc() {\n    _classCallCheck(this, kc);\n\n    this.synchronizeTabs = !1;\n  }\n\n  _createClass(kc, [{\n    key: \"initialize\",\n    value: function () {\n      var _initialize = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee24(t) {\n        return _regeneratorRuntime.wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                this.N = Yr(t.databaseInfo.databaseId);\n                this.sharedClientState = this.Ho(t);\n                this.persistence = this.Jo(t);\n                _context24.next = 5;\n                return this.persistence.start();\n\n              case 5:\n                this.gcScheduler = this.Yo(t);\n                this.localStore = this.Xo(t);\n\n              case 7:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24, this);\n      }));\n\n      function initialize(_x102) {\n        return _initialize.apply(this, arguments);\n      }\n\n      return initialize;\n    }()\n  }, {\n    key: \"Yo\",\n    value: function Yo(t) {\n      return null;\n    }\n  }, {\n    key: \"Xo\",\n    value: function Xo(t) {\n      return ur(this.persistence, new cr(), t.initialUser, this.N);\n    }\n  }, {\n    key: \"Jo\",\n    value: function Jo(t) {\n      return new Cr(xr.Ns, this.N);\n    }\n  }, {\n    key: \"Ho\",\n    value: function Ho(t) {\n      return new Kr();\n    }\n  }, {\n    key: \"terminate\",\n    value: function () {\n      var _terminate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee25() {\n        return _regeneratorRuntime.wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                this.gcScheduler && this.gcScheduler.stop();\n                _context25.next = 3;\n                return this.sharedClientState.shutdown();\n\n              case 3:\n                _context25.next = 5;\n                return this.persistence.shutdown();\n\n              case 5:\n              case \"end\":\n                return _context25.stop();\n            }\n          }\n        }, _callee25, this);\n      }));\n\n      function terminate() {\n        return _terminate.apply(this, arguments);\n      }\n\n      return terminate;\n    }()\n  }]);\n\n  return kc;\n}();\n/**\n * Provides all components needed for Firestore with IndexedDB persistence.\n */\n\n\nvar $c = /*#__PURE__*/function (_kc) {\n  _inherits($c, _kc);\n\n  var _super29 = _createSuper($c);\n\n  function $c(t, e, n) {\n    var _this141;\n\n    _classCallCheck(this, $c);\n\n    _this141 = _super29.call(this), _this141.Zo = t, _this141.cacheSizeBytes = e, _this141.forceOwnership = n, _this141.synchronizeTabs = !1;\n    return _this141;\n  }\n\n  _createClass($c, [{\n    key: \"initialize\",\n    value: function () {\n      var _initialize2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee26(t) {\n        var _this142 = this;\n\n        return _regeneratorRuntime.wrap(function _callee26$(_context26) {\n          while (1) {\n            switch (_context26.prev = _context26.next) {\n              case 0:\n                _context26.next = 2;\n                return _get(_getPrototypeOf($c.prototype), \"initialize\", this).call(this, t);\n\n              case 2:\n                _context26.next = 4;\n                return Er(this.localStore);\n\n              case 4:\n                _context26.next = 6;\n                return this.Zo.initialize(this, t);\n\n              case 6:\n                _context26.next = 8;\n                return Nc(this.Zo.syncEngine);\n\n              case 8:\n                _context26.next = 10;\n                return Eo(this.Zo.remoteStore);\n\n              case 10:\n                _context26.next = 12;\n                return this.persistence.nn(function () {\n                  return _this142.gcScheduler && !_this142.gcScheduler.started && _this142.gcScheduler.start(_this142.localStore), Promise.resolve();\n                });\n\n              case 12:\n              case \"end\":\n                return _context26.stop();\n            }\n          }\n        }, _callee26, this);\n      }));\n\n      function initialize(_x103) {\n        return _initialize2.apply(this, arguments);\n      }\n\n      return initialize;\n    }()\n  }, {\n    key: \"Xo\",\n    value: function Xo(t) {\n      return ur(this.persistence, new cr(), t.initialUser, this.N);\n    }\n  }, {\n    key: \"Yo\",\n    value: function Yo(t) {\n      var e = this.persistence.referenceDelegate.garbageCollector;\n      return new Bi(e, t.asyncQueue);\n    }\n  }, {\n    key: \"Jo\",\n    value: function Jo(t) {\n      var e = sr(t.databaseInfo.databaseId, t.databaseInfo.persistenceKey),\n          n = void 0 !== this.cacheSizeBytes ? Ri.withCacheSize(this.cacheSizeBytes) : Ri.DEFAULT;\n      return new tr(this.synchronizeTabs, e, t.clientId, n, t.asyncQueue, Hr(), Jr(), this.N, this.sharedClientState, !!this.forceOwnership);\n    }\n  }, {\n    key: \"Ho\",\n    value: function Ho(t) {\n      return new Kr();\n    }\n  }]);\n\n  return $c;\n}(kc);\n/**\n * Provides all components needed for Firestore with multi-tab IndexedDB\n * persistence.\n *\n * In the legacy client, this provider is used to provide both multi-tab and\n * non-multi-tab persistence since we cannot tell at build time whether\n * `synchronizeTabs` will be enabled.\n */\n\n\nvar Oc = /*#__PURE__*/function (_$c) {\n  _inherits(Oc, _$c);\n\n  var _super30 = _createSuper(Oc);\n\n  function Oc(t, e) {\n    var _this143;\n\n    _classCallCheck(this, Oc);\n\n    _this143 = _super30.call(this, t, e,\n    /* forceOwnership= */\n    !1), _this143.Zo = t, _this143.cacheSizeBytes = e, _this143.synchronizeTabs = !0;\n    return _this143;\n  }\n\n  _createClass(Oc, [{\n    key: \"initialize\",\n    value: function () {\n      var _initialize3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee28(t) {\n        var _this144 = this;\n\n        var e;\n        return _regeneratorRuntime.wrap(function _callee28$(_context28) {\n          while (1) {\n            switch (_context28.prev = _context28.next) {\n              case 0:\n                _context28.next = 2;\n                return _get(_getPrototypeOf(Oc.prototype), \"initialize\", this).call(this, t);\n\n              case 2:\n                e = this.Zo.syncEngine;\n                _context28.t0 = this.sharedClientState instanceof qr;\n\n                if (!_context28.t0) {\n                  _context28.next = 8;\n                  break;\n                }\n\n                this.sharedClientState.syncEngine = {\n                  _i: Rc.bind(null, e),\n                  mi: Sc.bind(null, e),\n                  gi: Dc.bind(null, e),\n                  pn: Vc.bind(null, e),\n                  wi: Ac.bind(null, e)\n                };\n                _context28.next = 8;\n                return this.sharedClientState.start();\n\n              case 8:\n                _context28.next = 10;\n                return this.persistence.nn( /*#__PURE__*/function () {\n                  var _ref29 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee27(t) {\n                    return _regeneratorRuntime.wrap(function _callee27$(_context27) {\n                      while (1) {\n                        switch (_context27.prev = _context27.next) {\n                          case 0:\n                            _context27.next = 2;\n                            return bc(_this144.Zo.syncEngine, t);\n\n                          case 2:\n                            _this144.gcScheduler && (t && !_this144.gcScheduler.started ? _this144.gcScheduler.start(_this144.localStore) : t || _this144.gcScheduler.stop());\n\n                          case 3:\n                          case \"end\":\n                            return _context27.stop();\n                        }\n                      }\n                    }, _callee27);\n                  }));\n\n                  return function (_x105) {\n                    return _ref29.apply(this, arguments);\n                  };\n                }());\n\n              case 10:\n              case \"end\":\n                return _context28.stop();\n            }\n          }\n        }, _callee28, this);\n      }));\n\n      function initialize(_x104) {\n        return _initialize3.apply(this, arguments);\n      }\n\n      return initialize;\n    }()\n  }, {\n    key: \"Ho\",\n    value: function Ho(t) {\n      var e = Hr();\n      if (!qr.bt(e)) throw new j(K.UNIMPLEMENTED, \"IndexedDB persistence is only available on platforms that support LocalStorage.\");\n      var n = sr(t.databaseInfo.databaseId, t.databaseInfo.persistenceKey);\n      return new qr(e, t.asyncQueue, n, t.clientId, t.initialUser);\n    }\n  }]);\n\n  return Oc;\n}($c);\n/**\n * Initializes and wires the components that are needed to interface with the\n * network.\n */\n\n\nvar Fc = /*#__PURE__*/function () {\n  function Fc() {\n    _classCallCheck(this, Fc);\n  }\n\n  _createClass(Fc, [{\n    key: \"initialize\",\n    value: function () {\n      var _initialize4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee29(t, e) {\n        var _this145 = this;\n\n        return _regeneratorRuntime.wrap(function _callee29$(_context29) {\n          while (1) {\n            switch (_context29.prev = _context29.next) {\n              case 0:\n                _context29.t0 = this.localStore;\n\n                if (_context29.t0) {\n                  _context29.next = 12;\n                  break;\n                }\n\n                this.localStore = t.localStore;\n                this.sharedClientState = t.sharedClientState;\n                this.datastore = this.createDatastore(e);\n                this.remoteStore = this.createRemoteStore(e);\n                this.eventManager = this.createEventManager(e);\n                this.syncEngine = this.createSyncEngine(e,\n                /* startAsPrimary=*/\n                !t.synchronizeTabs);\n\n                this.sharedClientState.onlineStateHandler = function (t) {\n                  return cc(_this145.syncEngine, t, 1\n                  /* SharedClientState */\n                  );\n                };\n\n                this.remoteStore.remoteSyncer.handleCredentialChange = Tc.bind(null, this.syncEngine);\n                _context29.next = 12;\n                return Do(this.remoteStore, this.syncEngine.isPrimaryClient);\n\n              case 12:\n              case \"end\":\n                return _context29.stop();\n            }\n          }\n        }, _callee29, this);\n      }));\n\n      function initialize(_x106, _x107) {\n        return _initialize4.apply(this, arguments);\n      }\n\n      return initialize;\n    }()\n  }, {\n    key: \"createEventManager\",\n    value: function createEventManager(t) {\n      return new Lo();\n    }\n  }, {\n    key: \"createDatastore\",\n    value: function createDatastore(t) {\n      var e = Yr(t.databaseInfo.databaseId),\n          n = (s = t.databaseInfo, new zr(s));\n      var s;\n      /** Return the Platform-specific connectivity monitor. */\n\n      return function (t, e, n) {\n        return new no(t, e, n);\n      }(t.credentials, n, e);\n    }\n  }, {\n    key: \"createRemoteStore\",\n    value: function createRemoteStore(t) {\n      var _this146 = this;\n\n      return e = this.localStore, n = this.datastore, s = t.asyncQueue, i = function i(t) {\n        return cc(_this146.syncEngine, t, 0\n        /* RemoteStore */\n        );\n      }, r = Qr.bt() ? new Qr() : new jr(), new io(e, n, s, i, r);\n      var e, n, s, i, r;\n      /** Re-enables the network. Idempotent. */\n    }\n  }, {\n    key: \"createSyncEngine\",\n    value: function createSyncEngine(t, e) {\n      return function (t, e, n, // PORTING NOTE: Manages state synchronization in multi-tab environments.\n      s, i, r, o) {\n        var c = new ec(t, e, n, s, i, r);\n        return o && (c.Qo = !0), c;\n      }(this.localStore, this.remoteStore, this.eventManager, this.sharedClientState, t.initialUser, t.maxConcurrentLimboResolutions, e);\n    }\n  }, {\n    key: \"terminate\",\n    value: function terminate() {\n      return function () {\n        var _ref30 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee30(t) {\n          var e;\n          return _regeneratorRuntime.wrap(function _callee30$(_context30) {\n            while (1) {\n              switch (_context30.prev = _context30.next) {\n                case 0:\n                  e = q(t);\n                  $(\"RemoteStore\", \"RemoteStore shutting down.\");\n                  e.Wr.add(5\n                  /* Shutdown */\n                  );\n                  _context30.next = 5;\n                  return oo(e);\n\n                case 5:\n                  e.zr.shutdown();\n                  // Set the OnlineState to Unknown (rather than Offline) to avoid potentially\n                  // triggering spurious listener events with cached data, etc.\n                  e.Hr.set(\"Unknown\"\n                  /* Unknown */\n                  );\n\n                case 7:\n                case \"end\":\n                  return _context30.stop();\n              }\n            }\n          }, _callee30);\n        }));\n\n        return function (_x108) {\n          return _ref30.apply(this, arguments);\n        };\n      }()(this.remoteStore);\n    }\n  }]);\n\n  return Fc;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * How many bytes to read each time when `ReadableStreamReader.read()` is\n * called. Only applicable for byte streams that we control (e.g. those backed\n * by an UInt8Array).\n */\n\n/**\n * Builds a `ByteStreamReader` from a UInt8Array.\n * @param source - The data source to use.\n * @param bytesPerRead - How many bytes each `read()` from the returned reader\n *        will read.\n */\n\n\nfunction Mc(t) {\n  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10240;\n  var n = 0; // The TypeScript definition for ReadableStreamReader changed. We use\n  // `any` here to allow this code to compile with different versions.\n  // See https://github.com/microsoft/TypeScript/issues/42970\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  return {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    read: function read() {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee31() {\n        var s;\n        return _regeneratorRuntime.wrap(function _callee31$(_context31) {\n          while (1) {\n            switch (_context31.prev = _context31.next) {\n              case 0:\n                if (!(n < t.byteLength)) {\n                  _context31.next = 3;\n                  break;\n                }\n\n                s = {\n                  value: t.slice(n, n + e),\n                  done: !1\n                };\n                return _context31.abrupt(\"return\", (n += e, s));\n\n              case 3:\n                return _context31.abrupt(\"return\", {\n                  done: !0\n                });\n\n              case 4:\n              case \"end\":\n                return _context31.stop();\n            }\n          }\n        }, _callee31);\n      }))();\n    },\n    cancel: function cancel() {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee32() {\n        return _regeneratorRuntime.wrap(function _callee32$(_context32) {\n          while (1) {\n            switch (_context32.prev = _context32.next) {\n              case 0:\n              case \"end\":\n                return _context32.stop();\n            }\n          }\n        }, _callee32);\n      }))();\n    },\n    releaseLock: function releaseLock() {},\n    closed: Promise.reject(\"unimplemented\")\n  };\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * On web, a `ReadableStream` is wrapped around by a `ByteStreamReader`.\n */\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*\n * A wrapper implementation of Observer<T> that will dispatch events\n * asynchronously. To allow immediate silencing, a mute call is added which\n * causes events scheduled to no longer be raised.\n */\n\n\nvar Lc = /*#__PURE__*/function () {\n  function Lc(t) {\n    _classCallCheck(this, Lc);\n\n    this.observer = t,\n    /**\n     * When set to true, will not raise future events. Necessary to deal with\n     * async detachment of listener.\n     */\n    this.muted = !1;\n  }\n\n  _createClass(Lc, [{\n    key: \"next\",\n    value: function next(t) {\n      this.observer.next && this.tc(this.observer.next, t);\n    }\n  }, {\n    key: \"error\",\n    value: function error(t) {\n      this.observer.error ? this.tc(this.observer.error, t) : console.error(\"Uncaught Error in snapshot listener:\", t);\n    }\n  }, {\n    key: \"ec\",\n    value: function ec() {\n      this.muted = !0;\n    }\n  }, {\n    key: \"tc\",\n    value: function tc(t, e) {\n      var _this147 = this;\n\n      this.muted || setTimeout(function () {\n        _this147.muted || t(e);\n      }, 0);\n    }\n  }]);\n\n  return Lc;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A class representing a bundle.\n *\n * Takes a bundle stream or buffer, and presents abstractions to read bundled\n * elements out of the underlying content.\n */\n\n\nvar Bc = /*#__PURE__*/function () {\n  function Bc(\n  /** The reader to read from underlying binary bundle data source. */\n  t, e) {\n    var _this148 = this;\n\n    _classCallCheck(this, Bc);\n\n    this.nc = t, this.N = e,\n    /** Cached bundle metadata. */\n    this.metadata = new Q(),\n    /**\n     * Internal buffer to hold bundle content, accumulating incomplete element\n     * content.\n     */\n    this.buffer = new Uint8Array(), this.sc = new TextDecoder(\"utf-8\"), // Read the metadata (which is the first element).\n    this.ic().then(function (t) {\n      t && t.wo() ? _this148.metadata.resolve(t.payload.metadata) : _this148.metadata.reject(new Error(\"The first element of the bundle is not a metadata, it is\\n             \".concat(JSON.stringify(null == t ? void 0 : t.payload))));\n    }, function (t) {\n      return _this148.metadata.reject(t);\n    });\n  }\n\n  _createClass(Bc, [{\n    key: \"close\",\n    value: function close() {\n      return this.nc.cancel();\n    }\n  }, {\n    key: \"getMetadata\",\n    value: function () {\n      var _getMetadata = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee33() {\n        return _regeneratorRuntime.wrap(function _callee33$(_context33) {\n          while (1) {\n            switch (_context33.prev = _context33.next) {\n              case 0:\n                return _context33.abrupt(\"return\", this.metadata.promise);\n\n              case 1:\n              case \"end\":\n                return _context33.stop();\n            }\n          }\n        }, _callee33, this);\n      }));\n\n      function getMetadata() {\n        return _getMetadata.apply(this, arguments);\n      }\n\n      return getMetadata;\n    }()\n  }, {\n    key: \"zo\",\n    value: function () {\n      var _zo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee34() {\n        return _regeneratorRuntime.wrap(function _callee34$(_context34) {\n          while (1) {\n            switch (_context34.prev = _context34.next) {\n              case 0:\n                _context34.next = 2;\n                return this.getMetadata();\n\n              case 2:\n                return _context34.abrupt(\"return\", this.ic());\n\n              case 3:\n              case \"end\":\n                return _context34.stop();\n            }\n          }\n        }, _callee34, this);\n      }));\n\n      function zo() {\n        return _zo.apply(this, arguments);\n      }\n\n      return zo;\n    }()\n    /**\n     * Reads from the head of internal buffer, and pulling more data from\n     * underlying stream if a complete element cannot be found, until an\n     * element(including the prefixed length and the JSON string) is found.\n     *\n     * Once a complete element is read, it is dropped from internal buffer.\n     *\n     * Returns either the bundled element, or null if we have reached the end of\n     * the stream.\n     */\n\n  }, {\n    key: \"ic\",\n    value: function () {\n      var _ic2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee35() {\n        var t, e, n, s;\n        return _regeneratorRuntime.wrap(function _callee35$(_context35) {\n          while (1) {\n            switch (_context35.prev = _context35.next) {\n              case 0:\n                _context35.next = 2;\n                return this.rc();\n\n              case 2:\n                t = _context35.sent;\n\n                if (!(null === t)) {\n                  _context35.next = 5;\n                  break;\n                }\n\n                return _context35.abrupt(\"return\", null);\n\n              case 5:\n                e = this.sc.decode(t), n = Number(e);\n                isNaN(n) && this.oc(\"length string (\".concat(e, \") is not valid number\"));\n                _context35.next = 9;\n                return this.cc(n);\n\n              case 9:\n                s = _context35.sent;\n                return _context35.abrupt(\"return\", new Wo(JSON.parse(s), t.length + n));\n\n              case 11:\n              case \"end\":\n                return _context35.stop();\n            }\n          }\n        }, _callee35, this);\n      }));\n\n      function ic() {\n        return _ic2.apply(this, arguments);\n      }\n\n      return ic;\n    }()\n    /** First index of '{' from the underlying buffer. */\n\n  }, {\n    key: \"ac\",\n    value: function ac() {\n      return this.buffer.findIndex(function (t) {\n        return t === \"{\".charCodeAt(0);\n      });\n    }\n    /**\n     * Reads from the beginning of the internal buffer, until the first '{', and\n     * return the content.\n     *\n     * If reached end of the stream, returns a null.\n     */\n\n  }, {\n    key: \"rc\",\n    value: function () {\n      var _rc2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee36() {\n        var t, e;\n        return _regeneratorRuntime.wrap(function _callee36$(_context36) {\n          while (1) {\n            switch (_context36.prev = _context36.next) {\n              case 0:\n                if (!(this.ac() < 0)) {\n                  _context36.next = 7;\n                  break;\n                }\n\n                _context36.next = 3;\n                return this.uc();\n\n              case 3:\n                if (!_context36.sent) {\n                  _context36.next = 5;\n                  break;\n                }\n\n                return _context36.abrupt(\"break\", 7);\n\n              case 5:\n                _context36.next = 0;\n                break;\n\n              case 7:\n                if (!(0 === this.buffer.length)) {\n                  _context36.next = 9;\n                  break;\n                }\n\n                return _context36.abrupt(\"return\", null);\n\n              case 9:\n                t = this.ac(); // Broke out of the loop because underlying stream is closed, but still\n                // cannot find an open bracket.\n\n                t < 0 && this.oc(\"Reached the end of bundle when a length string is expected.\");\n                e = this.buffer.slice(0, t); // Update the internal buffer to drop the read length.\n\n                return _context36.abrupt(\"return\", (this.buffer = this.buffer.slice(t), e));\n\n              case 13:\n              case \"end\":\n                return _context36.stop();\n            }\n          }\n        }, _callee36, this);\n      }));\n\n      function rc() {\n        return _rc2.apply(this, arguments);\n      }\n\n      return rc;\n    }()\n    /**\n     * Reads from a specified position from the internal buffer, for a specified\n     * number of bytes, pulling more data from the underlying stream if needed.\n     *\n     * Returns a string decoded from the read bytes.\n     */\n\n  }, {\n    key: \"cc\",\n    value: function () {\n      var _cc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee37(t) {\n        var e;\n        return _regeneratorRuntime.wrap(function _callee37$(_context37) {\n          while (1) {\n            switch (_context37.prev = _context37.next) {\n              case 0:\n                if (!(this.buffer.length < t)) {\n                  _context37.next = 8;\n                  break;\n                }\n\n                _context37.next = 3;\n                return this.uc();\n\n              case 3:\n                _context37.t0 = _context37.sent;\n\n                if (!_context37.t0) {\n                  _context37.next = 6;\n                  break;\n                }\n\n                this.oc(\"Reached the end of bundle when more is expected.\");\n\n              case 6:\n                _context37.next = 0;\n                break;\n\n              case 8:\n                e = this.sc.decode(this.buffer.slice(0, t)); // Update the internal buffer to drop the read json string.\n\n                return _context37.abrupt(\"return\", (this.buffer = this.buffer.slice(t), e));\n\n              case 10:\n              case \"end\":\n                return _context37.stop();\n            }\n          }\n        }, _callee37, this);\n      }));\n\n      function cc(_x109) {\n        return _cc.apply(this, arguments);\n      }\n\n      return cc;\n    }()\n  }, {\n    key: \"oc\",\n    value: function oc(t) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      throw this.nc.cancel(), new Error(\"Invalid bundle format: \".concat(t));\n    }\n    /**\n     * Pulls more data from underlying stream to internal buffer.\n     * Returns a boolean indicating whether the stream is finished.\n     */\n\n  }, {\n    key: \"uc\",\n    value: function () {\n      var _uc2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee38() {\n        var t, e;\n        return _regeneratorRuntime.wrap(function _callee38$(_context38) {\n          while (1) {\n            switch (_context38.prev = _context38.next) {\n              case 0:\n                _context38.next = 2;\n                return this.nc.read();\n\n              case 2:\n                t = _context38.sent;\n\n                if (!t.done) {\n                  e = new Uint8Array(this.buffer.length + t.value.length);\n                  e.set(this.buffer), e.set(t.value, this.buffer.length), this.buffer = e;\n                }\n\n                return _context38.abrupt(\"return\", t.done);\n\n              case 5:\n              case \"end\":\n                return _context38.stop();\n            }\n          }\n        }, _callee38, this);\n      }));\n\n      function uc() {\n        return _uc2.apply(this, arguments);\n      }\n\n      return uc;\n    }()\n  }]);\n\n  return Bc;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */\n\n\nvar Uc = /*#__PURE__*/function () {\n  function Uc(t) {\n    _classCallCheck(this, Uc);\n\n    this.datastore = t, // The version of each document that was read during this transaction.\n    this.readVersions = new Map(), this.mutations = [], this.committed = !1,\n    /**\n     * A deferred usage error that occurred previously in this transaction that\n     * will cause the transaction to fail once it actually commits.\n     */\n    this.lastWriteError = null,\n    /**\n     * Set of documents that have been written in the transaction.\n     *\n     * When there's more than one write to the same key in a transaction, any\n     * writes after the first are handled differently.\n     */\n    this.writtenDocs = new Set();\n  }\n\n  _createClass(Uc, [{\n    key: \"lookup\",\n    value: function () {\n      var _lookup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee40(t) {\n        var _this149 = this;\n\n        var e;\n        return _regeneratorRuntime.wrap(function _callee40$(_context40) {\n          while (1) {\n            switch (_context40.prev = _context40.next) {\n              case 0:\n                if (!(this.ensureCommitNotCalled(), this.mutations.length > 0)) {\n                  _context40.next = 2;\n                  break;\n                }\n\n                throw new j(K.INVALID_ARGUMENT, \"Firestore transactions require all reads to be executed before all writes.\");\n\n              case 2:\n                _context40.next = 4;\n                return function () {\n                  var _ref31 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee39(t, e) {\n                    var n, s, i, r, o, c;\n                    return _regeneratorRuntime.wrap(function _callee39$(_context39) {\n                      while (1) {\n                        switch (_context39.prev = _context39.next) {\n                          case 0:\n                            n = q(t);\n                            s = Yn(n.N) + \"/documents\";\n                            i = {\n                              documents: e.map(function (t) {\n                                return Gn(n.N, t);\n                              })\n                            };\n                            _context39.next = 5;\n                            return n.Ki(\"BatchGetDocuments\", s, i);\n\n                          case 5:\n                            r = _context39.sent;\n                            o = new Map();\n                            r.forEach(function (t) {\n                              var e = es(n.N, t);\n                              o.set(e.key.toString(), e);\n                            });\n                            c = [];\n                            return _context39.abrupt(\"return\", (e.forEach(function (t) {\n                              var e = o.get(t.toString());\n                              B(!!e), c.push(e);\n                            }), c));\n\n                          case 10:\n                          case \"end\":\n                            return _context39.stop();\n                        }\n                      }\n                    }, _callee39);\n                  }));\n\n                  return function (_x111, _x112) {\n                    return _ref31.apply(this, arguments);\n                  };\n                }()(this.datastore, t);\n\n              case 4:\n                e = _context40.sent;\n                return _context40.abrupt(\"return\", (e.forEach(function (t) {\n                  return _this149.recordVersion(t);\n                }), e));\n\n              case 6:\n              case \"end\":\n                return _context40.stop();\n            }\n          }\n        }, _callee40, this);\n      }));\n\n      function lookup(_x110) {\n        return _lookup.apply(this, arguments);\n      }\n\n      return lookup;\n    }()\n  }, {\n    key: \"set\",\n    value: function set(t, e) {\n      this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n  }, {\n    key: \"update\",\n    value: function update(t, e) {\n      try {\n        this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n      } catch (t) {\n        this.lastWriteError = t;\n      }\n\n      this.writtenDocs.add(t.toString());\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      this.write(new cn(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n  }, {\n    key: \"commit\",\n    value: function () {\n      var _commit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee42() {\n        var _this150 = this;\n\n        var t;\n        return _regeneratorRuntime.wrap(function _callee42$(_context42) {\n          while (1) {\n            switch (_context42.prev = _context42.next) {\n              case 0:\n                if (!(this.ensureCommitNotCalled(), this.lastWriteError)) {\n                  _context42.next = 2;\n                  break;\n                }\n\n                throw this.lastWriteError;\n\n              case 2:\n                t = this.readVersions; // For each mutation, note that the doc was written.\n\n                this.mutations.forEach(function (e) {\n                  t.delete(e.key.toString());\n                });\n                // For each document that was read but not written to, we want to perform\n                // a `verify` operation.\n                t.forEach(function (t, e) {\n                  var n = Pt.fromPath(e);\n\n                  _this150.mutations.push(new an(n, _this150.precondition(n)));\n                });\n                _context42.next = 7;\n                return function () {\n                  var _ref32 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee41(t, e) {\n                    var n, s, i;\n                    return _regeneratorRuntime.wrap(function _callee41$(_context41) {\n                      while (1) {\n                        switch (_context41.prev = _context41.next) {\n                          case 0:\n                            n = q(t), s = Yn(n.N) + \"/documents\", i = {\n                              writes: e.map(function (t) {\n                                return ss(n.N, t);\n                              })\n                            };\n                            _context41.next = 3;\n                            return n.Li(\"Commit\", s, i);\n\n                          case 3:\n                          case \"end\":\n                            return _context41.stop();\n                        }\n                      }\n                    }, _callee41);\n                  }));\n\n                  return function (_x113, _x114) {\n                    return _ref32.apply(this, arguments);\n                  };\n                }()(this.datastore, this.mutations);\n\n              case 7:\n                this.committed = !0;\n\n              case 8:\n              case \"end\":\n                return _context42.stop();\n            }\n          }\n        }, _callee42, this);\n      }));\n\n      function commit() {\n        return _commit.apply(this, arguments);\n      }\n\n      return commit;\n    }()\n  }, {\n    key: \"recordVersion\",\n    value: function recordVersion(t) {\n      var e;\n      if (t.isFoundDocument()) e = t.version;else {\n        if (!t.isNoDocument()) throw L(); // For deleted docs, we must use baseVersion 0 when we overwrite them.\n\n        e = rt.min();\n      }\n      var n = this.readVersions.get(t.key.toString());\n\n      if (n) {\n        if (!e.isEqual(n)) // This transaction will fail no matter what.\n          throw new j(K.ABORTED, \"Document version changed between two reads.\");\n      } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */\n\n  }, {\n    key: \"precondition\",\n    value: function precondition(t) {\n      var e = this.readVersions.get(t.toString());\n      return !this.writtenDocs.has(t.toString()) && e ? Ge.updateTime(e) : Ge.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */\n\n  }, {\n    key: \"preconditionForUpdate\",\n    value: function preconditionForUpdate(t) {\n      var e = this.readVersions.get(t.toString()); // The first time a document is written, we want to take into account the\n      // read time and existence\n\n      if (!this.writtenDocs.has(t.toString()) && e) {\n        if (e.isEqual(rt.min())) // The document doesn't exist, so fail the transaction.\n          // This has to be validated locally because you can't send a\n          // precondition that a document does not exist without changing the\n          // semantics of the backend write to be an insert. This is the reverse\n          // of what we want, since we want to assert that the document doesn't\n          // exist but then send the update and have it fail. Since we can't\n          // express that to the backend, we have to validate locally.\n          // Note: this can change once we can send separate verify writes in the\n          // transaction.\n          throw new j(K.INVALID_ARGUMENT, \"Can't update a document that doesn't exist.\"); // Document exists, base precondition on document update time.\n\n        return Ge.updateTime(e);\n      } // Document was not read, so we just use the preconditions for a blind\n      // update.\n\n\n      return Ge.exists(!0);\n    }\n  }, {\n    key: \"write\",\n    value: function write(t) {\n      this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n  }, {\n    key: \"ensureCommitNotCalled\",\n    value: function ensureCommitNotCalled() {}\n  }]);\n\n  return Uc;\n}();\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\n\n\nvar qc = /*#__PURE__*/function () {\n  function qc(t, e, n, s) {\n    _classCallCheck(this, qc);\n\n    this.asyncQueue = t, this.datastore = e, this.updateFunction = n, this.deferred = s, this.hc = 5, this.ar = new Xr(this.asyncQueue, \"transaction_retry\"\n    /* TransactionRetry */\n    );\n  }\n  /** Runs the transaction and sets the result on deferred. */\n\n\n  _createClass(qc, [{\n    key: \"run\",\n    value: function run() {\n      this.hc -= 1, this.lc();\n    }\n  }, {\n    key: \"lc\",\n    value: function lc() {\n      var _this151 = this;\n\n      this.ar.Xi( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee43() {\n        var t, e;\n        return _regeneratorRuntime.wrap(function _callee43$(_context43) {\n          while (1) {\n            switch (_context43.prev = _context43.next) {\n              case 0:\n                t = new Uc(_this151.datastore), e = _this151.fc(t);\n                e && e.then(function (e) {\n                  _this151.asyncQueue.enqueueAndForget(function () {\n                    return t.commit().then(function () {\n                      _this151.deferred.resolve(e);\n                    }).catch(function (t) {\n                      _this151.dc(t);\n                    });\n                  });\n                }).catch(function (t) {\n                  _this151.dc(t);\n                });\n\n              case 2:\n              case \"end\":\n                return _context43.stop();\n            }\n          }\n        }, _callee43);\n      })));\n    }\n  }, {\n    key: \"fc\",\n    value: function fc(t) {\n      try {\n        var e = this.updateFunction(t);\n        return !At(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), null);\n      } catch (t) {\n        // Do not retry errors thrown by user provided updateFunction.\n        return this.deferred.reject(t), null;\n      }\n    }\n  }, {\n    key: \"dc\",\n    value: function dc(t) {\n      var _this152 = this;\n\n      this.hc > 0 && this.wc(t) ? (this.hc -= 1, this.asyncQueue.enqueueAndForget(function () {\n        return _this152.lc(), Promise.resolve();\n      })) : this.deferred.reject(t);\n    }\n  }, {\n    key: \"wc\",\n    value: function wc(t) {\n      if (\"FirebaseError\" === t.name) {\n        // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n        // non-matching document versions with ABORTED. These errors should be retried.\n        var e = t.code;\n        return \"aborted\" === e || \"failed-precondition\" === e || !fn(e);\n      }\n\n      return !1;\n    }\n  }]);\n\n  return qc;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * FirestoreClient is a top-level class that constructs and owns all of the\n * pieces of the client SDK architecture. It is responsible for creating the\n * async queue that is shared by all of the other components in the system.\n */\n\n\nvar Kc = /*#__PURE__*/function () {\n  function Kc(t,\n  /**\n   * Asynchronous queue responsible for all of our internal processing. When\n   * we get incoming work from the user (via public API) or the network\n   * (incoming GRPC messages), we should always schedule onto this queue.\n   * This ensures all of our work is properly serialized (e.g. we don't\n   * start processing a new operation while the previous one is waiting for\n   * an async I/O to complete).\n   */\n  e, n) {\n    var _this153 = this;\n\n    _classCallCheck(this, Kc);\n\n    this.credentials = t, this.asyncQueue = e, this.databaseInfo = n, this.user = D.UNAUTHENTICATED, this.clientId = tt.I(), this.credentialListener = function () {\n      return Promise.resolve();\n    }, this.credentials.start(e, /*#__PURE__*/function () {\n      var _ref34 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee44(t) {\n        return _regeneratorRuntime.wrap(function _callee44$(_context44) {\n          while (1) {\n            switch (_context44.prev = _context44.next) {\n              case 0:\n                $(\"FirestoreClient\", \"Received user=\", t.uid);\n                _context44.next = 3;\n                return _this153.credentialListener(t);\n\n              case 3:\n                _this153.user = t;\n\n              case 4:\n              case \"end\":\n                return _context44.stop();\n            }\n          }\n        }, _callee44);\n      }));\n\n      return function (_x115) {\n        return _ref34.apply(this, arguments);\n      };\n    }());\n  }\n\n  _createClass(Kc, [{\n    key: \"getConfiguration\",\n    value: function () {\n      var _getConfiguration = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee45() {\n        return _regeneratorRuntime.wrap(function _callee45$(_context45) {\n          while (1) {\n            switch (_context45.prev = _context45.next) {\n              case 0:\n                return _context45.abrupt(\"return\", {\n                  asyncQueue: this.asyncQueue,\n                  databaseInfo: this.databaseInfo,\n                  clientId: this.clientId,\n                  credentials: this.credentials,\n                  initialUser: this.user,\n                  maxConcurrentLimboResolutions: 100\n                });\n\n              case 1:\n              case \"end\":\n                return _context45.stop();\n            }\n          }\n        }, _callee45, this);\n      }));\n\n      function getConfiguration() {\n        return _getConfiguration.apply(this, arguments);\n      }\n\n      return getConfiguration;\n    }()\n  }, {\n    key: \"setCredentialChangeListener\",\n    value: function setCredentialChangeListener(t) {\n      this.credentialListener = t;\n    }\n    /**\n     * Checks that the client has not been terminated. Ensures that other methods on\n     * this class cannot be called after the client is terminated.\n     */\n\n  }, {\n    key: \"verifyNotTerminated\",\n    value: function verifyNotTerminated() {\n      if (this.asyncQueue.isShuttingDown) throw new j(K.FAILED_PRECONDITION, \"The client has already been terminated.\");\n    }\n  }, {\n    key: \"terminate\",\n    value: function terminate() {\n      var _this154 = this;\n\n      this.asyncQueue.enterRestrictedMode();\n      var t = new Q();\n      return this.asyncQueue.enqueueAndForgetEvenWhileRestricted( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee46() {\n        var n;\n        return _regeneratorRuntime.wrap(function _callee46$(_context46) {\n          while (1) {\n            switch (_context46.prev = _context46.next) {\n              case 0:\n                _context46.prev = 0;\n                _context46.t0 = _this154.onlineComponents;\n\n                if (!_context46.t0) {\n                  _context46.next = 5;\n                  break;\n                }\n\n                _context46.next = 5;\n                return _this154.onlineComponents.terminate();\n\n              case 5:\n                _context46.t1 = _this154.offlineComponents;\n\n                if (!_context46.t1) {\n                  _context46.next = 9;\n                  break;\n                }\n\n                _context46.next = 9;\n                return _this154.offlineComponents.terminate();\n\n              case 9:\n                // The credentials provider must be terminated after shutting down the\n                // RemoteStore as it will prevent the RemoteStore from retrieving auth\n                // tokens.\n                _this154.credentials.shutdown();\n\n                t.resolve();\n                _context46.next = 17;\n                break;\n\n              case 13:\n                _context46.prev = 13;\n                _context46.t2 = _context46[\"catch\"](0);\n                n = ko(_context46.t2, \"Failed to shutdown persistence\");\n                t.reject(n);\n\n              case 17:\n              case \"end\":\n                return _context46.stop();\n            }\n          }\n        }, _callee46, null, [[0, 13]]);\n      }))), t.promise;\n    }\n  }]);\n\n  return Kc;\n}();\n\nfunction jc(_x116, _x117) {\n  return _jc.apply(this, arguments);\n}\n\nfunction _jc() {\n  _jc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee114(t, e) {\n    var n, s;\n    return _regeneratorRuntime.wrap(function _callee114$(_context115) {\n      while (1) {\n        switch (_context115.prev = _context115.next) {\n          case 0:\n            t.asyncQueue.verifyOperationInProgress(), $(\"FirestoreClient\", \"Initializing OfflineComponentProvider\");\n            _context115.next = 3;\n            return t.getConfiguration();\n\n          case 3:\n            n = _context115.sent;\n            _context115.next = 6;\n            return e.initialize(n);\n\n          case 6:\n            s = n.initialUser;\n            t.setCredentialChangeListener( /*#__PURE__*/function () {\n              var _ref65 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee113(t) {\n                return _regeneratorRuntime.wrap(function _callee113$(_context114) {\n                  while (1) {\n                    switch (_context114.prev = _context114.next) {\n                      case 0:\n                        _context114.t0 = s.isEqual(t);\n\n                        if (_context114.t0) {\n                          _context114.next = 5;\n                          break;\n                        }\n\n                        _context114.next = 4;\n                        return hr(e.localStore, t);\n\n                      case 4:\n                        s = t;\n\n                      case 5:\n                      case \"end\":\n                        return _context114.stop();\n                    }\n                  }\n                }, _callee113);\n              }));\n\n              return function (_x141) {\n                return _ref65.apply(this, arguments);\n              };\n            }()), // When a user calls clearPersistence() in one client, all other clients\n            // need to be terminated to allow the delete to succeed.\n            e.persistence.setDatabaseDeletedListener(function () {\n              return t.terminate();\n            }), t.offlineComponents = e;\n\n          case 8:\n          case \"end\":\n            return _context115.stop();\n        }\n      }\n    }, _callee114);\n  }));\n  return _jc.apply(this, arguments);\n}\n\nfunction Qc(_x118, _x119) {\n  return _Qc.apply(this, arguments);\n}\n\nfunction _Qc() {\n  _Qc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee116(t, e) {\n    var n, s;\n    return _regeneratorRuntime.wrap(function _callee116$(_context117) {\n      while (1) {\n        switch (_context117.prev = _context117.next) {\n          case 0:\n            t.asyncQueue.verifyOperationInProgress();\n            _context117.next = 3;\n            return Wc(t);\n\n          case 3:\n            n = _context117.sent;\n            $(\"FirestoreClient\", \"Initializing OnlineComponentProvider\");\n            _context117.next = 7;\n            return t.getConfiguration();\n\n          case 7:\n            s = _context117.sent;\n            _context117.next = 10;\n            return e.initialize(n, s);\n\n          case 10:\n            // The CredentialChangeListener of the online component provider takes\n            // precedence over the offline component provider.\n            t.setCredentialChangeListener(function (t) {\n              return function () {\n                var _ref66 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee115(t, e) {\n                  var n, s;\n                  return _regeneratorRuntime.wrap(function _callee115$(_context116) {\n                    while (1) {\n                      switch (_context116.prev = _context116.next) {\n                        case 0:\n                          n = q(t);\n                          n.asyncQueue.verifyOperationInProgress(), $(\"RemoteStore\", \"RemoteStore received new credentials\");\n                          s = wo(n); // Tear down and re-create our network streams. This will ensure we get a\n                          // fresh auth token for the new user and re-fill the write pipeline with\n                          // new mutations from the LocalStore (since mutations are per-user).\n\n                          n.Wr.add(3\n                          /* CredentialChange */\n                          );\n                          _context116.next = 6;\n                          return oo(n);\n\n                        case 6:\n                          s && // Don't set the network status to Unknown if we are offline.\n                          n.Hr.set(\"Unknown\"\n                          /* Unknown */\n                          );\n                          _context116.next = 9;\n                          return n.remoteSyncer.handleCredentialChange(e);\n\n                        case 9:\n                          n.Wr.delete(3\n                          /* CredentialChange */\n                          );\n                          _context116.next = 12;\n                          return ro(n);\n\n                        case 12:\n                        case \"end\":\n                          return _context116.stop();\n                      }\n                    }\n                  }, _callee115);\n                }));\n\n                return function (_x142, _x143) {\n                  return _ref66.apply(this, arguments);\n                };\n              }()(e.remoteStore, t);\n            });\n            t.onlineComponents = e;\n\n          case 12:\n          case \"end\":\n            return _context117.stop();\n        }\n      }\n    }, _callee116);\n  }));\n  return _Qc.apply(this, arguments);\n}\n\nfunction Wc(_x120) {\n  return _Wc.apply(this, arguments);\n}\n\nfunction _Wc() {\n  _Wc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee117(t) {\n    return _regeneratorRuntime.wrap(function _callee117$(_context118) {\n      while (1) {\n        switch (_context118.prev = _context118.next) {\n          case 0:\n            _context118.t0 = t.offlineComponents;\n\n            if (_context118.t0) {\n              _context118.next = 5;\n              break;\n            }\n\n            $(\"FirestoreClient\", \"Using default OfflineComponentProvider\");\n            _context118.next = 5;\n            return jc(t, new kc());\n\n          case 5:\n            return _context118.abrupt(\"return\", t.offlineComponents);\n\n          case 6:\n          case \"end\":\n            return _context118.stop();\n        }\n      }\n    }, _callee117);\n  }));\n  return _Wc.apply(this, arguments);\n}\n\nfunction Gc(_x121) {\n  return _Gc.apply(this, arguments);\n}\n\nfunction _Gc() {\n  _Gc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee118(t) {\n    return _regeneratorRuntime.wrap(function _callee118$(_context119) {\n      while (1) {\n        switch (_context119.prev = _context119.next) {\n          case 0:\n            _context119.t0 = t.onlineComponents;\n\n            if (_context119.t0) {\n              _context119.next = 5;\n              break;\n            }\n\n            $(\"FirestoreClient\", \"Using default OnlineComponentProvider\");\n            _context119.next = 5;\n            return Qc(t, new Fc());\n\n          case 5:\n            return _context119.abrupt(\"return\", t.onlineComponents);\n\n          case 6:\n          case \"end\":\n            return _context119.stop();\n        }\n      }\n    }, _callee118);\n  }));\n  return _Gc.apply(this, arguments);\n}\n\nfunction zc(t) {\n  return Wc(t).then(function (t) {\n    return t.persistence;\n  });\n}\n\nfunction Hc(t) {\n  return Wc(t).then(function (t) {\n    return t.localStore;\n  });\n}\n\nfunction Jc(t) {\n  return Gc(t).then(function (t) {\n    return t.remoteStore;\n  });\n}\n\nfunction Yc(t) {\n  return Gc(t).then(function (t) {\n    return t.syncEngine;\n  });\n}\n\nfunction Xc(_x122) {\n  return _Xc.apply(this, arguments);\n}\n/** Enables the network connection and re-enqueues all pending operations. */\n\n\nfunction _Xc() {\n  _Xc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee119(t) {\n    var e, n;\n    return _regeneratorRuntime.wrap(function _callee119$(_context120) {\n      while (1) {\n        switch (_context120.prev = _context120.next) {\n          case 0:\n            _context120.next = 2;\n            return Gc(t);\n\n          case 2:\n            e = _context120.sent;\n            n = e.eventManager;\n            return _context120.abrupt(\"return\", (n.onListen = nc.bind(null, e.syncEngine), n.onUnlisten = ic.bind(null, e.syncEngine), n));\n\n          case 5:\n          case \"end\":\n            return _context120.stop();\n        }\n      }\n    }, _callee119);\n  }));\n  return _Xc.apply(this, arguments);\n}\n\nfunction Zc(t) {\n  return t.asyncQueue.enqueue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee47() {\n    var e, n;\n    return _regeneratorRuntime.wrap(function _callee47$(_context47) {\n      while (1) {\n        switch (_context47.prev = _context47.next) {\n          case 0:\n            _context47.next = 2;\n            return zc(t);\n\n          case 2:\n            e = _context47.sent;\n            _context47.next = 5;\n            return Jc(t);\n\n          case 5:\n            n = _context47.sent;\n            return _context47.abrupt(\"return\", (e.setNetworkEnabled(!0), function (t) {\n              var e = q(t);\n              return e.Wr.delete(0\n              /* UserDisabled */\n              ), ro(e);\n            }(n)));\n\n          case 7:\n          case \"end\":\n            return _context47.stop();\n        }\n      }\n    }, _callee47);\n  })));\n}\n/** Disables the network connection. Pending operations will not complete. */\n\n\nfunction ta(t) {\n  return t.asyncQueue.enqueue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee49() {\n    var e, n;\n    return _regeneratorRuntime.wrap(function _callee49$(_context49) {\n      while (1) {\n        switch (_context49.prev = _context49.next) {\n          case 0:\n            _context49.next = 2;\n            return zc(t);\n\n          case 2:\n            e = _context49.sent;\n            _context49.next = 5;\n            return Jc(t);\n\n          case 5:\n            n = _context49.sent;\n            return _context49.abrupt(\"return\", (e.setNetworkEnabled(!1), function () {\n              var _ref38 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee48(t) {\n                var e;\n                return _regeneratorRuntime.wrap(function _callee48$(_context48) {\n                  while (1) {\n                    switch (_context48.prev = _context48.next) {\n                      case 0:\n                        e = q(t);\n                        e.Wr.add(0\n                        /* UserDisabled */\n                        );\n                        _context48.next = 4;\n                        return oo(e);\n\n                      case 4:\n                        // Set the OnlineState to Offline so get()s return from cache, etc.\n                        e.Hr.set(\"Offline\"\n                        /* Offline */\n                        );\n\n                      case 5:\n                      case \"end\":\n                        return _context48.stop();\n                    }\n                  }\n                }, _callee48);\n              }));\n\n              return function (_x123) {\n                return _ref38.apply(this, arguments);\n              };\n            }()(n)));\n\n          case 7:\n          case \"end\":\n            return _context49.stop();\n        }\n      }\n    }, _callee49);\n  })));\n}\n/**\n * Returns a Promise that resolves when all writes that were pending at the time\n * this method was called received server acknowledgement. An acknowledgement\n * can be either acceptance or rejection.\n */\n\n\nfunction ea(t, e) {\n  var n = new Q();\n  return t.asyncQueue.enqueueAndForget( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee51() {\n    return _regeneratorRuntime.wrap(function _callee51$(_context51) {\n      while (1) {\n        switch (_context51.prev = _context51.next) {\n          case 0:\n            _context51.t0 = function () {\n              var _ref40 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee50(t, e, n) {\n                var s, _s19;\n\n                return _regeneratorRuntime.wrap(function _callee50$(_context50) {\n                  while (1) {\n                    switch (_context50.prev = _context50.next) {\n                      case 0:\n                        _context50.prev = 0;\n                        _context50.next = 3;\n                        return function (t, e) {\n                          var n = q(t);\n                          return n.persistence.runTransaction(\"read document\", \"readonly\", function (t) {\n                            return n.Qn.An(t, e);\n                          });\n                        }(t, e);\n\n                      case 3:\n                        s = _context50.sent;\n                        s.isFoundDocument() ? n.resolve(s) : s.isNoDocument() ? n.resolve(null) : n.reject(new j(K.UNAVAILABLE, \"Failed to get document from cache. (However, this document may exist on the server. Run again without setting 'source' in the GetOptions to attempt to retrieve the document from the server.)\"));\n                        _context50.next = 11;\n                        break;\n\n                      case 7:\n                        _context50.prev = 7;\n                        _context50.t0 = _context50[\"catch\"](0);\n                        _s19 = ko(_context50.t0, \"Failed to get document '\".concat(e, \" from cache\"));\n                        n.reject(_s19);\n\n                      case 11:\n                      case \"end\":\n                        return _context50.stop();\n                    }\n                  }\n                }, _callee50, null, [[0, 7]]);\n              }));\n\n              return function (_x124, _x125, _x126) {\n                return _ref40.apply(this, arguments);\n              };\n            }()\n            /**\n            * Retrieves a latency-compensated document from the backend via a\n            * SnapshotListener.\n            */\n            ;\n\n            _context51.next = 3;\n            return Hc(t);\n\n          case 3:\n            _context51.t1 = _context51.sent;\n            _context51.t2 = e;\n            _context51.t3 = n;\n            return _context51.abrupt(\"return\", (0, _context51.t0)(_context51.t1, _context51.t2, _context51.t3));\n\n          case 7:\n          case \"end\":\n            return _context51.stop();\n        }\n      }\n    }, _callee51);\n  }))), n.promise;\n}\n\nfunction na(t, e) {\n  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var s = new Q();\n  return t.asyncQueue.enqueueAndForget( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee52() {\n    return _regeneratorRuntime.wrap(function _callee52$(_context52) {\n      while (1) {\n        switch (_context52.prev = _context52.next) {\n          case 0:\n            _context52.t0 = function (t, e, n, s, i) {\n              var r = new Lc({\n                next: function next(r) {\n                  // Remove query first before passing event to user to avoid\n                  // user actions affecting the now stale query.\n                  e.enqueueAndForget(function () {\n                    return Uo(t, o);\n                  });\n                  var c = r.docs.has(n);\n                  !c && r.fromCache ? // TODO(dimond): If we're online and the document doesn't\n                  // exist then we resolve with a doc.exists set to false. If\n                  // we're offline however, we reject the Promise in this\n                  // case. Two options: 1) Cache the negative response from\n                  // the server so we can deliver that even when you're\n                  // offline 2) Actually reject the Promise in the online case\n                  // if the document doesn't exist.\n                  i.reject(new j(K.UNAVAILABLE, \"Failed to get document because the client is offline.\")) : c && r.fromCache && s && \"server\" === s.source ? i.reject(new j(K.UNAVAILABLE, 'Failed to get document from server. (However, this document does exist in the local cache. Run again without setting source to \"server\" to retrieve the cached document.)')) : i.resolve(r);\n                },\n                error: function error(t) {\n                  return i.reject(t);\n                }\n              }),\n                  o = new Qo(we(n.path), r, {\n                includeMetadataChanges: !0,\n                fo: !0\n              });\n              return Bo(t, o);\n            };\n\n            _context52.next = 3;\n            return Xc(t);\n\n          case 3:\n            _context52.t1 = _context52.sent;\n            _context52.t2 = t.asyncQueue;\n            _context52.t3 = e;\n            _context52.t4 = n;\n            _context52.t5 = s;\n            return _context52.abrupt(\"return\", (0, _context52.t0)(_context52.t1, _context52.t2, _context52.t3, _context52.t4, _context52.t5));\n\n          case 9:\n          case \"end\":\n            return _context52.stop();\n        }\n      }\n    }, _callee52);\n  }))), s.promise;\n}\n\nfunction sa(t, e) {\n  var n = new Q();\n  return t.asyncQueue.enqueueAndForget( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee54() {\n    return _regeneratorRuntime.wrap(function _callee54$(_context54) {\n      while (1) {\n        switch (_context54.prev = _context54.next) {\n          case 0:\n            _context54.t0 = function () {\n              var _ref43 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee53(t, e, n) {\n                var s, i, r, o, _s20;\n\n                return _regeneratorRuntime.wrap(function _callee53$(_context53) {\n                  while (1) {\n                    switch (_context53.prev = _context53.next) {\n                      case 0:\n                        _context53.prev = 0;\n                        _context53.next = 3;\n                        return yr(t, e,\n                        /* usePreviousResults= */\n                        !0);\n\n                      case 3:\n                        s = _context53.sent;\n                        i = new Xo(e, s.Gn);\n                        r = i.bo(s.documents);\n                        o = i.applyChanges(r,\n                        /* updateLimboDocuments= */\n                        !1);\n                        n.resolve(o.snapshot);\n                        _context53.next = 14;\n                        break;\n\n                      case 10:\n                        _context53.prev = 10;\n                        _context53.t0 = _context53[\"catch\"](0);\n                        _s20 = ko(_context53.t0, \"Failed to execute query '\".concat(e, \" against cache\"));\n                        n.reject(_s20);\n\n                      case 14:\n                      case \"end\":\n                        return _context53.stop();\n                    }\n                  }\n                }, _callee53, null, [[0, 10]]);\n              }));\n\n              return function (_x127, _x128, _x129) {\n                return _ref43.apply(this, arguments);\n              };\n            }()\n            /**\n            * Retrieves a latency-compensated query snapshot from the backend via a\n            * SnapshotListener.\n            */\n            ;\n\n            _context54.next = 3;\n            return Hc(t);\n\n          case 3:\n            _context54.t1 = _context54.sent;\n            _context54.t2 = e;\n            _context54.t3 = n;\n            return _context54.abrupt(\"return\", (0, _context54.t0)(_context54.t1, _context54.t2, _context54.t3));\n\n          case 7:\n          case \"end\":\n            return _context54.stop();\n        }\n      }\n    }, _callee54);\n  }))), n.promise;\n}\n\nfunction ia(t, e) {\n  var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var s = new Q();\n  return t.asyncQueue.enqueueAndForget( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee55() {\n    return _regeneratorRuntime.wrap(function _callee55$(_context55) {\n      while (1) {\n        switch (_context55.prev = _context55.next) {\n          case 0:\n            _context55.t0 = function (t, e, n, s, i) {\n              var r = new Lc({\n                next: function next(n) {\n                  // Remove query first before passing event to user to avoid\n                  // user actions affecting the now stale query.\n                  e.enqueueAndForget(function () {\n                    return Uo(t, o);\n                  }), n.fromCache && \"server\" === s.source ? i.reject(new j(K.UNAVAILABLE, 'Failed to get documents from server. (However, these documents may exist in the local cache. Run again without setting source to \"server\" to retrieve the cached documents.)')) : i.resolve(n);\n                },\n                error: function error(t) {\n                  return i.reject(t);\n                }\n              }),\n                  o = new Qo(n, r, {\n                includeMetadataChanges: !0,\n                fo: !0\n              });\n              return Bo(t, o);\n            };\n\n            _context55.next = 3;\n            return Xc(t);\n\n          case 3:\n            _context55.t1 = _context55.sent;\n            _context55.t2 = t.asyncQueue;\n            _context55.t3 = e;\n            _context55.t4 = n;\n            _context55.t5 = s;\n            return _context55.abrupt(\"return\", (0, _context55.t0)(_context55.t1, _context55.t2, _context55.t3, _context55.t4, _context55.t5));\n\n          case 9:\n          case \"end\":\n            return _context55.stop();\n        }\n      }\n    }, _callee55);\n  }))), s.promise;\n}\n\nfunction ra(t, e) {\n  var n = new Lc(e);\n  return t.asyncQueue.enqueueAndForget( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee56() {\n    return _regeneratorRuntime.wrap(function _callee56$(_context56) {\n      while (1) {\n        switch (_context56.prev = _context56.next) {\n          case 0:\n            _context56.t0 = function (t, e) {\n              q(t).so.add(e), // Immediately fire an initial event, indicating all existing listeners\n              // are in-sync.\n              e.next();\n            };\n\n            _context56.next = 3;\n            return Xc(t);\n\n          case 3:\n            _context56.t1 = _context56.sent;\n            _context56.t2 = n;\n            return _context56.abrupt(\"return\", (0, _context56.t0)(_context56.t1, _context56.t2));\n\n          case 6:\n          case \"end\":\n            return _context56.stop();\n        }\n      }\n    }, _callee56);\n  }))), function () {\n    n.ec(), t.asyncQueue.enqueueAndForget( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee57() {\n      return _regeneratorRuntime.wrap(function _callee57$(_context57) {\n        while (1) {\n          switch (_context57.prev = _context57.next) {\n            case 0:\n              _context57.t0 = function (t, e) {\n                q(t).so.delete(e);\n              };\n\n              _context57.next = 3;\n              return Xc(t);\n\n            case 3:\n              _context57.t1 = _context57.sent;\n              _context57.t2 = n;\n              return _context57.abrupt(\"return\", (0, _context57.t0)(_context57.t1, _context57.t2));\n\n            case 6:\n            case \"end\":\n              return _context57.stop();\n          }\n        }\n      }, _callee57);\n    })));\n  };\n}\n/**\n * Takes an updateFunction in which a set of reads and writes can be performed\n * atomically. In the updateFunction, the client can read and write values\n * using the supplied transaction object. After the updateFunction, all\n * changes will be committed. If a retryable error occurs (ex: some other\n * client has changed any of the data referenced), then the updateFunction\n * will be called again after a backoff. If the updateFunction still fails\n * after all retries, then the transaction will be rejected.\n *\n * The transaction object passed to the updateFunction contains methods for\n * accessing documents and collections. Unlike other datastore access, data\n * accessed with the transaction will not reflect local changes that have not\n * been committed. For this reason, it is required that all reads are\n * performed before any writes. Transactions must be performed while online.\n */\n\n\nfunction oa(t, e) {\n  var n = new Q();\n  return t.asyncQueue.enqueueAndForget( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee58() {\n    var s;\n    return _regeneratorRuntime.wrap(function _callee58$(_context58) {\n      while (1) {\n        switch (_context58.prev = _context58.next) {\n          case 0:\n            _context58.next = 2;\n            return function (t) {\n              return Gc(t).then(function (t) {\n                return t.datastore;\n              });\n            }(t);\n\n          case 2:\n            s = _context58.sent;\n            new qc(t.asyncQueue, s, e, n).run();\n\n          case 4:\n          case \"end\":\n            return _context58.stop();\n        }\n      }\n    }, _callee58);\n  }))), n.promise;\n}\n\nfunction ca(t, e, n, s) {\n  var i = function (t, e) {\n    var n;\n    n = \"string\" == typeof t ? new TextEncoder().encode(t) : t;\n    return function (t, e) {\n      return new Bc(t, e);\n    }(function (t, e) {\n      if (t instanceof Uint8Array) return Mc(t, e);\n      if (t instanceof ArrayBuffer) return Mc(new Uint8Array(t), e);\n      if (t instanceof ReadableStream) return t.getReader();\n      throw new Error(\"Source of `toByteStreamReader` has to be a ArrayBuffer or ReadableStream\");\n    }(n), e);\n  }\n  /**\n  * @license\n  * Copyright 2017 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n  (n, Yr(e));\n\n  t.asyncQueue.enqueueAndForget( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee59() {\n    return _regeneratorRuntime.wrap(function _callee59$(_context59) {\n      while (1) {\n        switch (_context59.prev = _context59.next) {\n          case 0:\n            _context59.t0 = xc;\n            _context59.next = 3;\n            return Yc(t);\n\n          case 3:\n            _context59.t1 = _context59.sent;\n            _context59.t2 = i;\n            _context59.t3 = s;\n            (0, _context59.t0)(_context59.t1, _context59.t2, _context59.t3);\n\n          case 7:\n          case \"end\":\n            return _context59.stop();\n        }\n      }\n    }, _callee59);\n  })));\n}\n\nfunction aa(t, e) {\n  return t.asyncQueue.enqueue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee60() {\n    return _regeneratorRuntime.wrap(function _callee60$(_context60) {\n      while (1) {\n        switch (_context60.prev = _context60.next) {\n          case 0:\n            _context60.t0 = function (t, e) {\n              var n = q(t);\n              return n.persistence.runTransaction(\"Get named query\", \"readonly\", function (t) {\n                return n.Je.getNamedQuery(t, e);\n              });\n            };\n\n            _context60.next = 3;\n            return Hc(t);\n\n          case 3:\n            _context60.t1 = _context60.sent;\n            _context60.t2 = e;\n            return _context60.abrupt(\"return\", (0, _context60.t0)(_context60.t1, _context60.t2));\n\n          case 6:\n          case \"end\":\n            return _context60.stop();\n        }\n      }\n    }, _callee60);\n  })));\n}\n\nvar ua =\n/**\n * Constructs a DatabaseInfo using the provided host, databaseId and\n * persistenceKey.\n *\n * @param databaseId - The database to use.\n * @param appId - The Firebase App Id.\n * @param persistenceKey - A unique identifier for this Firestore's local\n * storage (used in conjunction with the databaseId).\n * @param host - The Firestore backend host to connect to.\n * @param ssl - Whether to use SSL when connecting.\n * @param forceLongPolling - Whether to use the forceLongPolling option\n * when using WebChannel as the network transport.\n * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n * option when using WebChannel as the network transport.\n * @param useFetchStreams Whether to use the Fetch API instead of\n * XMLHTTPRequest\n */\nfunction ua(t, e, n, s, i, r, o, c) {\n  _classCallCheck(this, ua);\n\n  this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = s, this.ssl = i, this.forceLongPolling = r, this.autoDetectLongPolling = o, this.useFetchStreams = c;\n};\n/** The default database name for a project. */\n\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\n\n\nvar ha = /*#__PURE__*/function () {\n  function ha(t, e) {\n    _classCallCheck(this, ha);\n\n    this.projectId = t, this.database = e || \"(default)\";\n  }\n\n  _createClass(ha, [{\n    key: \"isDefaultDatabase\",\n    get: function get() {\n      return \"(default)\" === this.database;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t instanceof ha && t.projectId === this.projectId && t.database === this.database;\n    }\n  }]);\n\n  return ha;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar la = new Map();\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nfunction fa(t, e, n) {\n  if (!n) throw new j(K.INVALID_ARGUMENT, \"Function \".concat(t, \"() cannot be called with an empty \").concat(e, \".\"));\n}\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n\n\nfunction da(t, e, n, s) {\n  if (!0 === e && !0 === s) throw new j(K.INVALID_ARGUMENT, \"\".concat(t, \" and \").concat(n, \" cannot be used together.\"));\n}\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\n\n\nfunction wa(t) {\n  if (!Pt.isDocumentKey(t)) throw new j(K.INVALID_ARGUMENT, \"Invalid document reference. Document references must have an even number of segments, but \".concat(t, \" has \").concat(t.length, \".\"));\n}\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */\n\n\nfunction _a(t) {\n  if (Pt.isDocumentKey(t)) throw new j(K.INVALID_ARGUMENT, \"Invalid collection reference. Collection references must have an odd number of segments, but \".concat(t, \" has \").concat(t.length, \".\"));\n}\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n\n/** Returns a string describing the type / value of the provided input. */\n\n\nfunction ma(t) {\n  if (void 0 === t) return \"undefined\";\n  if (null === t) return \"null\";\n  if (\"string\" == typeof t) return t.length > 20 && (t = \"\".concat(t.substring(0, 20), \"...\")), JSON.stringify(t);\n  if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n\n  if (\"object\" == typeof t) {\n    if (t instanceof Array) return \"an array\";\n    {\n      var e =\n      /** try to get the constructor name for an object. */\n      function (t) {\n        if (t.constructor) return t.constructor.name;\n        return null;\n      }\n      /**\n      * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n      * underlying instance. Throws if  `obj` is not an instance of `T`.\n      *\n      * This cast is used in the Lite and Full SDK to verify instance types for\n      * arguments passed to the public API.\n      * @internal\n      */\n      (t);\n\n      return e ? \"a custom \".concat(e, \" object\") : \"an object\";\n    }\n  }\n\n  return \"function\" == typeof t ? \"a function\" : L();\n}\n\nfunction ga(t, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n  if (\"_delegate\" in t && ( // Unwrap Compat types\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  t = t._delegate), !(t instanceof e)) {\n    if (e.name === t.constructor.name) throw new j(K.INVALID_ARGUMENT, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n    {\n      var n = ma(t);\n      throw new j(K.INVALID_ARGUMENT, \"Expected type '\".concat(e.name, \"', but it was: \").concat(n));\n    }\n  }\n\n  return t;\n}\n\nfunction ya(t, e) {\n  if (e <= 0) throw new j(K.INVALID_ARGUMENT, \"Function \".concat(t, \"() requires a positive number, but it was: \").concat(e, \".\"));\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// settings() defaults:\n\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\n\n\nvar pa = /*#__PURE__*/function () {\n  function pa(t) {\n    _classCallCheck(this, pa);\n\n    var e;\n\n    if (void 0 === t.host) {\n      if (void 0 !== t.ssl) throw new j(K.INVALID_ARGUMENT, \"Can't provide ssl option if host option is not set\");\n      this.host = \"firestore.googleapis.com\", this.ssl = true;\n    } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n\n    if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040;else {\n      if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new j(K.INVALID_ARGUMENT, \"cacheSizeBytes must be at least 1048576\");\n      this.cacheSizeBytes = t.cacheSizeBytes;\n    }\n    this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, this.useFetchStreams = !!t.useFetchStreams, da(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n  }\n\n  _createClass(pa, [{\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n  }]);\n\n  return pa;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link getFirestore}.\n */\n\n\nvar Ta = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function Ta(t, e) {\n    _classCallCheck(this, Ta);\n\n    this._credentials = e,\n    /**\n     * Whether it's a Firestore or Firestore Lite instance.\n     */\n    this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new pa({}), this._settingsFrozen = !1, t instanceof ha ? this._databaseId = t : (this._app = t, this._databaseId = function (t) {\n      if (!Object.prototype.hasOwnProperty.apply(t.options, [\"projectId\"])) throw new j(K.INVALID_ARGUMENT, '\"projectId\" not provided in firebase.initializeApp.');\n      return new ha(t.options.projectId);\n    }\n    /**\n    * Modify this instance to communicate with the Cloud Firestore emulator.\n    *\n    * Note: This must be called before this instance has been used to do any\n    * operations.\n    *\n    * @param firestore - The `Firestore` instance to configure to connect to the\n    * emulator.\n    * @param host - the emulator host (ex: localhost).\n    * @param port - the emulator port (ex: 9000).\n    * @param options.mockUserToken - the mock auth token to use for unit testing\n    * Security Rules.\n    */\n    (t));\n  }\n  /**\n   * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n   * instance.\n   */\n\n\n  _createClass(Ta, [{\n    key: \"app\",\n    get: function get() {\n      if (!this._app) throw new j(K.FAILED_PRECONDITION, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n      return this._app;\n    }\n  }, {\n    key: \"_initialized\",\n    get: function get() {\n      return this._settingsFrozen;\n    }\n  }, {\n    key: \"_terminated\",\n    get: function get() {\n      return void 0 !== this._terminateTask;\n    }\n  }, {\n    key: \"_setSettings\",\n    value: function _setSettings(t) {\n      if (this._settingsFrozen) throw new j(K.FAILED_PRECONDITION, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n      this._settings = new pa(t), void 0 !== t.credentials && (this._credentials = function (t) {\n        if (!t) return new G();\n\n        switch (t.type) {\n          case \"gapi\":\n            var e = t.client; // Make sure this really is a Gapi client.\n\n            return B(!(\"object\" != typeof e || null === e || !e.auth || !e.auth.getAuthHeaderValueForFirstParty)), new Y(e, t.sessionIndex || \"0\", t.iamToken || null);\n\n          case \"provider\":\n            return t.client;\n\n          default:\n            throw new j(K.INVALID_ARGUMENT, \"makeCredentialsProvider failed due to invalid credential type\");\n        }\n      }(t.credentials));\n    }\n  }, {\n    key: \"_getSettings\",\n    value: function _getSettings() {\n      return this._settings;\n    }\n  }, {\n    key: \"_freezeSettings\",\n    value: function _freezeSettings() {\n      return this._settingsFrozen = !0, this._settings;\n    }\n  }, {\n    key: \"_delete\",\n    value: function _delete() {\n      return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        app: this._app,\n        databaseId: this._databaseId,\n        settings: this._settings\n      };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */\n\n  }, {\n    key: \"_terminate\",\n    value: function _terminate() {\n      /**\n      * Removes all components associated with the provided instance. Must be called\n      * when the `Firestore` instance is terminated.\n      */\n      return function (t) {\n        var e = la.get(t);\n        e && ($(\"ComponentProvider\", \"Removing Datastore\"), la.delete(t), e.terminate());\n      }(this), Promise.resolve();\n    }\n  }]);\n\n  return Ta;\n}();\n\nfunction Ea(t, e, n) {\n  var s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var i;\n\n  var r = (t = ga(t, Ta))._getSettings();\n\n  if (\"firestore.googleapis.com\" !== r.host && r.host !== e && F(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), t._setSettings(Object.assign(Object.assign({}, r), {\n    host: \"\".concat(e, \":\").concat(n),\n    ssl: !1\n  })), s.mockUserToken) {\n    var _e39, _n23;\n\n    if (\"string\" == typeof s.mockUserToken) _e39 = s.mockUserToken, _n23 = D.MOCK_USER;else {\n      // Let createMockUserToken validate first (catches common mistakes like\n      // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n      _e39 = createMockUserToken(s.mockUserToken, null === (i = t._app) || void 0 === i ? void 0 : i.options.projectId);\n\n      var _r8 = s.mockUserToken.sub || s.mockUserToken.user_id;\n\n      if (!_r8) throw new j(K.INVALID_ARGUMENT, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n      _n23 = new D(_r8);\n    }\n    t._credentials = new z(new W(_e39, _n23));\n  }\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */\n\n\nvar Ia = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function Ia(t,\n  /**\n   * If provided, the `FirestoreDataConverter` associated with this instance.\n   */\n  e, n) {\n    _classCallCheck(this, Ia);\n\n    this.converter = e, this._key = n,\n    /** The type of this Firestore reference. */\n    this.type = \"document\", this.firestore = t;\n  }\n\n  _createClass(Ia, [{\n    key: \"_path\",\n    get: function get() {\n      return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */\n\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */\n\n  }, {\n    key: \"path\",\n    get: function get() {\n      return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */\n\n  }, {\n    key: \"parent\",\n    get: function get() {\n      return new Ra(this.firestore, this.converter, this._key.path.popLast());\n    }\n  }, {\n    key: \"withConverter\",\n    value: function withConverter(t) {\n      return new Ia(this.firestore, t, this._key);\n    }\n  }]);\n\n  return Ia;\n}();\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */\n\n\nvar Aa = /*#__PURE__*/function () {\n  // This is the lite version of the Query class in the main SDK.\n\n  /** @hideconstructor protected */\n  function Aa(t,\n  /**\n   * If provided, the `FirestoreDataConverter` associated with this instance.\n   */\n  e, n) {\n    _classCallCheck(this, Aa);\n\n    this.converter = e, this._query = n,\n    /** The type of this Firestore reference. */\n    this.type = \"query\", this.firestore = t;\n  }\n\n  _createClass(Aa, [{\n    key: \"withConverter\",\n    value: function withConverter(t) {\n      return new Aa(this.firestore, t, this._query);\n    }\n  }]);\n\n  return Aa;\n}();\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */\n\n\nvar Ra = /*#__PURE__*/function (_Aa) {\n  _inherits(Ra, _Aa);\n\n  var _super31 = _createSuper(Ra);\n\n  /** @hideconstructor */\n  function Ra(t, e, n) {\n    var _this155;\n\n    _classCallCheck(this, Ra);\n\n    _this155 = _super31.call(this, t, e, we(n)), _this155._path = n,\n    /** The type of this Firestore reference. */\n    _this155.type = \"collection\";\n    return _this155;\n  }\n  /** The collection's identifier. */\n\n\n  _createClass(Ra, [{\n    key: \"id\",\n    get: function get() {\n      return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */\n\n  }, {\n    key: \"path\",\n    get: function get() {\n      return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */\n\n  }, {\n    key: \"parent\",\n    get: function get() {\n      var t = this._path.popLast();\n\n      return t.isEmpty() ? null : new Ia(this.firestore,\n      /* converter= */\n      null, new Pt(t));\n    }\n  }, {\n    key: \"withConverter\",\n    value: function withConverter(t) {\n      return new Ra(this.firestore, t, this._path);\n    }\n  }]);\n\n  return Ra;\n}(Aa);\n\nfunction ba(t, e) {\n  for (var _len6 = arguments.length, n = new Array(_len6 > 2 ? _len6 - 2 : 0), _key6 = 2; _key6 < _len6; _key6++) {\n    n[_key6 - 2] = arguments[_key6];\n  }\n\n  if (t = getModularInstance(t), fa(\"collection\", \"path\", e), t instanceof Ta) {\n    var s = ht.fromString.apply(ht, [e].concat(n));\n    return _a(s), new Ra(t,\n    /* converter= */\n    null, s);\n  }\n\n  {\n    if (!(t instanceof Ia || t instanceof Ra)) throw new j(K.INVALID_ARGUMENT, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n\n    var _s21 = t._path.child(ht.fromString.apply(ht, [e].concat(n)));\n\n    return _a(_s21), new Ra(t.firestore,\n    /* converter= */\n    null, _s21);\n  }\n} // TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */\n\n\nfunction Pa(t, e) {\n  if (t = ga(t, Ta), fa(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new j(K.INVALID_ARGUMENT, \"Invalid collection ID '\".concat(e, \"' passed to function collectionGroup(). Collection IDs must not contain '/'.\"));\n  return new Aa(t,\n  /* converter= */\n  null,\n  /**\n  * Creates a new Query for a collection group query that matches all documents\n  * within the provided collection group.\n  */\n  function (t) {\n    return new fe(ht.emptyPath(), t);\n  }(e));\n}\n\nfunction va(t, e) {\n  for (var _len7 = arguments.length, n = new Array(_len7 > 2 ? _len7 - 2 : 0), _key7 = 2; _key7 < _len7; _key7++) {\n    n[_key7 - 2] = arguments[_key7];\n  }\n\n  if (t = getModularInstance(t), // We allow omission of 'pathString' but explicitly prohibit passing in both\n  // 'undefined' and 'null'.\n  1 === arguments.length && (e = tt.I()), fa(\"doc\", \"path\", e), t instanceof Ta) {\n    var s = ht.fromString.apply(ht, [e].concat(n));\n    return wa(s), new Ia(t,\n    /* converter= */\n    null, new Pt(s));\n  }\n\n  {\n    if (!(t instanceof Ia || t instanceof Ra)) throw new j(K.INVALID_ARGUMENT, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n\n    var _s22 = t._path.child(ht.fromString.apply(ht, [e].concat(n)));\n\n    return wa(_s22), new Ia(t.firestore, t instanceof Ra ? t.converter : null, new Pt(_s22));\n  }\n}\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */\n\n\nfunction Va(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), (t instanceof Ia || t instanceof Ra) && (e instanceof Ia || e instanceof Ra) && t.firestore === e.firestore && t.path === e.path && t.converter === e.converter;\n}\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */\n\n\nfunction Sa(t, e) {\n  return t = getModularInstance(t), e = getModularInstance(e), t instanceof Aa && e instanceof Aa && t.firestore === e.firestore && Ae(t._query, e._query) && t.converter === e.converter;\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar Da = /*#__PURE__*/function () {\n  function Da() {\n    var _this156 = this;\n\n    _classCallCheck(this, Da);\n\n    // The last promise in the queue.\n    this._c = Promise.resolve(), // A list of retryable operations. Retryable operations are run in order and\n    // retried with backoff.\n    this.mc = [], // Is this AsyncQueue being shut down? Once it is set to true, it will not\n    // be changed again.\n    this.gc = !1, // Operations scheduled to be queued in the future. Operations are\n    // automatically removed after they are run or canceled.\n    this.yc = [], // visible for testing\n    this.Tc = null, // Flag set while there's an outstanding AsyncQueue operation, used for\n    // assertion sanity-checks.\n    this.Ec = !1, // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n    this.Ic = !1, // List of TimerIds to fast-forward delays for.\n    this.Ac = [], // Backoff timer used to schedule retries for retryable operations\n    this.ar = new Xr(this, \"async_queue_retry\"\n    /* AsyncQueueRetry */\n    ), // Visibility handler that triggers an immediate retry of all retryable\n    // operations. Meant to speed up recovery when we regain file system access\n    // after page comes into foreground.\n    this.Rc = function () {\n      var t = Jr();\n      t && $(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), _this156.ar.tr();\n    };\n    var t = Jr();\n    t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Rc);\n  }\n\n  _createClass(Da, [{\n    key: \"isShuttingDown\",\n    get: function get() {\n      return this.gc;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */\n\n  }, {\n    key: \"enqueueAndForget\",\n    value: function enqueueAndForget(t) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.enqueue(t);\n    }\n  }, {\n    key: \"enqueueAndForgetEvenWhileRestricted\",\n    value: function enqueueAndForgetEvenWhileRestricted(t) {\n      this.bc(), // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.Pc(t);\n    }\n  }, {\n    key: \"enterRestrictedMode\",\n    value: function enterRestrictedMode(t) {\n      if (!this.gc) {\n        this.gc = !0, this.Ic = t || !1;\n        var e = Jr();\n        e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Rc);\n      }\n    }\n  }, {\n    key: \"enqueue\",\n    value: function enqueue(t) {\n      var _this157 = this;\n\n      if (this.bc(), this.gc) // Return a Promise which never resolves.\n        return new Promise(function () {}); // Create a deferred Promise that we can return to the callee. This\n      // allows us to return a \"hanging Promise\" only to the callee and still\n      // advance the queue even when the operation is not run.\n\n      var e = new Q();\n      return this.Pc(function () {\n        return _this157.gc && _this157.Ic ? Promise.resolve() : (t().then(e.resolve, e.reject), e.promise);\n      }).then(function () {\n        return e.promise;\n      });\n    }\n  }, {\n    key: \"enqueueRetryable\",\n    value: function enqueueRetryable(t) {\n      var _this158 = this;\n\n      this.enqueueAndForget(function () {\n        return _this158.mc.push(t), _this158.vc();\n      });\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */\n\n  }, {\n    key: \"vc\",\n    value: function () {\n      var _vc = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee61() {\n        var _this159 = this;\n\n        return _regeneratorRuntime.wrap(function _callee61$(_context61) {\n          while (1) {\n            switch (_context61.prev = _context61.next) {\n              case 0:\n                if (!(0 !== this.mc.length)) {\n                  _context61.next = 14;\n                  break;\n                }\n\n                _context61.prev = 1;\n                _context61.next = 4;\n                return this.mc[0]();\n\n              case 4:\n                this.mc.shift();\n                this.ar.reset();\n                _context61.next = 13;\n                break;\n\n              case 8:\n                _context61.prev = 8;\n                _context61.t0 = _context61[\"catch\"](1);\n\n                if (Hs(_context61.t0)) {\n                  _context61.next = 12;\n                  break;\n                }\n\n                throw _context61.t0;\n\n              case 12:\n                // Failure will be handled by AsyncQueue\n                $(\"AsyncQueue\", \"Operation failed with retryable error: \" + _context61.t0);\n\n              case 13:\n                this.mc.length > 0 && // If there are additional operations, we re-schedule `retryNextOp()`.\n                // This is necessary to run retryable operations that failed during\n                // their initial attempt since we don't know whether they are already\n                // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n                // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n                // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n                // call scheduled here.\n                // Since `backoffAndRun()` cancels an existing backoff and schedules a\n                // new backoff on every call, there is only ever a single additional\n                // operation in the queue.\n                this.ar.Xi(function () {\n                  return _this159.vc();\n                });\n\n              case 14:\n              case \"end\":\n                return _context61.stop();\n            }\n          }\n        }, _callee61, this, [[1, 8]]);\n      }));\n\n      function vc() {\n        return _vc.apply(this, arguments);\n      }\n\n      return vc;\n    }()\n  }, {\n    key: \"Pc\",\n    value: function Pc(t) {\n      var _this160 = this;\n\n      var e = this._c.then(function () {\n        return _this160.Ec = !0, t().catch(function (t) {\n          _this160.Tc = t, _this160.Ec = !1;\n\n          var e =\n          /**\n          * Chrome includes Error.message in Error.stack. Other browsers do not.\n          * This returns expected output of message + stack when available.\n          * @param error - Error or FirestoreError\n          */\n          function (t) {\n            var e = t.message || \"\";\n            t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n            return e;\n          }\n          /**\n          * @license\n          * Copyright 2017 Google LLC\n          *\n          * Licensed under the Apache License, Version 2.0 (the \"License\");\n          * you may not use this file except in compliance with the License.\n          * You may obtain a copy of the License at\n          *\n          *   http://www.apache.org/licenses/LICENSE-2.0\n          *\n          * Unless required by applicable law or agreed to in writing, software\n          * distributed under the License is distributed on an \"AS IS\" BASIS,\n          * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n          * See the License for the specific language governing permissions and\n          * limitations under the License.\n          */\n          (t); // Re-throw the error so that this.tail becomes a rejected Promise and\n          // all further attempts to chain (via .then) will just short-circuit\n          // and return the rejected Promise.\n\n\n          throw O(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        }).then(function (t) {\n          return _this160.Ec = !1, t;\n        });\n      });\n\n      return this._c = e, e;\n    }\n  }, {\n    key: \"enqueueAfterDelay\",\n    value: function enqueueAfterDelay(t, e, n) {\n      var _this161 = this;\n\n      this.bc(), // Fast-forward delays for timerIds that have been overriden.\n      this.Ac.indexOf(t) > -1 && (e = 0);\n      var s = xo.createAndSchedule(this, t, e, n, function (t) {\n        return _this161.Vc(t);\n      });\n      return this.yc.push(s), s;\n    }\n  }, {\n    key: \"bc\",\n    value: function bc() {\n      this.Tc && L();\n    }\n  }, {\n    key: \"verifyOperationInProgress\",\n    value: function verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */\n\n  }, {\n    key: \"Sc\",\n    value: function () {\n      var _Sc2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee62() {\n        var t;\n        return _regeneratorRuntime.wrap(function _callee62$(_context62) {\n          while (1) {\n            switch (_context62.prev = _context62.next) {\n              case 0:\n                t = this._c;\n                _context62.next = 3;\n                return t;\n\n              case 3:\n                if (t !== this._c) {\n                  _context62.next = 0;\n                  break;\n                }\n\n              case 4:\n              case \"end\":\n                return _context62.stop();\n            }\n          }\n        }, _callee62, this);\n      }));\n\n      function Sc() {\n        return _Sc2.apply(this, arguments);\n      }\n\n      return Sc;\n    }()\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */\n\n  }, {\n    key: \"Dc\",\n    value: function Dc(t) {\n      var _iterator50 = _createForOfIteratorHelper(this.yc),\n          _step50;\n\n      try {\n        for (_iterator50.s(); !(_step50 = _iterator50.n()).done;) {\n          var e = _step50.value;\n          if (e.timerId === t) return !0;\n        }\n      } catch (err) {\n        _iterator50.e(err);\n      } finally {\n        _iterator50.f();\n      }\n\n      return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */\n\n  }, {\n    key: \"Cc\",\n    value: function Cc(t) {\n      var _this162 = this;\n\n      // Note that draining may generate more delayed ops, so we do that first.\n      return this.Sc().then(function () {\n        // Run ops in the same order they'd run if they ran naturally.\n        _this162.yc.sort(function (t, e) {\n          return t.targetTimeMs - e.targetTimeMs;\n        });\n\n        var _iterator51 = _createForOfIteratorHelper(_this162.yc),\n            _step51;\n\n        try {\n          for (_iterator51.s(); !(_step51 = _iterator51.n()).done;) {\n            var e = _step51.value;\n            if (e.skipDelay(), \"all\"\n            /* All */\n            !== t && e.timerId === t) break;\n          }\n        } catch (err) {\n          _iterator51.e(err);\n        } finally {\n          _iterator51.f();\n        }\n\n        return _this162.Sc();\n      });\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */\n\n  }, {\n    key: \"Nc\",\n    value: function Nc(t) {\n      this.Ac.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */\n\n  }, {\n    key: \"Vc\",\n    value: function Vc(t) {\n      // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n      var e = this.yc.indexOf(t);\n      this.yc.splice(e, 1);\n    }\n  }]);\n\n  return Da;\n}();\n\nfunction Ca(t) {\n  /**\n  * Returns true if obj is an object and contains at least one of the specified\n  * methods.\n  */\n  return function (t, e) {\n    if (\"object\" != typeof t || null === t) return !1;\n    var n = t;\n\n    var _iterator52 = _createForOfIteratorHelper(e),\n        _step52;\n\n    try {\n      for (_iterator52.s(); !(_step52 = _iterator52.n()).done;) {\n        var _t73 = _step52.value;\n        if (_t73 in n && \"function\" == typeof n[_t73]) return !0;\n      }\n    } catch (err) {\n      _iterator52.e(err);\n    } finally {\n      _iterator52.f();\n    }\n\n    return !1;\n  }\n  /**\n  * @license\n  * Copyright 2020 Google LLC\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n\n  /**\n  * Represents the task of loading a Firestore bundle. It provides progress of bundle\n  * loading, as well as task completion and error events.\n  *\n  * The API is compatible with `Promise<LoadBundleTaskProgress>`.\n  */\n  (t, [\"next\", \"error\", \"complete\"]);\n}\n\nvar Na = /*#__PURE__*/function () {\n  function Na() {\n    _classCallCheck(this, Na);\n\n    this._progressObserver = {}, this._taskCompletionResolver = new Q(), this._lastProgress = {\n      taskState: \"Running\",\n      totalBytes: 0,\n      totalDocuments: 0,\n      bytesLoaded: 0,\n      documentsLoaded: 0\n    };\n  }\n  /**\n   * Registers functions to listen to bundle loading progress events.\n   * @param next - Called when there is a progress update from bundle loading. Typically `next` calls occur\n   *   each time a Firestore document is loaded from the bundle.\n   * @param error - Called when an error occurs during bundle loading. The task aborts after reporting the\n   *   error, and there should be no more updates after this.\n   * @param complete - Called when the loading task is complete.\n   */\n\n\n  _createClass(Na, [{\n    key: \"onProgress\",\n    value: function onProgress(t, e, n) {\n      this._progressObserver = {\n        next: t,\n        error: e,\n        complete: n\n      };\n    }\n    /**\n     * Implements the `Promise<LoadBundleTaskProgress>.catch` interface.\n     *\n     * @param onRejected - Called when an error occurs during bundle loading.\n     */\n\n  }, {\n    key: \"catch\",\n    value: function _catch(t) {\n      return this._taskCompletionResolver.promise.catch(t);\n    }\n    /**\n     * Implements the `Promise<LoadBundleTaskProgress>.then` interface.\n     *\n     * @param onFulfilled - Called on the completion of the loading task with a final `LoadBundleTaskProgress` update.\n     *   The update will always have its `taskState` set to `\"Success\"`.\n     * @param onRejected - Called when an error occurs during bundle loading.\n     */\n\n  }, {\n    key: \"then\",\n    value: function then(t, e) {\n      return this._taskCompletionResolver.promise.then(t, e);\n    }\n    /**\n     * Notifies all observers that bundle loading has completed, with a provided\n     * `LoadBundleTaskProgress` object.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_completeWith\",\n    value: function _completeWith(t) {\n      this._updateProgress(t), this._progressObserver.complete && this._progressObserver.complete(), this._taskCompletionResolver.resolve(t);\n    }\n    /**\n     * Notifies all observers that bundle loading has failed, with a provided\n     * `Error` as the reason.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_failWith\",\n    value: function _failWith(t) {\n      this._lastProgress.taskState = \"Error\", this._progressObserver.next && this._progressObserver.next(this._lastProgress), this._progressObserver.error && this._progressObserver.error(t), this._taskCompletionResolver.reject(t);\n    }\n    /**\n     * Notifies a progress update of loading a bundle.\n     * @param progress - The new progress.\n     *\n     * @private\n     */\n\n  }, {\n    key: \"_updateProgress\",\n    value: function _updateProgress(t) {\n      this._lastProgress = t, this._progressObserver.next && this._progressObserver.next(t);\n    }\n  }]);\n\n  return Na;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** DOMException error code constants. */\n\n\nvar xa = -1;\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link getFirestore}.\n */\n\nvar ka = /*#__PURE__*/function (_Ta) {\n  _inherits(ka, _Ta);\n\n  var _super32 = _createSuper(ka);\n\n  /** @hideconstructor */\n  function ka(t, e) {\n    var _this163;\n\n    _classCallCheck(this, ka);\n\n    _this163 = _super32.call(this, t, e),\n    /**\n     * Whether it's a {@link Firestore} or Firestore Lite instance.\n     */\n    _this163.type = \"firestore\", _this163._queue = new Da(), _this163._persistenceKey = \"name\" in t ? t.name : \"[DEFAULT]\";\n    return _this163;\n  }\n\n  _createClass(ka, [{\n    key: \"_terminate\",\n    value: function _terminate() {\n      return this._firestoreClient || // The client must be initialized to ensure that all subsequent API\n      // usage throws an exception.\n      Ma(this), this._firestoreClient.terminate();\n    }\n  }]);\n\n  return ka;\n}(Ta);\n/**\n * Initializes a new instance of {@link Firestore} with the provided settings.\n * Can only be called before any other function, including\n * {@link getFirestore}. If the custom settings are empty, this function is\n * equivalent to calling {@link getFirestore}.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} with which the {@link Firestore} instance will\n * be associated.\n * @param settings - A settings object to configure the {@link Firestore} instance.\n * @returns A newly initialized {@link Firestore} instance.\n */\n\n\nfunction $a(t, e) {\n  var n = _getProvider(t, \"firestore\");\n\n  if (n.isInitialized()) {\n    var _t74 = n.getImmediate(),\n        s = n.getOptions();\n\n    if (deepEqual(s, e)) return _t74;\n    throw new j(K.FAILED_PRECONDITION, \"initializeFirestore() has already been called with different options. To avoid this error, call initializeFirestore() with the same options as when it was originally called, or call getFirestore() to return the already initialized instance.\");\n  }\n\n  if (void 0 !== e.cacheSizeBytes && -1 !== e.cacheSizeBytes && e.cacheSizeBytes < 1048576) throw new j(K.INVALID_ARGUMENT, \"cacheSizeBytes must be at least 1048576\");\n  return n.initialize({\n    options: e\n  });\n}\n/**\n * Returns the existing {@link Firestore} instance that is associated with the\n * provided {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned {@link Firestore}\n * instance is associated with.\n * @returns The {@link Firestore} instance of the provided app.\n */\n\n\nfunction Oa() {\n  var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getApp();\n  return _getProvider(e, \"firestore\").getImmediate();\n}\n/**\n * @internal\n */\n\n\nfunction Fa(t) {\n  return t._firestoreClient || Ma(t), t._firestoreClient.verifyNotTerminated(), t._firestoreClient;\n}\n\nfunction Ma(t) {\n  var e;\n\n  var n = t._freezeSettings(),\n      s = function (t, e, n, s) {\n    return new ua(t, e, n, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams);\n  }(t._databaseId, (null === (e = t._app) || void 0 === e ? void 0 : e.options.appId) || \"\", t._persistenceKey, n);\n\n  t._firestoreClient = new Kc(t._credentials, t._queue, s);\n}\n/**\n * Attempts to enable persistent storage, if possible.\n *\n * Must be called before any other functions (other than\n * {@link initializeFirestore}, {@link getFirestore} or\n * {@link clearIndexedDbPersistence}.\n *\n * If this fails, `enableIndexedDbPersistence()` will reject the promise it\n * returns. Note that even after this failure, the {@link Firestore} instance will\n * remain usable, however offline persistence will be disabled.\n *\n * There are several reasons why this can fail, which can be identified by\n * the `code` on the error.\n *\n *   * failed-precondition: The app is already open in another browser tab.\n *   * unimplemented: The browser is incompatible with the offline\n *     persistence implementation.\n *\n * @param firestore - The {@link Firestore} instance to enable persistence for.\n * @param persistenceSettings - Optional settings object to configure\n * persistence.\n * @returns A `Promise` that represents successfully enabling persistent storage.\n */\n\n\nfunction La(t, e) {\n  Ha(t = ga(t, ka));\n\n  var n = Fa(t),\n      s = t._freezeSettings(),\n      i = new Fc();\n\n  return Ua(n, i, new $c(i, s.cacheSizeBytes, null == e ? void 0 : e.forceOwnership));\n}\n/**\n * Attempts to enable multi-tab persistent storage, if possible. If enabled\n * across all tabs, all operations share access to local persistence, including\n * shared execution of queries and latency-compensated local document updates\n * across all connected instances.\n *\n * If this fails, `enableMultiTabIndexedDbPersistence()` will reject the promise\n * it returns. Note that even after this failure, the {@link Firestore} instance will\n * remain usable, however offline persistence will be disabled.\n *\n * There are several reasons why this can fail, which can be identified by\n * the `code` on the error.\n *\n *   * failed-precondition: The app is already open in another browser tab and\n *     multi-tab is not enabled.\n *   * unimplemented: The browser is incompatible with the offline\n *     persistence implementation.\n *\n * @param firestore - The {@link Firestore} instance to enable persistence for.\n * @returns A `Promise` that represents successfully enabling persistent\n * storage.\n */\n\n\nfunction Ba(t) {\n  Ha(t = ga(t, ka));\n\n  var e = Fa(t),\n      n = t._freezeSettings(),\n      s = new Fc();\n\n  return Ua(e, s, new Oc(s, n.cacheSizeBytes));\n}\n/**\n * Registers both the `OfflineComponentProvider` and `OnlineComponentProvider`.\n * If the operation fails with a recoverable error (see\n * `canRecoverFromIndexedDbError()` below), the returned Promise is rejected\n * but the client remains usable.\n */\n\n\nfunction Ua(t, e, n) {\n  var s = new Q();\n  return t.asyncQueue.enqueue( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee63() {\n    return _regeneratorRuntime.wrap(function _callee63$(_context63) {\n      while (1) {\n        switch (_context63.prev = _context63.next) {\n          case 0:\n            _context63.prev = 0;\n            _context63.next = 3;\n            return jc(t, n);\n\n          case 3:\n            _context63.next = 5;\n            return Qc(t, e);\n\n          case 5:\n            s.resolve();\n            _context63.next = 13;\n            break;\n\n          case 8:\n            _context63.prev = 8;\n            _context63.t0 = _context63[\"catch\"](0);\n\n            if (\n            /**\n            * Decides whether the provided error allows us to gracefully disable\n            * persistence (as opposed to crashing the client).\n            */\n            function (t) {\n              if (\"FirebaseError\" === t.name) return t.code === K.FAILED_PRECONDITION || t.code === K.UNIMPLEMENTED;\n              if (\"undefined\" != typeof DOMException && t instanceof DOMException) // There are a few known circumstances where we can open IndexedDb but\n                // trying to read/write will fail (e.g. quota exceeded). For\n                // well-understood cases, we attempt to detect these and then gracefully\n                // fall back to memory persistence.\n                // NOTE: Rather than continue to add to this list, we could decide to\n                // always fall back, with the risk that we might accidentally hide errors\n                // representing actual SDK bugs.\n                // When the browser is out of quota we could get either quota exceeded\n                // or an aborted error depending on whether the error happened during\n                // schema migration.\n                return 22 === t.code || 20 === t.code || // Firefox Private Browsing mode disables IndexedDb and returns\n                // INVALID_STATE for any usage.\n                11 === t.code;\n              return !0;\n            }\n            /**\n            * Clears the persistent storage. This includes pending writes and cached\n            * documents.\n            *\n            * Must be called while the {@link Firestore} instance is not started (after the app is\n            * terminated or when the app is first initialized). On startup, this function\n            * must be called before other functions (other than {@link\n            * initializeFirestore} or {@link getFirestore})). If the {@link Firestore}\n            * instance is still running, the promise will be rejected with the error code\n            * of `failed-precondition`.\n            *\n            * Note: `clearIndexedDbPersistence()` is primarily intended to help write\n            * reliable tests that use Cloud Firestore. It uses an efficient mechanism for\n            * dropping existing data but does not attempt to securely overwrite or\n            * otherwise make cached data unrecoverable. For applications that are sensitive\n            * to the disclosure of cached data in between user sessions, we strongly\n            * recommend not enabling persistence at all.\n            *\n            * @param firestore - The {@link Firestore} instance to clear persistence for.\n            * @returns A `Promise` that is resolved when the persistent storage is\n            * cleared. Otherwise, the promise is rejected with an error.\n            */\n            (_context63.t0)) {\n              _context63.next = 12;\n              break;\n            }\n\n            throw _context63.t0;\n\n          case 12:\n            console.warn(\"Error enabling offline persistence. Falling back to persistence disabled: \" + _context63.t0), s.reject(_context63.t0);\n\n          case 13:\n          case \"end\":\n            return _context63.stop();\n        }\n      }\n    }, _callee63, null, [[0, 8]]);\n  }))).then(function () {\n    return s.promise;\n  });\n}\n\nfunction qa(t) {\n  if (t._initialized && !t._terminated) throw new j(K.FAILED_PRECONDITION, \"Persistence can only be cleared before a Firestore instance is initialized or after it is terminated.\");\n  var e = new Q();\n  return t._queue.enqueueAndForgetEvenWhileRestricted( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee65() {\n    return _regeneratorRuntime.wrap(function _callee65$(_context65) {\n      while (1) {\n        switch (_context65.prev = _context65.next) {\n          case 0:\n            _context65.prev = 0;\n            _context65.next = 3;\n            return function () {\n              var _ref52 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee64(t) {\n                var e;\n                return _regeneratorRuntime.wrap(function _callee64$(_context64) {\n                  while (1) {\n                    switch (_context64.prev = _context64.next) {\n                      case 0:\n                        if (Ws.bt()) {\n                          _context64.next = 2;\n                          break;\n                        }\n\n                        return _context64.abrupt(\"return\", Promise.resolve());\n\n                      case 2:\n                        e = t + \"main\";\n                        _context64.next = 5;\n                        return Ws.delete(e);\n\n                      case 5:\n                      case \"end\":\n                        return _context64.stop();\n                    }\n                  }\n                }, _callee64);\n              }));\n\n              return function (_x130) {\n                return _ref52.apply(this, arguments);\n              };\n            }()(sr(t._databaseId, t._persistenceKey));\n\n          case 3:\n            e.resolve();\n            _context65.next = 9;\n            break;\n\n          case 6:\n            _context65.prev = 6;\n            _context65.t0 = _context65[\"catch\"](0);\n            e.reject(_context65.t0);\n\n          case 9:\n          case \"end\":\n            return _context65.stop();\n        }\n      }\n    }, _callee65, null, [[0, 6]]);\n  }))), e.promise;\n}\n/**\n * Waits until all currently pending writes for the active user have been\n * acknowledged by the backend.\n *\n * The returned promise resolves immediately if there are no outstanding writes.\n * Otherwise, the promise waits for all previously issued writes (including\n * those written in a previous app session), but it does not wait for writes\n * that were added after the function is called. If you want to wait for\n * additional writes, call `waitForPendingWrites()` again.\n *\n * Any outstanding `waitForPendingWrites()` promises are rejected during user\n * changes.\n *\n * @returns A `Promise` which resolves when all currently pending writes have been\n * acknowledged by the backend.\n */\n\n\nfunction Ka(t) {\n  return function (t) {\n    var e = new Q();\n    return t.asyncQueue.enqueueAndForget( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee66() {\n      return _regeneratorRuntime.wrap(function _callee66$(_context66) {\n        while (1) {\n          switch (_context66.prev = _context66.next) {\n            case 0:\n              _context66.t0 = lc;\n              _context66.next = 3;\n              return Yc(t);\n\n            case 3:\n              _context66.t1 = _context66.sent;\n              _context66.t2 = e;\n              return _context66.abrupt(\"return\", (0, _context66.t0)(_context66.t1, _context66.t2));\n\n            case 6:\n            case \"end\":\n              return _context66.stop();\n          }\n        }\n      }, _callee66);\n    }))), e.promise;\n  }(Fa(t = ga(t, ka)));\n}\n/**\n * Re-enables use of the network for this {@link Firestore} instance after a prior\n * call to {@link disableNetwork}.\n *\n * @returns A `Promise` that is resolved once the network has been enabled.\n */\n\n\nfunction ja(t) {\n  return Zc(Fa(t = ga(t, ka)));\n}\n/**\n * Disables network usage for this instance. It can be re-enabled via {@link\n * enableNetwork}. While the network is disabled, any snapshot listeners,\n * `getDoc()` or `getDocs()` calls will return results from cache, and any write\n * operations will be queued until the network is restored.\n *\n * @returns A `Promise` that is resolved once the network has been disabled.\n */\n\n\nfunction Qa(t) {\n  return ta(Fa(t = ga(t, ka)));\n}\n/**\n * Terminates the provided {@link Firestore} instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` function\n * may be used. Any other function will throw a `FirestoreError`.\n *\n * To restart after termination, create a new instance of FirebaseFirestore with\n * {@link getFirestore}.\n *\n * Termination does not cancel any pending writes, and any promises that are\n * awaiting a response from the server will not be resolved. If you have\n * persistence enabled, the next time you start this instance, it will resume\n * sending these writes to the server.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all\n * of its resources or in combination with `clearIndexedDbPersistence()` to\n * ensure that all local state is destroyed between test runs.\n *\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */\n\n\nfunction Wa(t) {\n  return _removeServiceInstance(t.app, \"firestore\"), t._delete();\n}\n/**\n * Loads a Firestore bundle into the local cache.\n *\n * @param firestore - The {@link Firestore} instance to load bundles for for.\n * @param bundleData - An object representing the bundle to be loaded. Valid objects are\n *   `ArrayBuffer`, `ReadableStream<Uint8Array>` or `string`.\n *\n * @returns\n *   A `LoadBundleTask` object, which notifies callers with progress updates, and completion\n *   or error events. It can be used as a `Promise<LoadBundleTaskProgress>`.\n */\n\n\nfunction Ga(t, e) {\n  var n = Fa(t = ga(t, ka)),\n      s = new Na();\n  return ca(n, t._databaseId, e, s), s;\n}\n/**\n * Reads a Firestore {@link Query} from local cache, identified by the given name.\n *\n * The named queries are packaged  into bundles on the server side (along\n * with resulting documents), and loaded to local cache using `loadBundle`. Once in local\n * cache, use this method to extract a {@link Query} by name.\n */\n\n\nfunction za(t, e) {\n  return aa(Fa(t = ga(t, ka)), e).then(function (e) {\n    return e ? new Aa(t, null, e.query) : null;\n  });\n}\n\nfunction Ha(t) {\n  if (t._initialized || t._terminated) throw new j(K.FAILED_PRECONDITION, \"Firestore has already been started and persistence can no longer be enabled. You can only enable persistence before calling any other methods on a Firestore object.\");\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */\n\n\nvar Ja = /*#__PURE__*/function () {\n  /**\n   * Creates a `FieldPath` from the provided field names. If more than one field\n   * name is provided, the path will point to a nested field in a document.\n   *\n   * @param fieldNames - A list of field names.\n   */\n  function Ja() {\n    _classCallCheck(this, Ja);\n\n    for (var _len8 = arguments.length, t = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      t[_key8] = arguments[_key8];\n    }\n\n    for (var e = 0; e < t.length; ++e) {\n      if (0 === t[e].length) throw new j(K.INVALID_ARGUMENT, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n    }\n\n    this._internalPath = new ft(t);\n  }\n  /**\n   * Returns true if this `FieldPath` is equal to the provided one.\n   *\n   * @param other - The `FieldPath` to compare against.\n   * @returns true if this `FieldPath` is equal to the provided one.\n   */\n\n\n  _createClass(Ja, [{\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this._internalPath.isEqual(t._internalPath);\n    }\n  }]);\n\n  return Ja;\n}();\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */\n\n\nfunction Ya() {\n  return new Ja(\"__name__\");\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An immutable object representing an array of bytes.\n */\n\n\nvar Xa = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function Xa(t) {\n    _classCallCheck(this, Xa);\n\n    this._byteString = t;\n  }\n  /**\n   * Creates a new `Bytes` object from the given Base64 string, converting it to\n   * bytes.\n   *\n   * @param base64 - The Base64 string used to create the `Bytes` object.\n   */\n\n\n  _createClass(Xa, [{\n    key: \"toBase64\",\n    value:\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */\n    function toBase64() {\n      return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */\n\n  }, {\n    key: \"toUint8Array\",\n    value: function toUint8Array() {\n      return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this._byteString.isEqual(t._byteString);\n    }\n  }], [{\n    key: \"fromBase64String\",\n    value: function fromBase64String(t) {\n      try {\n        return new Xa(_t.fromBase64String(t));\n      } catch (t) {\n        throw new j(K.INVALID_ARGUMENT, \"Failed to construct data from Base64 string: \" + t);\n      }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */\n\n  }, {\n    key: \"fromUint8Array\",\n    value: function fromUint8Array(t) {\n      return new Xa(_t.fromUint8Array(t));\n    }\n  }]);\n\n  return Xa;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */\n\n\nvar Za =\n/**\n * @param _methodName - The public API endpoint that returns this class.\n * @hideconstructor\n */\nfunction Za(t) {\n  _classCallCheck(this, Za);\n\n  this._methodName = t;\n};\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */\n\n\nvar tu = /*#__PURE__*/function () {\n  /**\n   * Creates a new immutable `GeoPoint` object with the provided latitude and\n   * longitude values.\n   * @param latitude - The latitude as number between -90 and 90.\n   * @param longitude - The longitude as number between -180 and 180.\n   */\n  function tu(t, e) {\n    _classCallCheck(this, tu);\n\n    if (!isFinite(t) || t < -90 || t > 90) throw new j(K.INVALID_ARGUMENT, \"Latitude must be a number between -90 and 90, but was: \" + t);\n    if (!isFinite(e) || e < -180 || e > 180) throw new j(K.INVALID_ARGUMENT, \"Longitude must be a number between -180 and 180, but was: \" + e);\n    this._lat = t, this._long = e;\n  }\n  /**\n   * The latitude of this `GeoPoint` instance.\n   */\n\n\n  _createClass(tu, [{\n    key: \"latitude\",\n    get: function get() {\n      return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */\n\n  }, {\n    key: \"longitude\",\n    get: function get() {\n      return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */\n\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        latitude: this._lat,\n        longitude: this._long\n      };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */\n\n  }, {\n    key: \"_compareTo\",\n    value: function _compareTo(t) {\n      return et(this._lat, t._lat) || et(this._long, t._long);\n    }\n  }]);\n\n  return tu;\n}();\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nvar eu = /^__.*__$/;\n/** The result of parsing document data (e.g. for a setData call). */\n\nvar nu = /*#__PURE__*/function () {\n  function nu(t, e, n) {\n    _classCallCheck(this, nu);\n\n    this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n  }\n\n  _createClass(nu, [{\n    key: \"toMutation\",\n    value: function toMutation(t, e) {\n      return null !== this.fieldMask ? new nn(t, this.data, this.fieldMask, e, this.fieldTransforms) : new en(t, this.data, e, this.fieldTransforms);\n    }\n  }]);\n\n  return nu;\n}();\n/** The result of parsing \"update\" data (i.e. for an updateData call). */\n\n\nvar su = /*#__PURE__*/function () {\n  function su(t, // The fieldMask does not include document transforms.\n  e, n) {\n    _classCallCheck(this, su);\n\n    this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n  }\n\n  _createClass(su, [{\n    key: \"toMutation\",\n    value: function toMutation(t, e) {\n      return new nn(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n  }]);\n\n  return su;\n}();\n\nfunction iu(t) {\n  switch (t) {\n    case 0\n    /* Set */\n    : // fall through\n\n    case 2\n    /* MergeSet */\n    : // fall through\n\n    case 1\n    /* Update */\n    :\n      return !0;\n\n    case 3\n    /* Argument */\n    :\n    case 4\n    /* ArrayArgument */\n    :\n      return !1;\n\n    default:\n      throw L();\n  }\n}\n/** A \"context\" object passed around while parsing user data. */\n\n\nvar ru = /*#__PURE__*/function () {\n  /**\n   * Initializes a ParseContext with the given source and path.\n   *\n   * @param settings - The settings for the parser.\n   * @param databaseId - The database ID of the Firestore instance.\n   * @param serializer - The serializer to use to generate the Value proto.\n   * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n   * rather than throw.\n   * @param fieldTransforms - A mutable list of field transforms encountered\n   * while parsing the data.\n   * @param fieldMask - A mutable list of field paths encountered while parsing\n   * the data.\n   *\n   * TODO(b/34871131): We don't support array paths right now, so path can be\n   * null to indicate the context represents any location within an array (in\n   * which case certain features will not work and errors will be somewhat\n   * compromised).\n   */\n  function ru(t, e, n, s, i, r) {\n    _classCallCheck(this, ru);\n\n    this.settings = t, this.databaseId = e, this.N = n, this.ignoreUndefinedProperties = s, // Minor hack: If fieldTransforms is undefined, we assume this is an\n    // external call and we need to validate the entire path.\n    void 0 === i && this.xc(), this.fieldTransforms = i || [], this.fieldMask = r || [];\n  }\n\n  _createClass(ru, [{\n    key: \"path\",\n    get: function get() {\n      return this.settings.path;\n    }\n  }, {\n    key: \"kc\",\n    get: function get() {\n      return this.settings.kc;\n    }\n    /** Returns a new context with the specified settings overwritten. */\n\n  }, {\n    key: \"$c\",\n    value: function $c(t) {\n      return new ru(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.N, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n  }, {\n    key: \"Oc\",\n    value: function Oc(t) {\n      var e;\n      var n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t),\n          s = this.$c({\n        path: n,\n        Fc: !1\n      });\n      return s.Mc(t), s;\n    }\n  }, {\n    key: \"Lc\",\n    value: function Lc(t) {\n      var e;\n      var n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t),\n          s = this.$c({\n        path: n,\n        Fc: !1\n      });\n      return s.xc(), s;\n    }\n  }, {\n    key: \"Bc\",\n    value: function Bc(t) {\n      // TODO(b/34871131): We don't support array paths right now; so make path\n      // undefined.\n      return this.$c({\n        path: void 0,\n        Fc: !0\n      });\n    }\n  }, {\n    key: \"Uc\",\n    value: function Uc(t) {\n      return bu(t, this.settings.methodName, this.settings.qc || !1, this.path, this.settings.Kc);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */\n\n  }, {\n    key: \"contains\",\n    value: function contains(t) {\n      return void 0 !== this.fieldMask.find(function (e) {\n        return t.isPrefixOf(e);\n      }) || void 0 !== this.fieldTransforms.find(function (e) {\n        return t.isPrefixOf(e.field);\n      });\n    }\n  }, {\n    key: \"xc\",\n    value: function xc() {\n      // TODO(b/34871131): Remove null check once we have proper paths for fields\n      // within arrays.\n      if (this.path) for (var t = 0; t < this.path.length; t++) {\n        this.Mc(this.path.get(t));\n      }\n    }\n  }, {\n    key: \"Mc\",\n    value: function Mc(t) {\n      if (0 === t.length) throw this.Uc(\"Document fields must not be empty\");\n      if (iu(this.kc) && eu.test(t)) throw this.Uc('Document fields cannot begin and end with \"__\"');\n    }\n  }]);\n\n  return ru;\n}();\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */\n\n\nvar ou = /*#__PURE__*/function () {\n  function ou(t, e, n) {\n    _classCallCheck(this, ou);\n\n    this.databaseId = t, this.ignoreUndefinedProperties = e, this.N = n || Yr(t);\n  }\n  /** Creates a new top-level parse context. */\n\n\n  _createClass(ou, [{\n    key: \"jc\",\n    value: function jc(t, e, n) {\n      var s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n      return new ru({\n        kc: t,\n        methodName: e,\n        Kc: n,\n        path: ft.emptyPath(),\n        Fc: !1,\n        qc: s\n      }, this.databaseId, this.N, this.ignoreUndefinedProperties);\n    }\n  }]);\n\n  return ou;\n}();\n\nfunction cu(t) {\n  var e = t._freezeSettings(),\n      n = Yr(t._databaseId);\n\n  return new ou(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n/** Parse document data from a set() call. */\n\n\nfunction au(t, e, n, s, i) {\n  var r = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  var o = t.jc(r.merge || r.mergeFields ? 2\n  /* MergeSet */\n  : 0\n  /* Set */\n  , e, n, i);\n  Eu(\"Data must be an object, but it was:\", o, s);\n  var c = pu(s, o);\n  var a, u;\n  if (r.merge) a = new dt(o.fieldMask), u = o.fieldTransforms;else if (r.mergeFields) {\n    var _t75 = [];\n\n    var _iterator53 = _createForOfIteratorHelper(r.mergeFields),\n        _step53;\n\n    try {\n      for (_iterator53.s(); !(_step53 = _iterator53.n()).done;) {\n        var _s23 = _step53.value;\n\n        var _i11 = Iu(e, _s23, n);\n\n        if (!o.contains(_i11)) throw new j(K.INVALID_ARGUMENT, \"Field '\".concat(_i11, \"' is specified in your field mask but missing from your input data.\"));\n        Pu(_t75, _i11) || _t75.push(_i11);\n      }\n    } catch (err) {\n      _iterator53.e(err);\n    } finally {\n      _iterator53.f();\n    }\n\n    a = new dt(_t75), u = o.fieldTransforms.filter(function (t) {\n      return a.covers(t.field);\n    });\n  } else a = null, u = o.fieldTransforms;\n  return new nu(new Ut(c), a, u);\n}\n\nvar uu = /*#__PURE__*/function (_Za) {\n  _inherits(uu, _Za);\n\n  var _super33 = _createSuper(uu);\n\n  function uu() {\n    _classCallCheck(this, uu);\n\n    return _super33.apply(this, arguments);\n  }\n\n  _createClass(uu, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      if (2\n      /* MergeSet */\n      !== t.kc) throw 1\n      /* Update */\n      === t.kc ? t.Uc(\"\".concat(this._methodName, \"() can only appear at the top level of your update data\")) : t.Uc(\"\".concat(this._methodName, \"() cannot be used with set() unless you pass {merge:true}\")); // No transform to add for a delete, but we need to add it to our\n      // fieldMask so it gets deleted.\n\n      return t.fieldMask.push(t.path), null;\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t instanceof uu;\n    }\n  }]);\n\n  return uu;\n}(Za);\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */\n\n\nfunction hu(t, e, n) {\n  return new ru({\n    kc: 3\n    /* Argument */\n    ,\n    Kc: e.settings.Kc,\n    methodName: t._methodName,\n    Fc: n\n  }, e.databaseId, e.N, e.ignoreUndefinedProperties);\n}\n\nvar lu = /*#__PURE__*/function (_Za2) {\n  _inherits(lu, _Za2);\n\n  var _super34 = _createSuper(lu);\n\n  function lu() {\n    _classCallCheck(this, lu);\n\n    return _super34.apply(this, arguments);\n  }\n\n  _createClass(lu, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      return new je(t.path, new Oe());\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return t instanceof lu;\n    }\n  }]);\n\n  return lu;\n}(Za);\n\nvar fu = /*#__PURE__*/function (_Za3) {\n  _inherits(fu, _Za3);\n\n  var _super35 = _createSuper(fu);\n\n  function fu(t, e) {\n    var _this164;\n\n    _classCallCheck(this, fu);\n\n    _this164 = _super35.call(this, t), _this164.Qc = e;\n    return _this164;\n  }\n\n  _createClass(fu, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      var e = hu(this, t,\n      /*array=*/\n      !0),\n          n = this.Qc.map(function (t) {\n        return yu(t, e);\n      }),\n          s = new Fe(n);\n      return new je(t.path, s);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      // TODO(mrschmidt): Implement isEquals\n      return this === t;\n    }\n  }]);\n\n  return fu;\n}(Za);\n\nvar du = /*#__PURE__*/function (_Za4) {\n  _inherits(du, _Za4);\n\n  var _super36 = _createSuper(du);\n\n  function du(t, e) {\n    var _this165;\n\n    _classCallCheck(this, du);\n\n    _this165 = _super36.call(this, t), _this165.Qc = e;\n    return _this165;\n  }\n\n  _createClass(du, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      var e = hu(this, t,\n      /*array=*/\n      !0),\n          n = this.Qc.map(function (t) {\n        return yu(t, e);\n      }),\n          s = new Le(n);\n      return new je(t.path, s);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      // TODO(mrschmidt): Implement isEquals\n      return this === t;\n    }\n  }]);\n\n  return du;\n}(Za);\n\nvar wu = /*#__PURE__*/function (_Za5) {\n  _inherits(wu, _Za5);\n\n  var _super37 = _createSuper(wu);\n\n  function wu(t, e) {\n    var _this166;\n\n    _classCallCheck(this, wu);\n\n    _this166 = _super37.call(this, t), _this166.Wc = e;\n    return _this166;\n  }\n\n  _createClass(wu, [{\n    key: \"_toFieldTransform\",\n    value: function _toFieldTransform(t) {\n      var e = new Ue(t.N, Ce(t.N, this.Wc));\n      return new je(t.path, e);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      // TODO(mrschmidt): Implement isEquals\n      return this === t;\n    }\n  }]);\n\n  return wu;\n}(Za);\n/** Parse update data from an update() call. */\n\n\nfunction _u(t, e, n, s) {\n  var i = t.jc(1\n  /* Update */\n  , e, n);\n  Eu(\"Data must be an object, but it was:\", i, s);\n  var r = [],\n      o = Ut.empty();\n  ct(s, function (t, s) {\n    var c = Ru(e, t, n); // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n\n    s = getModularInstance(s);\n    var a = i.Lc(c);\n    if (s instanceof uu) // Add it to the field mask, but don't add anything to updateData.\n      r.push(c);else {\n      var _t76 = yu(s, a);\n\n      null != _t76 && (r.push(c), o.set(c, _t76));\n    }\n  });\n  var c = new dt(r);\n  return new su(o, c, i.fieldTransforms);\n}\n/** Parse update data from a list of field/value arguments. */\n\n\nfunction mu(t, e, n, s, i, r) {\n  var o = t.jc(1\n  /* Update */\n  , e, n),\n      c = [Iu(e, s, n)],\n      a = [i];\n  if (r.length % 2 != 0) throw new j(K.INVALID_ARGUMENT, \"Function \".concat(e, \"() needs to be called with an even number of arguments that alternate between field names and values.\"));\n\n  for (var _t77 = 0; _t77 < r.length; _t77 += 2) {\n    c.push(Iu(e, r[_t77])), a.push(r[_t77 + 1]);\n  }\n\n  var u = [],\n      h = Ut.empty(); // We iterate in reverse order to pick the last value for a field if the\n  // user specified the field multiple times.\n\n  for (var _t78 = c.length - 1; _t78 >= 0; --_t78) {\n    if (!Pu(u, c[_t78])) {\n      var _e40 = c[_t78];\n      var _n24 = a[_t78]; // For Compat types, we have to \"extract\" the underlying types before\n      // performing validation.\n\n      _n24 = getModularInstance(_n24);\n\n      var _s24 = o.Lc(_e40);\n\n      if (_n24 instanceof uu) // Add it to the field mask, but don't add anything to updateData.\n        u.push(_e40);else {\n        var _t79 = yu(_n24, _s24);\n\n        null != _t79 && (u.push(_e40), h.set(_e40, _t79));\n      }\n    }\n  }\n\n  var l = new dt(u);\n  return new su(h, l, o.fieldTransforms);\n}\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */\n\n\nfunction gu(t, e, n) {\n  var s = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : !1;\n  return yu(n, t.jc(s ? 4\n  /* ArrayArgument */\n  : 3\n  /* Argument */\n  , e));\n}\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */\n\n\nfunction yu(t, e) {\n  if (Tu( // Unwrap the API type from the Compat SDK. This will return the API type\n  // from firestore-exp.\n  t = getModularInstance(t))) return Eu(\"Unsupported field value:\", e, t), pu(t, e);\n  if (t instanceof Za) // FieldValues usually parse into transforms (except FieldValue.delete())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n\n    /**\n    * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n    * context.fieldTransforms.\n    */\n    return function (t, e) {\n      // Sentinels are only supported with writes, and not within arrays.\n      if (!iu(e.kc)) throw e.Uc(\"\".concat(t._methodName, \"() can only be used with update() and set()\"));\n      if (!e.path) throw e.Uc(\"\".concat(t._methodName, \"() is not currently supported inside arrays\"));\n\n      var n = t._toFieldTransform(e);\n\n      n && e.fieldTransforms.push(n);\n    }\n    /**\n    * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n    *\n    * @returns The parsed value\n    */\n    (t, e), null;\n  if (void 0 === t && e.ignoreUndefinedProperties) // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n\n  if ( // If context.path is null we are inside an array and we don't support\n  // field mask paths more granular than the top-level array.\n  e.path && e.fieldMask.push(e.path), t instanceof Array) {\n    // TODO(b/34871131): Include the path containing the array in the error\n    // message.\n    // In the case of IN queries, the parsed data is an array (representing\n    // the set of values to be included for the IN query) that may directly\n    // contain additional arrays (each representing an individual field\n    // value), so we disable this validation.\n    if (e.settings.Fc && 4\n    /* ArrayArgument */\n    !== e.kc) throw e.Uc(\"Nested arrays are not supported\");\n    return function (t, e) {\n      var n = [];\n      var s = 0;\n\n      var _iterator54 = _createForOfIteratorHelper(t),\n          _step54;\n\n      try {\n        for (_iterator54.s(); !(_step54 = _iterator54.n()).done;) {\n          var i = _step54.value;\n\n          var _t80 = yu(i, e.Bc(s));\n\n          null == _t80 && ( // Just include nulls in the array for fields being replaced with a\n          // sentinel.\n          _t80 = {\n            nullValue: \"NULL_VALUE\"\n          }), n.push(_t80), s++;\n        }\n      } catch (err) {\n        _iterator54.e(err);\n      } finally {\n        _iterator54.f();\n      }\n\n      return {\n        arrayValue: {\n          values: n\n        }\n      };\n    }(t, e);\n  }\n\n  return function (t, e) {\n    if (null === (t = getModularInstance(t))) return {\n      nullValue: \"NULL_VALUE\"\n    };\n    if (\"number\" == typeof t) return Ce(e.N, t);\n    if (\"boolean\" == typeof t) return {\n      booleanValue: t\n    };\n    if (\"string\" == typeof t) return {\n      stringValue: t\n    };\n\n    if (t instanceof Date) {\n      var n = it.fromDate(t);\n      return {\n        timestampValue: Un(e.N, n)\n      };\n    }\n\n    if (t instanceof it) {\n      // Firestore backend truncates precision down to microseconds. To ensure\n      // offline mode works the same with regards to truncation, perform the\n      // truncation immediately without waiting for the backend to do that.\n      var _n25 = new it(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n\n      return {\n        timestampValue: Un(e.N, _n25)\n      };\n    }\n\n    if (t instanceof tu) return {\n      geoPointValue: {\n        latitude: t.latitude,\n        longitude: t.longitude\n      }\n    };\n    if (t instanceof Xa) return {\n      bytesValue: qn(e.N, t._byteString)\n    };\n\n    if (t instanceof Ia) {\n      var _n26 = e.databaseId,\n          s = t.firestore._databaseId;\n      if (!s.isEqual(_n26)) throw e.Uc(\"Document reference is for database \".concat(s.projectId, \"/\").concat(s.database, \" but should be for database \").concat(_n26.projectId, \"/\").concat(_n26.database));\n      return {\n        referenceValue: Qn(t.firestore._databaseId || e.databaseId, t._key.path)\n      };\n    }\n\n    throw e.Uc(\"Unsupported field value: \".concat(ma(t)));\n  }\n  /**\n  * Checks whether an object looks like a JSON object that should be converted\n  * into a struct. Normal class/prototype instances are considered to look like\n  * JSON objects since they should be converted to a struct value. Arrays, Dates,\n  * GeoPoints, etc. are not considered to look like JSON objects since they map\n  * to specific FieldValue types other than ObjectValue.\n  */\n  (t, e);\n}\n\nfunction pu(t, e) {\n  var n = {};\n  return at(t) ? // If we encounter an empty object, we explicitly add it to the update\n  // mask to ensure that the server creates a map entry.\n  e.path && e.path.length > 0 && e.fieldMask.push(e.path) : ct(t, function (t, s) {\n    var i = yu(s, e.Oc(t));\n    null != i && (n[t] = i);\n  }), {\n    mapValue: {\n      fields: n\n    }\n  };\n}\n\nfunction Tu(t) {\n  return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof it || t instanceof tu || t instanceof Xa || t instanceof Ia || t instanceof Za);\n}\n\nfunction Eu(t, e, n) {\n  if (!Tu(n) || !function (t) {\n    return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n  }(n)) {\n    var s = ma(n);\n    throw \"an object\" === s ? e.Uc(t + \" a custom object\") : e.Uc(t + \" \" + s);\n  }\n}\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */\n\n\nfunction Iu(t, e, n) {\n  if (( // If required, replace the FieldPath Compat class with with the firestore-exp\n  // FieldPath.\n  e = getModularInstance(e)) instanceof Ja) return e._internalPath;\n  if (\"string\" == typeof e) return Ru(t, e);\n  throw bu(\"Field path arguments must be of type string or FieldPath.\", t,\n  /* hasConverter= */\n  !1,\n  /* path= */\n  void 0, n);\n}\n/**\n * Matches any characters in a field path string that are reserved.\n */\n\n\nvar Au = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */\n\nfunction Ru(t, e, n) {\n  if (e.search(Au) >= 0) throw bu(\"Invalid field path (\".concat(e, \"). Paths must not contain '~', '*', '/', '[', or ']'\"), t,\n  /* hasConverter= */\n  !1,\n  /* path= */\n  void 0, n);\n\n  try {\n    return _construct(Ja, _toConsumableArray(e.split(\".\")))._internalPath;\n  } catch (s) {\n    throw bu(\"Invalid field path (\".concat(e, \"). Paths must not be empty, begin with '.', end with '.', or contain '..'\"), t,\n    /* hasConverter= */\n    !1,\n    /* path= */\n    void 0, n);\n  }\n}\n\nfunction bu(t, e, n, s, i) {\n  var r = s && !s.isEmpty(),\n      o = void 0 !== i;\n  var c = \"Function \".concat(e, \"() called with invalid data\");\n  n && (c += \" (via `toFirestore()`)\"), c += \". \";\n  var a = \"\";\n  return (r || o) && (a += \" (found\", r && (a += \" in field \".concat(s)), o && (a += \" in document \".concat(i)), a += \")\"), new j(K.INVALID_ARGUMENT, c + t + a);\n}\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */\n\n\nfunction Pu(t, e) {\n  return t.some(function (t) {\n    return t.isEqual(e);\n  });\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */\n\n\nvar vu = /*#__PURE__*/function () {\n  // Note: This class is stripped down version of the DocumentSnapshot in\n  // the legacy SDK. The changes are:\n  // - No support for SnapshotMetadata.\n  // - No support for SnapshotOptions.\n\n  /** @hideconstructor protected */\n  function vu(t, e, n, s, i) {\n    _classCallCheck(this, vu);\n\n    this._firestore = t, this._userDataWriter = e, this._key = n, this._document = s, this._converter = i;\n  }\n  /** Property of the `DocumentSnapshot` that provides the document's ID. */\n\n\n  _createClass(vu, [{\n    key: \"id\",\n    get: function get() {\n      return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */\n\n  }, {\n    key: \"ref\",\n    get: function get() {\n      return new Ia(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */\n\n  }, {\n    key: \"exists\",\n    value: function exists() {\n      return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */\n\n  }, {\n    key: \"data\",\n    value: function data() {\n      if (this._document) {\n        if (this._converter) {\n          // We only want to use the converter and create a new DocumentSnapshot\n          // if a converter has been provided.\n          var t = new Vu(this._firestore, this._userDataWriter, this._key, this._document,\n          /* converter= */\n          null);\n          return this._converter.fromFirestore(t);\n        }\n\n        return this._userDataWriter.convertValue(this._document.data.value);\n      }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"get\",\n    value: function get(t) {\n      if (this._document) {\n        var e = this._document.data.field(Su(\"DocumentSnapshot.get\", t));\n\n        if (null !== e) return this._userDataWriter.convertValue(e);\n      }\n    }\n  }]);\n\n  return vu;\n}();\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */\n\n\nvar Vu = /*#__PURE__*/function (_vu) {\n  _inherits(Vu, _vu);\n\n  var _super38 = _createSuper(Vu);\n\n  function Vu() {\n    _classCallCheck(this, Vu);\n\n    return _super38.apply(this, arguments);\n  }\n\n  _createClass(Vu, [{\n    key: \"data\",\n    value:\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    function data() {\n      return _get(_getPrototypeOf(Vu.prototype), \"data\", this).call(this);\n    }\n  }]);\n\n  return Vu;\n}(vu);\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */\n\n\nfunction Su(t, e) {\n  return \"string\" == typeof e ? Ru(t, e) : e instanceof Ja ? e._internalPath : e._delegate._internalPath;\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Metadata about a snapshot, describing the state of the snapshot.\n */\n\n\nvar Du = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function Du(t, e) {\n    _classCallCheck(this, Du);\n\n    this.hasPendingWrites = t, this.fromCache = e;\n  }\n  /**\n   * Returns true if this `SnapshotMetadata` is equal to the provided one.\n   *\n   * @param other - The `SnapshotMetadata` to compare against.\n   * @returns true if this `SnapshotMetadata` is equal to the provided one.\n   */\n\n\n  _createClass(Du, [{\n    key: \"isEqual\",\n    value: function isEqual(t) {\n      return this.hasPendingWrites === t.hasPendingWrites && this.fromCache === t.fromCache;\n    }\n  }]);\n\n  return Du;\n}();\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */\n\n\nvar Cu = /*#__PURE__*/function (_vu2) {\n  _inherits(Cu, _vu2);\n\n  var _super39 = _createSuper(Cu);\n\n  /** @hideconstructor protected */\n  function Cu(t, e, n, s, i, r) {\n    var _this167;\n\n    _classCallCheck(this, Cu);\n\n    _this167 = _super39.call(this, t, e, n, s, r), _this167._firestore = t, _this167._firestoreImpl = t, _this167.metadata = i;\n    return _this167;\n  }\n  /**\n   * Property of the `DocumentSnapshot` that signals whether or not the data\n   * exists. True if the document exists.\n   */\n\n\n  _createClass(Cu, [{\n    key: \"exists\",\n    value: function exists() {\n      return _get(_getPrototypeOf(Cu.prototype), \"exists\", this).call(this);\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * By default, `FieldValue.serverTimestamp()` values that have not yet been\n     * set to their final value will be returned as `null`. You can override\n     * this by passing an options object.\n     *\n     * @param options - An options object to configure how data is retrieved from\n     * the snapshot (for example the desired behavior for server timestamps that\n     * have not yet been set to their final value).\n     * @returns An `Object` containing all fields in the document or `undefined` if\n     * the document doesn't exist.\n     */\n\n  }, {\n    key: \"data\",\n    value: function data() {\n      var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (this._document) {\n        if (this._converter) {\n          // We only want to use the converter and create a new DocumentSnapshot\n          // if a converter has been provided.\n          var e = new Nu(this._firestore, this._userDataWriter, this._key, this._document, this.metadata,\n          /* converter= */\n          null);\n          return this._converter.fromFirestore(e, t);\n        }\n\n        return this._userDataWriter.convertValue(this._document.data.value, t.serverTimestamps);\n      }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * By default, a `FieldValue.serverTimestamp()` that has not yet been set to\n     * its final value will be returned as `null`. You can override this by\n     * passing an options object.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @param options - An options object to configure how the field is retrieved\n     * from the snapshot (for example the desired behavior for server timestamps\n     * that have not yet been set to their final value).\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  }, {\n    key: \"get\",\n    value: function get(t) {\n      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (this._document) {\n        var n = this._document.data.field(Su(\"DocumentSnapshot.get\", t));\n\n        if (null !== n) return this._userDataWriter.convertValue(n, e.serverTimestamps);\n      }\n    }\n  }]);\n\n  return Cu;\n}(vu);\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */\n\n\nvar Nu = /*#__PURE__*/function (_Cu) {\n  _inherits(Nu, _Cu);\n\n  var _super40 = _createSuper(Nu);\n\n  function Nu() {\n    _classCallCheck(this, Nu);\n\n    return _super40.apply(this, arguments);\n  }\n\n  _createClass(Nu, [{\n    key: \"data\",\n    value:\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * By default, `FieldValue.serverTimestamp()` values that have not yet been\n     * set to their final value will be returned as `null`. You can override\n     * this by passing an options object.\n     *\n     * @override\n     * @param options - An options object to configure how data is retrieved from\n     * the snapshot (for example the desired behavior for server timestamps that\n     * have not yet been set to their final value).\n     * @returns An `Object` containing all fields in the document.\n     */\n    function data() {\n      var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _get(_getPrototypeOf(Nu.prototype), \"data\", this).call(this, t);\n    }\n  }]);\n\n  return Nu;\n}(Cu);\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */\n\n\nvar xu = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function xu(t, e, n, s) {\n    _classCallCheck(this, xu);\n\n    this._firestore = t, this._userDataWriter = e, this._snapshot = s, this.metadata = new Du(s.hasPendingWrites, s.fromCache), this.query = n;\n  }\n  /** An array of all the documents in the `QuerySnapshot`. */\n\n\n  _createClass(xu, [{\n    key: \"docs\",\n    get: function get() {\n      var t = [];\n      return this.forEach(function (e) {\n        return t.push(e);\n      }), t;\n    }\n    /** The number of documents in the `QuerySnapshot`. */\n\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this._snapshot.docs.size;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */\n\n  }, {\n    key: \"empty\",\n    get: function get() {\n      return 0 === this.size;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */\n\n  }, {\n    key: \"forEach\",\n    value: function forEach(t, e) {\n      var _this168 = this;\n\n      this._snapshot.docs.forEach(function (n) {\n        t.call(e, new Nu(_this168._firestore, _this168._userDataWriter, n.key, n, new Du(_this168._snapshot.mutatedKeys.has(n.key), _this168._snapshot.fromCache), _this168.query.converter));\n      });\n    }\n    /**\n     * Returns an array of the documents changes since the last snapshot. If this\n     * is the first snapshot, all documents will be in the list as 'added'\n     * changes.\n     *\n     * @param options - `SnapshotListenOptions` that control whether metadata-only\n     * changes (i.e. only `DocumentSnapshot.metadata` changed) should trigger\n     * snapshot events.\n     */\n\n  }, {\n    key: \"docChanges\",\n    value: function docChanges() {\n      var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var e = !!t.includeMetadataChanges;\n      if (e && this._snapshot.excludesMetadataChanges) throw new j(K.INVALID_ARGUMENT, \"To include metadata changes with your document changes, you must also pass { includeMetadataChanges:true } to onSnapshot().\");\n      return this._cachedChanges && this._cachedChangesIncludeMetadataChanges === e || (this._cachedChanges =\n      /** Calculates the array of `DocumentChange`s for a given `ViewSnapshot`. */\n      function (t, e) {\n        if (t._snapshot.oldDocs.isEmpty()) {\n          var _e41 = 0;\n          return t._snapshot.docChanges.map(function (n) {\n            return {\n              type: \"added\",\n              doc: new Nu(t._firestore, t._userDataWriter, n.doc.key, n.doc, new Du(t._snapshot.mutatedKeys.has(n.doc.key), t._snapshot.fromCache), t.query.converter),\n              oldIndex: -1,\n              newIndex: _e41++\n            };\n          });\n        }\n\n        {\n          // A `DocumentSet` that is updated incrementally as changes are applied to use\n          // to lookup the index of a document.\n          var n = t._snapshot.oldDocs;\n          return t._snapshot.docChanges.filter(function (t) {\n            return e || 3\n            /* Metadata */\n            !== t.type;\n          }).map(function (e) {\n            var s = new Nu(t._firestore, t._userDataWriter, e.doc.key, e.doc, new Du(t._snapshot.mutatedKeys.has(e.doc.key), t._snapshot.fromCache), t.query.converter);\n            var i = -1,\n                r = -1;\n            return 0\n            /* Added */\n            !== e.type && (i = n.indexOf(e.doc.key), n = n.delete(e.doc.key)), 1\n            /* Removed */\n            !== e.type && (n = n.add(e.doc), r = n.indexOf(e.doc.key)), {\n              type: ku(e.type),\n              doc: s,\n              oldIndex: i,\n              newIndex: r\n            };\n          });\n        }\n      }(this, e), this._cachedChangesIncludeMetadataChanges = e), this._cachedChanges;\n    }\n  }]);\n\n  return xu;\n}();\n\nfunction ku(t) {\n  switch (t) {\n    case 0\n    /* Added */\n    :\n      return \"added\";\n\n    case 2\n    /* Modified */\n    :\n    case 3\n    /* Metadata */\n    :\n      return \"modified\";\n\n    case 1\n    /* Removed */\n    :\n      return \"removed\";\n\n    default:\n      return L();\n  }\n} // TODO(firestoreexp): Add tests for snapshotEqual with different snapshot\n// metadata\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */\n\n\nfunction $u(t, e) {\n  return t instanceof Cu && e instanceof Cu ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof xu && e instanceof xu && t._firestore === e._firestore && Sa(t.query, e.query) && t.metadata.isEqual(e.metadata) && t._snapshot.isEqual(e._snapshot);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction Ou(t) {\n  if (me(t) && 0 === t.explicitOrderBy.length) throw new j(K.UNIMPLEMENTED, \"limitToLast() queries require specifying at least one orderBy() clause\");\n}\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link\n * endBefore:1}, {@link (endAt:1)}, {@link limit} or {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\n\n\nvar Fu = function Fu() {\n  _classCallCheck(this, Fu);\n};\n/**\n * Creates a new immutable instance of {@link Query} that is extended to also include\n * additional query constraints.\n *\n * @param query - The {@link Query} instance to use as a base for the new constraints.\n * @param queryConstraints - The list of {@link QueryConstraint}s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */\n\n\nfunction Mu(t) {\n  for (var _len9 = arguments.length, e = new Array(_len9 > 1 ? _len9 - 1 : 0), _key9 = 1; _key9 < _len9; _key9++) {\n    e[_key9 - 1] = arguments[_key9];\n  }\n\n  for (var _i12 = 0, _e42 = e; _i12 < _e42.length; _i12++) {\n    var n = _e42[_i12];\n    t = n._apply(t);\n  }\n\n  return t;\n}\n\nvar Lu = /*#__PURE__*/function (_Fu) {\n  _inherits(Lu, _Fu);\n\n  var _super41 = _createSuper(Lu);\n\n  function Lu(t, e, n) {\n    var _this169;\n\n    _classCallCheck(this, Lu);\n\n    _this169 = _super41.call(this), _this169.Gc = t, _this169.zc = e, _this169.Hc = n, _this169.type = \"where\";\n    return _this169;\n  }\n\n  _createClass(Lu, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      var e = cu(t.firestore),\n          n = function (t, e, n, s, i, r, o) {\n        var c;\n\n        if (i.isKeyField()) {\n          if (\"array-contains\"\n          /* ARRAY_CONTAINS */\n          === r || \"array-contains-any\"\n          /* ARRAY_CONTAINS_ANY */\n          === r) throw new j(K.INVALID_ARGUMENT, \"Invalid Query. You can't perform '\".concat(r, \"' queries on FieldPath.documentId().\"));\n\n          if (\"in\"\n          /* IN */\n          === r || \"not-in\"\n          /* NOT_IN */\n          === r) {\n            th(o, r);\n            var _e43 = [];\n\n            var _iterator55 = _createForOfIteratorHelper(o),\n                _step55;\n\n            try {\n              for (_iterator55.s(); !(_step55 = _iterator55.n()).done;) {\n                var _n27 = _step55.value;\n\n                _e43.push(Zu(s, t, _n27));\n              }\n            } catch (err) {\n              _iterator55.e(err);\n            } finally {\n              _iterator55.f();\n            }\n\n            c = {\n              arrayValue: {\n                values: _e43\n              }\n            };\n          } else c = Zu(s, t, o);\n        } else \"in\"\n        /* IN */\n        !== r && \"not-in\"\n        /* NOT_IN */\n        !== r && \"array-contains-any\"\n        /* ARRAY_CONTAINS_ANY */\n        !== r || th(o, r), c = gu(n, e, o,\n        /* allowArrays= */\n        \"in\"\n        /* IN */\n        === r || \"not-in\"\n        /* NOT_IN */\n        === r);\n\n        var a = Jt.create(i, r, c);\n        return function (t, e) {\n          if (e.v()) {\n            var _n28 = ye(t);\n\n            if (null !== _n28 && !_n28.isEqual(e.field)) throw new j(K.INVALID_ARGUMENT, \"Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '\".concat(_n28.toString(), \"' and '\").concat(e.field.toString(), \"'\"));\n\n            var _s25 = ge(t);\n\n            null !== _s25 && eh(t, e.field, _s25);\n          }\n\n          var n = function (t, e) {\n            var _iterator56 = _createForOfIteratorHelper(t.filters),\n                _step56;\n\n            try {\n              for (_iterator56.s(); !(_step56 = _iterator56.n()).done;) {\n                var _n29 = _step56.value;\n                if (e.indexOf(_n29.op) >= 0) return _n29.op;\n              }\n            } catch (err) {\n              _iterator56.e(err);\n            } finally {\n              _iterator56.f();\n            }\n\n            return null;\n          }(t,\n          /**\n          * Given an operator, returns the set of operators that cannot be used with it.\n          *\n          * Operators in a query must adhere to the following set of rules:\n          * 1. Only one array operator is allowed.\n          * 2. Only one disjunctive operator is allowed.\n          * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.\n          * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n          *\n          * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`\n          * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`\n          */\n          function (t) {\n            switch (t) {\n              case \"!=\"\n              /* NOT_EQUAL */\n              :\n                return [\"!=\"\n                /* NOT_EQUAL */\n                , \"not-in\"\n                /* NOT_IN */\n                ];\n\n              case \"array-contains\"\n              /* ARRAY_CONTAINS */\n              :\n                return [\"array-contains\"\n                /* ARRAY_CONTAINS */\n                , \"array-contains-any\"\n                /* ARRAY_CONTAINS_ANY */\n                , \"not-in\"\n                /* NOT_IN */\n                ];\n\n              case \"in\"\n              /* IN */\n              :\n                return [\"array-contains-any\"\n                /* ARRAY_CONTAINS_ANY */\n                , \"in\"\n                /* IN */\n                , \"not-in\"\n                /* NOT_IN */\n                ];\n\n              case \"array-contains-any\"\n              /* ARRAY_CONTAINS_ANY */\n              :\n                return [\"array-contains\"\n                /* ARRAY_CONTAINS */\n                , \"array-contains-any\"\n                /* ARRAY_CONTAINS_ANY */\n                , \"in\"\n                /* IN */\n                , \"not-in\"\n                /* NOT_IN */\n                ];\n\n              case \"not-in\"\n              /* NOT_IN */\n              :\n                return [\"array-contains\"\n                /* ARRAY_CONTAINS */\n                , \"array-contains-any\"\n                /* ARRAY_CONTAINS_ANY */\n                , \"in\"\n                /* IN */\n                , \"not-in\"\n                /* NOT_IN */\n                , \"!=\"\n                /* NOT_EQUAL */\n                ];\n\n              default:\n                return [];\n            }\n          }(e.op));\n\n          if (null !== n) // Special case when it's a duplicate op to give a slightly clearer error message.\n            throw n === e.op ? new j(K.INVALID_ARGUMENT, \"Invalid query. You cannot use more than one '\".concat(e.op.toString(), \"' filter.\")) : new j(K.INVALID_ARGUMENT, \"Invalid query. You cannot use '\".concat(e.op.toString(), \"' filters with '\").concat(n.toString(), \"' filters.\"));\n        }(t, a), a;\n      }(t._query, \"where\", e, t.firestore._databaseId, this.Gc, this.zc, this.Hc);\n\n      return new Aa(t.firestore, t.converter, function (t, e) {\n        var n = t.filters.concat([e]);\n        return new fe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n      }(t._query, n));\n    }\n  }]);\n\n  return Lu;\n}(Fu);\n/**\n * Creates a {@link QueryConstraint} that enforces that documents must contain the\n * specified field and that the value should satisfy the relation constraint\n * provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link Query}.\n */\n\n\nfunction Bu(t, e, n) {\n  var s = e,\n      i = Su(\"where\", t);\n  return new Lu(i, s, n);\n}\n\nvar Uu = /*#__PURE__*/function (_Fu2) {\n  _inherits(Uu, _Fu2);\n\n  var _super42 = _createSuper(Uu);\n\n  function Uu(t, e) {\n    var _this170;\n\n    _classCallCheck(this, Uu);\n\n    _this170 = _super42.call(this), _this170.Gc = t, _this170.Jc = e, _this170.type = \"orderBy\";\n    return _this170;\n  }\n\n  _createClass(Uu, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      var e = function (t, e, n) {\n        if (null !== t.startAt) throw new j(K.INVALID_ARGUMENT, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n        if (null !== t.endAt) throw new j(K.INVALID_ARGUMENT, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n        var s = new ae(e, n);\n        return function (t, e) {\n          if (null === ge(t)) {\n            // This is the first order by. It must match any inequality.\n            var _n30 = ye(t);\n\n            null !== _n30 && eh(t, _n30, e.field);\n          }\n        }(t, s), s;\n      }\n      /**\n      * Create a `Bound` from a query and a document.\n      *\n      * Note that the `Bound` will always include the key of the document\n      * and so only the provided document will compare equal to the returned\n      * position.\n      *\n      * Will throw if the document does not contain all fields of the order by\n      * of the query or if any of the fields in the order by are an uncommitted\n      * server timestamp.\n      */\n      (t._query, this.Gc, this.Jc);\n\n      return new Aa(t.firestore, t.converter, function (t, e) {\n        // TODO(dimond): validate that orderBy does not list the same key twice.\n        var n = t.explicitOrderBy.concat([e]);\n        return new fe(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n      }(t._query, e));\n    }\n  }]);\n\n  return Uu;\n}(Fu);\n/**\n * Creates a {@link QueryConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link Query}.\n */\n\n\nfunction qu(t) {\n  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"asc\";\n  var n = e,\n      s = Su(\"orderBy\", t);\n  return new Uu(s, n);\n}\n\nvar Ku = /*#__PURE__*/function (_Fu3) {\n  _inherits(Ku, _Fu3);\n\n  var _super43 = _createSuper(Ku);\n\n  function Ku(t, e, n) {\n    var _this171;\n\n    _classCallCheck(this, Ku);\n\n    _this171 = _super43.call(this), _this171.type = t, _this171.Yc = e, _this171.Xc = n;\n    return _this171;\n  }\n\n  _createClass(Ku, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      return new Aa(t.firestore, t.converter, Ie(t._query, this.Yc, this.Xc));\n    }\n  }]);\n\n  return Ku;\n}(Fu);\n/**\n * Creates a {@link QueryConstraint} that only returns the first matching documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */\n\n\nfunction ju(t) {\n  return ya(\"limit\", t), new Ku(\"limit\", t, \"F\"\n  /* First */\n  );\n}\n/**\n * Creates a {@link QueryConstraint} that only returns the last matching documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */\n\n\nfunction Qu(t) {\n  return ya(\"limitToLast\", t), new Ku(\"limitToLast\", t, \"L\"\n  /* Last */\n  );\n}\n\nvar Wu = /*#__PURE__*/function (_Fu4) {\n  _inherits(Wu, _Fu4);\n\n  var _super44 = _createSuper(Wu);\n\n  function Wu(t, e, n) {\n    var _this172;\n\n    _classCallCheck(this, Wu);\n\n    _this172 = _super44.call(this), _this172.type = t, _this172.Zc = e, _this172.ta = n;\n    return _this172;\n  }\n\n  _createClass(Wu, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      var e = Xu(t, this.type, this.Zc, this.ta);\n      return new Aa(t.firestore, t.converter, function (t, e) {\n        return new fe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n      }(t._query, e));\n    }\n  }]);\n\n  return Wu;\n}(Fu);\n\nfunction Gu() {\n  for (var _len10 = arguments.length, t = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n    t[_key10] = arguments[_key10];\n  }\n\n  return new Wu(\"startAt\", t,\n  /*before=*/\n  !0);\n}\n\nfunction zu() {\n  for (var _len11 = arguments.length, t = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n    t[_key11] = arguments[_key11];\n  }\n\n  return new Wu(\"startAfter\", t,\n  /*before=*/\n  !1);\n}\n\nvar Hu = /*#__PURE__*/function (_Fu5) {\n  _inherits(Hu, _Fu5);\n\n  var _super45 = _createSuper(Hu);\n\n  function Hu(t, e, n) {\n    var _this173;\n\n    _classCallCheck(this, Hu);\n\n    _this173 = _super45.call(this), _this173.type = t, _this173.Zc = e, _this173.ta = n;\n    return _this173;\n  }\n\n  _createClass(Hu, [{\n    key: \"_apply\",\n    value: function _apply(t) {\n      var e = Xu(t, this.type, this.Zc, this.ta);\n      return new Aa(t.firestore, t.converter, function (t, e) {\n        return new fe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n      }(t._query, e));\n    }\n  }]);\n\n  return Hu;\n}(Fu);\n\nfunction Ju() {\n  for (var _len12 = arguments.length, t = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n    t[_key12] = arguments[_key12];\n  }\n\n  return new Hu(\"endBefore\", t,\n  /*before=*/\n  !0);\n}\n\nfunction Yu() {\n  for (var _len13 = arguments.length, t = new Array(_len13), _key13 = 0; _key13 < _len13; _key13++) {\n    t[_key13] = arguments[_key13];\n  }\n\n  return new Hu(\"endAt\", t,\n  /*before=*/\n  !1);\n}\n/** Helper function to create a bound from a document or fields */\n\n\nfunction Xu(t, e, n, s) {\n  if (n[0] = getModularInstance(n[0]), n[0] instanceof vu) return function (t, e, n, s, i) {\n    if (!s) throw new j(K.NOT_FOUND, \"Can't use a DocumentSnapshot that doesn't exist for \".concat(n, \"().\"));\n    var r = []; // Because people expect to continue/end a query at the exact document\n    // provided, we need to use the implicit sort order rather than the explicit\n    // sort order, because it's guaranteed to contain the document key. That way\n    // the position becomes unambiguous and the query continues/ends exactly at\n    // the provided document. Without the key (by using the explicit sort\n    // orders), multiple documents could match the position, yielding duplicate\n    // results.\n\n    var _iterator57 = _createForOfIteratorHelper(Te(t)),\n        _step57;\n\n    try {\n      for (_iterator57.s(); !(_step57 = _iterator57.n()).done;) {\n        var _n31 = _step57.value;\n        if (_n31.field.isKeyField()) r.push(kt(e, s.key));else {\n          var _t81 = s.data.field(_n31.field);\n\n          if (Tt(_t81)) throw new j(K.INVALID_ARGUMENT, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + _n31.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n\n          if (null === _t81) {\n            var _t82 = _n31.field.canonicalString();\n\n            throw new j(K.INVALID_ARGUMENT, \"Invalid query. You are trying to start or end a query using a document for which the field '\".concat(_t82, \"' (used as the orderBy) does not exist.\"));\n          }\n\n          r.push(_t81);\n        }\n      }\n    } catch (err) {\n      _iterator57.e(err);\n    } finally {\n      _iterator57.f();\n    }\n\n    return new oe(r, i);\n  }\n  /**\n  * Converts a list of field values to a `Bound` for the given query.\n  */\n  (t._query, t.firestore._databaseId, e, n[0]._document, s);\n  {\n    var i = cu(t.firestore);\n    return function (t, e, n, s, i, r) {\n      // Use explicit order by's because it has to match the query the user made\n      var o = t.explicitOrderBy;\n      if (i.length > o.length) throw new j(K.INVALID_ARGUMENT, \"Too many arguments provided to \".concat(s, \"(). The number of arguments must be less than or equal to the number of orderBy() clauses\"));\n      var c = [];\n\n      for (var _r9 = 0; _r9 < i.length; _r9++) {\n        var a = i[_r9];\n\n        if (o[_r9].field.isKeyField()) {\n          if (\"string\" != typeof a) throw new j(K.INVALID_ARGUMENT, \"Invalid query. Expected a string for document ID in \".concat(s, \"(), but got a \").concat(typeof a));\n          if (!pe(t) && -1 !== a.indexOf(\"/\")) throw new j(K.INVALID_ARGUMENT, \"Invalid query. When querying a collection and ordering by FieldPath.documentId(), the value passed to \".concat(s, \"() must be a plain document ID, but '\").concat(a, \"' contains a slash.\"));\n\n          var _n32 = t.path.child(ht.fromString(a));\n\n          if (!Pt.isDocumentKey(_n32)) throw new j(K.INVALID_ARGUMENT, \"Invalid query. When querying a collection group and ordering by FieldPath.documentId(), the value passed to \".concat(s, \"() must result in a valid document path, but '\").concat(_n32, \"' is not because it contains an odd number of segments.\"));\n\n          var _i13 = new Pt(_n32);\n\n          c.push(kt(e, _i13));\n        } else {\n          var _t83 = gu(n, s, a);\n\n          c.push(_t83);\n        }\n      }\n\n      return new oe(c, r);\n    }\n    /**\n    * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n    * appropriate errors if the value is anything other than a `DocumentReference`\n    * or `string`, or if the string is malformed.\n    */\n    (t._query, t.firestore._databaseId, i, e, n, s);\n  }\n}\n\nfunction Zu(t, e, n) {\n  if (\"string\" == typeof (n = getModularInstance(n))) {\n    if (\"\" === n) throw new j(K.INVALID_ARGUMENT, \"Invalid query. When querying with FieldPath.documentId(), you must provide a valid document ID, but it was an empty string.\");\n    if (!pe(e) && -1 !== n.indexOf(\"/\")) throw new j(K.INVALID_ARGUMENT, \"Invalid query. When querying a collection by FieldPath.documentId(), you must provide a plain document ID, but '\".concat(n, \"' contains a '/' character.\"));\n    var s = e.path.child(ht.fromString(n));\n    if (!Pt.isDocumentKey(s)) throw new j(K.INVALID_ARGUMENT, \"Invalid query. When querying a collection group by FieldPath.documentId(), the value provided must result in a valid document path, but '\".concat(s, \"' is not because it has an odd number of segments (\").concat(s.length, \").\"));\n    return kt(t, new Pt(s));\n  }\n\n  if (n instanceof Ia) return kt(t, n._key);\n  throw new j(K.INVALID_ARGUMENT, \"Invalid query. When querying with FieldPath.documentId(), you must provide a valid string or a DocumentReference, but it was: \".concat(ma(n), \".\"));\n}\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */\n\n\nfunction th(t, e) {\n  if (!Array.isArray(t) || 0 === t.length) throw new j(K.INVALID_ARGUMENT, \"Invalid Query. A non-empty array is required for '\".concat(e.toString(), \"' filters.\"));\n  if (t.length > 10) throw new j(K.INVALID_ARGUMENT, \"Invalid Query. '\".concat(e.toString(), \"' filters support a maximum of 10 elements in the value array.\"));\n}\n\nfunction eh(t, e, n) {\n  if (!n.isEqual(e)) throw new j(K.INVALID_ARGUMENT, \"Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '\".concat(e.toString(), \"' and so you must also use '\").concat(e.toString(), \"' as your first argument to orderBy(), but your first orderBy() is on field '\").concat(n.toString(), \"' instead.\"));\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */\n\n\nvar nh = /*#__PURE__*/function () {\n  function nh() {\n    _classCallCheck(this, nh);\n  }\n\n  _createClass(nh, [{\n    key: \"convertValue\",\n    value: function convertValue(t) {\n      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"none\";\n\n      switch (vt(t)) {\n        case 0\n        /* NullValue */\n        :\n          return null;\n\n        case 1\n        /* BooleanValue */\n        :\n          return t.booleanValue;\n\n        case 2\n        /* NumberValue */\n        :\n          return yt(t.integerValue || t.doubleValue);\n\n        case 3\n        /* TimestampValue */\n        :\n          return this.convertTimestamp(t.timestampValue);\n\n        case 4\n        /* ServerTimestampValue */\n        :\n          return this.convertServerTimestamp(t, e);\n\n        case 5\n        /* StringValue */\n        :\n          return t.stringValue;\n\n        case 6\n        /* BlobValue */\n        :\n          return this.convertBytes(pt(t.bytesValue));\n\n        case 7\n        /* RefValue */\n        :\n          return this.convertReference(t.referenceValue);\n\n        case 8\n        /* GeoPointValue */\n        :\n          return this.convertGeoPoint(t.geoPointValue);\n\n        case 9\n        /* ArrayValue */\n        :\n          return this.convertArray(t.arrayValue, e);\n\n        case 10\n        /* ObjectValue */\n        :\n          return this.convertObject(t.mapValue, e);\n\n        default:\n          throw L();\n      }\n    }\n  }, {\n    key: \"convertObject\",\n    value: function convertObject(t, e) {\n      var _this174 = this;\n\n      var n = {};\n      return ct(t.fields, function (t, s) {\n        n[t] = _this174.convertValue(s, e);\n      }), n;\n    }\n  }, {\n    key: \"convertGeoPoint\",\n    value: function convertGeoPoint(t) {\n      return new tu(yt(t.latitude), yt(t.longitude));\n    }\n  }, {\n    key: \"convertArray\",\n    value: function convertArray(t, e) {\n      var _this175 = this;\n\n      return (t.values || []).map(function (t) {\n        return _this175.convertValue(t, e);\n      });\n    }\n  }, {\n    key: \"convertServerTimestamp\",\n    value: function convertServerTimestamp(t, e) {\n      switch (e) {\n        case \"previous\":\n          var n = Et(t);\n          return null == n ? null : this.convertValue(n, e);\n\n        case \"estimate\":\n          return this.convertTimestamp(It(t));\n\n        default:\n          return null;\n      }\n    }\n  }, {\n    key: \"convertTimestamp\",\n    value: function convertTimestamp(t) {\n      var e = gt(t);\n      return new it(e.seconds, e.nanos);\n    }\n  }, {\n    key: \"convertDocumentKey\",\n    value: function convertDocumentKey(t, e) {\n      var n = ht.fromString(t);\n      B(Ts(n));\n      var s = new ha(n.get(1), n.get(3)),\n          i = new Pt(n.popFirst(5));\n      return s.isEqual(e) || // TODO(b/64130202): Somehow support foreign references.\n      O(\"Document \".concat(i, \" contains a document reference within a different database (\").concat(s.projectId, \"/\").concat(s.database, \") which is not supported. It will be treated as a reference in the current database (\").concat(e.projectId, \"/\").concat(e.database, \") instead.\")), i;\n    }\n  }]);\n\n  return nh;\n}();\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\n\n\nfunction sh(t, e, n) {\n  var s; // Cast to `any` in order to satisfy the union type constraint on\n  // toFirestore().\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  return s = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, s;\n}\n\nvar ih = /*#__PURE__*/function (_nh) {\n  _inherits(ih, _nh);\n\n  var _super46 = _createSuper(ih);\n\n  function ih(t) {\n    var _this176;\n\n    _classCallCheck(this, ih);\n\n    _this176 = _super46.call(this), _this176.firestore = t;\n    return _this176;\n  }\n\n  _createClass(ih, [{\n    key: \"convertBytes\",\n    value: function convertBytes(t) {\n      return new Xa(t);\n    }\n  }, {\n    key: \"convertReference\",\n    value: function convertReference(t) {\n      var e = this.convertDocumentKey(t, this.firestore._databaseId);\n      return new Ia(this.firestore,\n      /* converter= */\n      null, e);\n    }\n  }]);\n\n  return ih;\n}(nh);\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */\n\n\nvar rh = /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function rh(t, e) {\n    _classCallCheck(this, rh);\n\n    this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, this._dataReader = cu(t);\n  }\n\n  _createClass(rh, [{\n    key: \"set\",\n    value: function set(t, e, n) {\n      this._verifyNotCommitted();\n\n      var s = oh(t, this._firestore),\n          i = sh(s.converter, e, n),\n          r = au(this._dataReader, \"WriteBatch.set\", s._key, i, null !== s.converter, n);\n      return this._mutations.push(r.toMutation(s._key, Ge.none())), this;\n    }\n  }, {\n    key: \"update\",\n    value: function update(t, e, n) {\n      this._verifyNotCommitted();\n\n      var i = oh(t, this._firestore); // For Compat types, we have to \"extract\" the underlying types before\n      // performing validation.\n\n      var r;\n\n      for (var _len14 = arguments.length, s = new Array(_len14 > 3 ? _len14 - 3 : 0), _key14 = 3; _key14 < _len14; _key14++) {\n        s[_key14 - 3] = arguments[_key14];\n      }\n\n      return r = \"string\" == typeof (e = getModularInstance(e)) || e instanceof Ja ? mu(this._dataReader, \"WriteBatch.update\", i._key, e, n, s) : _u(this._dataReader, \"WriteBatch.update\", i._key, e), this._mutations.push(r.toMutation(i._key, Ge.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(t) {\n      this._verifyNotCommitted();\n\n      var e = oh(t, this._firestore);\n      return this._mutations = this._mutations.concat(new cn(e._key, Ge.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */\n\n  }, {\n    key: \"commit\",\n    value: function commit() {\n      return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n  }, {\n    key: \"_verifyNotCommitted\",\n    value: function _verifyNotCommitted() {\n      if (this._committed) throw new j(K.FAILED_PRECONDITION, \"A write batch can no longer be used after commit() has been called.\");\n    }\n  }]);\n\n  return rh;\n}();\n\nfunction oh(t, e) {\n  if ((t = getModularInstance(t)).firestore !== e) throw new j(K.INVALID_ARGUMENT, \"Provided document reference is from a different Firestore instance.\");\n  return t;\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n// legacy SDK.\n\n/**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Reads the document referred to by this `DocumentReference`.\n *\n * Note: `getDoc()` attempts to provide up-to-date data when possible by waiting\n * for data from the server, but it may return cached data or fail if you are\n * offline and the server cannot be reached. To specify this behavior, invoke\n * {@link getDocFromCache} or {@link getDocFromServer}.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the\n * current document contents.\n */\n\n\nfunction ch(t) {\n  t = ga(t, Ia);\n  var e = ga(t.firestore, ka);\n  return na(Fa(e), t._key).then(function (n) {\n    return Eh(e, t, n);\n  });\n}\n\nvar ah = /*#__PURE__*/function (_nh2) {\n  _inherits(ah, _nh2);\n\n  var _super47 = _createSuper(ah);\n\n  function ah(t) {\n    var _this177;\n\n    _classCallCheck(this, ah);\n\n    _this177 = _super47.call(this), _this177.firestore = t;\n    return _this177;\n  }\n\n  _createClass(ah, [{\n    key: \"convertBytes\",\n    value: function convertBytes(t) {\n      return new Xa(t);\n    }\n  }, {\n    key: \"convertReference\",\n    value: function convertReference(t) {\n      var e = this.convertDocumentKey(t, this.firestore._databaseId);\n      return new Ia(this.firestore,\n      /* converter= */\n      null, e);\n    }\n  }]);\n\n  return ah;\n}(nh);\n/**\n * Reads the document referred to by this `DocumentReference` from cache.\n * Returns an error if the document is not currently cached.\n *\n * @returns A `Promise` resolved with a `DocumentSnapshot` containing the\n * current document contents.\n */\n\n\nfunction uh(t) {\n  t = ga(t, Ia);\n  var e = ga(t.firestore, ka),\n      n = Fa(e),\n      s = new ah(e);\n  return ea(n, t._key).then(function (n) {\n    return new Cu(e, s, t._key, n, new Du(null !== n && n.hasLocalMutations,\n    /* fromCache= */\n    !0), t.converter);\n  });\n}\n/**\n * Reads the document referred to by this `DocumentReference` from the server.\n * Returns an error if the network is not available.\n *\n * @returns A `Promise` resolved with a `DocumentSnapshot` containing the\n * current document contents.\n */\n\n\nfunction hh(t) {\n  t = ga(t, Ia);\n  var e = ga(t.firestore, ka);\n  return na(Fa(e), t._key, {\n    source: \"server\"\n  }).then(function (n) {\n    return Eh(e, t, n);\n  });\n}\n/**\n * Executes the query and returns the results as a `QuerySnapshot`.\n *\n * Note: `getDocs()` attempts to provide up-to-date data when possible by\n * waiting for data from the server, but it may return cached data or fail if\n * you are offline and the server cannot be reached. To specify this behavior,\n * invoke {@link getDocsFromCache} or {@link getDocsFromServer}.\n *\n * @returns A `Promise` that will be resolved with the results of the query.\n */\n\n\nfunction lh(t) {\n  t = ga(t, Aa);\n  var e = ga(t.firestore, ka),\n      n = Fa(e),\n      s = new ah(e);\n  return Ou(t._query), ia(n, t._query).then(function (n) {\n    return new xu(e, s, t, n);\n  });\n}\n/**\n * Executes the query and returns the results as a `QuerySnapshot` from cache.\n * Returns an error if the document is not currently cached.\n *\n * @returns A `Promise` that will be resolved with the results of the query.\n */\n\n\nfunction fh(t) {\n  t = ga(t, Aa);\n  var e = ga(t.firestore, ka),\n      n = Fa(e),\n      s = new ah(e);\n  return sa(n, t._query).then(function (n) {\n    return new xu(e, s, t, n);\n  });\n}\n/**\n * Executes the query and returns the results as a `QuerySnapshot` from the\n * server. Returns an error if the network is not available.\n *\n * @returns A `Promise` that will be resolved with the results of the query.\n */\n\n\nfunction dh(t) {\n  t = ga(t, Aa);\n  var e = ga(t.firestore, ka),\n      n = Fa(e),\n      s = new ah(e);\n  return ia(n, t._query, {\n    source: \"server\"\n  }).then(function (n) {\n    return new xu(e, s, t, n);\n  });\n}\n\nfunction wh(t, e, n) {\n  t = ga(t, Ia);\n  var s = ga(t.firestore, ka),\n      i = sh(t.converter, e, n);\n  return Th(s, [au(cu(s), \"setDoc\", t._key, i, null !== t.converter, n).toMutation(t._key, Ge.none())]);\n}\n\nfunction _h(t, e, n) {\n  t = ga(t, Ia);\n  var i = ga(t.firestore, ka),\n      r = cu(i);\n  var o;\n\n  for (var _len15 = arguments.length, s = new Array(_len15 > 3 ? _len15 - 3 : 0), _key15 = 3; _key15 < _len15; _key15++) {\n    s[_key15 - 3] = arguments[_key15];\n  }\n\n  o = \"string\" == typeof ( // For Compat types, we have to \"extract\" the underlying types before\n  // performing validation.\n  e = getModularInstance(e)) || e instanceof Ja ? mu(r, \"updateDoc\", t._key, e, n, s) : _u(r, \"updateDoc\", t._key, e);\n  return Th(i, [o.toMutation(t._key, Ge.exists(!0))]);\n}\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * @param reference - A reference to the document to delete.\n * @returns A Promise resolved once the document has been successfully\n * deleted from the backend (note that it won't resolve while you're offline).\n */\n\n\nfunction mh(t) {\n  return Th(ga(t.firestore, ka), [new cn(t._key, Ge.none())]);\n}\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend (Note that it\n * won't resolve while you're offline).\n */\n\n\nfunction gh(t, e) {\n  var n = ga(t.firestore, ka),\n      s = va(t),\n      i = sh(t.converter, e);\n  return Th(n, [au(cu(t.firestore), \"addDoc\", s._key, i, null !== t.converter, {}).toMutation(s._key, Ge.exists(!1))]).then(function () {\n    return s;\n  });\n}\n\nfunction yh(t) {\n  for (var _len16 = arguments.length, e = new Array(_len16 > 1 ? _len16 - 1 : 0), _key16 = 1; _key16 < _len16; _key16++) {\n    e[_key16 - 1] = arguments[_key16];\n  }\n\n  var n, s, i;\n  t = getModularInstance(t);\n  var r = {\n    includeMetadataChanges: !1\n  },\n      o = 0;\n  \"object\" != typeof e[o] || Ca(e[o]) || (r = e[o], o++);\n  var c = {\n    includeMetadataChanges: r.includeMetadataChanges\n  };\n\n  if (Ca(e[o])) {\n    var _t84 = e[o];\n    e[o] = null === (n = _t84.next) || void 0 === n ? void 0 : n.bind(_t84), e[o + 1] = null === (s = _t84.error) || void 0 === s ? void 0 : s.bind(_t84), e[o + 2] = null === (i = _t84.complete) || void 0 === i ? void 0 : i.bind(_t84);\n  }\n\n  var a, u, h;\n  if (t instanceof Ia) u = ga(t.firestore, ka), h = we(t._key.path), a = {\n    next: function next(n) {\n      e[o] && e[o](Eh(u, t, n));\n    },\n    error: e[o + 1],\n    complete: e[o + 2]\n  };else {\n    var _n33 = ga(t, Aa);\n\n    u = ga(_n33.firestore, ka), h = _n33._query;\n\n    var _s26 = new ah(u);\n\n    a = {\n      next: function next(t) {\n        e[o] && e[o](new xu(u, _s26, _n33, t));\n      },\n      error: e[o + 1],\n      complete: e[o + 2]\n    }, Ou(t._query);\n  }\n  return function (t, e, n, s) {\n    var i = new Lc(s),\n        r = new Qo(e, i, n);\n    return t.asyncQueue.enqueueAndForget( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee67() {\n      return _regeneratorRuntime.wrap(function _callee67$(_context67) {\n        while (1) {\n          switch (_context67.prev = _context67.next) {\n            case 0:\n              _context67.t0 = Bo;\n              _context67.next = 3;\n              return Xc(t);\n\n            case 3:\n              _context67.t1 = _context67.sent;\n              _context67.t2 = r;\n              return _context67.abrupt(\"return\", (0, _context67.t0)(_context67.t1, _context67.t2));\n\n            case 6:\n            case \"end\":\n              return _context67.stop();\n          }\n        }\n      }, _callee67);\n    }))), function () {\n      i.ec(), t.asyncQueue.enqueueAndForget( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee68() {\n        return _regeneratorRuntime.wrap(function _callee68$(_context68) {\n          while (1) {\n            switch (_context68.prev = _context68.next) {\n              case 0:\n                _context68.t0 = Uo;\n                _context68.next = 3;\n                return Xc(t);\n\n              case 3:\n                _context68.t1 = _context68.sent;\n                _context68.t2 = r;\n                return _context68.abrupt(\"return\", (0, _context68.t0)(_context68.t1, _context68.t2));\n\n              case 6:\n              case \"end\":\n                return _context68.stop();\n            }\n          }\n        }, _callee68);\n      })));\n    };\n  }(Fa(u), h, c, a);\n}\n\nfunction ph(t, e) {\n  return ra(Fa(t = ga(t, ka)), Ca(e) ? e : {\n    next: e\n  });\n}\n/**\n * Locally writes `mutations` on the async queue.\n * @internal\n */\n\n\nfunction Th(t, e) {\n  return function (t, e) {\n    var n = new Q();\n    return t.asyncQueue.enqueueAndForget( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee69() {\n      return _regeneratorRuntime.wrap(function _callee69$(_context69) {\n        while (1) {\n          switch (_context69.prev = _context69.next) {\n            case 0:\n              _context69.t0 = rc;\n              _context69.next = 3;\n              return Yc(t);\n\n            case 3:\n              _context69.t1 = _context69.sent;\n              _context69.t2 = e;\n              _context69.t3 = n;\n              return _context69.abrupt(\"return\", (0, _context69.t0)(_context69.t1, _context69.t2, _context69.t3));\n\n            case 7:\n            case \"end\":\n              return _context69.stop();\n          }\n        }\n      }, _callee69);\n    }))), n.promise;\n  }(Fa(t), e);\n}\n/**\n * Converts a {@link ViewSnapshot} that contains the single document specified by `ref`\n * to a {@link DocumentSnapshot}.\n */\n\n\nfunction Eh(t, e, n) {\n  var s = n.docs.get(e._key),\n      i = new ah(t);\n  return new Cu(t, i, e._key, s, new Du(n.hasPendingWrites, n.fromCache), e.converter);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */\n\n\nvar Ih = /*#__PURE__*/function (_ref57) {\n  _inherits(Ih, _ref57);\n\n  var _super48 = _createSuper(Ih);\n\n  // This class implements the same logic as the Transaction API in the Lite SDK\n  // but is subclassed in order to return its own DocumentSnapshot types.\n\n  /** @hideconstructor */\n  function Ih(t, e) {\n    var _this178;\n\n    _classCallCheck(this, Ih);\n\n    _this178 = _super48.call(this, t, e), _this178._firestore = t;\n    return _this178;\n  }\n  /**\n   * Reads the document referenced by the provided {@link DocumentReference}.\n   *\n   * @param documentRef - A reference to the document to be read.\n   * @returns A `DocumentSnapshot` with the read data.\n   */\n\n\n  _createClass(Ih, [{\n    key: \"get\",\n    value: function get(t) {\n      var _this179 = this;\n\n      var e = oh(t, this._firestore),\n          n = new ah(this._firestore);\n      return _get(_getPrototypeOf(Ih.prototype), \"get\", this).call(this, t).then(function (t) {\n        return new Cu(_this179._firestore, n, e._key, t._document, new Du(\n        /* hasPendingWrites= */\n        !1,\n        /* fromCache= */\n        !1), e.converter);\n      });\n    }\n  }]);\n\n  return Ih;\n}( /*#__PURE__*/function () {\n  /** @hideconstructor */\n  function _class5(t, e) {\n    _classCallCheck(this, _class5);\n\n    this._firestore = t, this._transaction = e, this._dataReader = cu(t);\n  }\n  /**\n   * Reads the document referenced by the provided {@link DocumentReference}.\n   *\n   * @param documentRef - A reference to the document to be read.\n   * @returns A `DocumentSnapshot` with the read data.\n   */\n\n\n  _createClass(_class5, [{\n    key: \"get\",\n    value:\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */\n    function get(t) {\n      var _this180 = this;\n\n      var e = oh(t, this._firestore),\n          n = new ih(this._firestore);\n      return this._transaction.lookup([e._key]).then(function (t) {\n        if (!t || 1 !== t.length) return L();\n        var s = t[0];\n        if (s.isFoundDocument()) return new vu(_this180._firestore, n, s.key, s, e.converter);\n        if (s.isNoDocument()) return new vu(_this180._firestore, n, e._key, null, e.converter);\n        throw L();\n      });\n    }\n  }, {\n    key: \"set\",\n    value: function set(t, e, n) {\n      var s = oh(t, this._firestore),\n          i = sh(s.converter, e, n),\n          r = au(this._dataReader, \"Transaction.set\", s._key, i, null !== s.converter, n);\n      return this._transaction.set(s._key, r), this;\n    }\n  }, {\n    key: \"update\",\n    value: function update(t, e, n) {\n      var i = oh(t, this._firestore); // For Compat types, we have to \"extract\" the underlying types before\n      // performing validation.\n\n      // For Compat types, we have to \"extract\" the underlying types before\n      // performing validation.\n      var r;\n\n      for (var _len17 = arguments.length, s = new Array(_len17 > 3 ? _len17 - 3 : 0), _key17 = 3; _key17 < _len17; _key17++) {\n        s[_key17 - 3] = arguments[_key17];\n      }\n\n      return r = \"string\" == typeof (e = getModularInstance(e)) || e instanceof Ja ? mu(this._dataReader, \"Transaction.update\", i._key, e, n, s) : _u(this._dataReader, \"Transaction.update\", i._key, e), this._transaction.update(i._key, r), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */\n\n  }, {\n    key: \"delete\",\n    value:\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */\n    function _delete(t) {\n      var e = oh(t, this._firestore);\n      return this._transaction.delete(e._key), this;\n    }\n  }]);\n\n  return _class5;\n}());\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */\n\n\nfunction Ah(t, e) {\n  return oa(Fa(t = ga(t, ka)), function (n) {\n    return e(new Ih(t, n));\n  });\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */\n\n\nfunction Rh() {\n  return new uu(\"deleteField\");\n}\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */\n\n\nfunction bh() {\n  return new lu(\"serverTimestamp\");\n}\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */\n\n\nfunction Ph() {\n  for (var _len18 = arguments.length, t = new Array(_len18), _key18 = 0; _key18 < _len18; _key18++) {\n    t[_key18] = arguments[_key18];\n  }\n\n  // NOTE: We don't actually parse the data until it's used in set() or\n  // update() since we'd need the Firestore instance to do this.\n  return new fu(\"arrayUnion\", t);\n}\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */\n\n\nfunction vh() {\n  for (var _len19 = arguments.length, t = new Array(_len19), _key19 = 0; _key19 < _len19; _key19++) {\n    t[_key19] = arguments[_key19];\n  }\n\n  // NOTE: We don't actually parse the data until it's used in set() or\n  // update() since we'd need the Firestore instance to do this.\n  return new du(\"arrayRemove\", t);\n}\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */\n\n\nfunction Vh(t) {\n  return new wu(\"increment\", t);\n}\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single {@link WriteBatch}\n * is 500.\n *\n * Unlike transactions, write batches are persisted offline and therefore are\n * preferable when you don't need to condition your writes on read data.\n *\n * @returns A {@link WriteBatch} that can be used to atomically execute multiple\n * writes.\n */\n\n\nfunction Sh(t) {\n  return Fa(t = ga(t, ka)), new rh(t, function (e) {\n    return Th(t, e);\n  });\n}\n/**\n * Cloud Firestore\n *\n * @packageDocumentation\n */\n\n\n!function (t) {\n  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !0;\n  !function (t) {\n    C = t;\n  }(SDK_VERSION), _registerComponent(new Component(\"firestore\", function (t, _ref58) {\n    var n = _ref58.options;\n    var s = t.getProvider(\"app\").getImmediate(),\n        i = new ka(s, new H(t.getProvider(\"auth-internal\")));\n    return n = Object.assign({\n      useFetchStreams: e\n    }, n), i._setSettings(n), i;\n  }, \"PUBLIC\"\n  /* PUBLIC */\n  )), registerVersion(S, \"3.3.0\", t), // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(S, \"3.3.0\", \"esm2017\");\n}();\nexport { nh as AbstractUserDataWriter, Xa as Bytes, xa as CACHE_SIZE_UNLIMITED, Ra as CollectionReference, Ia as DocumentReference, Cu as DocumentSnapshot, Ja as FieldPath, Za as FieldValue, ka as Firestore, j as FirestoreError, tu as GeoPoint, Na as LoadBundleTask, Aa as Query, Fu as QueryConstraint, Nu as QueryDocumentSnapshot, xu as QuerySnapshot, Du as SnapshotMetadata, it as Timestamp, Ih as Transaction, rh as WriteBatch, ha as _DatabaseId, Pt as _DocumentKey, G as _EmptyCredentialsProvider, ft as _FieldPath, ga as _cast, U as _debugAssert, wt as _isBase64Available, F as _logWarn, da as _validateIsNotUsedTogether, gh as addDoc, vh as arrayRemove, Ph as arrayUnion, qa as clearIndexedDbPersistence, ba as collection, Pa as collectionGroup, Ea as connectFirestoreEmulator, mh as deleteDoc, Rh as deleteField, Qa as disableNetwork, va as doc, Ya as documentId, La as enableIndexedDbPersistence, Ba as enableMultiTabIndexedDbPersistence, ja as enableNetwork, Yu as endAt, Ju as endBefore, Fa as ensureFirestoreConfigured, Th as executeWrite, ch as getDoc, uh as getDocFromCache, hh as getDocFromServer, lh as getDocs, fh as getDocsFromCache, dh as getDocsFromServer, Oa as getFirestore, Vh as increment, $a as initializeFirestore, ju as limit, Qu as limitToLast, Ga as loadBundle, za as namedQuery, yh as onSnapshot, ph as onSnapshotsInSync, qu as orderBy, Mu as query, Sa as queryEqual, Va as refEqual, Ah as runTransaction, bh as serverTimestamp, wh as setDoc, k as setLogLevel, $u as snapshotEqual, zu as startAfter, Gu as startAt, Wa as terminate, _h as updateDoc, Ka as waitForPendingWrites, Bu as where, Sh as writeBatch };","map":{"version":3,"sources":["/home/juano/reactProjects/qr_guillo/node_modules/@firebase/firestore/dist/index.esm2017.js"],"names":["_registerComponent","registerVersion","_getProvider","getApp","_removeServiceInstance","SDK_VERSION","Component","Logger","LogLevel","createMockUserToken","getModularInstance","deepEqual","getUA","isIndexedDBAvailable","isSafari","isMobileCordova","isReactNative","isElectron","isIE","isUWP","isBrowserExtension","XhrIo","EventType","ErrorCode","createWebChannelTransport","getStatEventTarget","FetchXmlHttpFactory","WebChannel","Event","Stat","S","D","t","uid","isAuthenticated","UNAUTHENTICATED","GOOGLE_CREDENTIALS","FIRST_PARTY","MOCK_USER","C","N","x","logLevel","k","setLogLevel","$","DEBUG","e","n","map","M","debug","O","ERROR","error","F","WARN","warn","JSON","stringify","L","Error","B","U","q","K","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","j","code","message","name","toString","Q","promise","Promise","resolve","reject","W","user","type","authHeaders","Authorization","G","enqueueRetryable","z","token","changeListener","H","currentUser","i","forceRefresh","auth","s","o","u","r","addAuthTokenListener","onInit","setTimeout","getImmediate","optional","getToken","then","accessToken","removeAuthTokenListener","getUid","J","h","l","m","getAuthHeaderValueForFirstParty","Y","X","previousValue","sequenceNumberHandler","g","p","writeSequenceNumber","Math","max","Z","self","crypto","msCrypto","Uint8Array","getRandomValues","floor","random","T","tt","length","charAt","et","nt","every","st","it","seconds","nanoseconds","Date","toMillis","String","padStart","fromMillis","now","getTime","rt","timestamp","_compareTo","isEqual","ot","Object","prototype","hasOwnProperty","call","ct","at","ut","segments","offset","len","comparator","slice","limit","forEach","push","construct","get","min","ht","toArray","join","canonicalString","indexOf","split","filter","lt","ft","replace","isValidIdentifier","test","dt","fields","sort","isPrefixOf","wt","atob","_t","binaryString","btoa","charCodeAt","fromCharCode","EMPTY_BYTE_STRING","mt","RegExp","gt","exec","substr","Number","nanos","yt","pt","fromBase64String","fromUint8Array","Tt","mapValue","__type__","stringValue","Et","__previous_value__","It","__local_write_time__","timestampValue","At","Rt","bt","isInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","Pt","path","fromString","popFirst","vt","Vt","booleanValue","bytesValue","referenceValue","geoPointValue","latitude","longitude","integerValue","doubleValue","isNaN","arrayValue","values","St","find","Dt","Ct","compareTo","keys","Nt","xt","toBase64","fromName","kt","projectId","database","$t","Ot","Ft","Mt","Lt","Bt","assign","Ut","value","isEmpty","lastSegment","getFieldsMap","popLast","emptyPath","isImmediateParentOf","applyChanges","field","qt","child","Kt","key","documentType","version","data","documentState","empty","hasLocalMutations","hasCommittedMutations","clone","jt","collectionGroup","orderBy","filters","startAt","endAt","A","Qt","Wt","Yt","dir","ce","Gt","op","zt","ue","le","Ht","isDocumentKey","Jt","P","isKeyField","R","Xt","ne","se","ie","re","Zt","te","ee","some","nullValue","oe","position","before","ae","he","fe","c","explicitOrderBy","limitType","V","de","we","_e","me","ge","ye","v","pe","Te","keyField","Ee","Ie","Ae","Re","be","Pe","isFoundDocument","hasCollectionId","matches","ve","Ve","Se","De","Ce","Ne","_","xe","Oe","Fe","Me","Le","Be","$e","qe","ke","Ue","elements","Ke","je","transform","Qe","We","transformResults","Ge","updateTime","exists","ze","He","Je","en","rn","fieldTransforms","setAll","convertToFoundDocument","setHasCommittedMutations","nn","precondition","convertToUnknownDocument","sn","convertToNoDocument","Ye","on","tn","setHasLocalMutations","Xe","set","Ze","fieldMask","Map","cn","an","un","count","hn","ln","fn","dn","wn","root","mn","EMPTY","insert","copy","BLACK","remove","left","right","size","minKey","maxKey","inorderTraversal","reverseTraversal","_n","isReverse","nodeStack","pop","color","RED","fixUp","isRed","moveRedLeft","removeMin","rotateRight","moveRedRight","rotateLeft","colorFlip","check","pow","gn","getIteratorFrom","hasNext","getNext","getIterator","yn","has","add","iter","pn","Tn","En","In","An","Rn","bn","Pn","vn","Vn","Sn","snapshotVersion","targetChanges","targetMismatches","documentUpdates","resolvedLimboDocuments","Dn","createSynthesizedTargetChangeForCurrentChange","resumeToken","current","addedDocuments","modifiedDocuments","removedDocuments","Cn","removedTargetIds","Nn","targetId","xn","state","targetIds","cause","kn","Fn","approximateByteSize","$n","On","forEachTarget","removeTarget","target","newNoDocument","forEachWhile","purpose","delete","getRemoteKeysForTarget","Mn","asc","desc","Ln","in","Bn","databaseId","Un","toISOString","qn","toUint8Array","Kn","toTimestamp","jn","fromTimestamp","Qn","Wn","Ts","Gn","zn","Xn","Hn","Jn","Yn","Zn","ts","newFoundDocument","es","found","missing","readTime","ns","targetChange","targetChangeType","documentChange","document","a","documentDelete","documentRemove","ss","update","updateMask","ps","verify","updateTransforms","fieldPath","setToServerValue","appendMissingElements","removeAllFromArray","increment","isNone","currentDocument","is","none","fromServerFormat","fieldPaths","rs","os","documents","cs","structuredQuery","parent","from","collectionId","allDescendants","unaryFilter","_s","fieldFilter","ws","compositeFilter","where","direction","ds","ls","as","hs","ms","fs","us","ys","gs","reduce","concat","create","NaN","Es","As","Is","Rs","substring","bs","Ps","ownerId","allowTabSynchronization","leaseTimestampMs","store","vs","userId","lastAcknowledgedBatchId","lastStreamToken","keyPath","Vs","batchId","localWriteTimeMs","baseMutations","mutations","userMutationsIndex","userMutationsKeyPath","Ss","PLACEHOLDER","Ds","Cs","Ns","unknownDocument","noDocument","parentPath","readTimeIndex","readTimeIndexPath","collectionReadTimeIndex","collectionReadTimeIndexPath","xs","byteSize","ks","canonicalId","lastListenSequenceNumber","lastLimboFreeSnapshotVersion","query","queryTargetsIndexName","queryTargetsKeyPath","$s","sequenceNumber","documentTargetsIndex","documentTargetsKeyPath","Os","highestTargetId","highestListenSequenceNumber","lastRemoteSnapshotVersion","targetCount","Fs","Ms","clientId","updateTimeMs","networkEnabled","inForeground","Ls","bundleId","createTime","Bs","bundledQuery","Us","qs","Ks","onCommittedListeners","js","nextCallback","catchCallback","result","isDone","callbackAttached","next","wrapFailure","wrapSuccess","wrapUserFunction","waitFor","Qs","action","transaction","aborted","oncomplete","onabort","zs","onerror","Zs","abort","objectStore","Js","Ws","db","indexedDB","open","onsuccess","onblocked","onupgradeneeded","oldVersion","onversionchange","catch","toPromise","close","Ys","window","deleteDatabase","process","env","match","Gs","Hs","put","cursor","options","primaryKey","continue","done","index","range","reverse","openKeyCursor","openCursor","Xs","ti","currentSequenceNumber","ei","ni","localWriteTime","mutationResults","applyToLocalView","isValidDocument","si","batch","commitVersion","docVersions","ii","ri","oi","fromSegments","li","newUnknownDocument","ci","ai","isNoDocument","hi","isUnknownDocument","ui","fi","splice","di","wi","_i","mi","gi","id","yi","pi","Ti","getEntries","Ei","addOnCommittedListener","Ii","IDBKeyRange","bound","Ai","didRun","sequenceNumbersCollected","targetsRemoved","documentsRemoved","Ri","cacheSizeCollectionThreshold","percentileToCollect","maximumSequenceNumbersToCollect","DEFAULT_COLLECTION_PERCENTILE","DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT","bi","only","Pi","DEFAULT","DISABLED","vi","referenceDelegate","NEGATIVE_INFINITY","POSITIVE_INFINITY","Si","Di","addToCollectionParentIndex","lookupMutationBatch","lowerBound","upperBound","prefixForPath","markPotentiallyOrphaned","checkEmpty","prefixForUser","Vi","Ci","Ni","xi","removeMatchingKeysForTargetId","ki","removeTargetData","$i","Oi","addReference","removeReference","Fi","Mi","Li","buffer","last","Bi","garbageCollector","asyncQueue","params","cancel","enqueueAfterDelay","collectGarbage","Ui","maxValue","removeTargets","removeOrphanedDocuments","getCacheSize","calculateTargetCount","nthSequenceNumber","qi","getTargetCache","getTargetCount","Ki","getRemoteDocumentCache","newChangeBuffer","getEntry","removeEntry","apply","withSequenceNumber","updateTargetData","getSize","ji","mapKeyFn","equalsFn","inner","Qi","changes","changesApplied","assertNotApplied","newInvalidDocument","getFromCache","getAllFromCache","Wi","Hi","Ji","getMetadata","first","Gi","trackRemovals","zi","getReadTime","addEntry","updateMetadata","Yi","createObjectStore","autoIncrement","createIndex","unique","Xi","deleteObjectStore","objectStoreNames","contains","Zi","tr","persistenceKey","isPrimary","localStorage","runTransaction","getHighestSequenceNumber","started","newVersion","enqueueAndForget","nr","er","removeItem","raiseOnCommittedEvent","addEventListener","visibilityState","removeEventListener","navigator","appVersion","enterRestrictedMode","shutdown","getItem","setItem","sr","isDefaultDatabase","ir","progress","rr","getAllMutationBatchesAffectingDocumentKey","getAllMutationBatchesAffectingDocumentKeys","getCollectionParents","getDocumentsMatchingQuery","getAllMutationBatchesAffectingQuery","or","fromCache","docChanges","doc","cr","hasPendingWrites","ar","persistence","getMutationQueue","getIndexManager","getBundleCache","collect","ur","hr","getAllMutationBatches","removedBatchIds","addedBatchIds","lr","applyToRemoteDocument","removeMutationBatch","performConsistencyCheck","fr","getLastRemoteSnapshotVersion","dr","removeMatchingKeys","addMatchingKeys","withResumeToken","toMicroseconds","updateLimboDocument","wr","setTargetsMetadata","_r","getNextMutationBatchAfterBatchId","mr","getTargetData","allocateTargetId","addTargetData","gr","yr","getMatchingKeysForTargetId","pr","Tr","Er","Ir","metadata","Ar","saveNamedQuery","Rr","br","Pr","forEachInRange","firstAfterOrEqual","vr","shift","Vr","docs","Sr","Dr","containsKey","Cr","toKey","Nr","xr","Set","fromPath","kr","$r","Or","Fr","parse","Mr","Lr","activeTargetIds","Array","Br","onlineState","Ur","qr","syncEngine","onlineStateHandler","bind","storage","isActiveQueryTarget","addPendingMutation","storageArea","newValue","unionWith","Kr","jr","Qr","Wr","BatchGetDocuments","Commit","RunQuery","Gr","zr","forceLongPolling","autoDetectLongPolling","useFetchStreams","listenOnce","COMPLETE","getLastErrorCode","NO_ERROR","getResponseJson","TIMEOUT","HTTP_ERROR","getStatus","getResponseText","status","toLowerCase","send","httpSessionIdParam","initMessageHeaders","messageUrlParams","sendRawJson","supportsCrossDomainXhr","internalChannelParams","forwardChannelRequestTimeoutMs","detectBufferingProxy","xmlHttpFactory","httpHeadersOverwriteParam","createWebChannel","listen","OPEN","CLOSE","MESSAGE","STAT_EVENT","stat","PROXY","NOPROXY","databaseInfo","ssl","host","appId","Hr","Jr","Yr","Xr","timerId","reset","skipDelay","Zr","credentialsProvider","listener","stream","invalidateToken","onMessage","start","to","addTarget","labels","eo","streamToken","writeResults","commitTime","writes","no","credentials","so","io","localStore","datastore","remoteSyncer","wo","oo","ro","co","fo","lo","Co","uo","ao","ho","_o","mo","go","yo","rejectListen","po","applyRemoteEvent","To","Eo","No","Io","Ao","Ro","bo","Po","vo","Vo","applySuccessfulWrite","So","rejectFailedWrite","Do","stop","xo","targetTimeMs","removalCallback","deferred","timerHandle","handleDelayElapsed","clearTimeout","ko","$o","keyedMap","sortedSet","Oo","Fo","oldDocs","mutatedKeys","syncStateChanged","excludesMetadataChanges","emptySet","Mo","listeners","Lo","queries","Bo","onListen","onError","jo","Uo","onUnlisten","qo","Ko","Qo","includeMetadataChanges","fromInitialDocuments","Wo","payload","byteLength","Go","zo","Ho","bytesLoaded","documentsLoaded","namedQuery","documentMetadata","taskState","totalDocuments","totalBytes","Jo","Yo","Xo","f","d","track","snapshot","Zo","view","tc","ec","remoteStore","eventManager","sharedClientState","maxConcurrentLimboResolutions","nc","Cc","addLocalQueryTarget","sc","isPrimaryClient","mc","ic","removeLocalQueryTarget","clearQueryState","wc","rc","Nc","addMutationBatch","applyToLocalDocumentSet","pc","oc","cc","setOnlineState","ac","updateQueryState","yc","uc","dc","fc","updateMutationState","hc","lc","getHighestUnacknowledgedBatchId","_c","gc","all","withLastLimboFreeSnapshotVersion","Tc","clear","handleUserChange","Ec","Ic","Ac","Rc","bc","getAllActiveQueryTargets","Pc","isLocalQueryTarget","vc","Vc","Sc","createSynthesizedRemoteEventForCurrentChange","Dc","xc","getBundleMetadata","_completeWith","_updateProgress","complete","saveBundleMetadata","_failWith","notifyBundleLoaded","kc","synchronizeTabs","gcScheduler","initialUser","$c","cacheSizeBytes","forceOwnership","initialize","withCacheSize","Oc","Fc","createDatastore","createRemoteStore","createEventManager","createSyncEngine","handleCredentialChange","Mc","read","releaseLock","closed","Lc","observer","muted","console","Bc","TextDecoder","decode","findIndex","Uc","readVersions","committed","lastWriteError","writtenDocs","ensureCommitNotCalled","recordVersion","write","toMutation","preconditionForUpdate","qc","updateFunction","commit","Kc","I","credentialListener","isShuttingDown","enqueueAndForgetEvenWhileRestricted","onlineComponents","terminate","offlineComponents","jc","verifyOperationInProgress","getConfiguration","setCredentialChangeListener","setDatabaseDeletedListener","Qc","Wc","Gc","zc","Hc","Jc","Yc","Xc","Zc","enqueue","setNetworkEnabled","ta","ea","na","source","sa","ia","ra","oa","run","ca","TextEncoder","encode","ArrayBuffer","ReadableStream","getReader","aa","getNamedQuery","ua","ha","la","fa","da","wa","_a","ma","constructor","ga","_delegate","ya","pa","ignoreUndefinedProperties","experimentalForceLongPolling","experimentalAutoDetectLongPolling","Ta","_credentials","_persistenceKey","_settings","_settingsFrozen","_databaseId","_app","_terminateTask","client","sessionIndex","iamToken","_terminate","app","settings","Ea","_getSettings","_setSettings","mockUserToken","sub","user_id","Ia","converter","_key","firestore","Ra","Aa","_query","_path","ba","Pa","va","arguments","Va","Sa","Da","stack","includes","createAndSchedule","Ca","Na","_progressObserver","_taskCompletionResolver","_lastProgress","xa","ka","_queue","_firestoreClient","Ma","$a","isInitialized","getOptions","Oa","Fa","verifyNotTerminated","_freezeSettings","La","Ha","Ua","Ba","DOMException","qa","_initialized","_terminated","Ka","ja","Qa","Wa","_delete","Ga","za","Ja","_internalPath","Ya","Xa","_byteString","Za","_methodName","tu","isFinite","_lat","_long","eu","nu","su","iu","ru","bu","methodName","ou","cu","au","merge","mergeFields","Eu","pu","Iu","Pu","covers","uu","hu","lu","fu","yu","du","wu","_u","Ru","mu","gu","Tu","_toFieldTransform","fromDate","getPrototypeOf","Au","search","vu","_firestore","_userDataWriter","_document","_converter","Vu","fromFirestore","convertValue","Su","Du","Cu","_firestoreImpl","Nu","serverTimestamps","xu","_snapshot","_cachedChanges","_cachedChangesIncludeMetadataChanges","oldIndex","newIndex","ku","$u","Ou","Fu","Mu","_apply","Lu","th","Zu","eh","Bu","Uu","qu","Ku","ju","Qu","Wu","Xu","Gu","zu","Hu","Ju","Yu","isArray","nh","convertTimestamp","convertServerTimestamp","convertBytes","convertReference","convertGeoPoint","convertArray","convertObject","sh","toFirestore","ih","convertDocumentKey","rh","_commitHandler","_mutations","_committed","_dataReader","_verifyNotCommitted","oh","ch","Eh","ah","uh","hh","lh","fh","dh","wh","Th","_h","mh","gh","yh","ph","Ih","_transaction","lookup","Ah","Rh","bh","Ph","vh","Vh","Sh","getProvider","AbstractUserDataWriter","Bytes","CACHE_SIZE_UNLIMITED","CollectionReference","DocumentReference","DocumentSnapshot","FieldPath","FieldValue","Firestore","FirestoreError","GeoPoint","LoadBundleTask","Query","QueryConstraint","QueryDocumentSnapshot","QuerySnapshot","SnapshotMetadata","Timestamp","Transaction","WriteBatch","_DatabaseId","_DocumentKey","_EmptyCredentialsProvider","_FieldPath","_cast","_debugAssert","_isBase64Available","_logWarn","_validateIsNotUsedTogether","addDoc","arrayRemove","arrayUnion","clearIndexedDbPersistence","collection","connectFirestoreEmulator","deleteDoc","deleteField","disableNetwork","documentId","enableIndexedDbPersistence","enableMultiTabIndexedDbPersistence","enableNetwork","endBefore","ensureFirestoreConfigured","executeWrite","getDoc","getDocFromCache","getDocFromServer","getDocs","getDocsFromCache","getDocsFromServer","getFirestore","initializeFirestore","limitToLast","loadBundle","onSnapshot","onSnapshotsInSync","queryEqual","refEqual","serverTimestamp","setDoc","snapshotEqual","startAfter","updateDoc","waitForPendingWrites","writeBatch"],"mappings":"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CiB,IAAF,OAAAjB,CAAC,wBAAoBD,CAApB,gBAA2BP,CAA3B,6BAAmCgB,CAAnC,GAAD;AACH;AACJ;AAED;AACA;AACA;;;AAAI,SAASE,CAAT,CAAWlB,CAAX,EAAc;AACd,MAAI,YAAY,OAAOA,CAAvB,EAA0B,OAAOA,CAAP;;AAC1B,MAAI;AACA,WAAOe,CAAC,GAAGf,CAAJ,EAAO0B,IAAI,CAACC,SAAL,CAAeZ,CAAf,CAAd;AACH,GAFD,CAEE,OAAOA,CAAP,EAAU;AACR;AACA,WAAOf,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI;;;AACA,MAAIe,CAAJ;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAI,SAASa,CAAT,GAAmC;AAAA,MAAxB5B,CAAwB,uEAApB,kBAAoB;AACnC;AACA;AACA,MAAMe,CAAC,GAAG,qBAAcR,CAAd,qCAAiDP,CAA3D,CAHmC,CAInC;AACA;AACA;;AACA,QAAMoB,CAAC,CAACL,CAAD,CAAD,EAAM,IAAIc,KAAJ,CAAUd,CAAV,CAAZ;AACH;AAED;AACA;AACA;AACA;AACA;AACA;;;AAAI,SAASe,CAAT,CAAW9B,CAAX,EAAce,CAAd,EAAiB;AACjBf,EAAAA,CAAC,IAAI4B,CAAC,EAAN;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAI,SAASG,CAAT,CAAW/B,CAAX,EAAce,CAAd,EAAiB;AACjBf,EAAAA,CAAC,IAAI4B,CAAC,EAAN;AACH;AAED;AACA;AACA;AACA;;;AAAI,SAASI,CAAT,CAAWhC,CAAX,EACJ;AACAe,CAFI,EAED;AACC,SAAOf,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAI,IAAMiC,CAAC,GAAG;AACV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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;IACMge,E,GACF,YAAY3iB,CAAZ,EAAee,CAAf,EAAkB;AAAA;;AACd,OAAKyG,OAAL,GAAexH,CAAf,EAAkB,KAAKyH,WAAL,GAAmB1G,CAArC;AACH,C;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IAAU6hB,E,GACN,YAAY5iB,CAAZ;AACA;AACAe,CAFA,EAEGC,CAFH,EAEM;AAAA;;AACF,OAAK6hB,OAAL,GAAe7iB,CAAf,EAAkB,KAAK8iB,uBAAL,GAA+B/hB,CAAjD,EAAoD,KAAKgiB,gBAAL,GAAwB/hB,CAA5E;AACH,C;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAI4hB,EAAE,CAACI,KAAH,GAAW,OAAX;AACJ;AACA;AACA;AACA;AACAJ,EAAE,CAAChT,GAAH,GAAS,OALL;AAOJ;AACA;AACA;AACA;AACA;AACA;;IACMqT,E,GACF;AACA;AACJ;AACA;AACIjjB,CAJA;AAKA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACIe,CAbA;AAcA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,CAzBA,EAyBG;AAAA;;AACC,OAAKkiB,MAAL,GAAcljB,CAAd,EAAiB,KAAKmjB,uBAAL,GAA+BpiB,CAAhD,EAAmD,KAAKqiB,eAAL,GAAuBpiB,CAA1E;AACH,C;AAGL;;;AAA4CiiB,EAAE,CAACD,KAAH,GAAW,gBAAX;AAC5C;AACAC,EAAE,CAACI,OAAH,GAAa,QAF+B;AAI5C;AACA;AACA;AACA;AACA;AACA;AACA;;IACMC,E,GACF;AACA;AACJ;AACA;AACItjB,CAJA;AAKA;AACJ;AACA;AACIe,CARA;AASA;AACJ;AACA;AACA;AACIC,CAbA;AAcA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI2D,CA1BA;AA2BA;AACJ;AACA;AACA;AA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","sourcesContent":["import { _registerComponent, registerVersion, _getProvider, getApp, _removeServiceInstance, SDK_VERSION } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { createMockUserToken, getModularInstance, deepEqual, getUA, isIndexedDBAvailable, isSafari, isMobileCordova, isReactNative, isElectron, isIE, isUWP, isBrowserExtension } from '@firebase/util';\nimport { XhrIo, EventType, ErrorCode, createWebChannelTransport, getStatEventTarget, FetchXmlHttpFactory, WebChannel, Event, Stat } from '@firebase/webchannel-wrapper';\n\nconst S = \"@firebase/firestore\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass D {\n    constructor(t) {\n        this.uid = t;\n    }\n    isAuthenticated() {\n        return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */    toKey() {\n        return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n    isEqual(t) {\n        return t.uid === this.uid;\n    }\n}\n\n/** A user with a null UID. */ D.UNAUTHENTICATED = new D(null), \n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nD.GOOGLE_CREDENTIALS = new D(\"google-credentials-uid\"), D.FIRST_PARTY = new D(\"first-party-uid\"), \nD.MOCK_USER = new D(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet C = \"9.4.0\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst N = new Logger(\"@firebase/firestore\");\n\n// Helper methods are needed because variables can't be exported as read/write\nfunction x() {\n    return N.logLevel;\n}\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */ function k(t) {\n    N.setLogLevel(t);\n}\n\nfunction $(t, ...e) {\n    if (N.logLevel <= LogLevel.DEBUG) {\n        const n = e.map(M);\n        N.debug(`Firestore (${C}): ${t}`, ...n);\n    }\n}\n\nfunction O(t, ...e) {\n    if (N.logLevel <= LogLevel.ERROR) {\n        const n = e.map(M);\n        N.error(`Firestore (${C}): ${t}`, ...n);\n    }\n}\n\n/**\n * @internal\n */ function F(t, ...e) {\n    if (N.logLevel <= LogLevel.WARN) {\n        const n = e.map(M);\n        N.warn(`Firestore (${C}): ${t}`, ...n);\n    }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */ function M(t) {\n    if (\"string\" == typeof t) return t;\n    try {\n        return e = t, JSON.stringify(e);\n    } catch (e) {\n        // Converting to JSON failed, just log the object directly\n        return t;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Formats an object as a JSON string, suitable for logging. */\n    var e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */ function L(t = \"Unexpected state\") {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    const e = `FIRESTORE (${C}) INTERNAL ASSERTION FAILED: ` + t;\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw O(e), new Error(e);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */ function B(t, e) {\n    t || L();\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * The code of callsites invoking this function are stripped out in production\n * builds. Any side-effects of code within the debugAssert() invocation will not\n * happen in this case.\n *\n * @internal\n */ function U(t, e) {\n    t || L();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */ function q(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const K = {\n    // Causes are copied from:\n    // https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n    /** Not an error; returned on success. */\n    OK: \"ok\",\n    /** The operation was cancelled (typically by the caller). */\n    CANCELLED: \"cancelled\",\n    /** Unknown error or an error from a different error domain. */\n    UNKNOWN: \"unknown\",\n    /**\n     * Client specified an invalid argument. Note that this differs from\n     * FAILED_PRECONDITION. INVALID_ARGUMENT indicates arguments that are\n     * problematic regardless of the state of the system (e.g., a malformed file\n     * name).\n     */\n    INVALID_ARGUMENT: \"invalid-argument\",\n    /**\n     * Deadline expired before operation could complete. For operations that\n     * change the state of the system, this error may be returned even if the\n     * operation has completed successfully. For example, a successful response\n     * from a server could have been delayed long enough for the deadline to\n     * expire.\n     */\n    DEADLINE_EXCEEDED: \"deadline-exceeded\",\n    /** Some requested entity (e.g., file or directory) was not found. */\n    NOT_FOUND: \"not-found\",\n    /**\n     * Some entity that we attempted to create (e.g., file or directory) already\n     * exists.\n     */\n    ALREADY_EXISTS: \"already-exists\",\n    /**\n     * The caller does not have permission to execute the specified operation.\n     * PERMISSION_DENIED must not be used for rejections caused by exhausting\n     * some resource (use RESOURCE_EXHAUSTED instead for those errors).\n     * PERMISSION_DENIED must not be used if the caller can not be identified\n     * (use UNAUTHENTICATED instead for those errors).\n     */\n    PERMISSION_DENIED: \"permission-denied\",\n    /**\n     * The request does not have valid authentication credentials for the\n     * operation.\n     */\n    UNAUTHENTICATED: \"unauthenticated\",\n    /**\n     * Some resource has been exhausted, perhaps a per-user quota, or perhaps the\n     * entire file system is out of space.\n     */\n    RESOURCE_EXHAUSTED: \"resource-exhausted\",\n    /**\n     * Operation was rejected because the system is not in a state required for\n     * the operation's execution. For example, directory to be deleted may be\n     * non-empty, an rmdir operation is applied to a non-directory, etc.\n     *\n     * A litmus test that may help a service implementor in deciding\n     * between FAILED_PRECONDITION, ABORTED, and UNAVAILABLE:\n     *  (a) Use UNAVAILABLE if the client can retry just the failing call.\n     *  (b) Use ABORTED if the client should retry at a higher-level\n     *      (e.g., restarting a read-modify-write sequence).\n     *  (c) Use FAILED_PRECONDITION if the client should not retry until\n     *      the system state has been explicitly fixed. E.g., if an \"rmdir\"\n     *      fails because the directory is non-empty, FAILED_PRECONDITION\n     *      should be returned since the client should not retry unless\n     *      they have first fixed up the directory by deleting files from it.\n     *  (d) Use FAILED_PRECONDITION if the client performs conditional\n     *      REST Get/Update/Delete on a resource and the resource on the\n     *      server does not match the condition. E.g., conflicting\n     *      read-modify-write on the same resource.\n     */\n    FAILED_PRECONDITION: \"failed-precondition\",\n    /**\n     * The operation was aborted, typically due to a concurrency issue like\n     * sequencer check failures, transaction aborts, etc.\n     *\n     * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,\n     * and UNAVAILABLE.\n     */\n    ABORTED: \"aborted\",\n    /**\n     * Operation was attempted past the valid range. E.g., seeking or reading\n     * past end of file.\n     *\n     * Unlike INVALID_ARGUMENT, this error indicates a problem that may be fixed\n     * if the system state changes. For example, a 32-bit file system will\n     * generate INVALID_ARGUMENT if asked to read at an offset that is not in the\n     * range [0,2^32-1], but it will generate OUT_OF_RANGE if asked to read from\n     * an offset past the current file size.\n     *\n     * There is a fair bit of overlap between FAILED_PRECONDITION and\n     * OUT_OF_RANGE. We recommend using OUT_OF_RANGE (the more specific error)\n     * when it applies so that callers who are iterating through a space can\n     * easily look for an OUT_OF_RANGE error to detect when they are done.\n     */\n    OUT_OF_RANGE: \"out-of-range\",\n    /** Operation is not implemented or not supported/enabled in this service. */\n    UNIMPLEMENTED: \"unimplemented\",\n    /**\n     * Internal errors. Means some invariants expected by underlying System has\n     * been broken. If you see one of these errors, Something is very broken.\n     */\n    INTERNAL: \"internal\",\n    /**\n     * The service is currently unavailable. This is a most likely a transient\n     * condition and may be corrected by retrying with a backoff.\n     *\n     * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,\n     * and UNAVAILABLE.\n     */\n    UNAVAILABLE: \"unavailable\",\n    /** Unrecoverable data loss or corruption. */\n    DATA_LOSS: \"data-loss\"\n};\n\n/** An error returned by a Firestore operation. */ class j extends Error {\n    /** @hideconstructor */\n    constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    t, \n    /**\n     * A custom error description.\n     */\n    e) {\n        super(e), this.code = t, this.message = e, \n        /** The custom name for all FirestoreErrors. */\n        this.name = \"FirebaseError\", \n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Q {\n    constructor() {\n        this.promise = new Promise(((t, e) => {\n            this.resolve = t, this.reject = e;\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class W {\n    constructor(t, e) {\n        this.user = e, this.type = \"OAuth\", this.authHeaders = {}, \n        // Set the headers using Object Literal notation to avoid minification\n        this.authHeaders.Authorization = `Bearer ${t}`;\n    }\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */ class G {\n    getToken() {\n        return Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        // Fire with initial user.\n        t.enqueueRetryable((() => e(D.UNAUTHENTICATED)));\n    }\n    shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */ class z {\n    constructor(t) {\n        this.token = t, \n        /**\n         * Stores the listener registered with setChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.changeListener = null;\n    }\n    getToken() {\n        return Promise.resolve(this.token);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        this.changeListener = e, \n        // Fire with initial user.\n        t.enqueueRetryable((() => e(this.token.user)));\n    }\n    shutdown() {\n        this.changeListener = null;\n    }\n}\n\nclass H {\n    constructor(t) {\n        this.t = t, \n        /** Tracks the current User. */\n        this.currentUser = D.UNAUTHENTICATED, \n        /**\n         * Counter used to detect if the token changed while a getToken request was\n         * outstanding.\n         */\n        this.i = 0, this.forceRefresh = !1, this.auth = null;\n    }\n    start(t, e) {\n        let n = this.i;\n        // A change listener that prevents double-firing for the same token change.\n                const s = t => this.i !== n ? (n = this.i, e(t)) : Promise.resolve();\n        // A promise that can be waited on to block on the next token change.\n        // This promise is re-created after each change.\n                let i = new Q;\n        this.o = () => {\n            this.i++, this.currentUser = this.u(), i.resolve(), i = new Q, t.enqueueRetryable((() => s(this.currentUser)));\n        };\n        const r = () => {\n            const e = i;\n            t.enqueueRetryable((async () => {\n                await e.promise, await s(this.currentUser);\n            }));\n        }, o = t => {\n            $(\"FirebaseCredentialsProvider\", \"Auth detected\"), this.auth = t, this.auth.addAuthTokenListener(this.o), \n            r();\n        };\n        this.t.onInit((t => o(t))), \n        // Our users can initialize Auth right after Firestore, so we give it\n        // a chance to register itself with the component framework before we\n        // determine whether to start up in unauthenticated mode.\n        setTimeout((() => {\n            if (!this.auth) {\n                const t = this.t.getImmediate({\n                    optional: !0\n                });\n                t ? o(t) : (\n                // If auth is still not available, proceed with `null` user\n                $(\"FirebaseCredentialsProvider\", \"Auth not yet detected\"), i.resolve(), i = new Q);\n            }\n        }), 0), r();\n    }\n    getToken() {\n        // Take note of the current value of the tokenCounter so that this method\n        // can fail (with an ABORTED error) if there is a token change while the\n        // request is outstanding.\n        const t = this.i, e = this.forceRefresh;\n        return this.forceRefresh = !1, this.auth ? this.auth.getToken(e).then((e => \n        // Cancel the request since the token changed while the request was\n        // outstanding so the response is potentially for a previous user (which\n        // user, we can't be sure).\n        this.i !== t ? ($(\"FirebaseCredentialsProvider\", \"getToken aborted due to token change.\"), \n        this.getToken()) : e ? (B(\"string\" == typeof e.accessToken), new W(e.accessToken, this.currentUser)) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {\n        this.forceRefresh = !0;\n    }\n    shutdown() {\n        this.auth && this.auth.removeAuthTokenListener(this.o);\n    }\n    // Auth.getUid() can return null even with a user logged in. It is because\n    // getUid() is synchronous, but the auth code populating Uid is asynchronous.\n    // This method should only be called in the AuthTokenListener callback\n    // to guarantee to get the actual user.\n    u() {\n        const t = this.auth && this.auth.getUid();\n        return B(null === t || \"string\" == typeof t), new D(t);\n    }\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */ class J {\n    constructor(t, e, n) {\n        this.h = t, this.l = e, this.m = n, this.type = \"FirstParty\", this.user = D.FIRST_PARTY;\n    }\n    get authHeaders() {\n        const t = {\n            \"X-Goog-AuthUser\": this.l\n        }, e = this.h.auth.getAuthHeaderValueForFirstParty([]);\n        // Use array notation to prevent minification\n                return e && (t.Authorization = e), this.m && (t[\"X-Goog-Iam-Authorization-Token\"] = this.m), \n        t;\n    }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */ class Y {\n    constructor(t, e, n) {\n        this.h = t, this.l = e, this.m = n;\n    }\n    getToken() {\n        return Promise.resolve(new J(this.h, this.l, this.m));\n    }\n    start(t, e) {\n        // Fire with initial uid.\n        t.enqueueRetryable((() => e(D.FIRST_PARTY)));\n    }\n    shutdown() {}\n    invalidateToken() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * `ListenSequence` is a monotonic sequence. It is initialized with a minimum value to\n * exceed. All subsequent calls to next will return increasing values. If provided with a\n * `SequenceNumberSyncer`, it will additionally bump its next value when told of a new value, as\n * well as write out sequence numbers that it produces via `next()`.\n */\nclass X {\n    constructor(t, e) {\n        this.previousValue = t, e && (e.sequenceNumberHandler = t => this.g(t), this.p = t => e.writeSequenceNumber(t));\n    }\n    g(t) {\n        return this.previousValue = Math.max(t, this.previousValue), this.previousValue;\n    }\n    next() {\n        const t = ++this.previousValue;\n        return this.p && this.p(t), t;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\nfunction Z(t) {\n    // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n    const e = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto), n = new Uint8Array(t);\n    if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n); else \n    // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n    return n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ X.T = -1;\n\nclass tt {\n    static I() {\n        // Alphanumeric characters\n        const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", e = Math.floor(256 / t.length) * t.length;\n        // The largest byte value that is a multiple of `char.length`.\n                let n = \"\";\n        for (;n.length < 20; ) {\n            const s = Z(40);\n            for (let i = 0; i < s.length; ++i) \n            // Only accept values that are [0, maxMultiple), this ensures they can\n            // be evenly mapped to indices of `chars` via a modulo operation.\n            n.length < 20 && s[i] < e && (n += t.charAt(s[i] % t.length));\n        }\n        return n;\n    }\n}\n\nfunction et(t, e) {\n    return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */ function nt(t, e, n) {\n    return t.length === e.length && t.every(((t, s) => n(t, e[s])));\n}\n\n/**\n * Returns the immediate lexicographically-following string. This is useful to\n * construct an inclusive range for indexeddb iterators.\n */ function st(t) {\n    // Return the input string, with an additional NUL byte appended.\n    return t + \"\\0\";\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass it {\n    /**\n     * Creates a new timestamp.\n     *\n     * @param seconds - The number of seconds of UTC time since Unix epoch\n     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     *     9999-12-31T23:59:59Z inclusive.\n     * @param nanoseconds - The non-negative fractions of a second at nanosecond\n     *     resolution. Negative second values with fractions must still have\n     *     non-negative nanoseconds values that count forward in time. Must be\n     *     from 0 to 999,999,999 inclusive.\n     */\n    constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    t, \n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    e) {\n        if (this.seconds = t, this.nanoseconds = e, e < 0) throw new j(K.INVALID_ARGUMENT, \"Timestamp nanoseconds out of range: \" + e);\n        if (e >= 1e9) throw new j(K.INVALID_ARGUMENT, \"Timestamp nanoseconds out of range: \" + e);\n        if (t < -62135596800) throw new j(K.INVALID_ARGUMENT, \"Timestamp seconds out of range: \" + t);\n        // This will break in the year 10,000.\n                if (t >= 253402300800) throw new j(K.INVALID_ARGUMENT, \"Timestamp seconds out of range: \" + t);\n    }\n    /**\n     * Creates a new timestamp with the current date, with millisecond precision.\n     *\n     * @returns a new timestamp representing the current date.\n     */    static now() {\n        return it.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */    static fromDate(t) {\n        return it.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */    static fromMillis(t) {\n        const e = Math.floor(t / 1e3), n = Math.floor(1e6 * (t - 1e3 * e));\n        return new it(e, n);\n    }\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */    toDate() {\n        return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */    toMillis() {\n        return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n    _compareTo(t) {\n        return this.seconds === t.seconds ? et(this.nanoseconds, t.nanoseconds) : et(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */    isEqual(t) {\n        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */    toString() {\n        return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */    toJSON() {\n        return {\n            seconds: this.seconds,\n            nanoseconds: this.nanoseconds\n        };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */    valueOf() {\n        // This method returns a string of the form <seconds>.<nanoseconds> where\n        // <seconds> is translated to have a non-negative value and both <seconds>\n        // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n        // Strings with this format then have a lexiographical ordering that matches\n        // the expected ordering. The <seconds> translation is done to avoid having\n        // a leading negative sign (i.e. a leading '-' character) in its string\n        // representation, which would affect its lexiographical ordering.\n        const t = this.seconds - -62135596800;\n        // Note: Up to 12 decimal digits are required to represent all valid\n        // 'seconds' values.\n                return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */ class rt {\n    constructor(t) {\n        this.timestamp = t;\n    }\n    static fromTimestamp(t) {\n        return new rt(t);\n    }\n    static min() {\n        return new rt(new it(0, 0));\n    }\n    compareTo(t) {\n        return this.timestamp._compareTo(t.timestamp);\n    }\n    isEqual(t) {\n        return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */    toMicroseconds() {\n        // Convert to microseconds.\n        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n    toString() {\n        return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n    toTimestamp() {\n        return this.timestamp;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function ot(t) {\n    let e = 0;\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n    return e;\n}\n\nfunction ct(t, e) {\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n\nfunction at(t) {\n    for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass ut {\n    constructor(t, e, n) {\n        void 0 === e ? e = 0 : e > t.length && L(), void 0 === n ? n = t.length - e : n > t.length - e && L(), \n        this.segments = t, this.offset = e, this.len = n;\n    }\n    get length() {\n        return this.len;\n    }\n    isEqual(t) {\n        return 0 === ut.comparator(this, t);\n    }\n    child(t) {\n        const e = this.segments.slice(this.offset, this.limit());\n        return t instanceof ut ? t.forEach((t => {\n            e.push(t);\n        })) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */    limit() {\n        return this.offset + this.length;\n    }\n    popFirst(t) {\n        return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n    popLast() {\n        return this.construct(this.segments, this.offset, this.length - 1);\n    }\n    firstSegment() {\n        return this.segments[this.offset];\n    }\n    lastSegment() {\n        return this.get(this.length - 1);\n    }\n    get(t) {\n        return this.segments[this.offset + t];\n    }\n    isEmpty() {\n        return 0 === this.length;\n    }\n    isPrefixOf(t) {\n        if (t.length < this.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    isImmediateParentOf(t) {\n        if (this.length + 1 !== t.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    forEach(t) {\n        for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n    }\n    toArray() {\n        return this.segments.slice(this.offset, this.limit());\n    }\n    static comparator(t, e) {\n        const n = Math.min(t.length, e.length);\n        for (let s = 0; s < n; s++) {\n            const n = t.get(s), i = e.get(s);\n            if (n < i) return -1;\n            if (n > i) return 1;\n        }\n        return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */ class ht extends ut {\n    construct(t, e, n) {\n        return new ht(t, e, n);\n    }\n    canonicalString() {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join(\"/\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */    static fromString(...t) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        const e = [];\n        for (const n of t) {\n            if (n.indexOf(\"//\") >= 0) throw new j(K.INVALID_ARGUMENT, `Invalid segment (${n}). Paths must not contain // in them.`);\n            // Strip leading and traling slashed.\n                        e.push(...n.split(\"/\").filter((t => t.length > 0)));\n        }\n        return new ht(e);\n    }\n    static emptyPath() {\n        return new ht([]);\n    }\n}\n\nconst lt = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */ class ft extends ut {\n    construct(t, e, n) {\n        return new ft(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */    static isValidIdentifier(t) {\n        return lt.test(t);\n    }\n    canonicalString() {\n        return this.toArray().map((t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), \n        ft.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t))).join(\".\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */    isKeyField() {\n        return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */    static keyField() {\n        return new ft([ \"__name__\" ]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */    static fromServerFormat(t) {\n        const e = [];\n        let n = \"\", s = 0;\n        const i = () => {\n            if (0 === n.length) throw new j(K.INVALID_ARGUMENT, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n            e.push(n), n = \"\";\n        };\n        let r = !1;\n        for (;s < t.length; ) {\n            const e = t[s];\n            if (\"\\\\\" === e) {\n                if (s + 1 === t.length) throw new j(K.INVALID_ARGUMENT, \"Path has trailing escape character: \" + t);\n                const e = t[s + 1];\n                if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new j(K.INVALID_ARGUMENT, \"Path has invalid escape sequence: \" + t);\n                n += e, s += 2;\n            } else \"`\" === e ? (r = !r, s++) : \".\" !== e || r ? (n += e, s++) : (i(), s++);\n        }\n        if (i(), r) throw new j(K.INVALID_ARGUMENT, \"Unterminated ` in path: \" + t);\n        return new ft(e);\n    }\n    static emptyPath() {\n        return new ft([]);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */ class dt {\n    constructor(t) {\n        this.fields = t, \n        // TODO(dimond): validation of FieldMask\n        // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n        t.sort(ft.comparator);\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */    covers(t) {\n        for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n        return !1;\n    }\n    isEqual(t) {\n        return nt(this.fields, t.fields, ((t, e) => t.isEqual(e)));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Converts a Base64 encoded string to a binary string. */\n/** True if and only if the Base64 conversion functions are available. */\nfunction wt() {\n    return \"undefined\" != typeof atob;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */ class _t {\n    constructor(t) {\n        this.binaryString = t;\n    }\n    static fromBase64String(t) {\n        const e = atob(t);\n        return new _t(e);\n    }\n    static fromUint8Array(t) {\n        const e = \n        /**\n * Helper function to convert an Uint8array to a binary string.\n */\n        function(t) {\n            let e = \"\";\n            for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n            return e;\n        }\n        /**\n * Helper function to convert a binary string to an Uint8Array.\n */ (t);\n        return new _t(e);\n    }\n    toBase64() {\n        return t = this.binaryString, btoa(t);\n        /** Converts a binary string to a Base64 encoded string. */\n        var t;\n    }\n    toUint8Array() {\n        return function(t) {\n            const e = new Uint8Array(t.length);\n            for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n            return e;\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n        (this.binaryString);\n    }\n    approximateByteSize() {\n        return 2 * this.binaryString.length;\n    }\n    compareTo(t) {\n        return et(this.binaryString, t.binaryString);\n    }\n    isEqual(t) {\n        return this.binaryString === t.binaryString;\n    }\n}\n\n_t.EMPTY_BYTE_STRING = new _t(\"\");\n\nconst mt = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */ function gt(t) {\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (B(!!t), \"string\" == typeof t) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        let e = 0;\n        const n = mt.exec(t);\n        if (B(!!n), n[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            let t = n[1];\n            t = (t + \"000000000\").substr(0, 9), e = Number(t);\n        }\n        // Parse the date to get the seconds.\n                const s = new Date(t);\n        return {\n            seconds: Math.floor(s.getTime() / 1e3),\n            nanos: e\n        };\n    }\n    return {\n        seconds: yt(t.seconds),\n        nanos: yt(t.nanos)\n    };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */ function yt(t) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */ function pt(t) {\n    return \"string\" == typeof t ? _t.fromBase64String(t) : _t.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */ function Tt(t) {\n    var e, n;\n    return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n\n/**\n * Creates a new ServerTimestamp proto value (using the internal format).\n */\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */\nfunction Et(t) {\n    const e = t.mapValue.fields.__previous_value__;\n    return Tt(e) ? Et(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */ function It(t) {\n    const e = gt(t.mapValue.fields.__local_write_time__.timestampValue);\n    return new it(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Sentinel value that sorts before any Mutation Batch ID. */\n/**\n * Returns whether a variable is either undefined or null.\n */\nfunction At(t) {\n    return null == t;\n}\n\n/** Returns whether the value represents -0. */ function Rt(t) {\n    // Detect if the value is -0.0. Based on polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */ function bt(t) {\n    return \"number\" == typeof t && Number.isInteger(t) && !Rt(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */ class Pt {\n    constructor(t) {\n        this.path = t;\n    }\n    static fromPath(t) {\n        return new Pt(ht.fromString(t));\n    }\n    static fromName(t) {\n        return new Pt(ht.fromString(t).popFirst(5));\n    }\n    /** Returns true if the document is in the specified collectionId. */    hasCollectionId(t) {\n        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    isEqual(t) {\n        return null !== t && 0 === ht.comparator(this.path, t.path);\n    }\n    toString() {\n        return this.path.toString();\n    }\n    static comparator(t, e) {\n        return ht.comparator(t.path, e.path);\n    }\n    static isDocumentKey(t) {\n        return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */    static fromSegments(t) {\n        return new Pt(new ht(t.slice()));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Extracts the backend's type order for the provided value. */ function vt(t) {\n    return \"nullValue\" in t ? 0 /* NullValue */ : \"booleanValue\" in t ? 1 /* BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* NumberValue */ : \"timestampValue\" in t ? 3 /* TimestampValue */ : \"stringValue\" in t ? 5 /* StringValue */ : \"bytesValue\" in t ? 6 /* BlobValue */ : \"referenceValue\" in t ? 7 /* RefValue */ : \"geoPointValue\" in t ? 8 /* GeoPointValue */ : \"arrayValue\" in t ? 9 /* ArrayValue */ : \"mapValue\" in t ? Tt(t) ? 4 /* ServerTimestampValue */ : 10 /* ObjectValue */ : L();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */ function Vt(t, e) {\n    const n = vt(t);\n    if (n !== vt(e)) return !1;\n    switch (n) {\n      case 0 /* NullValue */ :\n        return !0;\n\n      case 1 /* BooleanValue */ :\n        return t.booleanValue === e.booleanValue;\n\n      case 4 /* ServerTimestampValue */ :\n        return It(t).isEqual(It(e));\n\n      case 3 /* TimestampValue */ :\n        return function(t, e) {\n            if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) \n            // Use string equality for ISO 8601 timestamps\n            return t.timestampValue === e.timestampValue;\n            const n = gt(t.timestampValue), s = gt(e.timestampValue);\n            return n.seconds === s.seconds && n.nanos === s.nanos;\n        }(t, e);\n\n      case 5 /* StringValue */ :\n        return t.stringValue === e.stringValue;\n\n      case 6 /* BlobValue */ :\n        return function(t, e) {\n            return pt(t.bytesValue).isEqual(pt(e.bytesValue));\n        }(t, e);\n\n      case 7 /* RefValue */ :\n        return t.referenceValue === e.referenceValue;\n\n      case 8 /* GeoPointValue */ :\n        return function(t, e) {\n            return yt(t.geoPointValue.latitude) === yt(e.geoPointValue.latitude) && yt(t.geoPointValue.longitude) === yt(e.geoPointValue.longitude);\n        }(t, e);\n\n      case 2 /* NumberValue */ :\n        return function(t, e) {\n            if (\"integerValue\" in t && \"integerValue\" in e) return yt(t.integerValue) === yt(e.integerValue);\n            if (\"doubleValue\" in t && \"doubleValue\" in e) {\n                const n = yt(t.doubleValue), s = yt(e.doubleValue);\n                return n === s ? Rt(n) === Rt(s) : isNaN(n) && isNaN(s);\n            }\n            return !1;\n        }(t, e);\n\n      case 9 /* ArrayValue */ :\n        return nt(t.arrayValue.values || [], e.arrayValue.values || [], Vt);\n\n      case 10 /* ObjectValue */ :\n        return function(t, e) {\n            const n = t.mapValue.fields || {}, s = e.mapValue.fields || {};\n            if (ot(n) !== ot(s)) return !1;\n            for (const t in n) if (n.hasOwnProperty(t) && (void 0 === s[t] || !Vt(n[t], s[t]))) return !1;\n            return !0;\n        }\n        /** Returns true if the ArrayValue contains the specified element. */ (t, e);\n\n      default:\n        return L();\n    }\n}\n\nfunction St(t, e) {\n    return void 0 !== (t.values || []).find((t => Vt(t, e)));\n}\n\nfunction Dt(t, e) {\n    const n = vt(t), s = vt(e);\n    if (n !== s) return et(n, s);\n    switch (n) {\n      case 0 /* NullValue */ :\n        return 0;\n\n      case 1 /* BooleanValue */ :\n        return et(t.booleanValue, e.booleanValue);\n\n      case 2 /* NumberValue */ :\n        return function(t, e) {\n            const n = yt(t.integerValue || t.doubleValue), s = yt(e.integerValue || e.doubleValue);\n            return n < s ? -1 : n > s ? 1 : n === s ? 0 : \n            // one or both are NaN.\n            isNaN(n) ? isNaN(s) ? 0 : -1 : 1;\n        }(t, e);\n\n      case 3 /* TimestampValue */ :\n        return Ct(t.timestampValue, e.timestampValue);\n\n      case 4 /* ServerTimestampValue */ :\n        return Ct(It(t), It(e));\n\n      case 5 /* StringValue */ :\n        return et(t.stringValue, e.stringValue);\n\n      case 6 /* BlobValue */ :\n        return function(t, e) {\n            const n = pt(t), s = pt(e);\n            return n.compareTo(s);\n        }(t.bytesValue, e.bytesValue);\n\n      case 7 /* RefValue */ :\n        return function(t, e) {\n            const n = t.split(\"/\"), s = e.split(\"/\");\n            for (let t = 0; t < n.length && t < s.length; t++) {\n                const e = et(n[t], s[t]);\n                if (0 !== e) return e;\n            }\n            return et(n.length, s.length);\n        }(t.referenceValue, e.referenceValue);\n\n      case 8 /* GeoPointValue */ :\n        return function(t, e) {\n            const n = et(yt(t.latitude), yt(e.latitude));\n            if (0 !== n) return n;\n            return et(yt(t.longitude), yt(e.longitude));\n        }(t.geoPointValue, e.geoPointValue);\n\n      case 9 /* ArrayValue */ :\n        return function(t, e) {\n            const n = t.values || [], s = e.values || [];\n            for (let t = 0; t < n.length && t < s.length; ++t) {\n                const e = Dt(n[t], s[t]);\n                if (e) return e;\n            }\n            return et(n.length, s.length);\n        }(t.arrayValue, e.arrayValue);\n\n      case 10 /* ObjectValue */ :\n        return function(t, e) {\n            const n = t.fields || {}, s = Object.keys(n), i = e.fields || {}, r = Object.keys(i);\n            // Even though MapValues are likely sorted correctly based on their insertion\n            // order (e.g. when received from the backend), local modifications can bring\n            // elements out of order. We need to re-sort the elements to ensure that\n            // canonical IDs are independent of insertion order.\n            s.sort(), r.sort();\n            for (let t = 0; t < s.length && t < r.length; ++t) {\n                const e = et(s[t], r[t]);\n                if (0 !== e) return e;\n                const o = Dt(n[s[t]], i[r[t]]);\n                if (0 !== o) return o;\n            }\n            return et(s.length, r.length);\n        }\n        /**\n * Generates the canonical ID for the provided field value (as used in Target\n * serialization).\n */ (t.mapValue, e.mapValue);\n\n      default:\n        throw L();\n    }\n}\n\nfunction Ct(t, e) {\n    if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return et(t, e);\n    const n = gt(t), s = gt(e), i = et(n.seconds, s.seconds);\n    return 0 !== i ? i : et(n.nanos, s.nanos);\n}\n\nfunction Nt(t) {\n    return xt(t);\n}\n\nfunction xt(t) {\n    return \"nullValue\" in t ? \"null\" : \"booleanValue\" in t ? \"\" + t.booleanValue : \"integerValue\" in t ? \"\" + t.integerValue : \"doubleValue\" in t ? \"\" + t.doubleValue : \"timestampValue\" in t ? function(t) {\n        const e = gt(t);\n        return `time(${e.seconds},${e.nanos})`;\n    }(t.timestampValue) : \"stringValue\" in t ? t.stringValue : \"bytesValue\" in t ? pt(t.bytesValue).toBase64() : \"referenceValue\" in t ? (n = t.referenceValue, \n    Pt.fromName(n).toString()) : \"geoPointValue\" in t ? `geo(${(e = t.geoPointValue).latitude},${e.longitude})` : \"arrayValue\" in t ? function(t) {\n        let e = \"[\", n = !0;\n        for (const s of t.values || []) n ? n = !1 : e += \",\", e += xt(s);\n        return e + \"]\";\n    }\n    /** Returns a reference value for the provided database and key. */ (t.arrayValue) : \"mapValue\" in t ? function(t) {\n        // Iteration order in JavaScript is not guaranteed. To ensure that we generate\n        // matching canonical IDs for identical maps, we need to sort the keys.\n        const e = Object.keys(t.fields || {}).sort();\n        let n = \"{\", s = !0;\n        for (const i of e) s ? s = !1 : n += \",\", n += `${i}:${xt(t.fields[i])}`;\n        return n + \"}\";\n    }(t.mapValue) : L();\n    var e, n;\n}\n\nfunction kt(t, e) {\n    return {\n        referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n    };\n}\n\n/** Returns true if `value` is an IntegerValue . */ function $t(t) {\n    return !!t && \"integerValue\" in t;\n}\n\n/** Returns true if `value` is a DoubleValue. */\n/** Returns true if `value` is an ArrayValue. */\nfunction Ot(t) {\n    return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */ function Ft(t) {\n    return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */ function Mt(t) {\n    return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */ function Lt(t) {\n    return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */ function Bt(t) {\n    if (t.geoPointValue) return {\n        geoPointValue: Object.assign({}, t.geoPointValue)\n    };\n    if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n        timestampValue: Object.assign({}, t.timestampValue)\n    };\n    if (t.mapValue) {\n        const e = {\n            mapValue: {\n                fields: {}\n            }\n        };\n        return ct(t.mapValue.fields, ((t, n) => e.mapValue.fields[t] = Bt(n))), e;\n    }\n    if (t.arrayValue) {\n        const e = {\n            arrayValue: {\n                values: []\n            }\n        };\n        for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = Bt(t.arrayValue.values[n]);\n        return e;\n    }\n    return Object.assign({}, t);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */ class Ut {\n    constructor(t) {\n        this.value = t;\n    }\n    static empty() {\n        return new Ut({\n            mapValue: {}\n        });\n    }\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */    field(t) {\n        if (t.isEmpty()) return this.value;\n        {\n            let e = this.value;\n            for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], \n            !Lt(e)) return null;\n            return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n        }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */    set(t, e) {\n        this.getFieldsMap(t.popLast())[t.lastSegment()] = Bt(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */    setAll(t) {\n        let e = ft.emptyPath(), n = {}, s = [];\n        t.forEach(((t, i) => {\n            if (!e.isImmediateParentOf(i)) {\n                // Insert the accumulated changes at this parent location\n                const t = this.getFieldsMap(e);\n                this.applyChanges(t, n, s), n = {}, s = [], e = i.popLast();\n            }\n            t ? n[i.lastSegment()] = Bt(t) : s.push(i.lastSegment());\n        }));\n        const i = this.getFieldsMap(e);\n        this.applyChanges(i, n, s);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */    delete(t) {\n        const e = this.field(t.popLast());\n        Lt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n    isEqual(t) {\n        return Vt(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */    getFieldsMap(t) {\n        let e = this.value;\n        e.mapValue.fields || (e.mapValue = {\n            fields: {}\n        });\n        for (let n = 0; n < t.length; ++n) {\n            let s = e.mapValue.fields[t.get(n)];\n            Lt(s) && s.mapValue.fields || (s = {\n                mapValue: {\n                    fields: {}\n                }\n            }, e.mapValue.fields[t.get(n)] = s), e = s;\n        }\n        return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */    applyChanges(t, e, n) {\n        ct(e, ((e, n) => t[e] = n));\n        for (const e of n) delete t[e];\n    }\n    clone() {\n        return new Ut(Bt(this.value));\n    }\n}\n\n/**\n * Returns a FieldMask built from all fields in a MapValue.\n */ function qt(t) {\n    const e = [];\n    return ct(t.fields, ((t, n) => {\n        const s = new ft([ t ]);\n        if (Lt(n)) {\n            const t = qt(n.mapValue).fields;\n            if (0 === t.length) \n            // Preserve the empty map by adding it to the FieldMask.\n            e.push(s); else \n            // For nested and non-empty ObjectValues, add the FieldPath of the\n            // leaf nodes.\n            for (const n of t) e.push(s.child(n));\n        } else \n        // For nested and non-empty ObjectValues, add the FieldPath of the leaf\n        // nodes.\n        e.push(s);\n    })), new dt(e);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */ class Kt {\n    constructor(t, e, n, s, i) {\n        this.key = t, this.documentType = e, this.version = n, this.data = s, this.documentState = i;\n    }\n    /**\n     * Creates a document with no known version or data, but which can serve as\n     * base document for mutations.\n     */    static newInvalidDocument(t) {\n        return new Kt(t, 0 /* INVALID */ , rt.min(), Ut.empty(), 0 /* SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */    static newFoundDocument(t, e, n) {\n        return new Kt(t, 1 /* FOUND_DOCUMENT */ , e, n, 0 /* SYNCED */);\n    }\n    /** Creates a new document that is known to not exist at the given version. */    static newNoDocument(t, e) {\n        return new Kt(t, 2 /* NO_DOCUMENT */ , e, Ut.empty(), 0 /* SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    static newUnknownDocument(t, e) {\n        return new Kt(t, 3 /* UNKNOWN_DOCUMENT */ , e, Ut.empty(), 2 /* HAS_COMMITTED_MUTATIONS */);\n    }\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */    convertToFoundDocument(t, e) {\n        return this.version = t, this.documentType = 1 /* FOUND_DOCUMENT */ , this.data = e, \n        this.documentState = 0 /* SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */    convertToNoDocument(t) {\n        return this.version = t, this.documentType = 2 /* NO_DOCUMENT */ , this.data = Ut.empty(), \n        this.documentState = 0 /* SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    convertToUnknownDocument(t) {\n        return this.version = t, this.documentType = 3 /* UNKNOWN_DOCUMENT */ , this.data = Ut.empty(), \n        this.documentState = 2 /* HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasCommittedMutations() {\n        return this.documentState = 2 /* HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasLocalMutations() {\n        return this.documentState = 1 /* HAS_LOCAL_MUTATIONS */ , this;\n    }\n    get hasLocalMutations() {\n        return 1 /* HAS_LOCAL_MUTATIONS */ === this.documentState;\n    }\n    get hasCommittedMutations() {\n        return 2 /* HAS_COMMITTED_MUTATIONS */ === this.documentState;\n    }\n    get hasPendingWrites() {\n        return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n    isValidDocument() {\n        return 0 /* INVALID */ !== this.documentType;\n    }\n    isFoundDocument() {\n        return 1 /* FOUND_DOCUMENT */ === this.documentType;\n    }\n    isNoDocument() {\n        return 2 /* NO_DOCUMENT */ === this.documentType;\n    }\n    isUnknownDocument() {\n        return 3 /* UNKNOWN_DOCUMENT */ === this.documentType;\n    }\n    isEqual(t) {\n        return t instanceof Kt && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n    clone() {\n        return new Kt(this.key, this.documentType, this.version, this.data.clone(), this.documentState);\n    }\n    toString() {\n        return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n    }\n}\n\n/**\n * Compares the value for field `field` in the provided documents. Throws if\n * the field does not exist in both documents.\n */\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass jt {\n    constructor(t, e = null, n = [], s = [], i = null, r = null, o = null) {\n        this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = s, this.limit = i, \n        this.startAt = r, this.endAt = o, this.A = null;\n    }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */ function Qt(t, e = null, n = [], s = [], i = null, r = null, o = null) {\n    return new jt(t, e, n, s, i, r, o);\n}\n\nfunction Wt(t) {\n    const e = q(t);\n    if (null === e.A) {\n        let t = e.path.canonicalString();\n        null !== e.collectionGroup && (t += \"|cg:\" + e.collectionGroup), t += \"|f:\", t += e.filters.map((t => Yt(t))).join(\",\"), \n        t += \"|ob:\", t += e.orderBy.map((t => function(t) {\n            // TODO(b/29183165): Make this collision robust.\n            return t.field.canonicalString() + t.dir;\n        }(t))).join(\",\"), At(e.limit) || (t += \"|l:\", t += e.limit), e.startAt && (t += \"|lb:\", \n        t += ce(e.startAt)), e.endAt && (t += \"|ub:\", t += ce(e.endAt)), e.A = t;\n    }\n    return e.A;\n}\n\nfunction Gt(t) {\n    let e = t.path.canonicalString();\n    return null !== t.collectionGroup && (e += \" collectionGroup=\" + t.collectionGroup), \n    t.filters.length > 0 && (e += `, filters: [${t.filters.map((t => {\n        return `${(e = t).field.canonicalString()} ${e.op} ${Nt(e.value)}`;\n        /** Returns a debug description for `filter`. */\n        var e;\n        /** Filter that matches on key fields (i.e. '__name__'). */    })).join(\", \")}]`), \n    At(t.limit) || (e += \", limit: \" + t.limit), t.orderBy.length > 0 && (e += `, orderBy: [${t.orderBy.map((t => function(t) {\n        return `${t.field.canonicalString()} (${t.dir})`;\n    }(t))).join(\", \")}]`), t.startAt && (e += \", startAt: \" + ce(t.startAt)), t.endAt && (e += \", endAt: \" + ce(t.endAt)), \n    `Target(${e})`;\n}\n\nfunction zt(t, e) {\n    if (t.limit !== e.limit) return !1;\n    if (t.orderBy.length !== e.orderBy.length) return !1;\n    for (let n = 0; n < t.orderBy.length; n++) if (!ue(t.orderBy[n], e.orderBy[n])) return !1;\n    if (t.filters.length !== e.filters.length) return !1;\n    for (let i = 0; i < t.filters.length; i++) if (n = t.filters[i], s = e.filters[i], \n    n.op !== s.op || !n.field.isEqual(s.field) || !Vt(n.value, s.value)) return !1;\n    var n, s;\n    return t.collectionGroup === e.collectionGroup && (!!t.path.isEqual(e.path) && (!!le(t.startAt, e.startAt) && le(t.endAt, e.endAt)));\n}\n\nfunction Ht(t) {\n    return Pt.isDocumentKey(t.path) && null === t.collectionGroup && 0 === t.filters.length;\n}\n\nclass Jt extends class {} {\n    constructor(t, e, n) {\n        super(), this.field = t, this.op = e, this.value = n;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e, n) {\n        return t.isKeyField() ? \"in\" /* IN */ === e || \"not-in\" /* NOT_IN */ === e ? this.R(t, e, n) : new Xt(t, e, n) : \"array-contains\" /* ARRAY_CONTAINS */ === e ? new ne(t, n) : \"in\" /* IN */ === e ? new se(t, n) : \"not-in\" /* NOT_IN */ === e ? new ie(t, n) : \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === e ? new re(t, n) : new Jt(t, e, n);\n    }\n    static R(t, e, n) {\n        return \"in\" /* IN */ === e ? new Zt(t, n) : new te(t, n);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        // Types do not have to match in NOT_EQUAL filters.\n                return \"!=\" /* NOT_EQUAL */ === this.op ? null !== e && this.P(Dt(e, this.value)) : null !== e && vt(this.value) === vt(e) && this.P(Dt(e, this.value));\n        // Only compare types with matching backend order (such as double and int).\n        }\n    P(t) {\n        switch (this.op) {\n          case \"<\" /* LESS_THAN */ :\n            return t < 0;\n\n          case \"<=\" /* LESS_THAN_OR_EQUAL */ :\n            return t <= 0;\n\n          case \"==\" /* EQUAL */ :\n            return 0 === t;\n\n          case \"!=\" /* NOT_EQUAL */ :\n            return 0 !== t;\n\n          case \">\" /* GREATER_THAN */ :\n            return t > 0;\n\n          case \">=\" /* GREATER_THAN_OR_EQUAL */ :\n            return t >= 0;\n\n          default:\n            return L();\n        }\n    }\n    v() {\n        return [ \"<\" /* LESS_THAN */ , \"<=\" /* LESS_THAN_OR_EQUAL */ , \">\" /* GREATER_THAN */ , \">=\" /* GREATER_THAN_OR_EQUAL */ , \"!=\" /* NOT_EQUAL */ , \"not-in\" /* NOT_IN */ ].indexOf(this.op) >= 0;\n    }\n}\n\nfunction Yt(t) {\n    // TODO(b/29183165): Technically, this won't be unique if two values have\n    // the same description, such as the int 3 and the string \"3\". So we should\n    // add the types in here somehow, too.\n    return t.field.canonicalString() + t.op.toString() + Nt(t.value);\n}\n\nclass Xt extends Jt {\n    constructor(t, e, n) {\n        super(t, e, n), this.key = Pt.fromName(n.referenceValue);\n    }\n    matches(t) {\n        const e = Pt.comparator(t.key, this.key);\n        return this.P(e);\n    }\n}\n\n/** Filter that matches on key fields within an array. */ class Zt extends Jt {\n    constructor(t, e) {\n        super(t, \"in\" /* IN */ , e), this.keys = ee(\"in\" /* IN */ , e);\n    }\n    matches(t) {\n        return this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\n/** Filter that matches on key fields not present within an array. */ class te extends Jt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* NOT_IN */ , e), this.keys = ee(\"not-in\" /* NOT_IN */ , e);\n    }\n    matches(t) {\n        return !this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\nfunction ee(t, e) {\n    var n;\n    return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map((t => Pt.fromName(t.referenceValue)));\n}\n\n/** A Filter that implements the array-contains operator. */ class ne extends Jt {\n    constructor(t, e) {\n        super(t, \"array-contains\" /* ARRAY_CONTAINS */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return Ot(e) && St(e.arrayValue, this.value);\n    }\n}\n\n/** A Filter that implements the IN operator. */ class se extends Jt {\n    constructor(t, e) {\n        super(t, \"in\" /* IN */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return null !== e && St(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the not-in operator. */ class ie extends Jt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* NOT_IN */ , e);\n    }\n    matches(t) {\n        if (St(this.value.arrayValue, {\n            nullValue: \"NULL_VALUE\"\n        })) return !1;\n        const e = t.data.field(this.field);\n        return null !== e && !St(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the array-contains-any operator. */ class re extends Jt {\n    constructor(t, e) {\n        super(t, \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return !(!Ot(e) || !e.arrayValue.values) && e.arrayValue.values.some((t => St(this.value.arrayValue, t)));\n    }\n}\n\n/**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */ class oe {\n    constructor(t, e) {\n        this.position = t, this.before = e;\n    }\n}\n\nfunction ce(t) {\n    // TODO(b/29183165): Make this collision robust.\n    return `${t.before ? \"b\" : \"a\"}:${t.position.map((t => Nt(t))).join(\",\")}`;\n}\n\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */ class ae {\n    constructor(t, e = \"asc\" /* ASCENDING */) {\n        this.field = t, this.dir = e;\n    }\n}\n\nfunction ue(t, e) {\n    return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\n/**\n * Returns true if a document sorts before a bound using the provided sort\n * order.\n */ function he(t, e, n) {\n    let s = 0;\n    for (let i = 0; i < t.position.length; i++) {\n        const r = e[i], o = t.position[i];\n        if (r.field.isKeyField()) s = Pt.comparator(Pt.fromName(o.referenceValue), n.key); else {\n            s = Dt(o, n.data.field(r.field));\n        }\n        if (\"desc\" /* DESCENDING */ === r.dir && (s *= -1), 0 !== s) break;\n    }\n    return t.before ? s <= 0 : s < 0;\n}\n\nfunction le(t, e) {\n    if (null === t) return null === e;\n    if (null === e) return !1;\n    if (t.before !== e.before || t.position.length !== e.position.length) return !1;\n    for (let n = 0; n < t.position.length; n++) {\n        if (!Vt(t.position[n], e.position[n])) return !1;\n    }\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */ class fe {\n    /**\n     * Initializes a Query with a path and optional additional query constraints.\n     * Path must currently be empty if this is a collection group query.\n     */\n    constructor(t, e = null, n = [], s = [], i = null, r = \"F\" /* First */ , o = null, c = null) {\n        this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = s, \n        this.limit = i, this.limitType = r, this.startAt = o, this.endAt = c, this.V = null, \n        // The corresponding `Target` of this `Query` instance.\n        this.S = null, this.startAt, this.endAt;\n    }\n}\n\n/** Creates a new Query instance with the options provided. */ function de(t, e, n, s, i, r, o, c) {\n    return new fe(t, e, n, s, i, r, o, c);\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */ function we(t) {\n    return new fe(t);\n}\n\n/**\n * Helper to convert a collection group query into a collection query at a\n * specific path. This is used when executing collection group queries, since\n * we have to split the query into a set of collection queries at multiple\n * paths.\n */ function _e(t) {\n    return !At(t.limit) && \"F\" /* First */ === t.limitType;\n}\n\nfunction me(t) {\n    return !At(t.limit) && \"L\" /* Last */ === t.limitType;\n}\n\nfunction ge(t) {\n    return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction ye(t) {\n    for (const e of t.filters) if (e.v()) return e.field;\n    return null;\n}\n\n/**\n * Checks if any of the provided Operators are included in the query and\n * returns the first one that is, or null if none are.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction pe(t) {\n    return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */ function Te(t) {\n    const e = q(t);\n    if (null === e.V) {\n        e.V = [];\n        const t = ye(e), n = ge(e);\n        if (null !== t && null === n) \n        // In order to implicitly add key ordering, we must also add the\n        // inequality filter field for it to be a valid query.\n        // Note that the default inequality field and key ordering is ascending.\n        t.isKeyField() || e.V.push(new ae(t)), e.V.push(new ae(ft.keyField(), \"asc\" /* ASCENDING */)); else {\n            let t = !1;\n            for (const n of e.explicitOrderBy) e.V.push(n), n.field.isKeyField() && (t = !0);\n            if (!t) {\n                // The order of the implicit key ordering always matches the last\n                // explicit order by\n                const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\" /* ASCENDING */;\n                e.V.push(new ae(ft.keyField(), t));\n            }\n        }\n    }\n    return e.V;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */ function Ee(t) {\n    const e = q(t);\n    if (!e.S) if (\"F\" /* First */ === e.limitType) e.S = Qt(e.path, e.collectionGroup, Te(e), e.filters, e.limit, e.startAt, e.endAt); else {\n        // Flip the orderBy directions since we want the last results\n        const t = [];\n        for (const n of Te(e)) {\n            const e = \"desc\" /* DESCENDING */ === n.dir ? \"asc\" /* ASCENDING */ : \"desc\" /* DESCENDING */;\n            t.push(new ae(n.field, e));\n        }\n        // We need to swap the cursors to match the now-flipped query ordering.\n                const n = e.endAt ? new oe(e.endAt.position, !e.endAt.before) : null, s = e.startAt ? new oe(e.startAt.position, !e.startAt.before) : null;\n        // Now return as a LimitType.First query.\n        e.S = Qt(e.path, e.collectionGroup, t, e.filters, e.limit, n, s);\n    }\n    return e.S;\n}\n\nfunction Ie(t, e, n) {\n    return new fe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n}\n\nfunction Ae(t, e) {\n    return zt(Ee(t), Ee(e)) && t.limitType === e.limitType;\n}\n\n// TODO(b/29183165): This is used to get a unique string from a query to, for\n// example, use as a dictionary key, but the implementation is subject to\n// collisions. Make it collision-free.\nfunction Re(t) {\n    return `${Wt(Ee(t))}|lt:${t.limitType}`;\n}\n\nfunction be(t) {\n    return `Query(target=${Gt(Ee(t))}; limitType=${t.limitType})`;\n}\n\n/** Returns whether `doc` matches the constraints of `query`. */ function Pe(t, e) {\n    return e.isFoundDocument() && function(t, e) {\n        const n = e.key.path;\n        return null !== t.collectionGroup ? e.key.hasCollectionId(t.collectionGroup) && t.path.isPrefixOf(n) : Pt.isDocumentKey(t.path) ? t.path.isEqual(n) : t.path.isImmediateParentOf(n);\n    }\n    /**\n * A document must have a value for every ordering clause in order to show up\n * in the results.\n */ (t, e) && function(t, e) {\n        for (const n of t.explicitOrderBy) \n        // order by key always matches\n        if (!n.field.isKeyField() && null === e.data.field(n.field)) return !1;\n        return !0;\n    }(t, e) && function(t, e) {\n        for (const n of t.filters) if (!n.matches(e)) return !1;\n        return !0;\n    }\n    /** Makes sure a document is within the bounds, if provided. */ (t, e) && function(t, e) {\n        if (t.startAt && !he(t.startAt, Te(t), e)) return !1;\n        if (t.endAt && he(t.endAt, Te(t), e)) return !1;\n        return !0;\n    }\n    /**\n * Returns a new comparator function that can be used to compare two documents\n * based on the Query's ordering constraint.\n */ (t, e);\n}\n\nfunction ve(t) {\n    return (e, n) => {\n        let s = !1;\n        for (const i of Te(t)) {\n            const t = Ve(i, e, n);\n            if (0 !== t) return t;\n            s = s || i.field.isKeyField();\n        }\n        return 0;\n    };\n}\n\nfunction Ve(t, e, n) {\n    const s = t.field.isKeyField() ? Pt.comparator(e.key, n.key) : function(t, e, n) {\n        const s = e.data.field(t), i = n.data.field(t);\n        return null !== s && null !== i ? Dt(s, i) : L();\n    }(t.field, e, n);\n    switch (t.dir) {\n      case \"asc\" /* ASCENDING */ :\n        return s;\n\n      case \"desc\" /* DESCENDING */ :\n        return -1 * s;\n\n      default:\n        return L();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */ function Se(t, e) {\n    if (t.D) {\n        if (isNaN(e)) return {\n            doubleValue: \"NaN\"\n        };\n        if (e === 1 / 0) return {\n            doubleValue: \"Infinity\"\n        };\n        if (e === -1 / 0) return {\n            doubleValue: \"-Infinity\"\n        };\n    }\n    return {\n        doubleValue: Rt(e) ? \"-0\" : e\n    };\n}\n\n/**\n * Returns an IntegerValue for `value`.\n */ function De(t) {\n    return {\n        integerValue: \"\" + t\n    };\n}\n\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */ function Ce(t, e) {\n    return bt(e) ? De(e) : Se(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */ class Ne {\n    constructor() {\n        // Make sure that the structural type of `TransformOperation` is unique.\n        // See https://github.com/microsoft/TypeScript/issues/5451\n        this._ = void 0;\n    }\n}\n\n/**\n * Computes the local transform result against the provided `previousValue`,\n * optionally using the provided localWriteTime.\n */ function xe(t, e, n) {\n    return t instanceof Oe ? function(t, e) {\n        const n = {\n            fields: {\n                __type__: {\n                    stringValue: \"server_timestamp\"\n                },\n                __local_write_time__: {\n                    timestampValue: {\n                        seconds: t.seconds,\n                        nanos: t.nanoseconds\n                    }\n                }\n            }\n        };\n        return e && (n.fields.__previous_value__ = e), {\n            mapValue: n\n        };\n    }(n, e) : t instanceof Fe ? Me(t, e) : t instanceof Le ? Be(t, e) : function(t, e) {\n        // PORTING NOTE: Since JavaScript's integer arithmetic is limited to 53 bit\n        // precision and resolves overflows by reducing precision, we do not\n        // manually cap overflows at 2^63.\n        const n = $e(t, e), s = qe(n) + qe(t.C);\n        return $t(n) && $t(t.C) ? De(s) : Se(t.N, s);\n    }(t, e);\n}\n\n/**\n * Computes a final transform result after the transform has been acknowledged\n * by the server, potentially using the server-provided transformResult.\n */ function ke(t, e, n) {\n    // The server just sends null as the transform result for array operations,\n    // so we have to calculate a result the same as we do for local\n    // applications.\n    return t instanceof Fe ? Me(t, e) : t instanceof Le ? Be(t, e) : n;\n}\n\n/**\n * If this transform operation is not idempotent, returns the base value to\n * persist for this transform. If a base value is returned, the transform\n * operation is always applied to this base value, even if document has\n * already been updated.\n *\n * Base values provide consistent behavior for non-idempotent transforms and\n * allow us to return the same latency-compensated value even if the backend\n * has already applied the transform operation. The base value is null for\n * idempotent transforms, as they can be re-played even if the backend has\n * already applied them.\n *\n * @returns a base value to store along with the mutation, or null for\n * idempotent transforms.\n */ function $e(t, e) {\n    return t instanceof Ue ? $t(n = e) || function(t) {\n        return !!t && \"doubleValue\" in t;\n    }\n    /** Returns true if `value` is either an IntegerValue or a DoubleValue. */ (n) ? e : {\n        integerValue: 0\n    } : null;\n    var n;\n}\n\n/** Transforms a value into a server-generated timestamp. */\nclass Oe extends Ne {}\n\n/** Transforms an array value via a union operation. */ class Fe extends Ne {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\nfunction Me(t, e) {\n    const n = Ke(e);\n    for (const e of t.elements) n.some((t => Vt(t, e))) || n.push(e);\n    return {\n        arrayValue: {\n            values: n\n        }\n    };\n}\n\n/** Transforms an array value via a remove operation. */ class Le extends Ne {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\nfunction Be(t, e) {\n    let n = Ke(e);\n    for (const e of t.elements) n = n.filter((t => !Vt(t, e)));\n    return {\n        arrayValue: {\n            values: n\n        }\n    };\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */ class Ue extends Ne {\n    constructor(t, e) {\n        super(), this.N = t, this.C = e;\n    }\n}\n\nfunction qe(t) {\n    return yt(t.integerValue || t.doubleValue);\n}\n\nfunction Ke(t) {\n    return Ot(t) && t.arrayValue.values ? t.arrayValue.values.slice() : [];\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */ class je {\n    constructor(t, e) {\n        this.field = t, this.transform = e;\n    }\n}\n\nfunction Qe(t, e) {\n    return t.field.isEqual(e.field) && function(t, e) {\n        return t instanceof Fe && e instanceof Fe || t instanceof Le && e instanceof Le ? nt(t.elements, e.elements, Vt) : t instanceof Ue && e instanceof Ue ? Vt(t.C, e.C) : t instanceof Oe && e instanceof Oe;\n    }(t.transform, e.transform);\n}\n\n/** The result of successfully applying a mutation to the backend. */\nclass We {\n    constructor(\n    /**\n     * The version at which the mutation was committed:\n     *\n     * - For most operations, this is the updateTime in the WriteResult.\n     * - For deletes, the commitTime of the WriteResponse (because deletes are\n     *   not stored and have no updateTime).\n     *\n     * Note that these versions can be different: No-op writes will not change\n     * the updateTime even though the commitTime advances.\n     */\n    t, \n    /**\n     * The resulting fields returned from the backend after a mutation\n     * containing field transforms has been committed. Contains one FieldValue\n     * for each FieldTransform that was in the mutation.\n     *\n     * Will be empty if the mutation did not contain any field transforms.\n     */\n    e) {\n        this.version = t, this.transformResults = e;\n    }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */ class Ge {\n    constructor(t, e) {\n        this.updateTime = t, this.exists = e;\n    }\n    /** Creates a new empty Precondition. */    static none() {\n        return new Ge;\n    }\n    /** Creates a new Precondition with an exists flag. */    static exists(t) {\n        return new Ge(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */    static updateTime(t) {\n        return new Ge(t);\n    }\n    /** Returns whether this Precondition is empty. */    get isNone() {\n        return void 0 === this.updateTime && void 0 === this.exists;\n    }\n    isEqual(t) {\n        return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n}\n\n/** Returns true if the preconditions is valid for the given document. */ function ze(t, e) {\n    return void 0 !== t.updateTime ? e.isFoundDocument() && e.version.isEqual(t.updateTime) : void 0 === t.exists || t.exists === e.isFoundDocument();\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */ class He {}\n\n/**\n * Applies this mutation to the given document for the purposes of computing a\n * new remote document. If the input document doesn't match the expected state\n * (e.g. it is invalid or outdated), the document type may transition to\n * unknown.\n *\n * @param mutation - The mutation to apply.\n * @param document - The document to mutate. The input document can be an\n *     invalid document if the client has no knowledge of the pre-mutation state\n *     of the document.\n * @param mutationResult - The result of applying the mutation from the backend.\n */ function Je(t, e, n) {\n    t instanceof en ? function(t, e, n) {\n        // Unlike setMutationApplyToLocalView, if we're applying a mutation to a\n        // remote document the server has accepted the mutation so the precondition\n        // must have held.\n        const s = t.value.clone(), i = rn(t.fieldTransforms, e, n.transformResults);\n        s.setAll(i), e.convertToFoundDocument(n.version, s).setHasCommittedMutations();\n    }(t, e, n) : t instanceof nn ? function(t, e, n) {\n        if (!ze(t.precondition, e)) \n        // Since the mutation was not rejected, we know that the precondition\n        // matched on the backend. We therefore must not have the expected version\n        // of the document in our cache and convert to an UnknownDocument with a\n        // known updateTime.\n        return void e.convertToUnknownDocument(n.version);\n        const s = rn(t.fieldTransforms, e, n.transformResults), i = e.data;\n        i.setAll(sn(t)), i.setAll(s), e.convertToFoundDocument(n.version, i).setHasCommittedMutations();\n    }(t, e, n) : function(t, e, n) {\n        // Unlike applyToLocalView, if we're applying a mutation to a remote\n        // document the server has accepted the mutation so the precondition must\n        // have held.\n        e.convertToNoDocument(n.version).setHasCommittedMutations();\n    }(0, e, n);\n}\n\n/**\n * Applies this mutation to the given document for the purposes of computing\n * the new local view of a document. If the input document doesn't match the\n * expected state, the document is not modified.\n *\n * @param mutation - The mutation to apply.\n * @param document - The document to mutate. The input document can be an\n *     invalid document if the client has no knowledge of the pre-mutation state\n *     of the document.\n * @param localWriteTime - A timestamp indicating the local write time of the\n *     batch this mutation is a part of.\n */ function Ye(t, e, n) {\n    t instanceof en ? function(t, e, n) {\n        if (!ze(t.precondition, e)) \n        // The mutation failed to apply (e.g. a document ID created with add()\n        // caused a name collision).\n        return;\n        const s = t.value.clone(), i = on(t.fieldTransforms, n, e);\n        s.setAll(i), e.convertToFoundDocument(tn(e), s).setHasLocalMutations();\n    }\n    /**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */ (t, e, n) : t instanceof nn ? function(t, e, n) {\n        if (!ze(t.precondition, e)) return;\n        const s = on(t.fieldTransforms, n, e), i = e.data;\n        i.setAll(sn(t)), i.setAll(s), e.convertToFoundDocument(tn(e), i).setHasLocalMutations();\n    }\n    /**\n * Returns a FieldPath/Value map with the content of the PatchMutation.\n */ (t, e, n) : function(t, e) {\n        ze(t.precondition, e) && \n        // We don't call `setHasLocalMutations()` since we want to be backwards\n        // compatible with the existing SDK behavior.\n        e.convertToNoDocument(rt.min());\n    }\n    /**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */ (t, e);\n}\n\n/**\n * If this mutation is not idempotent, returns the base value to persist with\n * this mutation. If a base value is returned, the mutation is always applied\n * to this base value, even if document has already been updated.\n *\n * The base value is a sparse object that consists of only the document\n * fields for which this mutation contains a non-idempotent transformation\n * (e.g. a numeric increment). The provided value guarantees consistent\n * behavior for non-idempotent transforms and allow us to return the same\n * latency-compensated value even if the backend has already applied the\n * mutation. The base value is null for idempotent mutations, as they can be\n * re-played even if the backend has already applied them.\n *\n * @returns a base value to store along with the mutation, or null for\n * idempotent mutations.\n */ function Xe(t, e) {\n    let n = null;\n    for (const s of t.fieldTransforms) {\n        const t = e.data.field(s.field), i = $e(s.transform, t || null);\n        null != i && (null == n && (n = Ut.empty()), n.set(s.field, i));\n    }\n    return n || null;\n}\n\nfunction Ze(t, e) {\n    return t.type === e.type && (!!t.key.isEqual(e.key) && (!!t.precondition.isEqual(e.precondition) && (!!function(t, e) {\n        return void 0 === t && void 0 === e || !(!t || !e) && nt(t, e, ((t, e) => Qe(t, e)));\n    }(t.fieldTransforms, e.fieldTransforms) && (0 /* Set */ === t.type ? t.value.isEqual(e.value) : 1 /* Patch */ !== t.type || t.data.isEqual(e.data) && t.fieldMask.isEqual(e.fieldMask)))));\n}\n\n/**\n * Returns the version from the given document for use as the result of a\n * mutation. Mutations are defined to return the version of the base document\n * only if it is an existing document. Deleted and unknown documents have a\n * post-mutation version of SnapshotVersion.min().\n */ function tn(t) {\n    return t.isFoundDocument() ? t.version : rt.min();\n}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */ class en extends He {\n    constructor(t, e, n, s = []) {\n        super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = s, \n        this.type = 0 /* Set */;\n    }\n}\n\nclass nn extends He {\n    constructor(t, e, n, s, i = []) {\n        super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = s, \n        this.fieldTransforms = i, this.type = 1 /* Patch */;\n    }\n}\n\nfunction sn(t) {\n    const e = new Map;\n    return t.fieldMask.fields.forEach((n => {\n        if (!n.isEmpty()) {\n            const s = t.data.field(n);\n            e.set(n, s);\n        }\n    })), e;\n}\n\n/**\n * Creates a list of \"transform results\" (a transform result is a field value\n * representing the result of applying a transform) for use after a mutation\n * containing transforms has been acknowledged by the server.\n *\n * @param fieldTransforms - The field transforms to apply the result to.\n * @param mutableDocument - The current state of the document after applying all\n * previous mutations.\n * @param serverTransformResults - The transform results received by the server.\n * @returns The transform results list.\n */ function rn(t, e, n) {\n    const s = new Map;\n    B(t.length === n.length);\n    for (let i = 0; i < n.length; i++) {\n        const r = t[i], o = r.transform, c = e.data.field(r.field);\n        s.set(r.field, ke(o, c, n[i]));\n    }\n    return s;\n}\n\n/**\n * Creates a list of \"transform results\" (a transform result is a field value\n * representing the result of applying a transform) for use when applying a\n * transform locally.\n *\n * @param fieldTransforms - The field transforms to apply the result to.\n * @param localWriteTime - The local time of the mutation (used to\n *     generate ServerTimestampValues).\n * @param mutableDocument - The current state of the document after applying all\n *     previous mutations.\n * @returns The transform results list.\n */ function on(t, e, n) {\n    const s = new Map;\n    for (const i of t) {\n        const t = i.transform, r = n.data.field(i.field);\n        s.set(i.field, xe(t, r, e));\n    }\n    return s;\n}\n\n/** A mutation that deletes the document at the given key. */ class cn extends He {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 2 /* Delete */ , this.fieldTransforms = [];\n    }\n}\n\nclass an extends He {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 3 /* Verify */ , this.fieldTransforms = [];\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class un {\n    // TODO(b/33078163): just use simplest form of existence filter for now\n    constructor(t) {\n        this.count = t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */ var hn, ln;\n\n/**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\nfunction fn(t) {\n    switch (t) {\n      default:\n        return L();\n\n      case K.CANCELLED:\n      case K.UNKNOWN:\n      case K.DEADLINE_EXCEEDED:\n      case K.RESOURCE_EXHAUSTED:\n      case K.INTERNAL:\n      case K.UNAVAILABLE:\n // Unauthenticated means something went wrong with our token and we need\n        // to retry with new credentials which will happen automatically.\n              case K.UNAUTHENTICATED:\n        return !1;\n\n      case K.INVALID_ARGUMENT:\n      case K.NOT_FOUND:\n      case K.ALREADY_EXISTS:\n      case K.PERMISSION_DENIED:\n      case K.FAILED_PRECONDITION:\n // Aborted might be retried in some scenarios, but that is dependant on\n        // the context and should handled individually by the calling code.\n        // See https://cloud.google.com/apis/design/errors.\n              case K.ABORTED:\n      case K.OUT_OF_RANGE:\n      case K.UNIMPLEMENTED:\n      case K.DATA_LOSS:\n        return !0;\n    }\n}\n\n/**\n * Determines whether an error code represents a permanent error when received\n * in response to a write operation.\n *\n * Write operations must be handled specially because as of b/119437764, ABORTED\n * errors on the write stream should be retried too (even though ABORTED errors\n * are not generally retryable).\n *\n * Note that during the initial handshake on the write stream an ABORTED error\n * signals that we should discard our stream token (i.e. it is permanent). This\n * means a handshake error should be classified with isPermanentError, above.\n */\n/**\n * Maps an error Code from GRPC status code number, like 0, 1, or 14. These\n * are not the same as HTTP status codes.\n *\n * @returns The Code equivalent to the given GRPC status code. Fails if there\n *     is no match.\n */\nfunction dn(t) {\n    if (void 0 === t) \n    // This shouldn't normally happen, but in certain error cases (like trying\n    // to send invalid proto messages) we may get an error with no GRPC code.\n    return O(\"GRPC error has no .code\"), K.UNKNOWN;\n    switch (t) {\n      case hn.OK:\n        return K.OK;\n\n      case hn.CANCELLED:\n        return K.CANCELLED;\n\n      case hn.UNKNOWN:\n        return K.UNKNOWN;\n\n      case hn.DEADLINE_EXCEEDED:\n        return K.DEADLINE_EXCEEDED;\n\n      case hn.RESOURCE_EXHAUSTED:\n        return K.RESOURCE_EXHAUSTED;\n\n      case hn.INTERNAL:\n        return K.INTERNAL;\n\n      case hn.UNAVAILABLE:\n        return K.UNAVAILABLE;\n\n      case hn.UNAUTHENTICATED:\n        return K.UNAUTHENTICATED;\n\n      case hn.INVALID_ARGUMENT:\n        return K.INVALID_ARGUMENT;\n\n      case hn.NOT_FOUND:\n        return K.NOT_FOUND;\n\n      case hn.ALREADY_EXISTS:\n        return K.ALREADY_EXISTS;\n\n      case hn.PERMISSION_DENIED:\n        return K.PERMISSION_DENIED;\n\n      case hn.FAILED_PRECONDITION:\n        return K.FAILED_PRECONDITION;\n\n      case hn.ABORTED:\n        return K.ABORTED;\n\n      case hn.OUT_OF_RANGE:\n        return K.OUT_OF_RANGE;\n\n      case hn.UNIMPLEMENTED:\n        return K.UNIMPLEMENTED;\n\n      case hn.DATA_LOSS:\n        return K.DATA_LOSS;\n\n      default:\n        return L();\n    }\n}\n\n/**\n * Converts an HTTP response's error status to the equivalent error code.\n *\n * @param status - An HTTP error response status (\"FAILED_PRECONDITION\",\n * \"UNKNOWN\", etc.)\n * @returns The equivalent Code. Non-matching responses are mapped to\n *     Code.UNKNOWN.\n */ (ln = hn || (hn = {}))[ln.OK = 0] = \"OK\", ln[ln.CANCELLED = 1] = \"CANCELLED\", \nln[ln.UNKNOWN = 2] = \"UNKNOWN\", ln[ln.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", \nln[ln.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", ln[ln.NOT_FOUND = 5] = \"NOT_FOUND\", \nln[ln.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", ln[ln.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", \nln[ln.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", ln[ln.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", \nln[ln.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", ln[ln.ABORTED = 10] = \"ABORTED\", \nln[ln.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", ln[ln.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", \nln[ln.INTERNAL = 13] = \"INTERNAL\", ln[ln.UNAVAILABLE = 14] = \"UNAVAILABLE\", ln[ln.DATA_LOSS = 15] = \"DATA_LOSS\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nclass wn {\n    constructor(t, e) {\n        this.comparator = t, this.root = e || mn.EMPTY;\n    }\n    // Returns a copy of the map, with the specified key/value added or replaced.\n    insert(t, e) {\n        return new wn(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, mn.BLACK, null, null));\n    }\n    // Returns a copy of the map, with the specified key removed.\n    remove(t) {\n        return new wn(this.comparator, this.root.remove(t, this.comparator).copy(null, null, mn.BLACK, null, null));\n    }\n    // Returns the value of the node with the given key, or null.\n    get(t) {\n        let e = this.root;\n        for (;!e.isEmpty(); ) {\n            const n = this.comparator(t, e.key);\n            if (0 === n) return e.value;\n            n < 0 ? e = e.left : n > 0 && (e = e.right);\n        }\n        return null;\n    }\n    // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n    indexOf(t) {\n        // Number of nodes that were pruned when descending right\n        let e = 0, n = this.root;\n        for (;!n.isEmpty(); ) {\n            const s = this.comparator(t, n.key);\n            if (0 === s) return e + n.left.size;\n            s < 0 ? n = n.left : (\n            // Count all nodes left of the node plus the node itself\n            e += n.left.size + 1, n = n.right);\n        }\n        // Node not found\n                return -1;\n    }\n    isEmpty() {\n        return this.root.isEmpty();\n    }\n    // Returns the total number of nodes in the map.\n    get size() {\n        return this.root.size;\n    }\n    // Returns the minimum key in the map.\n    minKey() {\n        return this.root.minKey();\n    }\n    // Returns the maximum key in the map.\n    maxKey() {\n        return this.root.maxKey();\n    }\n    // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.root.inorderTraversal(t);\n    }\n    forEach(t) {\n        this.inorderTraversal(((e, n) => (t(e, n), !1)));\n    }\n    toString() {\n        const t = [];\n        return this.inorderTraversal(((e, n) => (t.push(`${e}:${n}`), !1))), `{${t.join(\", \")}}`;\n    }\n    // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.root.reverseTraversal(t);\n    }\n    // Returns an iterator over the SortedMap.\n    getIterator() {\n        return new _n(this.root, null, this.comparator, !1);\n    }\n    getIteratorFrom(t) {\n        return new _n(this.root, t, this.comparator, !1);\n    }\n    getReverseIterator() {\n        return new _n(this.root, null, this.comparator, !0);\n    }\n    getReverseIteratorFrom(t) {\n        return new _n(this.root, t, this.comparator, !0);\n    }\n}\n\n // end SortedMap\n// An iterator over an LLRBNode.\nclass _n {\n    constructor(t, e, n, s) {\n        this.isReverse = s, this.nodeStack = [];\n        let i = 1;\n        for (;!t.isEmpty(); ) if (i = e ? n(t.key, e) : 1, \n        // flip the comparison if we're going in reverse\n        s && (i *= -1), i < 0) \n        // This node is less than our start key. ignore it\n        t = this.isReverse ? t.left : t.right; else {\n            if (0 === i) {\n                // This node is exactly equal to our start key. Push it on the stack,\n                // but stop iterating;\n                this.nodeStack.push(t);\n                break;\n            }\n            // This node is greater than our start key, add it to the stack and move\n            // to the next one\n            this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n        }\n    }\n    getNext() {\n        let t = this.nodeStack.pop();\n        const e = {\n            key: t.key,\n            value: t.value\n        };\n        if (this.isReverse) for (t = t.left; !t.isEmpty(); ) this.nodeStack.push(t), t = t.right; else for (t = t.right; !t.isEmpty(); ) this.nodeStack.push(t), \n        t = t.left;\n        return e;\n    }\n    hasNext() {\n        return this.nodeStack.length > 0;\n    }\n    peek() {\n        if (0 === this.nodeStack.length) return null;\n        const t = this.nodeStack[this.nodeStack.length - 1];\n        return {\n            key: t.key,\n            value: t.value\n        };\n    }\n}\n\n // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\nclass mn {\n    constructor(t, e, n, s, i) {\n        this.key = t, this.value = e, this.color = null != n ? n : mn.RED, this.left = null != s ? s : mn.EMPTY, \n        this.right = null != i ? i : mn.EMPTY, this.size = this.left.size + 1 + this.right.size;\n    }\n    // Returns a copy of the current node, optionally replacing pieces of it.\n    copy(t, e, n, s, i) {\n        return new mn(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != s ? s : this.left, null != i ? i : this.right);\n    }\n    isEmpty() {\n        return !1;\n    }\n    // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n    }\n    // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n    }\n    // Returns the minimum node in the tree.\n    min() {\n        return this.left.isEmpty() ? this : this.left.min();\n    }\n    // Returns the maximum key in the tree.\n    minKey() {\n        return this.min().key;\n    }\n    // Returns the maximum key in the tree.\n    maxKey() {\n        return this.right.isEmpty() ? this.key : this.right.maxKey();\n    }\n    // Returns new tree, with the key/value added.\n    insert(t, e, n) {\n        let s = this;\n        const i = n(t, s.key);\n        return s = i < 0 ? s.copy(null, null, null, s.left.insert(t, e, n), null) : 0 === i ? s.copy(null, e, null, null, null) : s.copy(null, null, null, null, s.right.insert(t, e, n)), \n        s.fixUp();\n    }\n    removeMin() {\n        if (this.left.isEmpty()) return mn.EMPTY;\n        let t = this;\n        return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), \n        t.fixUp();\n    }\n    // Returns new tree, with the specified item removed.\n    remove(t, e) {\n        let n, s = this;\n        if (e(t, s.key) < 0) s.left.isEmpty() || s.left.isRed() || s.left.left.isRed() || (s = s.moveRedLeft()), \n        s = s.copy(null, null, null, s.left.remove(t, e), null); else {\n            if (s.left.isRed() && (s = s.rotateRight()), s.right.isEmpty() || s.right.isRed() || s.right.left.isRed() || (s = s.moveRedRight()), \n            0 === e(t, s.key)) {\n                if (s.right.isEmpty()) return mn.EMPTY;\n                n = s.right.min(), s = s.copy(n.key, n.value, null, null, s.right.removeMin());\n            }\n            s = s.copy(null, null, null, null, s.right.remove(t, e));\n        }\n        return s.fixUp();\n    }\n    isRed() {\n        return this.color;\n    }\n    // Returns new tree after performing any needed rotations.\n    fixUp() {\n        let t = this;\n        return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), \n        t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n    }\n    moveRedLeft() {\n        let t = this.colorFlip();\n        return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), \n        t = t.rotateLeft(), t = t.colorFlip()), t;\n    }\n    moveRedRight() {\n        let t = this.colorFlip();\n        return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n    }\n    rotateLeft() {\n        const t = this.copy(null, null, mn.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, t, null);\n    }\n    rotateRight() {\n        const t = this.copy(null, null, mn.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, t);\n    }\n    colorFlip() {\n        const t = this.left.copy(null, null, !this.left.color, null, null), e = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, t, e);\n    }\n    // For testing.\n    checkMaxDepth() {\n        const t = this.check();\n        return Math.pow(2, t) <= this.size + 1;\n    }\n    // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n    check() {\n        if (this.isRed() && this.left.isRed()) throw L();\n        if (this.right.isRed()) throw L();\n        const t = this.left.check();\n        if (t !== this.right.check()) throw L();\n        return t + (this.isRed() ? 0 : 1);\n    }\n}\n\n // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nmn.EMPTY = null, mn.RED = !0, mn.BLACK = !1;\n\n// end LLRBEmptyNode\nmn.EMPTY = new \n// Represents an empty node (a leaf node in the Red-Black Tree).\nclass {\n    constructor() {\n        this.size = 0;\n    }\n    get key() {\n        throw L();\n    }\n    get value() {\n        throw L();\n    }\n    get color() {\n        throw L();\n    }\n    get left() {\n        throw L();\n    }\n    get right() {\n        throw L();\n    }\n    // Returns a copy of the current node.\n    copy(t, e, n, s, i) {\n        return this;\n    }\n    // Returns a copy of the tree, with the specified key/value added.\n    insert(t, e, n) {\n        return new mn(t, e);\n    }\n    // Returns a copy of the tree, with the specified key removed.\n    remove(t, e) {\n        return this;\n    }\n    isEmpty() {\n        return !0;\n    }\n    inorderTraversal(t) {\n        return !1;\n    }\n    reverseTraversal(t) {\n        return !1;\n    }\n    minKey() {\n        return null;\n    }\n    maxKey() {\n        return null;\n    }\n    isRed() {\n        return !1;\n    }\n    // For testing.\n    checkMaxDepth() {\n        return !0;\n    }\n    check() {\n        return 0;\n    }\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nclass gn {\n    constructor(t) {\n        this.comparator = t, this.data = new wn(this.comparator);\n    }\n    has(t) {\n        return null !== this.data.get(t);\n    }\n    first() {\n        return this.data.minKey();\n    }\n    last() {\n        return this.data.maxKey();\n    }\n    get size() {\n        return this.data.size;\n    }\n    indexOf(t) {\n        return this.data.indexOf(t);\n    }\n    /** Iterates elements in order defined by \"comparator\" */    forEach(t) {\n        this.data.inorderTraversal(((e, n) => (t(e), !1)));\n    }\n    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */    forEachInRange(t, e) {\n        const n = this.data.getIteratorFrom(t[0]);\n        for (;n.hasNext(); ) {\n            const s = n.getNext();\n            if (this.comparator(s.key, t[1]) >= 0) return;\n            e(s.key);\n        }\n    }\n    /**\n     * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n     */    forEachWhile(t, e) {\n        let n;\n        for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext(); ) {\n            if (!t(n.getNext().key)) return;\n        }\n    }\n    /** Finds the least element greater than or equal to `elem`. */    firstAfterOrEqual(t) {\n        const e = this.data.getIteratorFrom(t);\n        return e.hasNext() ? e.getNext().key : null;\n    }\n    getIterator() {\n        return new yn(this.data.getIterator());\n    }\n    getIteratorFrom(t) {\n        return new yn(this.data.getIteratorFrom(t));\n    }\n    /** Inserts or updates an element */    add(t) {\n        return this.copy(this.data.remove(t).insert(t, !0));\n    }\n    /** Deletes an element */    delete(t) {\n        return this.has(t) ? this.copy(this.data.remove(t)) : this;\n    }\n    isEmpty() {\n        return this.data.isEmpty();\n    }\n    unionWith(t) {\n        let e = this;\n        // Make sure `result` always refers to the larger one of the two sets.\n                return e.size < t.size && (e = t, t = this), t.forEach((t => {\n            e = e.add(t);\n        })), e;\n    }\n    isEqual(t) {\n        if (!(t instanceof gn)) return !1;\n        if (this.size !== t.size) return !1;\n        const e = this.data.getIterator(), n = t.data.getIterator();\n        for (;e.hasNext(); ) {\n            const t = e.getNext().key, s = n.getNext().key;\n            if (0 !== this.comparator(t, s)) return !1;\n        }\n        return !0;\n    }\n    toArray() {\n        const t = [];\n        return this.forEach((e => {\n            t.push(e);\n        })), t;\n    }\n    toString() {\n        const t = [];\n        return this.forEach((e => t.push(e))), \"SortedSet(\" + t.toString() + \")\";\n    }\n    copy(t) {\n        const e = new gn(this.comparator);\n        return e.data = t, e;\n    }\n}\n\nclass yn {\n    constructor(t) {\n        this.iter = t;\n    }\n    getNext() {\n        return this.iter.getNext().key;\n    }\n    hasNext() {\n        return this.iter.hasNext();\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const pn = new wn(Pt.comparator);\n\nfunction Tn() {\n    return pn;\n}\n\nconst En = new wn(Pt.comparator);\n\nfunction In() {\n    return En;\n}\n\nconst An = new wn(Pt.comparator);\n\nfunction Rn() {\n    return An;\n}\n\nconst bn = new gn(Pt.comparator);\n\nfunction Pn(...t) {\n    let e = bn;\n    for (const n of t) e = e.add(n);\n    return e;\n}\n\nconst vn = new gn(et);\n\nfunction Vn() {\n    return vn;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An event from the RemoteStore. It is split into targetChanges (changes to the\n * state or the set of documents in our watched targets) and documentUpdates\n * (changes to the actual documents).\n */ class Sn {\n    constructor(\n    /**\n     * The snapshot version this event brings us up to, or MIN if not set.\n     */\n    t, \n    /**\n     * A map from target to changes to the target. See TargetChange.\n     */\n    e, \n    /**\n     * A set of targets that is known to be inconsistent. Listens for these\n     * targets should be re-established without resume tokens.\n     */\n    n, \n    /**\n     * A set of which documents have changed or been deleted, along with the\n     * doc's new values (if not deleted).\n     */\n    s, \n    /**\n     * A set of which document updates are due only to limbo resolution targets.\n     */\n    i) {\n        this.snapshotVersion = t, this.targetChanges = e, this.targetMismatches = n, this.documentUpdates = s, \n        this.resolvedLimboDocuments = i;\n    }\n    /**\n     * HACK: Views require RemoteEvents in order to determine whether the view is\n     * CURRENT, but secondary tabs don't receive remote events. So this method is\n     * used to create a synthesized RemoteEvent that can be used to apply a\n     * CURRENT status change to a View, for queries executed in a different tab.\n     */\n    // PORTING NOTE: Multi-tab only\n    static createSynthesizedRemoteEventForCurrentChange(t, e) {\n        const n = new Map;\n        return n.set(t, Dn.createSynthesizedTargetChangeForCurrentChange(t, e)), new Sn(rt.min(), n, Vn(), Tn(), Pn());\n    }\n}\n\n/**\n * A TargetChange specifies the set of changes for a specific target as part of\n * a RemoteEvent. These changes track which documents are added, modified or\n * removed, as well as the target's resume token and whether the target is\n * marked CURRENT.\n * The actual changes *to* documents are not part of the TargetChange since\n * documents may be part of multiple targets.\n */ class Dn {\n    constructor(\n    /**\n     * An opaque, server-assigned token that allows watching a query to be resumed\n     * after disconnecting without retransmitting all the data that matches the\n     * query. The resume token essentially identifies a point in time from which\n     * the server should resume sending results.\n     */\n    t, \n    /**\n     * The \"current\" (synced) status of this target. Note that \"current\"\n     * has special meaning in the RPC protocol that implies that a target is\n     * both up-to-date and consistent with the rest of the watch stream.\n     */\n    e, \n    /**\n     * The set of documents that were newly assigned to this target as part of\n     * this remote event.\n     */\n    n, \n    /**\n     * The set of documents that were already assigned to this target but received\n     * an update during this remote event.\n     */\n    s, \n    /**\n     * The set of documents that were removed from this target as part of this\n     * remote event.\n     */\n    i) {\n        this.resumeToken = t, this.current = e, this.addedDocuments = n, this.modifiedDocuments = s, \n        this.removedDocuments = i;\n    }\n    /**\n     * This method is used to create a synthesized TargetChanges that can be used to\n     * apply a CURRENT status change to a View (for queries executed in a different\n     * tab) or for new queries (to raise snapshots with correct CURRENT status).\n     */    static createSynthesizedTargetChangeForCurrentChange(t, e) {\n        return new Dn(_t.EMPTY_BYTE_STRING, e, Pn(), Pn(), Pn());\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a changed document and a list of target ids to which this change\n * applies.\n *\n * If document has been deleted NoDocument will be provided.\n */ class Cn {\n    constructor(\n    /** The new document applies to all of these targets. */\n    t, \n    /** The new document is removed from all of these targets. */\n    e, \n    /** The key of the document for this change. */\n    n, \n    /**\n     * The new document or NoDocument if it was deleted. Is null if the\n     * document went out of view without the server sending a new document.\n     */\n    s) {\n        this.k = t, this.removedTargetIds = e, this.key = n, this.$ = s;\n    }\n}\n\nclass Nn {\n    constructor(t, e) {\n        this.targetId = t, this.O = e;\n    }\n}\n\nclass xn {\n    constructor(\n    /** What kind of change occurred to the watch target. */\n    t, \n    /** The target IDs that were added/removed/set. */\n    e, \n    /**\n     * An opaque, server-assigned token that allows watching a target to be\n     * resumed after disconnecting without retransmitting all the data that\n     * matches the target. The resume token essentially identifies a point in\n     * time from which the server should resume sending results.\n     */\n    n = _t.EMPTY_BYTE_STRING\n    /** An RPC error indicating why the watch failed. */ , s = null) {\n        this.state = t, this.targetIds = e, this.resumeToken = n, this.cause = s;\n    }\n}\n\n/** Tracks the internal state of a Watch target. */ class kn {\n    constructor() {\n        /**\n         * The number of pending responses (adds or removes) that we are waiting on.\n         * We only consider targets active that have no pending responses.\n         */\n        this.F = 0, \n        /**\n         * Keeps track of the document changes since the last raised snapshot.\n         *\n         * These changes are continuously updated as we receive document updates and\n         * always reflect the current set of changes against the last issued snapshot.\n         */\n        this.M = Fn(), \n        /** See public getters for explanations of these fields. */\n        this.L = _t.EMPTY_BYTE_STRING, this.B = !1, \n        /**\n         * Whether this target state should be included in the next snapshot. We\n         * initialize to true so that newly-added targets are included in the next\n         * RemoteEvent.\n         */\n        this.U = !0;\n    }\n    /**\n     * Whether this target has been marked 'current'.\n     *\n     * 'Current' has special meaning in the RPC protocol: It implies that the\n     * Watch backend has sent us all changes up to the point at which the target\n     * was added and that the target is consistent with the rest of the watch\n     * stream.\n     */    get current() {\n        return this.B;\n    }\n    /** The last resume token sent to us for this target. */    get resumeToken() {\n        return this.L;\n    }\n    /** Whether this target has pending target adds or target removes. */    get q() {\n        return 0 !== this.F;\n    }\n    /** Whether we have modified any state that should trigger a snapshot. */    get K() {\n        return this.U;\n    }\n    /**\n     * Applies the resume token to the TargetChange, but only when it has a new\n     * value. Empty resumeTokens are discarded.\n     */    j(t) {\n        t.approximateByteSize() > 0 && (this.U = !0, this.L = t);\n    }\n    /**\n     * Creates a target change from the current set of changes.\n     *\n     * To reset the document changes after raising this snapshot, call\n     * `clearPendingChanges()`.\n     */    W() {\n        let t = Pn(), e = Pn(), n = Pn();\n        return this.M.forEach(((s, i) => {\n            switch (i) {\n              case 0 /* Added */ :\n                t = t.add(s);\n                break;\n\n              case 2 /* Modified */ :\n                e = e.add(s);\n                break;\n\n              case 1 /* Removed */ :\n                n = n.add(s);\n                break;\n\n              default:\n                L();\n            }\n        })), new Dn(this.L, this.B, t, e, n);\n    }\n    /**\n     * Resets the document changes and sets `hasPendingChanges` to false.\n     */    G() {\n        this.U = !1, this.M = Fn();\n    }\n    H(t, e) {\n        this.U = !0, this.M = this.M.insert(t, e);\n    }\n    J(t) {\n        this.U = !0, this.M = this.M.remove(t);\n    }\n    Y() {\n        this.F += 1;\n    }\n    X() {\n        this.F -= 1;\n    }\n    Z() {\n        this.U = !0, this.B = !0;\n    }\n}\n\n/**\n * A helper class to accumulate watch changes into a RemoteEvent.\n */\nclass $n {\n    constructor(t) {\n        this.tt = t, \n        /** The internal state of all tracked targets. */\n        this.et = new Map, \n        /** Keeps track of the documents to update since the last raised snapshot. */\n        this.nt = Tn(), \n        /** A mapping of document keys to their set of target IDs. */\n        this.st = On(), \n        /**\n         * A list of targets with existence filter mismatches. These targets are\n         * known to be inconsistent and their listens needs to be re-established by\n         * RemoteStore.\n         */\n        this.it = new gn(et);\n    }\n    /**\n     * Processes and adds the DocumentWatchChange to the current set of changes.\n     */    rt(t) {\n        for (const e of t.k) t.$ && t.$.isFoundDocument() ? this.ot(e, t.$) : this.ct(e, t.key, t.$);\n        for (const e of t.removedTargetIds) this.ct(e, t.key, t.$);\n    }\n    /** Processes and adds the WatchTargetChange to the current set of changes. */    at(t) {\n        this.forEachTarget(t, (e => {\n            const n = this.ut(e);\n            switch (t.state) {\n              case 0 /* NoChange */ :\n                this.ht(e) && n.j(t.resumeToken);\n                break;\n\n              case 1 /* Added */ :\n                // We need to decrement the number of pending acks needed from watch\n                // for this targetId.\n                n.X(), n.q || \n                // We have a freshly added target, so we need to reset any state\n                // that we had previously. This can happen e.g. when remove and add\n                // back a target for existence filter mismatches.\n                n.G(), n.j(t.resumeToken);\n                break;\n\n              case 2 /* Removed */ :\n                // We need to keep track of removed targets to we can post-filter and\n                // remove any target changes.\n                // We need to decrement the number of pending acks needed from watch\n                // for this targetId.\n                n.X(), n.q || this.removeTarget(e);\n                break;\n\n              case 3 /* Current */ :\n                this.ht(e) && (n.Z(), n.j(t.resumeToken));\n                break;\n\n              case 4 /* Reset */ :\n                this.ht(e) && (\n                // Reset the target and synthesizes removes for all existing\n                // documents. The backend will re-add any documents that still\n                // match the target before it sends the next global snapshot.\n                this.lt(e), n.j(t.resumeToken));\n                break;\n\n              default:\n                L();\n            }\n        }));\n    }\n    /**\n     * Iterates over all targetIds that the watch change applies to: either the\n     * targetIds explicitly listed in the change or the targetIds of all currently\n     * active targets.\n     */    forEachTarget(t, e) {\n        t.targetIds.length > 0 ? t.targetIds.forEach(e) : this.et.forEach(((t, n) => {\n            this.ht(n) && e(n);\n        }));\n    }\n    /**\n     * Handles existence filters and synthesizes deletes for filter mismatches.\n     * Targets that are invalidated by filter mismatches are added to\n     * `pendingTargetResets`.\n     */    ft(t) {\n        const e = t.targetId, n = t.O.count, s = this.dt(e);\n        if (s) {\n            const t = s.target;\n            if (Ht(t)) if (0 === n) {\n                // The existence filter told us the document does not exist. We deduce\n                // that this document does not exist and apply a deleted document to\n                // our updates. Without applying this deleted document there might be\n                // another query that will raise this document as part of a snapshot\n                // until it is resolved, essentially exposing inconsistency between\n                // queries.\n                const n = new Pt(t.path);\n                this.ct(e, n, Kt.newNoDocument(n, rt.min()));\n            } else B(1 === n); else {\n                this.wt(e) !== n && (\n                // Existence filter mismatch: We reset the mapping and raise a new\n                // snapshot with `isFromCache:true`.\n                this.lt(e), this.it = this.it.add(e));\n            }\n        }\n    }\n    /**\n     * Converts the currently accumulated state into a remote event at the\n     * provided snapshot version. Resets the accumulated changes before returning.\n     */    _t(t) {\n        const e = new Map;\n        this.et.forEach(((n, s) => {\n            const i = this.dt(s);\n            if (i) {\n                if (n.current && Ht(i.target)) {\n                    // Document queries for document that don't exist can produce an empty\n                    // result set. To update our local cache, we synthesize a document\n                    // delete if we have not previously received the document. This\n                    // resolves the limbo state of the document, removing it from\n                    // limboDocumentRefs.\n                    // TODO(dimond): Ideally we would have an explicit lookup target\n                    // instead resulting in an explicit delete message and we could\n                    // remove this special logic.\n                    const e = new Pt(i.target.path);\n                    null !== this.nt.get(e) || this.gt(s, e) || this.ct(s, e, Kt.newNoDocument(e, t));\n                }\n                n.K && (e.set(s, n.W()), n.G());\n            }\n        }));\n        let n = Pn();\n        // We extract the set of limbo-only document updates as the GC logic\n        // special-cases documents that do not appear in the target cache.\n        \n        // TODO(gsoltis): Expand on this comment once GC is available in the JS\n        // client.\n                this.st.forEach(((t, e) => {\n            let s = !0;\n            e.forEachWhile((t => {\n                const e = this.dt(t);\n                return !e || 2 /* LimboResolution */ === e.purpose || (s = !1, !1);\n            })), s && (n = n.add(t));\n        }));\n        const s = new Sn(t, e, this.it, this.nt, n);\n        return this.nt = Tn(), this.st = On(), this.it = new gn(et), s;\n    }\n    /**\n     * Adds the provided document to the internal list of document updates and\n     * its document key to the given target's mapping.\n     */\n    // Visible for testing.\n    ot(t, e) {\n        if (!this.ht(t)) return;\n        const n = this.gt(t, e.key) ? 2 /* Modified */ : 0 /* Added */;\n        this.ut(t).H(e.key, n), this.nt = this.nt.insert(e.key, e), this.st = this.st.insert(e.key, this.yt(e.key).add(t));\n    }\n    /**\n     * Removes the provided document from the target mapping. If the\n     * document no longer matches the target, but the document's state is still\n     * known (e.g. we know that the document was deleted or we received the change\n     * that caused the filter mismatch), the new document can be provided\n     * to update the remote document cache.\n     */\n    // Visible for testing.\n    ct(t, e, n) {\n        if (!this.ht(t)) return;\n        const s = this.ut(t);\n        this.gt(t, e) ? s.H(e, 1 /* Removed */) : \n        // The document may have entered and left the target before we raised a\n        // snapshot, so we can just ignore the change.\n        s.J(e), this.st = this.st.insert(e, this.yt(e).delete(t)), n && (this.nt = this.nt.insert(e, n));\n    }\n    removeTarget(t) {\n        this.et.delete(t);\n    }\n    /**\n     * Returns the current count of documents in the target. This includes both\n     * the number of documents that the LocalStore considers to be part of the\n     * target as well as any accumulated changes.\n     */    wt(t) {\n        const e = this.ut(t).W();\n        return this.tt.getRemoteKeysForTarget(t).size + e.addedDocuments.size - e.removedDocuments.size;\n    }\n    /**\n     * Increment the number of acks needed from watch before we can consider the\n     * server to be 'in-sync' with the client's active targets.\n     */    Y(t) {\n        this.ut(t).Y();\n    }\n    ut(t) {\n        let e = this.et.get(t);\n        return e || (e = new kn, this.et.set(t, e)), e;\n    }\n    yt(t) {\n        let e = this.st.get(t);\n        return e || (e = new gn(et), this.st = this.st.insert(t, e)), e;\n    }\n    /**\n     * Verifies that the user is still interested in this target (by calling\n     * `getTargetDataForTarget()`) and that we are not waiting for pending ADDs\n     * from watch.\n     */    ht(t) {\n        const e = null !== this.dt(t);\n        return e || $(\"WatchChangeAggregator\", \"Detected inactive target\", t), e;\n    }\n    /**\n     * Returns the TargetData for an active target (i.e. a target that the user\n     * is still interested in that has no outstanding target change requests).\n     */    dt(t) {\n        const e = this.et.get(t);\n        return e && e.q ? null : this.tt.Tt(t);\n    }\n    /**\n     * Resets the state of a Watch target to its initial state (e.g. sets\n     * 'current' to false, clears the resume token and removes its target mapping\n     * from all documents).\n     */    lt(t) {\n        this.et.set(t, new kn);\n        this.tt.getRemoteKeysForTarget(t).forEach((e => {\n            this.ct(t, e, /*updatedDocument=*/ null);\n        }));\n    }\n    /**\n     * Returns whether the LocalStore considers the document to be part of the\n     * specified target.\n     */    gt(t, e) {\n        return this.tt.getRemoteKeysForTarget(t).has(e);\n    }\n}\n\nfunction On() {\n    return new wn(Pt.comparator);\n}\n\nfunction Fn() {\n    return new wn(Pt.comparator);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Mn = (() => {\n    const t = {\n        asc: \"ASCENDING\",\n        desc: \"DESCENDING\"\n    };\n    return t;\n})(), Ln = (() => {\n    const t = {\n        \"<\": \"LESS_THAN\",\n        \"<=\": \"LESS_THAN_OR_EQUAL\",\n        \">\": \"GREATER_THAN\",\n        \">=\": \"GREATER_THAN_OR_EQUAL\",\n        \"==\": \"EQUAL\",\n        \"!=\": \"NOT_EQUAL\",\n        \"array-contains\": \"ARRAY_CONTAINS\",\n        in: \"IN\",\n        \"not-in\": \"NOT_IN\",\n        \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n})();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass Bn {\n    constructor(t, e) {\n        this.databaseId = t, this.D = e;\n    }\n}\n\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction Un(t, e) {\n    if (t.D) {\n        return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n    }\n    return {\n        seconds: \"\" + e.seconds,\n        nanos: e.nanoseconds\n    };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction qn(t, e) {\n    return t.D ? e.toBase64() : e.toUint8Array();\n}\n\n/**\n * Returns a ByteString based on the proto string value.\n */ function Kn(t, e) {\n    return Un(t, e.toTimestamp());\n}\n\nfunction jn(t) {\n    return B(!!t), rt.fromTimestamp(function(t) {\n        const e = gt(t);\n        return new it(e.seconds, e.nanos);\n    }(t));\n}\n\nfunction Qn(t, e) {\n    return function(t) {\n        return new ht([ \"projects\", t.projectId, \"databases\", t.database ]);\n    }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction Wn(t) {\n    const e = ht.fromString(t);\n    return B(Ts(e)), e;\n}\n\nfunction Gn(t, e) {\n    return Qn(t.databaseId, e.path);\n}\n\nfunction zn(t, e) {\n    const n = Wn(e);\n    if (n.get(1) !== t.databaseId.projectId) throw new j(K.INVALID_ARGUMENT, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n    if (n.get(3) !== t.databaseId.database) throw new j(K.INVALID_ARGUMENT, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n    return new Pt(Xn(n));\n}\n\nfunction Hn(t, e) {\n    return Qn(t.databaseId, e);\n}\n\nfunction Jn(t) {\n    const e = Wn(t);\n    // In v1beta1 queries for collections at the root did not have a trailing\n    // \"/documents\". In v1 all resource paths contain \"/documents\". Preserve the\n    // ability to read the v1beta1 form for compatibility with queries persisted\n    // in the local target cache.\n        return 4 === e.length ? ht.emptyPath() : Xn(e);\n}\n\nfunction Yn(t) {\n    return new ht([ \"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database ]).canonicalString();\n}\n\nfunction Xn(t) {\n    return B(t.length > 4 && \"documents\" === t.get(4)), t.popFirst(5);\n}\n\n/** Creates a Document proto from key and fields (but no create/update time) */ function Zn(t, e, n) {\n    return {\n        name: Gn(t, e),\n        fields: n.value.mapValue.fields\n    };\n}\n\nfunction ts(t, e, n) {\n    const s = zn(t, e.name), i = jn(e.updateTime), r = new Ut({\n        mapValue: {\n            fields: e.fields\n        }\n    }), o = Kt.newFoundDocument(s, i, r);\n    return n && o.setHasCommittedMutations(), n ? o.setHasCommittedMutations() : o;\n}\n\nfunction es(t, e) {\n    return \"found\" in e ? function(t, e) {\n        B(!!e.found), e.found.name, e.found.updateTime;\n        const n = zn(t, e.found.name), s = jn(e.found.updateTime), i = new Ut({\n            mapValue: {\n                fields: e.found.fields\n            }\n        });\n        return Kt.newFoundDocument(n, s, i);\n    }(t, e) : \"missing\" in e ? function(t, e) {\n        B(!!e.missing), B(!!e.readTime);\n        const n = zn(t, e.missing), s = jn(e.readTime);\n        return Kt.newNoDocument(n, s);\n    }(t, e) : L();\n}\n\nfunction ns(t, e) {\n    let n;\n    if (\"targetChange\" in e) {\n        e.targetChange;\n        // proto3 default value is unset in JSON (undefined), so use 'NO_CHANGE'\n        // if unset\n        const s = function(t) {\n            return \"NO_CHANGE\" === t ? 0 /* NoChange */ : \"ADD\" === t ? 1 /* Added */ : \"REMOVE\" === t ? 2 /* Removed */ : \"CURRENT\" === t ? 3 /* Current */ : \"RESET\" === t ? 4 /* Reset */ : L();\n        }(e.targetChange.targetChangeType || \"NO_CHANGE\"), i = e.targetChange.targetIds || [], r = function(t, e) {\n            return t.D ? (B(void 0 === e || \"string\" == typeof e), _t.fromBase64String(e || \"\")) : (B(void 0 === e || e instanceof Uint8Array), \n            _t.fromUint8Array(e || new Uint8Array));\n        }(t, e.targetChange.resumeToken), o = e.targetChange.cause, c = o && function(t) {\n            const e = void 0 === t.code ? K.UNKNOWN : dn(t.code);\n            return new j(e, t.message || \"\");\n        }\n        /**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */ (o);\n        n = new xn(s, i, r, c || null);\n    } else if (\"documentChange\" in e) {\n        e.documentChange;\n        const s = e.documentChange;\n        s.document, s.document.name, s.document.updateTime;\n        const i = zn(t, s.document.name), r = jn(s.document.updateTime), o = new Ut({\n            mapValue: {\n                fields: s.document.fields\n            }\n        }), c = Kt.newFoundDocument(i, r, o), a = s.targetIds || [], u = s.removedTargetIds || [];\n        n = new Cn(a, u, c.key, c);\n    } else if (\"documentDelete\" in e) {\n        e.documentDelete;\n        const s = e.documentDelete;\n        s.document;\n        const i = zn(t, s.document), r = s.readTime ? jn(s.readTime) : rt.min(), o = Kt.newNoDocument(i, r), c = s.removedTargetIds || [];\n        n = new Cn([], c, o.key, o);\n    } else if (\"documentRemove\" in e) {\n        e.documentRemove;\n        const s = e.documentRemove;\n        s.document;\n        const i = zn(t, s.document), r = s.removedTargetIds || [];\n        n = new Cn([], r, i, null);\n    } else {\n        if (!(\"filter\" in e)) return L();\n        {\n            e.filter;\n            const t = e.filter;\n            t.targetId;\n            const s = t.count || 0, i = new un(s), r = t.targetId;\n            n = new Nn(r, i);\n        }\n    }\n    return n;\n}\n\nfunction ss(t, e) {\n    let n;\n    if (e instanceof en) n = {\n        update: Zn(t, e.key, e.value)\n    }; else if (e instanceof cn) n = {\n        delete: Gn(t, e.key)\n    }; else if (e instanceof nn) n = {\n        update: Zn(t, e.key, e.data),\n        updateMask: ps(e.fieldMask)\n    }; else {\n        if (!(e instanceof an)) return L();\n        n = {\n            verify: Gn(t, e.key)\n        };\n    }\n    return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map((t => function(t, e) {\n        const n = e.transform;\n        if (n instanceof Oe) return {\n            fieldPath: e.field.canonicalString(),\n            setToServerValue: \"REQUEST_TIME\"\n        };\n        if (n instanceof Fe) return {\n            fieldPath: e.field.canonicalString(),\n            appendMissingElements: {\n                values: n.elements\n            }\n        };\n        if (n instanceof Le) return {\n            fieldPath: e.field.canonicalString(),\n            removeAllFromArray: {\n                values: n.elements\n            }\n        };\n        if (n instanceof Ue) return {\n            fieldPath: e.field.canonicalString(),\n            increment: n.C\n        };\n        throw L();\n    }(0, t)))), e.precondition.isNone || (n.currentDocument = function(t, e) {\n        return void 0 !== e.updateTime ? {\n            updateTime: Kn(t, e.updateTime)\n        } : void 0 !== e.exists ? {\n            exists: e.exists\n        } : L();\n    }(t, e.precondition)), n;\n}\n\nfunction is(t, e) {\n    const n = e.currentDocument ? function(t) {\n        return void 0 !== t.updateTime ? Ge.updateTime(jn(t.updateTime)) : void 0 !== t.exists ? Ge.exists(t.exists) : Ge.none();\n    }(e.currentDocument) : Ge.none(), s = e.updateTransforms ? e.updateTransforms.map((e => function(t, e) {\n        let n = null;\n        if (\"setToServerValue\" in e) B(\"REQUEST_TIME\" === e.setToServerValue), n = new Oe; else if (\"appendMissingElements\" in e) {\n            const t = e.appendMissingElements.values || [];\n            n = new Fe(t);\n        } else if (\"removeAllFromArray\" in e) {\n            const t = e.removeAllFromArray.values || [];\n            n = new Le(t);\n        } else \"increment\" in e ? n = new Ue(t, e.increment) : L();\n        const s = ft.fromServerFormat(e.fieldPath);\n        return new je(s, n);\n    }(t, e))) : [];\n    if (e.update) {\n        e.update.name;\n        const i = zn(t, e.update.name), r = new Ut({\n            mapValue: {\n                fields: e.update.fields\n            }\n        });\n        if (e.updateMask) {\n            const t = function(t) {\n                const e = t.fieldPaths || [];\n                return new dt(e.map((t => ft.fromServerFormat(t))));\n            }(e.updateMask);\n            return new nn(i, r, t, n, s);\n        }\n        return new en(i, r, n, s);\n    }\n    if (e.delete) {\n        const s = zn(t, e.delete);\n        return new cn(s, n);\n    }\n    if (e.verify) {\n        const s = zn(t, e.verify);\n        return new an(s, n);\n    }\n    return L();\n}\n\nfunction rs(t, e) {\n    return t && t.length > 0 ? (B(void 0 !== e), t.map((t => function(t, e) {\n        // NOTE: Deletes don't have an updateTime.\n        let n = t.updateTime ? jn(t.updateTime) : jn(e);\n        return n.isEqual(rt.min()) && (\n        // The Firestore Emulator currently returns an update time of 0 for\n        // deletes of non-existing documents (rather than null). This breaks the\n        // test \"get deleted doc while offline with source=cache\" as NoDocuments\n        // with version 0 are filtered by IndexedDb's RemoteDocumentCache.\n        // TODO(#2149): Remove this when Emulator is fixed\n        n = jn(e)), new We(n, t.transformResults || []);\n    }(t, e)))) : [];\n}\n\nfunction os(t, e) {\n    return {\n        documents: [ Hn(t, e.path) ]\n    };\n}\n\nfunction cs(t, e) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    const n = {\n        structuredQuery: {}\n    }, s = e.path;\n    null !== e.collectionGroup ? (n.parent = Hn(t, s), n.structuredQuery.from = [ {\n        collectionId: e.collectionGroup,\n        allDescendants: !0\n    } ]) : (n.parent = Hn(t, s.popLast()), n.structuredQuery.from = [ {\n        collectionId: s.lastSegment()\n    } ]);\n    const i = function(t) {\n        if (0 === t.length) return;\n        const e = t.map((t => \n        // visible for testing\n        function(t) {\n            if (\"==\" /* EQUAL */ === t.op) {\n                if (Mt(t.value)) return {\n                    unaryFilter: {\n                        field: _s(t.field),\n                        op: \"IS_NAN\"\n                    }\n                };\n                if (Ft(t.value)) return {\n                    unaryFilter: {\n                        field: _s(t.field),\n                        op: \"IS_NULL\"\n                    }\n                };\n            } else if (\"!=\" /* NOT_EQUAL */ === t.op) {\n                if (Mt(t.value)) return {\n                    unaryFilter: {\n                        field: _s(t.field),\n                        op: \"IS_NOT_NAN\"\n                    }\n                };\n                if (Ft(t.value)) return {\n                    unaryFilter: {\n                        field: _s(t.field),\n                        op: \"IS_NOT_NULL\"\n                    }\n                };\n            }\n            return {\n                fieldFilter: {\n                    field: _s(t.field),\n                    op: ws(t.op),\n                    value: t.value\n                }\n            };\n        }(t)));\n        if (1 === e.length) return e[0];\n        return {\n            compositeFilter: {\n                op: \"AND\",\n                filters: e\n            }\n        };\n    }(e.filters);\n    i && (n.structuredQuery.where = i);\n    const r = function(t) {\n        if (0 === t.length) return;\n        return t.map((t => \n        // visible for testing\n        function(t) {\n            return {\n                field: _s(t.field),\n                direction: ds(t.dir)\n            };\n        }(t)));\n    }(e.orderBy);\n    r && (n.structuredQuery.orderBy = r);\n    const o = function(t, e) {\n        return t.D || At(e) ? e : {\n            value: e\n        };\n    }\n    /**\n * Returns a number (or null) from a google.protobuf.Int32Value proto.\n */ (t, e.limit);\n    return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = ls(e.startAt)), \n    e.endAt && (n.structuredQuery.endAt = ls(e.endAt)), n;\n}\n\nfunction as(t) {\n    let e = Jn(t.parent);\n    const n = t.structuredQuery, s = n.from ? n.from.length : 0;\n    let i = null;\n    if (s > 0) {\n        B(1 === s);\n        const t = n.from[0];\n        t.allDescendants ? i = t.collectionId : e = e.child(t.collectionId);\n    }\n    let r = [];\n    n.where && (r = hs(n.where));\n    let o = [];\n    n.orderBy && (o = n.orderBy.map((t => function(t) {\n        return new ae(ms(t.field), \n        // visible for testing\n        function(t) {\n            switch (t) {\n              case \"ASCENDING\":\n                return \"asc\" /* ASCENDING */;\n\n              case \"DESCENDING\":\n                return \"desc\" /* DESCENDING */;\n\n              default:\n                return;\n            }\n        }\n        // visible for testing\n        (t.direction));\n    }(t))));\n    let c = null;\n    n.limit && (c = function(t) {\n        let e;\n        return e = \"object\" == typeof t ? t.value : t, At(e) ? null : e;\n    }(n.limit));\n    let a = null;\n    n.startAt && (a = fs(n.startAt));\n    let u = null;\n    return n.endAt && (u = fs(n.endAt)), de(e, i, o, r, c, \"F\" /* First */ , a, u);\n}\n\nfunction us(t, e) {\n    const n = function(t, e) {\n        switch (e) {\n          case 0 /* Listen */ :\n            return null;\n\n          case 1 /* ExistenceFilterMismatch */ :\n            return \"existence-filter-mismatch\";\n\n          case 2 /* LimboResolution */ :\n            return \"limbo-document\";\n\n          default:\n            return L();\n        }\n    }(0, e.purpose);\n    return null == n ? null : {\n        \"goog-listen-tags\": n\n    };\n}\n\nfunction hs(t) {\n    return t ? void 0 !== t.unaryFilter ? [ ys(t) ] : void 0 !== t.fieldFilter ? [ gs(t) ] : void 0 !== t.compositeFilter ? t.compositeFilter.filters.map((t => hs(t))).reduce(((t, e) => t.concat(e))) : L() : [];\n}\n\nfunction ls(t) {\n    return {\n        before: t.before,\n        values: t.position\n    };\n}\n\nfunction fs(t) {\n    const e = !!t.before, n = t.values || [];\n    return new oe(n, e);\n}\n\n// visible for testing\nfunction ds(t) {\n    return Mn[t];\n}\n\nfunction ws(t) {\n    return Ln[t];\n}\n\nfunction _s(t) {\n    return {\n        fieldPath: t.canonicalString()\n    };\n}\n\nfunction ms(t) {\n    return ft.fromServerFormat(t.fieldPath);\n}\n\nfunction gs(t) {\n    return Jt.create(ms(t.fieldFilter.field), function(t) {\n        switch (t) {\n          case \"EQUAL\":\n            return \"==\" /* EQUAL */;\n\n          case \"NOT_EQUAL\":\n            return \"!=\" /* NOT_EQUAL */;\n\n          case \"GREATER_THAN\":\n            return \">\" /* GREATER_THAN */;\n\n          case \"GREATER_THAN_OR_EQUAL\":\n            return \">=\" /* GREATER_THAN_OR_EQUAL */;\n\n          case \"LESS_THAN\":\n            return \"<\" /* LESS_THAN */;\n\n          case \"LESS_THAN_OR_EQUAL\":\n            return \"<=\" /* LESS_THAN_OR_EQUAL */;\n\n          case \"ARRAY_CONTAINS\":\n            return \"array-contains\" /* ARRAY_CONTAINS */;\n\n          case \"IN\":\n            return \"in\" /* IN */;\n\n          case \"NOT_IN\":\n            return \"not-in\" /* NOT_IN */;\n\n          case \"ARRAY_CONTAINS_ANY\":\n            return \"array-contains-any\" /* ARRAY_CONTAINS_ANY */;\n\n          default:\n            return L();\n        }\n    }(t.fieldFilter.op), t.fieldFilter.value);\n}\n\nfunction ys(t) {\n    switch (t.unaryFilter.op) {\n      case \"IS_NAN\":\n        const e = ms(t.unaryFilter.field);\n        return Jt.create(e, \"==\" /* EQUAL */ , {\n            doubleValue: NaN\n        });\n\n      case \"IS_NULL\":\n        const n = ms(t.unaryFilter.field);\n        return Jt.create(n, \"==\" /* EQUAL */ , {\n            nullValue: \"NULL_VALUE\"\n        });\n\n      case \"IS_NOT_NAN\":\n        const s = ms(t.unaryFilter.field);\n        return Jt.create(s, \"!=\" /* NOT_EQUAL */ , {\n            doubleValue: NaN\n        });\n\n      case \"IS_NOT_NULL\":\n        const i = ms(t.unaryFilter.field);\n        return Jt.create(i, \"!=\" /* NOT_EQUAL */ , {\n            nullValue: \"NULL_VALUE\"\n        });\n\n      default:\n        return L();\n    }\n}\n\nfunction ps(t) {\n    const e = [];\n    return t.fields.forEach((t => e.push(t.canonicalString()))), {\n        fieldPaths: e\n    };\n}\n\nfunction Ts(t) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Encodes a resource path into a IndexedDb-compatible string form.\n */\nfunction Es(t) {\n    let e = \"\";\n    for (let n = 0; n < t.length; n++) e.length > 0 && (e = As(e)), e = Is(t.get(n), e);\n    return As(e);\n}\n\n/** Encodes a single segment of a resource path into the given result */ function Is(t, e) {\n    let n = e;\n    const s = t.length;\n    for (let e = 0; e < s; e++) {\n        const s = t.charAt(e);\n        switch (s) {\n          case \"\\0\":\n            n += \"\u0001\u0010\";\n            break;\n\n          case \"\u0001\":\n            n += \"\u0001\u0011\";\n            break;\n\n          default:\n            n += s;\n        }\n    }\n    return n;\n}\n\n/** Encodes a path separator into the given result */ function As(t) {\n    return t + \"\u0001\u0001\";\n}\n\n/**\n * Decodes the given IndexedDb-compatible string form of a resource path into\n * a ResourcePath instance. Note that this method is not suitable for use with\n * decoding resource names from the server; those are One Platform format\n * strings.\n */ function Rs(t) {\n    // Event the empty path must encode as a path of at least length 2. A path\n    // with exactly 2 must be the empty path.\n    const e = t.length;\n    if (B(e >= 2), 2 === e) return B(\"\u0001\" === t.charAt(0) && \"\u0001\" === t.charAt(1)), ht.emptyPath();\n    // Escape characters cannot exist past the second-to-last position in the\n    // source value.\n        const n = e - 2, s = [];\n    let i = \"\";\n    for (let r = 0; r < e; ) {\n        // The last two characters of a valid encoded path must be a separator, so\n        // there must be an end to this segment.\n        const e = t.indexOf(\"\u0001\", r);\n        (e < 0 || e > n) && L();\n        switch (t.charAt(e + 1)) {\n          case \"\u0001\":\n            const n = t.substring(r, e);\n            let o;\n            0 === i.length ? \n            // Avoid copying for the common case of a segment that excludes \\0\n            // and \\001\n            o = n : (i += n, o = i, i = \"\"), s.push(o);\n            break;\n\n          case \"\u0010\":\n            i += t.substring(r, e), i += \"\\0\";\n            break;\n\n          case \"\u0011\":\n            // The escape character can be used in the output to encode itself.\n            i += t.substring(r, e + 1);\n            break;\n\n          default:\n            L();\n        }\n        r = e + 2;\n    }\n    return new ht(s);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Schema Version for the Web client:\n * 1.  Initial version including Mutation Queue, Query Cache, and Remote\n *     Document Cache\n * 2.  Used to ensure a targetGlobal object exists and add targetCount to it. No\n *     longer required because migration 3 unconditionally clears it.\n * 3.  Dropped and re-created Query Cache to deal with cache corruption related\n *     to limbo resolution. Addresses\n *     https://github.com/firebase/firebase-ios-sdk/issues/1548\n * 4.  Multi-Tab Support.\n * 5.  Removal of held write acks.\n * 6.  Create document global for tracking document cache size.\n * 7.  Ensure every cached document has a sentinel row with a sequence number.\n * 8.  Add collection-parent index for Collection Group queries.\n * 9.  Change RemoteDocumentChanges store to be keyed by readTime rather than\n *     an auto-incrementing ID. This is required for Index-Free queries.\n * 10. Rewrite the canonical IDs to the explicit Protobuf-based format.\n * 11. Add bundles and named_queries for bundle support.\n */\n/**\n * Wrapper class to store timestamps (seconds and nanos) in IndexedDb objects.\n */\nclass bs {\n    constructor(t, e) {\n        this.seconds = t, this.nanoseconds = e;\n    }\n}\n\n/**\n * A singleton object to be stored in the 'owner' store in IndexedDb.\n *\n * A given database can have a single primary tab assigned at a given time. That\n * tab must validate that it is still holding the primary lease before every\n * operation that requires locked access. The primary tab should regularly\n * write an updated timestamp to this lease to prevent other tabs from\n * \"stealing\" the primary lease\n */ class Ps {\n    constructor(t, \n    /** Whether to allow shared access from multiple tabs. */\n    e, n) {\n        this.ownerId = t, this.allowTabSynchronization = e, this.leaseTimestampMs = n;\n    }\n}\n\n/**\n * Name of the IndexedDb object store.\n *\n * Note that the name 'owner' is chosen to ensure backwards compatibility with\n * older clients that only supported single locked access to the persistence\n * layer.\n */ Ps.store = \"owner\", \n/**\n * The key string used for the single object that exists in the\n * DbPrimaryClient store.\n */\nPs.key = \"owner\";\n\n/**\n * An object to be stored in the 'mutationQueues' store in IndexedDb.\n *\n * Each user gets a single queue of MutationBatches to apply to the server.\n * DbMutationQueue tracks the metadata about the queue.\n */\nclass vs {\n    constructor(\n    /**\n     * The normalized user ID to which this queue belongs.\n     */\n    t, \n    /**\n     * An identifier for the highest numbered batch that has been acknowledged\n     * by the server. All MutationBatches in this queue with batchIds less\n     * than or equal to this value are considered to have been acknowledged by\n     * the server.\n     *\n     * NOTE: this is deprecated and no longer used by the code.\n     */\n    e, \n    /**\n     * A stream token that was previously sent by the server.\n     *\n     * See StreamingWriteRequest in datastore.proto for more details about\n     * usage.\n     *\n     * After sending this token, earlier tokens may not be used anymore so\n     * only a single stream token is retained.\n     *\n     * NOTE: this is deprecated and no longer used by the code.\n     */\n    n) {\n        this.userId = t, this.lastAcknowledgedBatchId = e, this.lastStreamToken = n;\n    }\n}\n\n/** Name of the IndexedDb object store.  */ vs.store = \"mutationQueues\", \n/** Keys are automatically assigned via the userId property. */\nvs.keyPath = \"userId\";\n\n/**\n * An object to be stored in the 'mutations' store in IndexedDb.\n *\n * Represents a batch of user-level mutations intended to be sent to the server\n * in a single write. Each user-level batch gets a separate DbMutationBatch\n * with a new batchId.\n */\nclass Vs {\n    constructor(\n    /**\n     * The normalized user ID to which this batch belongs.\n     */\n    t, \n    /**\n     * An identifier for this batch, allocated using an auto-generated key.\n     */\n    e, \n    /**\n     * The local write time of the batch, stored as milliseconds since the\n     * epoch.\n     */\n    n, \n    /**\n     * A list of \"mutations\" that represent a partial base state from when this\n     * write batch was initially created. During local application of the write\n     * batch, these baseMutations are applied prior to the real writes in order\n     * to override certain document fields from the remote document cache. This\n     * is necessary in the case of non-idempotent writes (e.g. `increment()`\n     * transforms) to make sure that the local view of the modified documents\n     * doesn't flicker if the remote document cache receives the result of the\n     * non-idempotent write before the write is removed from the queue.\n     *\n     * These mutations are never sent to the backend.\n     */\n    s, \n    /**\n     * A list of mutations to apply. All mutations will be applied atomically.\n     *\n     * Mutations are serialized via toMutation().\n     */\n    i) {\n        this.userId = t, this.batchId = e, this.localWriteTimeMs = n, this.baseMutations = s, \n        this.mutations = i;\n    }\n}\n\n/** Name of the IndexedDb object store.  */ Vs.store = \"mutations\", \n/** Keys are automatically assigned via the userId, batchId properties. */\nVs.keyPath = \"batchId\", \n/** The index name for lookup of mutations by user. */\nVs.userMutationsIndex = \"userMutationsIndex\", \n/** The user mutations index is keyed by [userId, batchId] pairs. */\nVs.userMutationsKeyPath = [ \"userId\", \"batchId\" ];\n\n/**\n * An object to be stored in the 'documentMutations' store in IndexedDb.\n *\n * A manually maintained index of all the mutation batches that affect a given\n * document key. The rows in this table are references based on the contents of\n * DbMutationBatch.mutations.\n */\nclass Ss {\n    constructor() {}\n    /**\n     * Creates a [userId] key for use in the DbDocumentMutations index to iterate\n     * over all of a user's document mutations.\n     */    static prefixForUser(t) {\n        return [ t ];\n    }\n    /**\n     * Creates a [userId, encodedPath] key for use in the DbDocumentMutations\n     * index to iterate over all at document mutations for a given path or lower.\n     */    static prefixForPath(t, e) {\n        return [ t, Es(e) ];\n    }\n    /**\n     * Creates a full index key of [userId, encodedPath, batchId] for inserting\n     * and deleting into the DbDocumentMutations index.\n     */    static key(t, e, n) {\n        return [ t, Es(e), n ];\n    }\n}\n\nSs.store = \"documentMutations\", \n/**\n * Because we store all the useful information for this store in the key,\n * there is no useful information to store as the value. The raw (unencoded)\n * path cannot be stored because IndexedDb doesn't store prototype\n * information.\n */\nSs.PLACEHOLDER = new Ss;\n\n/**\n * Represents the known absence of a document at a particular version.\n * Stored in IndexedDb as part of a DbRemoteDocument object.\n */\nclass Ds {\n    constructor(t, e) {\n        this.path = t, this.readTime = e;\n    }\n}\n\n/**\n * Represents a document that is known to exist but whose data is unknown.\n * Stored in IndexedDb as part of a DbRemoteDocument object.\n */ class Cs {\n    constructor(t, e) {\n        this.path = t, this.version = e;\n    }\n}\n\n/**\n * An object to be stored in the 'remoteDocuments' store in IndexedDb.\n * It represents either:\n *\n * - A complete document.\n * - A \"no document\" representing a document that is known not to exist (at\n * some version).\n * - An \"unknown document\" representing a document that is known to exist (at\n * some version) but whose contents are unknown.\n *\n * Note: This is the persisted equivalent of a MaybeDocument and could perhaps\n * be made more general if necessary.\n */ class Ns {\n    // TODO: We are currently storing full document keys almost three times\n    // (once as part of the primary key, once - partly - as `parentPath` and once\n    // inside the encoded documents). During our next migration, we should\n    // rewrite the primary key as parentPath + document ID which would allow us\n    // to drop one value.\n    constructor(\n    /**\n     * Set to an instance of DbUnknownDocument if the data for a document is\n     * not known, but it is known that a document exists at the specified\n     * version (e.g. it had a successful update applied to it)\n     */\n    t, \n    /**\n     * Set to an instance of a DbNoDocument if it is known that no document\n     * exists.\n     */\n    e, \n    /**\n     * Set to an instance of a Document if there's a cached version of the\n     * document.\n     */\n    n, \n    /**\n     * Documents that were written to the remote document store based on\n     * a write acknowledgment are marked with `hasCommittedMutations`. These\n     * documents are potentially inconsistent with the backend's copy and use\n     * the write's commit version as their document version.\n     */\n    s, \n    /**\n     * When the document was read from the backend. Undefined for data written\n     * prior to schema version 9.\n     */\n    i, \n    /**\n     * The path of the collection this document is part of. Undefined for data\n     * written prior to schema version 9.\n     */\n    r) {\n        this.unknownDocument = t, this.noDocument = e, this.document = n, this.hasCommittedMutations = s, \n        this.readTime = i, this.parentPath = r;\n    }\n}\n\nNs.store = \"remoteDocuments\", \n/**\n * An index that provides access to all entries sorted by read time (which\n * corresponds to the last modification time of each row).\n *\n * This index is used to provide a changelog for Multi-Tab.\n */\nNs.readTimeIndex = \"readTimeIndex\", Ns.readTimeIndexPath = \"readTime\", \n/**\n * An index that provides access to documents in a collection sorted by read\n * time.\n *\n * This index is used to allow the RemoteDocumentCache to fetch newly changed\n * documents in a collection.\n */\nNs.collectionReadTimeIndex = \"collectionReadTimeIndex\", Ns.collectionReadTimeIndexPath = [ \"parentPath\", \"readTime\" ];\n\n/**\n * Contains a single entry that has metadata about the remote document cache.\n */\nclass xs {\n    /**\n     * @param byteSize - Approximately the total size in bytes of all the\n     * documents in the document cache.\n     */\n    constructor(t) {\n        this.byteSize = t;\n    }\n}\n\nxs.store = \"remoteDocumentGlobal\", xs.key = \"remoteDocumentGlobalKey\";\n\n/**\n * An object to be stored in the 'targets' store in IndexedDb.\n *\n * This is based on and should be kept in sync with the proto used in the iOS\n * client.\n *\n * Each query the client listens to against the server is tracked on disk so\n * that the query can be efficiently resumed on restart.\n */\nclass ks {\n    constructor(\n    /**\n     * An auto-generated sequential numeric identifier for the query.\n     *\n     * Queries are stored using their canonicalId as the key, but these\n     * canonicalIds can be quite long so we additionally assign a unique\n     * queryId which can be used by referenced data structures (e.g.\n     * indexes) to minimize the on-disk cost.\n     */\n    t, \n    /**\n     * The canonical string representing this query. This is not unique.\n     */\n    e, \n    /**\n     * The last readTime received from the Watch Service for this query.\n     *\n     * This is the same value as TargetChange.read_time in the protos.\n     */\n    n, \n    /**\n     * An opaque, server-assigned token that allows watching a query to be\n     * resumed after disconnecting without retransmitting all the data\n     * that matches the query. The resume token essentially identifies a\n     * point in time from which the server should resume sending results.\n     *\n     * This is related to the snapshotVersion in that the resumeToken\n     * effectively also encodes that value, but the resumeToken is opaque\n     * and sometimes encodes additional information.\n     *\n     * A consequence of this is that the resumeToken should be used when\n     * asking the server to reason about where this client is in the watch\n     * stream, but the client should use the snapshotVersion for its own\n     * purposes.\n     *\n     * This is the same value as TargetChange.resume_token in the protos.\n     */\n    s, \n    /**\n     * A sequence number representing the last time this query was\n     * listened to, used for garbage collection purposes.\n     *\n     * Conventionally this would be a timestamp value, but device-local\n     * clocks are unreliable and they must be able to create new listens\n     * even while disconnected. Instead this should be a monotonically\n     * increasing number that's incremented on each listen call.\n     *\n     * This is different from the queryId since the queryId is an\n     * immutable identifier assigned to the Query on first use while\n     * lastListenSequenceNumber is updated every time the query is\n     * listened to.\n     */\n    i, \n    /**\n     * Denotes the maximum snapshot version at which the associated query view\n     * contained no limbo documents.  Undefined for data written prior to\n     * schema version 9.\n     */\n    r, \n    /**\n     * The query for this target.\n     *\n     * Because canonical ids are not unique we must store the actual query. We\n     * use the proto to have an object we can persist without having to\n     * duplicate translation logic to and from a `Query` object.\n     */\n    o) {\n        this.targetId = t, this.canonicalId = e, this.readTime = n, this.resumeToken = s, \n        this.lastListenSequenceNumber = i, this.lastLimboFreeSnapshotVersion = r, this.query = o;\n    }\n}\n\nks.store = \"targets\", \n/** Keys are automatically assigned via the targetId property. */\nks.keyPath = \"targetId\", \n/** The name of the queryTargets index. */\nks.queryTargetsIndexName = \"queryTargetsIndex\", \n/**\n * The index of all canonicalIds to the targets that they match. This is not\n * a unique mapping because canonicalId does not promise a unique name for all\n * possible queries, so we append the targetId to make the mapping unique.\n */\nks.queryTargetsKeyPath = [ \"canonicalId\", \"targetId\" ];\n\n/**\n * An object representing an association between a target and a document, or a\n * sentinel row marking the last sequence number at which a document was used.\n * Each document cached must have a corresponding sentinel row before lru\n * garbage collection is enabled.\n *\n * The target associations and sentinel rows are co-located so that orphaned\n * documents and their sequence numbers can be identified efficiently via a scan\n * of this store.\n */\nclass $s {\n    constructor(\n    /**\n     * The targetId identifying a target or 0 for a sentinel row.\n     */\n    t, \n    /**\n     * The path to the document, as encoded in the key.\n     */\n    e, \n    /**\n     * If this is a sentinel row, this should be the sequence number of the last\n     * time the document specified by `path` was used. Otherwise, it should be\n     * `undefined`.\n     */\n    n) {\n        this.targetId = t, this.path = e, this.sequenceNumber = n;\n    }\n}\n\n/** Name of the IndexedDb object store.  */ $s.store = \"targetDocuments\", \n/** Keys are automatically assigned via the targetId, path properties. */\n$s.keyPath = [ \"targetId\", \"path\" ], \n/** The index name for the reverse index. */\n$s.documentTargetsIndex = \"documentTargetsIndex\", \n/** We also need to create the reverse index for these properties. */\n$s.documentTargetsKeyPath = [ \"path\", \"targetId\" ];\n\n/**\n * A record of global state tracked across all Targets, tracked separately\n * to avoid the need for extra indexes.\n *\n * This should be kept in-sync with the proto used in the iOS client.\n */\nclass Os {\n    constructor(\n    /**\n     * The highest numbered target id across all targets.\n     *\n     * See DbTarget.targetId.\n     */\n    t, \n    /**\n     * The highest numbered lastListenSequenceNumber across all targets.\n     *\n     * See DbTarget.lastListenSequenceNumber.\n     */\n    e, \n    /**\n     * A global snapshot version representing the last consistent snapshot we\n     * received from the backend. This is monotonically increasing and any\n     * snapshots received from the backend prior to this version (e.g. for\n     * targets resumed with a resumeToken) should be suppressed (buffered)\n     * until the backend has caught up to this snapshot version again. This\n     * prevents our cache from ever going backwards in time.\n     */\n    n, \n    /**\n     * The number of targets persisted.\n     */\n    s) {\n        this.highestTargetId = t, this.highestListenSequenceNumber = e, this.lastRemoteSnapshotVersion = n, \n        this.targetCount = s;\n    }\n}\n\n/**\n * The key string used for the single object that exists in the\n * DbTargetGlobal store.\n */ Os.key = \"targetGlobalKey\", Os.store = \"targetGlobal\";\n\n/**\n * An object representing an association between a Collection id (e.g. 'messages')\n * to a parent path (e.g. '/chats/123') that contains it as a (sub)collection.\n * This is used to efficiently find all collections to query when performing\n * a Collection Group query.\n */\nclass Fs {\n    constructor(\n    /**\n     * The collectionId (e.g. 'messages')\n     */\n    t, \n    /**\n     * The path to the parent (either a document location or an empty path for\n     * a root-level collection).\n     */\n    e) {\n        this.collectionId = t, this.parent = e;\n    }\n}\n\n/** Name of the IndexedDb object store. */ Fs.store = \"collectionParents\", \n/** Keys are automatically assigned via the collectionId, parent properties. */\nFs.keyPath = [ \"collectionId\", \"parent\" ];\n\n/**\n * A record of the metadata state of each client.\n *\n * PORTING NOTE: This is used to synchronize multi-tab state and does not need\n * to be ported to iOS or Android.\n */\nclass Ms {\n    constructor(\n    // Note: Previous schema versions included a field\n    // \"lastProcessedDocumentChangeId\". Don't use anymore.\n    /** The auto-generated client id assigned at client startup. */\n    t, \n    /** The last time this state was updated. */\n    e, \n    /** Whether the client's network connection is enabled. */\n    n, \n    /** Whether this client is running in a foreground tab. */\n    s) {\n        this.clientId = t, this.updateTimeMs = e, this.networkEnabled = n, this.inForeground = s;\n    }\n}\n\n/** Name of the IndexedDb object store. */ Ms.store = \"clientMetadata\", \n/** Keys are automatically assigned via the clientId properties. */\nMs.keyPath = \"clientId\";\n\n/**\n * A object representing a bundle loaded by the SDK.\n */\nclass Ls {\n    constructor(\n    /** The ID of the loaded bundle. */\n    t, \n    /** The create time of the loaded bundle. */\n    e, \n    /** The schema version of the loaded bundle. */\n    n) {\n        this.bundleId = t, this.createTime = e, this.version = n;\n    }\n}\n\n/** Name of the IndexedDb object store. */ Ls.store = \"bundles\", Ls.keyPath = \"bundleId\";\n\n/**\n * A object representing a named query loaded by the SDK via a bundle.\n */\nclass Bs {\n    constructor(\n    /** The name of the query. */\n    t, \n    /** The read time of the results saved in the bundle from the named query. */\n    e, \n    /** The query saved in the bundle. */\n    n) {\n        this.name = t, this.readTime = e, this.bundledQuery = n;\n    }\n}\n\n/** Name of the IndexedDb object store. */ Bs.store = \"namedQueries\", Bs.keyPath = \"name\";\n\n// Visible for testing\nconst Us = [ ...[ ...[ ...[ ...[ vs.store, Vs.store, Ss.store, Ns.store, ks.store, Ps.store, Os.store, $s.store ], Ms.store ], xs.store ], Fs.store ], Ls.store, Bs.store ], qs = \"The current tab is not in the required state to perform this operation. It might be necessary to refresh the browser tab.\";\n\n// V2 is no longer usable (see comment at top of file)\n// Visible for testing\n/**\n * A base class representing a persistence transaction, encapsulating both the\n * transaction's sequence numbers as well as a list of onCommitted listeners.\n *\n * When you call Persistence.runTransaction(), it will create a transaction and\n * pass it to your callback. You then pass it to any method that operates\n * on persistence.\n */\nclass Ks {\n    constructor() {\n        this.onCommittedListeners = [];\n    }\n    addOnCommittedListener(t) {\n        this.onCommittedListeners.push(t);\n    }\n    raiseOnCommittedEvent() {\n        this.onCommittedListeners.forEach((t => t()));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * PersistencePromise is essentially a re-implementation of Promise except\n * it has a .next() method instead of .then() and .next() and .catch() callbacks\n * are executed synchronously when a PersistencePromise resolves rather than\n * asynchronously (Promise implementations use setImmediate() or similar).\n *\n * This is necessary to interoperate with IndexedDB which will automatically\n * commit transactions if control is returned to the event loop without\n * synchronously initiating another operation on the transaction.\n *\n * NOTE: .then() and .catch() only allow a single consumer, unlike normal\n * Promises.\n */ class js {\n    constructor(t) {\n        // NOTE: next/catchCallback will always point to our own wrapper functions,\n        // not the user's raw next() or catch() callbacks.\n        this.nextCallback = null, this.catchCallback = null, \n        // When the operation resolves, we'll set result or error and mark isDone.\n        this.result = void 0, this.error = void 0, this.isDone = !1, \n        // Set to true when .then() or .catch() are called and prevents additional\n        // chaining.\n        this.callbackAttached = !1, t((t => {\n            this.isDone = !0, this.result = t, this.nextCallback && \n            // value should be defined unless T is Void, but we can't express\n            // that in the type system.\n            this.nextCallback(t);\n        }), (t => {\n            this.isDone = !0, this.error = t, this.catchCallback && this.catchCallback(t);\n        }));\n    }\n    catch(t) {\n        return this.next(void 0, t);\n    }\n    next(t, e) {\n        return this.callbackAttached && L(), this.callbackAttached = !0, this.isDone ? this.error ? this.wrapFailure(e, this.error) : this.wrapSuccess(t, this.result) : new js(((n, s) => {\n            this.nextCallback = e => {\n                this.wrapSuccess(t, e).next(n, s);\n            }, this.catchCallback = t => {\n                this.wrapFailure(e, t).next(n, s);\n            };\n        }));\n    }\n    toPromise() {\n        return new Promise(((t, e) => {\n            this.next(t, e);\n        }));\n    }\n    wrapUserFunction(t) {\n        try {\n            const e = t();\n            return e instanceof js ? e : js.resolve(e);\n        } catch (t) {\n            return js.reject(t);\n        }\n    }\n    wrapSuccess(t, e) {\n        return t ? this.wrapUserFunction((() => t(e))) : js.resolve(e);\n    }\n    wrapFailure(t, e) {\n        return t ? this.wrapUserFunction((() => t(e))) : js.reject(e);\n    }\n    static resolve(t) {\n        return new js(((e, n) => {\n            e(t);\n        }));\n    }\n    static reject(t) {\n        return new js(((e, n) => {\n            n(t);\n        }));\n    }\n    static waitFor(\n    // Accept all Promise types in waitFor().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t) {\n        return new js(((e, n) => {\n            let s = 0, i = 0, r = !1;\n            t.forEach((t => {\n                ++s, t.next((() => {\n                    ++i, r && i === s && e();\n                }), (t => n(t)));\n            })), r = !0, i === s && e();\n        }));\n    }\n    /**\n     * Given an array of predicate functions that asynchronously evaluate to a\n     * boolean, implements a short-circuiting `or` between the results. Predicates\n     * will be evaluated until one of them returns `true`, then stop. The final\n     * result will be whether any of them returned `true`.\n     */    static or(t) {\n        let e = js.resolve(!1);\n        for (const n of t) e = e.next((t => t ? js.resolve(t) : n()));\n        return e;\n    }\n    static forEach(t, e) {\n        const n = [];\n        return t.forEach(((t, s) => {\n            n.push(e.call(this, t, s));\n        })), this.waitFor(n);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// References to `window` are guarded by SimpleDb.isAvailable()\n/* eslint-disable no-restricted-globals */\n/**\n * Wraps an IDBTransaction and exposes a store() method to get a handle to a\n * specific object store.\n */\nclass Qs {\n    constructor(t, e) {\n        this.action = t, this.transaction = e, this.aborted = !1, \n        /**\n         * A `Promise` that resolves with the result of the IndexedDb transaction.\n         */\n        this.Et = new Q, this.transaction.oncomplete = () => {\n            this.Et.resolve();\n        }, this.transaction.onabort = () => {\n            e.error ? this.Et.reject(new zs(t, e.error)) : this.Et.resolve();\n        }, this.transaction.onerror = e => {\n            const n = Zs(e.target.error);\n            this.Et.reject(new zs(t, n));\n        };\n    }\n    static open(t, e, n, s) {\n        try {\n            return new Qs(e, t.transaction(s, n));\n        } catch (t) {\n            throw new zs(e, t);\n        }\n    }\n    get It() {\n        return this.Et.promise;\n    }\n    abort(t) {\n        t && this.Et.reject(t), this.aborted || ($(\"SimpleDb\", \"Aborting transaction:\", t ? t.message : \"Client-initiated abort\"), \n        this.aborted = !0, this.transaction.abort());\n    }\n    /**\n     * Returns a SimpleDbStore<KeyType, ValueType> for the specified store. All\n     * operations performed on the SimpleDbStore happen within the context of this\n     * transaction and it cannot be used anymore once the transaction is\n     * completed.\n     *\n     * Note that we can't actually enforce that the KeyType and ValueType are\n     * correct, but they allow type safety through the rest of the consuming code.\n     */    store(t) {\n        const e = this.transaction.objectStore(t);\n        return new Js(e);\n    }\n}\n\n/**\n * Provides a wrapper around IndexedDb with a simplified interface that uses\n * Promise-like return values to chain operations. Real promises cannot be used\n * since .then() continuations are executed asynchronously (e.g. via\n * .setImmediate), which would cause IndexedDB to end the transaction.\n * See PersistencePromise for more details.\n */ class Ws {\n    /*\n     * Creates a new SimpleDb wrapper for IndexedDb database `name`.\n     *\n     * Note that `version` must not be a downgrade. IndexedDB does not support\n     * downgrading the schema version. We currently do not support any way to do\n     * versioning outside of IndexedDB's versioning mechanism, as only\n     * version-upgrade transactions are allowed to do things like create\n     * objectstores.\n     */\n    constructor(t, e, n) {\n        this.name = t, this.version = e, this.At = n;\n        // NOTE: According to https://bugs.webkit.org/show_bug.cgi?id=197050, the\n        // bug we're checking for should exist in iOS >= 12.2 and < 13, but for\n        // whatever reason it's much harder to hit after 12.2 so we only proactively\n        // log on 12.2.\n        12.2 === Ws.Rt(getUA()) && O(\"Firestore persistence suffers from a bug in iOS 12.2 Safari that may cause your app to stop working. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.\");\n    }\n    /** Deletes the specified database. */    static delete(t) {\n        return $(\"SimpleDb\", \"Removing database:\", t), Ys(window.indexedDB.deleteDatabase(t)).toPromise();\n    }\n    /** Returns true if IndexedDB is available in the current environment. */    static bt() {\n        if (!isIndexedDBAvailable()) return !1;\n        if (Ws.Pt()) return !0;\n        // We extensively use indexed array values and compound keys,\n        // which IE and Edge do not support. However, they still have indexedDB\n        // defined on the window, so we need to check for them here and make sure\n        // to return that persistence is not enabled for those browsers.\n        // For tracking support of this feature, see here:\n        // https://developer.microsoft.com/en-us/microsoft-edge/platform/status/indexeddbarraysandmultientrysupport/\n        // Check the UA string to find out the browser.\n                const t = getUA(), e = Ws.Rt(t), n = 0 < e && e < 10, s = Ws.vt(t), i = 0 < s && s < 4.5;\n        // IE 10\n        // ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';\n        // IE 11\n        // ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';\n        // Edge\n        // ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML,\n        // like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';\n        // iOS Safari: Disable for users running iOS version < 10.\n                return !(t.indexOf(\"MSIE \") > 0 || t.indexOf(\"Trident/\") > 0 || t.indexOf(\"Edge/\") > 0 || n || i);\n    }\n    /**\n     * Returns true if the backing IndexedDB store is the Node IndexedDBShim\n     * (see https://github.com/axemclion/IndexedDBShim).\n     */    static Pt() {\n        var t;\n        return \"undefined\" != typeof process && \"YES\" === (null === (t = process.env) || void 0 === t ? void 0 : t.Vt);\n    }\n    /** Helper to get a typed SimpleDbStore from a transaction. */    static St(t, e) {\n        return t.store(e);\n    }\n    // visible for testing\n    /** Parse User Agent to determine iOS version. Returns -1 if not found. */\n    static Rt(t) {\n        const e = t.match(/i(?:phone|pad|pod) os ([\\d_]+)/i), n = e ? e[1].split(\"_\").slice(0, 2).join(\".\") : \"-1\";\n        return Number(n);\n    }\n    // visible for testing\n    /** Parse User Agent to determine Android version. Returns -1 if not found. */\n    static vt(t) {\n        const e = t.match(/Android ([\\d.]+)/i), n = e ? e[1].split(\".\").slice(0, 2).join(\".\") : \"-1\";\n        return Number(n);\n    }\n    /**\n     * Opens the specified database, creating or upgrading it if necessary.\n     */    async Dt(t) {\n        return this.db || ($(\"SimpleDb\", \"Opening database:\", this.name), this.db = await new Promise(((e, n) => {\n            // TODO(mikelehen): Investigate browser compatibility.\n            // https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB\n            // suggests IE9 and older WebKit browsers handle upgrade\n            // differently. They expect setVersion, as described here:\n            // https://developer.mozilla.org/en-US/docs/Web/API/IDBVersionChangeRequest/setVersion\n            const s = indexedDB.open(this.name, this.version);\n            s.onsuccess = t => {\n                const n = t.target.result;\n                e(n);\n            }, s.onblocked = () => {\n                n(new zs(t, \"Cannot upgrade IndexedDB schema while another tab is open. Close all tabs that access Firestore and reload this page to proceed.\"));\n            }, s.onerror = e => {\n                const s = e.target.error;\n                \"VersionError\" === s.name ? n(new j(K.FAILED_PRECONDITION, \"A newer version of the Firestore SDK was previously used and so the persisted data is not compatible with the version of the SDK you are now using. The SDK will operate with persistence disabled. If you need persistence, please re-upgrade to a newer version of the SDK or else clear the persisted IndexedDB data for your app to start fresh.\")) : \"InvalidStateError\" === s.name ? n(new j(K.FAILED_PRECONDITION, \"Unable to open an IndexedDB connection. This could be due to running in a private browsing session on a browser whose private browsing sessions do not support IndexedDB: \" + s)) : n(new zs(t, s));\n            }, s.onupgradeneeded = t => {\n                $(\"SimpleDb\", 'Database \"' + this.name + '\" requires upgrade from version:', t.oldVersion);\n                const e = t.target.result;\n                this.At.Ct(e, s.transaction, t.oldVersion, this.version).next((() => {\n                    $(\"SimpleDb\", \"Database upgrade to version \" + this.version + \" complete\");\n                }));\n            };\n        }))), this.Nt && (this.db.onversionchange = t => this.Nt(t)), this.db;\n    }\n    xt(t) {\n        this.Nt = t, this.db && (this.db.onversionchange = e => t(e));\n    }\n    async runTransaction(t, e, n, s) {\n        const i = \"readonly\" === e;\n        let r = 0;\n        for (;;) {\n            ++r;\n            try {\n                this.db = await this.Dt(t);\n                const e = Qs.open(this.db, t, i ? \"readonly\" : \"readwrite\", n), r = s(e).catch((t => (\n                // Abort the transaction if there was an error.\n                e.abort(t), js.reject(t)))).toPromise();\n                // As noted above, errors are propagated by aborting the transaction. So\n                // we swallow any error here to avoid the browser logging it as unhandled.\n                return r.catch((() => {})), \n                // Wait for the transaction to complete (i.e. IndexedDb's onsuccess event to\n                // fire), but still return the original transactionFnResult back to the\n                // caller.\n                await e.It, r;\n            } catch (t) {\n                // TODO(schmidt-sebastian): We could probably be smarter about this and\n                // not retry exceptions that are likely unrecoverable (such as quota\n                // exceeded errors).\n                // Note: We cannot use an instanceof check for FirestoreException, since the\n                // exception is wrapped in a generic error by our async/await handling.\n                const e = \"FirebaseError\" !== t.name && r < 3;\n                if ($(\"SimpleDb\", \"Transaction failed with error:\", t.message, \"Retrying:\", e), \n                this.close(), !e) return Promise.reject(t);\n            }\n        }\n    }\n    close() {\n        this.db && this.db.close(), this.db = void 0;\n    }\n}\n\n/**\n * A controller for iterating over a key range or index. It allows an iterate\n * callback to delete the currently-referenced object, or jump to a new key\n * within the key range or index.\n */ class Gs {\n    constructor(t) {\n        this.kt = t, this.$t = !1, this.Ot = null;\n    }\n    get isDone() {\n        return this.$t;\n    }\n    get Ft() {\n        return this.Ot;\n    }\n    set cursor(t) {\n        this.kt = t;\n    }\n    /**\n     * This function can be called to stop iteration at any point.\n     */    done() {\n        this.$t = !0;\n    }\n    /**\n     * This function can be called to skip to that next key, which could be\n     * an index or a primary key.\n     */    Mt(t) {\n        this.Ot = t;\n    }\n    /**\n     * Delete the current cursor value from the object store.\n     *\n     * NOTE: You CANNOT do this with a keysOnly query.\n     */    delete() {\n        return Ys(this.kt.delete());\n    }\n}\n\n/** An error that wraps exceptions that thrown during IndexedDB execution. */ class zs extends j {\n    constructor(t, e) {\n        super(K.UNAVAILABLE, `IndexedDB transaction '${t}' failed: ${e}`), this.name = \"IndexedDbTransactionError\";\n    }\n}\n\n/** Verifies whether `e` is an IndexedDbTransactionError. */ function Hs(t) {\n    // Use name equality, as instanceof checks on errors don't work with errors\n    // that wrap other errors.\n    return \"IndexedDbTransactionError\" === t.name;\n}\n\n/**\n * A wrapper around an IDBObjectStore providing an API that:\n *\n * 1) Has generic KeyType / ValueType parameters to provide strongly-typed\n * methods for acting against the object store.\n * 2) Deals with IndexedDB's onsuccess / onerror event callbacks, making every\n * method return a PersistencePromise instead.\n * 3) Provides a higher-level API to avoid needing to do excessive wrapping of\n * intermediate IndexedDB types (IDBCursorWithValue, etc.)\n */ class Js {\n    constructor(t) {\n        this.store = t;\n    }\n    put(t, e) {\n        let n;\n        return void 0 !== e ? ($(\"SimpleDb\", \"PUT\", this.store.name, t, e), n = this.store.put(e, t)) : ($(\"SimpleDb\", \"PUT\", this.store.name, \"<auto-key>\", t), \n        n = this.store.put(t)), Ys(n);\n    }\n    /**\n     * Adds a new value into an Object Store and returns the new key. Similar to\n     * IndexedDb's `add()`, this method will fail on primary key collisions.\n     *\n     * @param value - The object to write.\n     * @returns The key of the value to add.\n     */    add(t) {\n        $(\"SimpleDb\", \"ADD\", this.store.name, t, t);\n        return Ys(this.store.add(t));\n    }\n    /**\n     * Gets the object with the specified key from the specified store, or null\n     * if no object exists with the specified key.\n     *\n     * @key The key of the object to get.\n     * @returns The object with the specified key or null if no object exists.\n     */    get(t) {\n        // We're doing an unsafe cast to ValueType.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return Ys(this.store.get(t)).next((e => (\n        // Normalize nonexistence to null.\n        void 0 === e && (e = null), $(\"SimpleDb\", \"GET\", this.store.name, t, e), e)));\n    }\n    delete(t) {\n        $(\"SimpleDb\", \"DELETE\", this.store.name, t);\n        return Ys(this.store.delete(t));\n    }\n    /**\n     * If we ever need more of the count variants, we can add overloads. For now,\n     * all we need is to count everything in a store.\n     *\n     * Returns the number of rows in the store.\n     */    count() {\n        $(\"SimpleDb\", \"COUNT\", this.store.name);\n        return Ys(this.store.count());\n    }\n    Lt(t, e) {\n        const n = this.cursor(this.options(t, e)), s = [];\n        return this.Bt(n, ((t, e) => {\n            s.push(e);\n        })).next((() => s));\n    }\n    Ut(t, e) {\n        $(\"SimpleDb\", \"DELETE ALL\", this.store.name);\n        const n = this.options(t, e);\n        n.qt = !1;\n        const s = this.cursor(n);\n        return this.Bt(s, ((t, e, n) => n.delete()));\n    }\n    Kt(t, e) {\n        let n;\n        e ? n = t : (n = {}, e = t);\n        const s = this.cursor(n);\n        return this.Bt(s, e);\n    }\n    /**\n     * Iterates over a store, but waits for the given callback to complete for\n     * each entry before iterating the next entry. This allows the callback to do\n     * asynchronous work to determine if this iteration should continue.\n     *\n     * The provided callback should return `true` to continue iteration, and\n     * `false` otherwise.\n     */    jt(t) {\n        const e = this.cursor({});\n        return new js(((n, s) => {\n            e.onerror = t => {\n                const e = Zs(t.target.error);\n                s(e);\n            }, e.onsuccess = e => {\n                const s = e.target.result;\n                s ? t(s.primaryKey, s.value).next((t => {\n                    t ? s.continue() : n();\n                })) : n();\n            };\n        }));\n    }\n    Bt(t, e) {\n        const n = [];\n        return new js(((s, i) => {\n            t.onerror = t => {\n                i(t.target.error);\n            }, t.onsuccess = t => {\n                const i = t.target.result;\n                if (!i) return void s();\n                const r = new Gs(i), o = e(i.primaryKey, i.value, r);\n                if (o instanceof js) {\n                    const t = o.catch((t => (r.done(), js.reject(t))));\n                    n.push(t);\n                }\n                r.isDone ? s() : null === r.Ft ? i.continue() : i.continue(r.Ft);\n            };\n        })).next((() => js.waitFor(n)));\n    }\n    options(t, e) {\n        let n;\n        return void 0 !== t && (\"string\" == typeof t ? n = t : e = t), {\n            index: n,\n            range: e\n        };\n    }\n    cursor(t) {\n        let e = \"next\";\n        if (t.reverse && (e = \"prev\"), t.index) {\n            const n = this.store.index(t.index);\n            return t.qt ? n.openKeyCursor(t.range, e) : n.openCursor(t.range, e);\n        }\n        return this.store.openCursor(t.range, e);\n    }\n}\n\n/**\n * Wraps an IDBRequest in a PersistencePromise, using the onsuccess / onerror\n * handlers to resolve / reject the PersistencePromise as appropriate.\n */ function Ys(t) {\n    return new js(((e, n) => {\n        t.onsuccess = t => {\n            const n = t.target.result;\n            e(n);\n        }, t.onerror = t => {\n            const e = Zs(t.target.error);\n            n(e);\n        };\n    }));\n}\n\n// Guard so we only report the error once.\nlet Xs = !1;\n\nfunction Zs(t) {\n    const e = Ws.Rt(getUA());\n    if (e >= 12.2 && e < 13) {\n        const e = \"An internal error was encountered in the Indexed Database server\";\n        if (t.message.indexOf(e) >= 0) {\n            // Wrap error in a more descriptive one.\n            const t = new j(\"internal\", `IOS_INDEXEDDB_BUG1: IndexedDb has thrown '${e}'. This is likely due to an unavoidable bug in iOS. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.`);\n            return Xs || (Xs = !0, \n            // Throw a global exception outside of this promise chain, for the user to\n            // potentially catch.\n            setTimeout((() => {\n                throw t;\n            }), 0)), t;\n        }\n    }\n    return t;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class ti extends Ks {\n    constructor(t, e) {\n        super(), this.Qt = t, this.currentSequenceNumber = e;\n    }\n}\n\nfunction ei(t, e) {\n    const n = q(t);\n    return Ws.St(n.Qt, e);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A batch of mutations that will be sent as one unit to the backend.\n */ class ni {\n    /**\n     * @param batchId - The unique ID of this mutation batch.\n     * @param localWriteTime - The original write time of this mutation.\n     * @param baseMutations - Mutations that are used to populate the base\n     * values when this mutation is applied locally. This can be used to locally\n     * overwrite values that are persisted in the remote document cache. Base\n     * mutations are never sent to the backend.\n     * @param mutations - The user-provided mutations in this mutation batch.\n     * User-provided mutations are applied both locally and remotely on the\n     * backend.\n     */\n    constructor(t, e, n, s) {\n        this.batchId = t, this.localWriteTime = e, this.baseMutations = n, this.mutations = s;\n    }\n    /**\n     * Applies all the mutations in this MutationBatch to the specified document\n     * to compute the state of the remote document\n     *\n     * @param document - The document to apply mutations to.\n     * @param batchResult - The result of applying the MutationBatch to the\n     * backend.\n     */    applyToRemoteDocument(t, e) {\n        const n = e.mutationResults;\n        for (let e = 0; e < this.mutations.length; e++) {\n            const s = this.mutations[e];\n            if (s.key.isEqual(t.key)) {\n                Je(s, t, n[e]);\n            }\n        }\n    }\n    /**\n     * Computes the local view of a document given all the mutations in this\n     * batch.\n     *\n     * @param document - The document to apply mutations to.\n     */    applyToLocalView(t) {\n        // First, apply the base state. This allows us to apply non-idempotent\n        // transform against a consistent set of values.\n        for (const e of this.baseMutations) e.key.isEqual(t.key) && Ye(e, t, this.localWriteTime);\n        // Second, apply all user-provided mutations.\n                for (const e of this.mutations) e.key.isEqual(t.key) && Ye(e, t, this.localWriteTime);\n    }\n    /**\n     * Computes the local view for all provided documents given the mutations in\n     * this batch.\n     */    applyToLocalDocumentSet(t) {\n        // TODO(mrschmidt): This implementation is O(n^2). If we apply the mutations\n        // directly (as done in `applyToLocalView()`), we can reduce the complexity\n        // to O(n).\n        this.mutations.forEach((e => {\n            const n = t.get(e.key), s = n;\n            // TODO(mutabledocuments): This method should take a MutableDocumentMap\n            // and we should remove this cast.\n                        this.applyToLocalView(s), n.isValidDocument() || s.convertToNoDocument(rt.min());\n        }));\n    }\n    keys() {\n        return this.mutations.reduce(((t, e) => t.add(e.key)), Pn());\n    }\n    isEqual(t) {\n        return this.batchId === t.batchId && nt(this.mutations, t.mutations, ((t, e) => Ze(t, e))) && nt(this.baseMutations, t.baseMutations, ((t, e) => Ze(t, e)));\n    }\n}\n\n/** The result of applying a mutation batch to the backend. */ class si {\n    constructor(t, e, n, \n    /**\n     * A pre-computed mapping from each mutated document to the resulting\n     * version.\n     */\n    s) {\n        this.batch = t, this.commitVersion = e, this.mutationResults = n, this.docVersions = s;\n    }\n    /**\n     * Creates a new MutationBatchResult for the given batch and results. There\n     * must be one result for each mutation in the batch. This static factory\n     * caches a document=&gt;version mapping (docVersions).\n     */    static from(t, e, n) {\n        B(t.mutations.length === n.length);\n        let s = Rn();\n        const i = t.mutations;\n        for (let t = 0; t < i.length; t++) s = s.insert(i[t].key, n[t].version);\n        return new si(t, e, n, s);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable set of metadata that the local store tracks for each target.\n */ class ii {\n    constructor(\n    /** The target being listened to. */\n    t, \n    /**\n     * The target ID to which the target corresponds; Assigned by the\n     * LocalStore for user listens and by the SyncEngine for limbo watches.\n     */\n    e, \n    /** The purpose of the target. */\n    n, \n    /**\n     * The sequence number of the last transaction during which this target data\n     * was modified.\n     */\n    s, \n    /** The latest snapshot version seen for this target. */\n    i = rt.min()\n    /**\n     * The maximum snapshot version at which the associated view\n     * contained no limbo documents.\n     */ , r = rt.min()\n    /**\n     * An opaque, server-assigned token that allows watching a target to be\n     * resumed after disconnecting without retransmitting all the data that\n     * matches the target. The resume token essentially identifies a point in\n     * time from which the server should resume sending results.\n     */ , o = _t.EMPTY_BYTE_STRING) {\n        this.target = t, this.targetId = e, this.purpose = n, this.sequenceNumber = s, this.snapshotVersion = i, \n        this.lastLimboFreeSnapshotVersion = r, this.resumeToken = o;\n    }\n    /** Creates a new target data instance with an updated sequence number. */    withSequenceNumber(t) {\n        return new ii(this.target, this.targetId, this.purpose, t, this.snapshotVersion, this.lastLimboFreeSnapshotVersion, this.resumeToken);\n    }\n    /**\n     * Creates a new target data instance with an updated resume token and\n     * snapshot version.\n     */    withResumeToken(t, e) {\n        return new ii(this.target, this.targetId, this.purpose, this.sequenceNumber, e, this.lastLimboFreeSnapshotVersion, t);\n    }\n    /**\n     * Creates a new target data instance with an updated last limbo free\n     * snapshot version number.\n     */    withLastLimboFreeSnapshotVersion(t) {\n        return new ii(this.target, this.targetId, this.purpose, this.sequenceNumber, this.snapshotVersion, t, this.resumeToken);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Serializer for values stored in the LocalStore. */ class ri {\n    constructor(t) {\n        this.Wt = t;\n    }\n}\n\n/** Decodes a remote document from storage locally to a Document. */ function oi(t, e) {\n    if (e.document) return ts(t.Wt, e.document, !!e.hasCommittedMutations);\n    if (e.noDocument) {\n        const t = Pt.fromSegments(e.noDocument.path), n = li(e.noDocument.readTime), s = Kt.newNoDocument(t, n);\n        return e.hasCommittedMutations ? s.setHasCommittedMutations() : s;\n    }\n    if (e.unknownDocument) {\n        const t = Pt.fromSegments(e.unknownDocument.path), n = li(e.unknownDocument.version);\n        return Kt.newUnknownDocument(t, n);\n    }\n    return L();\n}\n\n/** Encodes a document for storage locally. */ function ci(t, e, n) {\n    const s = ai(n), i = e.key.path.popLast().toArray();\n    if (e.isFoundDocument()) {\n        const n = function(t, e) {\n            return {\n                name: Gn(t, e.key),\n                fields: e.data.value.mapValue.fields,\n                updateTime: Un(t, e.version.toTimestamp())\n            };\n        }(t.Wt, e), r = e.hasCommittedMutations;\n        return new Ns(\n        /* unknownDocument= */ null, \n        /* noDocument= */ null, n, r, s, i);\n    }\n    if (e.isNoDocument()) {\n        const t = e.key.path.toArray(), n = hi(e.version), r = e.hasCommittedMutations;\n        return new Ns(\n        /* unknownDocument= */ null, new Ds(t, n), \n        /* document= */ null, r, s, i);\n    }\n    if (e.isUnknownDocument()) {\n        const t = e.key.path.toArray(), n = hi(e.version);\n        return new Ns(new Cs(t, n), \n        /* noDocument= */ null, \n        /* document= */ null, \n        /* hasCommittedMutations= */ !0, s, i);\n    }\n    return L();\n}\n\nfunction ai(t) {\n    const e = t.toTimestamp();\n    return [ e.seconds, e.nanoseconds ];\n}\n\nfunction ui(t) {\n    const e = new it(t[0], t[1]);\n    return rt.fromTimestamp(e);\n}\n\nfunction hi(t) {\n    const e = t.toTimestamp();\n    return new bs(e.seconds, e.nanoseconds);\n}\n\nfunction li(t) {\n    const e = new it(t.seconds, t.nanoseconds);\n    return rt.fromTimestamp(e);\n}\n\n/** Encodes a batch of mutations into a DbMutationBatch for local storage. */\n/** Decodes a DbMutationBatch into a MutationBatch */\nfunction fi(t, e) {\n    const n = (e.baseMutations || []).map((e => is(t.Wt, e)));\n    // Squash old transform mutations into existing patch or set mutations.\n    // The replacement of representing `transforms` with `update_transforms`\n    // on the SDK means that old `transform` mutations stored in IndexedDB need\n    // to be updated to `update_transforms`.\n    // TODO(b/174608374): Remove this code once we perform a schema migration.\n        for (let t = 0; t < e.mutations.length - 1; ++t) {\n        const n = e.mutations[t];\n        if (t + 1 < e.mutations.length && void 0 !== e.mutations[t + 1].transform) {\n            const s = e.mutations[t + 1];\n            n.updateTransforms = s.transform.fieldTransforms, e.mutations.splice(t + 1, 1), \n            ++t;\n        }\n    }\n    const s = e.mutations.map((e => is(t.Wt, e))), i = it.fromMillis(e.localWriteTimeMs);\n    return new ni(e.batchId, i, n, s);\n}\n\n/** Decodes a DbTarget into TargetData */ function di(t) {\n    const e = li(t.readTime), n = void 0 !== t.lastLimboFreeSnapshotVersion ? li(t.lastLimboFreeSnapshotVersion) : rt.min();\n    let s;\n    var i;\n    return void 0 !== t.query.documents ? (B(1 === (i = t.query).documents.length), \n    s = Ee(we(Jn(i.documents[0])))) : s = function(t) {\n        return Ee(as(t));\n    }(t.query), new ii(s, t.targetId, 0 /* Listen */ , t.lastListenSequenceNumber, e, n, _t.fromBase64String(t.resumeToken));\n}\n\n/** Encodes TargetData into a DbTarget for storage locally. */ function wi(t, e) {\n    const n = hi(e.snapshotVersion), s = hi(e.lastLimboFreeSnapshotVersion);\n    let i;\n    i = Ht(e.target) ? os(t.Wt, e.target) : cs(t.Wt, e.target);\n    // We can't store the resumeToken as a ByteString in IndexedDb, so we\n    // convert it to a base64 string for storage.\n        const r = e.resumeToken.toBase64();\n    // lastListenSequenceNumber is always 0 until we do real GC.\n        return new ks(e.targetId, Wt(e.target), n, r, e.sequenceNumber, s, i);\n}\n\n/**\n * A helper function for figuring out what kind of query has been stored.\n */\n/**\n * Encodes a `BundledQuery` from bundle proto to a Query object.\n *\n * This reconstructs the original query used to build the bundle being loaded,\n * including features exists only in SDKs (for example: limit-to-last).\n */\nfunction _i(t) {\n    const e = as({\n        parent: t.parent,\n        structuredQuery: t.structuredQuery\n    });\n    return \"LAST\" === t.limitType ? Ie(e, e.limit, \"L\" /* Last */) : e;\n}\n\n/** Encodes a NamedQuery proto object to a NamedQuery model object. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass mi {\n    getBundleMetadata(t, e) {\n        return gi(t).get(e).next((t => {\n            if (t) return {\n                id: (e = t).bundleId,\n                createTime: li(e.createTime),\n                version: e.version\n            };\n            /** Encodes a DbBundle to a BundleMetadata object. */\n            var e;\n            /** Encodes a BundleMetadata to a DbBundle. */        }));\n    }\n    saveBundleMetadata(t, e) {\n        return gi(t).put({\n            bundleId: (n = e).id,\n            createTime: hi(jn(n.createTime)),\n            version: n.version\n        });\n        var n;\n        /** Encodes a DbNamedQuery to a NamedQuery. */    }\n    getNamedQuery(t, e) {\n        return yi(t).get(e).next((t => {\n            if (t) return {\n                name: (e = t).name,\n                query: _i(e.bundledQuery),\n                readTime: li(e.readTime)\n            };\n            var e;\n            /** Encodes a NamedQuery from a bundle proto to a DbNamedQuery. */        }));\n    }\n    saveNamedQuery(t, e) {\n        return yi(t).put(function(t) {\n            return {\n                name: t.name,\n                readTime: hi(jn(t.readTime)),\n                bundledQuery: t.bundledQuery\n            };\n        }(e));\n    }\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the bundles object store.\n */ function gi(t) {\n    return ei(t, Ls.store);\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the namedQueries object store.\n */ function yi(t) {\n    return ei(t, Bs.store);\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An in-memory implementation of IndexManager.\n */ class pi {\n    constructor() {\n        this.Gt = new Ti;\n    }\n    addToCollectionParentIndex(t, e) {\n        return this.Gt.add(e), js.resolve();\n    }\n    getCollectionParents(t, e) {\n        return js.resolve(this.Gt.getEntries(e));\n    }\n}\n\n/**\n * Internal implementation of the collection-parent index exposed by MemoryIndexManager.\n * Also used for in-memory caching by IndexedDbIndexManager and initial index population\n * in indexeddb_schema.ts\n */ class Ti {\n    constructor() {\n        this.index = {};\n    }\n    // Returns false if the entry already existed.\n    add(t) {\n        const e = t.lastSegment(), n = t.popLast(), s = this.index[e] || new gn(ht.comparator), i = !s.has(n);\n        return this.index[e] = s.add(n), i;\n    }\n    has(t) {\n        const e = t.lastSegment(), n = t.popLast(), s = this.index[e];\n        return s && s.has(n);\n    }\n    getEntries(t) {\n        return (this.index[t] || new gn(ht.comparator)).toArray();\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A persisted implementation of IndexManager.\n */ class Ei {\n    constructor() {\n        /**\n         * An in-memory copy of the index entries we've already written since the SDK\n         * launched. Used to avoid re-writing the same entry repeatedly.\n         *\n         * This is *NOT* a complete cache of what's in persistence and so can never be used to\n         * satisfy reads.\n         */\n        this.zt = new Ti;\n    }\n    /**\n     * Adds a new entry to the collection parent index.\n     *\n     * Repeated calls for the same collectionPath should be avoided within a\n     * transaction as IndexedDbIndexManager only caches writes once a transaction\n     * has been committed.\n     */    addToCollectionParentIndex(t, e) {\n        if (!this.zt.has(e)) {\n            const n = e.lastSegment(), s = e.popLast();\n            t.addOnCommittedListener((() => {\n                // Add the collection to the in memory cache only if the transaction was\n                // successfully committed.\n                this.zt.add(e);\n            }));\n            const i = {\n                collectionId: n,\n                parent: Es(s)\n            };\n            return Ii(t).put(i);\n        }\n        return js.resolve();\n    }\n    getCollectionParents(t, e) {\n        const n = [], s = IDBKeyRange.bound([ e, \"\" ], [ st(e), \"\" ], \n        /*lowerOpen=*/ !1, \n        /*upperOpen=*/ !0);\n        return Ii(t).Lt(s).next((t => {\n            for (const s of t) {\n                // This collectionId guard shouldn't be necessary (and isn't as long\n                // as we're running in a real browser), but there's a bug in\n                // indexeddbshim that breaks our range in our tests running in node:\n                // https://github.com/axemclion/IndexedDBShim/issues/334\n                if (s.collectionId !== e) break;\n                n.push(Rs(s.parent));\n            }\n            return n;\n        }));\n    }\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the collectionParents\n * document store.\n */ function Ii(t) {\n    return ei(t, Fs.store);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Ai = {\n    didRun: !1,\n    sequenceNumbersCollected: 0,\n    targetsRemoved: 0,\n    documentsRemoved: 0\n};\n\nclass Ri {\n    constructor(\n    // When we attempt to collect, we will only do so if the cache size is greater than this\n    // threshold. Passing `COLLECTION_DISABLED` here will cause collection to always be skipped.\n    t, \n    // The percentage of sequence numbers that we will attempt to collect\n    e, \n    // A cap on the total number of sequence numbers that will be collected. This prevents\n    // us from collecting a huge number of sequence numbers if the cache has grown very large.\n    n) {\n        this.cacheSizeCollectionThreshold = t, this.percentileToCollect = e, this.maximumSequenceNumbersToCollect = n;\n    }\n    static withCacheSize(t) {\n        return new Ri(t, Ri.DEFAULT_COLLECTION_PERCENTILE, Ri.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Delete a mutation batch and the associated document mutations.\n * @returns A PersistencePromise of the document mutations that were removed.\n */\nfunction bi(t, e, n) {\n    const s = t.store(Vs.store), i = t.store(Ss.store), r = [], o = IDBKeyRange.only(n.batchId);\n    let c = 0;\n    const a = s.Kt({\n        range: o\n    }, ((t, e, n) => (c++, n.delete())));\n    r.push(a.next((() => {\n        B(1 === c);\n    })));\n    const u = [];\n    for (const t of n.mutations) {\n        const s = Ss.key(e, t.key.path, n.batchId);\n        r.push(i.delete(s)), u.push(t.key);\n    }\n    return js.waitFor(r).next((() => u));\n}\n\n/**\n * Returns an approximate size for the given document.\n */ function Pi(t) {\n    if (!t) return 0;\n    let e;\n    if (t.document) e = t.document; else if (t.unknownDocument) e = t.unknownDocument; else {\n        if (!t.noDocument) throw L();\n        e = t.noDocument;\n    }\n    return JSON.stringify(e).length;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A mutation queue for a specific user, backed by IndexedDB. */ Ri.DEFAULT_COLLECTION_PERCENTILE = 10, \nRi.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT = 1e3, Ri.DEFAULT = new Ri(41943040, Ri.DEFAULT_COLLECTION_PERCENTILE, Ri.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT), \nRi.DISABLED = new Ri(-1, 0, 0);\n\nclass vi {\n    constructor(\n    /**\n     * The normalized userId (e.g. null UID => \"\" userId) used to store /\n     * retrieve mutations.\n     */\n    t, e, n, s) {\n        this.userId = t, this.N = e, this.Ht = n, this.referenceDelegate = s, \n        /**\n         * Caches the document keys for pending mutation batches. If the mutation\n         * has been removed from IndexedDb, the cached value may continue to\n         * be used to retrieve the batch's document keys. To remove a cached value\n         * locally, `removeCachedMutationKeys()` should be invoked either directly\n         * or through `removeMutationBatches()`.\n         *\n         * With multi-tab, when the primary client acknowledges or rejects a mutation,\n         * this cache is used by secondary clients to invalidate the local\n         * view of the documents that were previously affected by the mutation.\n         */\n        // PORTING NOTE: Multi-tab only.\n        this.Jt = {};\n    }\n    /**\n     * Creates a new mutation queue for the given user.\n     * @param user - The user for which to create a mutation queue.\n     * @param serializer - The serializer to use when persisting to IndexedDb.\n     */    static Yt(t, e, n, s) {\n        // TODO(mcg): Figure out what constraints there are on userIDs\n        // In particular, are there any reserved characters? are empty ids allowed?\n        // For the moment store these together in the same mutations table assuming\n        // that empty userIDs aren't allowed.\n        B(\"\" !== t.uid);\n        const i = t.isAuthenticated() ? t.uid : \"\";\n        return new vi(i, e, n, s);\n    }\n    checkEmpty(t) {\n        let e = !0;\n        const n = IDBKeyRange.bound([ this.userId, Number.NEGATIVE_INFINITY ], [ this.userId, Number.POSITIVE_INFINITY ]);\n        return Si(t).Kt({\n            index: Vs.userMutationsIndex,\n            range: n\n        }, ((t, n, s) => {\n            e = !1, s.done();\n        })).next((() => e));\n    }\n    addMutationBatch(t, e, n, s) {\n        const i = Di(t), r = Si(t);\n        // The IndexedDb implementation in Chrome (and Firefox) does not handle\n        // compound indices that include auto-generated keys correctly. To ensure\n        // that the index entry is added correctly in all browsers, we perform two\n        // writes: The first write is used to retrieve the next auto-generated Batch\n        // ID, and the second write populates the index and stores the actual\n        // mutation batch.\n        // See: https://bugs.chromium.org/p/chromium/issues/detail?id=701972\n        // We write an empty object to obtain key\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return r.add({}).next((o => {\n            B(\"number\" == typeof o);\n            const c = new ni(o, e, n, s), a = function(t, e, n) {\n                const s = n.baseMutations.map((e => ss(t.Wt, e))), i = n.mutations.map((e => ss(t.Wt, e)));\n                return new Vs(e, n.batchId, n.localWriteTime.toMillis(), s, i);\n            }(this.N, this.userId, c), u = [];\n            let h = new gn(((t, e) => et(t.canonicalString(), e.canonicalString())));\n            for (const t of s) {\n                const e = Ss.key(this.userId, t.key.path, o);\n                h = h.add(t.key.path.popLast()), u.push(r.put(a)), u.push(i.put(e, Ss.PLACEHOLDER));\n            }\n            return h.forEach((e => {\n                u.push(this.Ht.addToCollectionParentIndex(t, e));\n            })), t.addOnCommittedListener((() => {\n                this.Jt[o] = c.keys();\n            })), js.waitFor(u).next((() => c));\n        }));\n    }\n    lookupMutationBatch(t, e) {\n        return Si(t).get(e).next((t => t ? (B(t.userId === this.userId), fi(this.N, t)) : null));\n    }\n    /**\n     * Returns the document keys for the mutation batch with the given batchId.\n     * For primary clients, this method returns `null` after\n     * `removeMutationBatches()` has been called. Secondary clients return a\n     * cached result until `removeCachedMutationKeys()` is invoked.\n     */\n    // PORTING NOTE: Multi-tab only.\n    Xt(t, e) {\n        return this.Jt[e] ? js.resolve(this.Jt[e]) : this.lookupMutationBatch(t, e).next((t => {\n            if (t) {\n                const n = t.keys();\n                return this.Jt[e] = n, n;\n            }\n            return null;\n        }));\n    }\n    getNextMutationBatchAfterBatchId(t, e) {\n        const n = e + 1, s = IDBKeyRange.lowerBound([ this.userId, n ]);\n        let i = null;\n        return Si(t).Kt({\n            index: Vs.userMutationsIndex,\n            range: s\n        }, ((t, e, s) => {\n            e.userId === this.userId && (B(e.batchId >= n), i = fi(this.N, e)), s.done();\n        })).next((() => i));\n    }\n    getHighestUnacknowledgedBatchId(t) {\n        const e = IDBKeyRange.upperBound([ this.userId, Number.POSITIVE_INFINITY ]);\n        let n = -1;\n        return Si(t).Kt({\n            index: Vs.userMutationsIndex,\n            range: e,\n            reverse: !0\n        }, ((t, e, s) => {\n            n = e.batchId, s.done();\n        })).next((() => n));\n    }\n    getAllMutationBatches(t) {\n        const e = IDBKeyRange.bound([ this.userId, -1 ], [ this.userId, Number.POSITIVE_INFINITY ]);\n        return Si(t).Lt(Vs.userMutationsIndex, e).next((t => t.map((t => fi(this.N, t)))));\n    }\n    getAllMutationBatchesAffectingDocumentKey(t, e) {\n        // Scan the document-mutation index starting with a prefix starting with\n        // the given documentKey.\n        const n = Ss.prefixForPath(this.userId, e.path), s = IDBKeyRange.lowerBound(n), i = [];\n        return Di(t).Kt({\n            range: s\n        }, ((n, s, r) => {\n            const [o, c, a] = n, u = Rs(c);\n            // Only consider rows matching exactly the specific key of\n            // interest. Note that because we order by path first, and we\n            // order terminators before path separators, we'll encounter all\n            // the index rows for documentKey contiguously. In particular, all\n            // the rows for documentKey will occur before any rows for\n            // documents nested in a subcollection beneath documentKey so we\n            // can stop as soon as we hit any such row.\n                        if (o === this.userId && e.path.isEqual(u)) \n            // Look up the mutation batch in the store.\n            return Si(t).get(a).next((t => {\n                if (!t) throw L();\n                B(t.userId === this.userId), i.push(fi(this.N, t));\n            }));\n            r.done();\n        })).next((() => i));\n    }\n    getAllMutationBatchesAffectingDocumentKeys(t, e) {\n        let n = new gn(et);\n        const s = [];\n        return e.forEach((e => {\n            const i = Ss.prefixForPath(this.userId, e.path), r = IDBKeyRange.lowerBound(i), o = Di(t).Kt({\n                range: r\n            }, ((t, s, i) => {\n                const [r, o, c] = t, a = Rs(o);\n                // Only consider rows matching exactly the specific key of\n                // interest. Note that because we order by path first, and we\n                // order terminators before path separators, we'll encounter all\n                // the index rows for documentKey contiguously. In particular, all\n                // the rows for documentKey will occur before any rows for\n                // documents nested in a subcollection beneath documentKey so we\n                // can stop as soon as we hit any such row.\n                                r === this.userId && e.path.isEqual(a) ? n = n.add(c) : i.done();\n            }));\n            s.push(o);\n        })), js.waitFor(s).next((() => this.Zt(t, n)));\n    }\n    getAllMutationBatchesAffectingQuery(t, e) {\n        const n = e.path, s = n.length + 1, i = Ss.prefixForPath(this.userId, n), r = IDBKeyRange.lowerBound(i);\n        // Collect up unique batchIDs encountered during a scan of the index. Use a\n        // SortedSet to accumulate batch IDs so they can be traversed in order in a\n        // scan of the main table.\n        let o = new gn(et);\n        return Di(t).Kt({\n            range: r\n        }, ((t, e, i) => {\n            const [r, c, a] = t, u = Rs(c);\n            r === this.userId && n.isPrefixOf(u) ? \n            // Rows with document keys more than one segment longer than the\n            // query path can't be matches. For example, a query on 'rooms'\n            // can't match the document /rooms/abc/messages/xyx.\n            // TODO(mcg): we'll need a different scanner when we implement\n            // ancestor queries.\n            u.length === s && (o = o.add(a)) : i.done();\n        })).next((() => this.Zt(t, o)));\n    }\n    Zt(t, e) {\n        const n = [], s = [];\n        // TODO(rockwood): Implement this using iterate.\n        return e.forEach((e => {\n            s.push(Si(t).get(e).next((t => {\n                if (null === t) throw L();\n                B(t.userId === this.userId), n.push(fi(this.N, t));\n            })));\n        })), js.waitFor(s).next((() => n));\n    }\n    removeMutationBatch(t, e) {\n        return bi(t.Qt, this.userId, e).next((n => (t.addOnCommittedListener((() => {\n            this.te(e.batchId);\n        })), js.forEach(n, (e => this.referenceDelegate.markPotentiallyOrphaned(t, e))))));\n    }\n    /**\n     * Clears the cached keys for a mutation batch. This method should be\n     * called by secondary clients after they process mutation updates.\n     *\n     * Note that this method does not have to be called from primary clients as\n     * the corresponding cache entries are cleared when an acknowledged or\n     * rejected batch is removed from the mutation queue.\n     */\n    // PORTING NOTE: Multi-tab only\n    te(t) {\n        delete this.Jt[t];\n    }\n    performConsistencyCheck(t) {\n        return this.checkEmpty(t).next((e => {\n            if (!e) return js.resolve();\n            // Verify that there are no entries in the documentMutations index if\n            // the queue is empty.\n                        const n = IDBKeyRange.lowerBound(Ss.prefixForUser(this.userId)), s = [];\n            return Di(t).Kt({\n                range: n\n            }, ((t, e, n) => {\n                if (t[0] === this.userId) {\n                    const e = Rs(t[1]);\n                    s.push(e);\n                } else n.done();\n            })).next((() => {\n                B(0 === s.length);\n            }));\n        }));\n    }\n    containsKey(t, e) {\n        return Vi(t, this.userId, e);\n    }\n    // PORTING NOTE: Multi-tab only (state is held in memory in other clients).\n    /** Returns the mutation queue's metadata from IndexedDb. */\n    ee(t) {\n        return Ci(t).get(this.userId).next((t => t || new vs(this.userId, -1, \n        /*lastStreamToken=*/ \"\")));\n    }\n}\n\n/**\n * @returns true if the mutation queue for the given user contains a pending\n *         mutation for the given key.\n */ function Vi(t, e, n) {\n    const s = Ss.prefixForPath(e, n.path), i = s[1], r = IDBKeyRange.lowerBound(s);\n    let o = !1;\n    return Di(t).Kt({\n        range: r,\n        qt: !0\n    }, ((t, n, s) => {\n        const [r, c, /*batchID*/ a] = t;\n        r === e && c === i && (o = !0), s.done();\n    })).next((() => o));\n}\n\n/** Returns true if any mutation queue contains the given document. */\n/**\n * Helper to get a typed SimpleDbStore for the mutations object store.\n */\nfunction Si(t) {\n    return ei(t, Vs.store);\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the mutationQueues object store.\n */ function Di(t) {\n    return ei(t, Ss.store);\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the mutationQueues object store.\n */ function Ci(t) {\n    return ei(t, vs.store);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Offset to ensure non-overlapping target ids. */\n/**\n * Generates monotonically increasing target IDs for sending targets to the\n * watch stream.\n *\n * The client constructs two generators, one for the target cache, and one for\n * for the sync engine (to generate limbo documents targets). These\n * generators produce non-overlapping IDs (by using even and odd IDs\n * respectively).\n *\n * By separating the target ID space, the query cache can generate target IDs\n * that persist across client restarts, while sync engine can independently\n * generate in-memory target IDs that are transient and can be reused after a\n * restart.\n */\nclass Ni {\n    constructor(t) {\n        this.ne = t;\n    }\n    next() {\n        return this.ne += 2, this.ne;\n    }\n    static se() {\n        // The target cache generator must return '2' in its first call to `next()`\n        // as there is no differentiation in the protocol layer between an unset\n        // number and the number '0'. If we were to sent a target with target ID\n        // '0', the backend would consider it unset and replace it with its own ID.\n        return new Ni(0);\n    }\n    static ie() {\n        // Sync engine assigns target IDs for limbo document detection.\n        return new Ni(-1);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class xi {\n    constructor(t, e) {\n        this.referenceDelegate = t, this.N = e;\n    }\n    // PORTING NOTE: We don't cache global metadata for the target cache, since\n    // some of it (in particular `highestTargetId`) can be modified by secondary\n    // tabs. We could perhaps be more granular (and e.g. still cache\n    // `lastRemoteSnapshotVersion` in memory) but for simplicity we currently go\n    // to IndexedDb whenever we need to read metadata. We can revisit if it turns\n    // out to have a meaningful performance impact.\n    allocateTargetId(t) {\n        return this.re(t).next((e => {\n            const n = new Ni(e.highestTargetId);\n            return e.highestTargetId = n.next(), this.oe(t, e).next((() => e.highestTargetId));\n        }));\n    }\n    getLastRemoteSnapshotVersion(t) {\n        return this.re(t).next((t => rt.fromTimestamp(new it(t.lastRemoteSnapshotVersion.seconds, t.lastRemoteSnapshotVersion.nanoseconds))));\n    }\n    getHighestSequenceNumber(t) {\n        return this.re(t).next((t => t.highestListenSequenceNumber));\n    }\n    setTargetsMetadata(t, e, n) {\n        return this.re(t).next((s => (s.highestListenSequenceNumber = e, n && (s.lastRemoteSnapshotVersion = n.toTimestamp()), \n        e > s.highestListenSequenceNumber && (s.highestListenSequenceNumber = e), this.oe(t, s))));\n    }\n    addTargetData(t, e) {\n        return this.ce(t, e).next((() => this.re(t).next((n => (n.targetCount += 1, this.ae(e, n), \n        this.oe(t, n))))));\n    }\n    updateTargetData(t, e) {\n        return this.ce(t, e);\n    }\n    removeTargetData(t, e) {\n        return this.removeMatchingKeysForTargetId(t, e.targetId).next((() => ki(t).delete(e.targetId))).next((() => this.re(t))).next((e => (B(e.targetCount > 0), \n        e.targetCount -= 1, this.oe(t, e))));\n    }\n    /**\n     * Drops any targets with sequence number less than or equal to the upper bound, excepting those\n     * present in `activeTargetIds`. Document associations for the removed targets are also removed.\n     * Returns the number of targets removed.\n     */    removeTargets(t, e, n) {\n        let s = 0;\n        const i = [];\n        return ki(t).Kt(((r, o) => {\n            const c = di(o);\n            c.sequenceNumber <= e && null === n.get(c.targetId) && (s++, i.push(this.removeTargetData(t, c)));\n        })).next((() => js.waitFor(i))).next((() => s));\n    }\n    /**\n     * Call provided function with each `TargetData` that we have cached.\n     */    forEachTarget(t, e) {\n        return ki(t).Kt(((t, n) => {\n            const s = di(n);\n            e(s);\n        }));\n    }\n    re(t) {\n        return $i(t).get(Os.key).next((t => (B(null !== t), t)));\n    }\n    oe(t, e) {\n        return $i(t).put(Os.key, e);\n    }\n    ce(t, e) {\n        return ki(t).put(wi(this.N, e));\n    }\n    /**\n     * In-place updates the provided metadata to account for values in the given\n     * TargetData. Saving is done separately. Returns true if there were any\n     * changes to the metadata.\n     */    ae(t, e) {\n        let n = !1;\n        return t.targetId > e.highestTargetId && (e.highestTargetId = t.targetId, n = !0), \n        t.sequenceNumber > e.highestListenSequenceNumber && (e.highestListenSequenceNumber = t.sequenceNumber, \n        n = !0), n;\n    }\n    getTargetCount(t) {\n        return this.re(t).next((t => t.targetCount));\n    }\n    getTargetData(t, e) {\n        // Iterating by the canonicalId may yield more than one result because\n        // canonicalId values are not required to be unique per target. This query\n        // depends on the queryTargets index to be efficient.\n        const n = Wt(e), s = IDBKeyRange.bound([ n, Number.NEGATIVE_INFINITY ], [ n, Number.POSITIVE_INFINITY ]);\n        let i = null;\n        return ki(t).Kt({\n            range: s,\n            index: ks.queryTargetsIndexName\n        }, ((t, n, s) => {\n            const r = di(n);\n            // After finding a potential match, check that the target is\n            // actually equal to the requested target.\n                        zt(e, r.target) && (i = r, s.done());\n        })).next((() => i));\n    }\n    addMatchingKeys(t, e, n) {\n        // PORTING NOTE: The reverse index (documentsTargets) is maintained by\n        // IndexedDb.\n        const s = [], i = Oi(t);\n        return e.forEach((e => {\n            const r = Es(e.path);\n            s.push(i.put(new $s(n, r))), s.push(this.referenceDelegate.addReference(t, n, e));\n        })), js.waitFor(s);\n    }\n    removeMatchingKeys(t, e, n) {\n        // PORTING NOTE: The reverse index (documentsTargets) is maintained by\n        // IndexedDb.\n        const s = Oi(t);\n        return js.forEach(e, (e => {\n            const i = Es(e.path);\n            return js.waitFor([ s.delete([ n, i ]), this.referenceDelegate.removeReference(t, n, e) ]);\n        }));\n    }\n    removeMatchingKeysForTargetId(t, e) {\n        const n = Oi(t), s = IDBKeyRange.bound([ e ], [ e + 1 ], \n        /*lowerOpen=*/ !1, \n        /*upperOpen=*/ !0);\n        return n.delete(s);\n    }\n    getMatchingKeysForTargetId(t, e) {\n        const n = IDBKeyRange.bound([ e ], [ e + 1 ], \n        /*lowerOpen=*/ !1, \n        /*upperOpen=*/ !0), s = Oi(t);\n        let i = Pn();\n        return s.Kt({\n            range: n,\n            qt: !0\n        }, ((t, e, n) => {\n            const s = Rs(t[1]), r = new Pt(s);\n            i = i.add(r);\n        })).next((() => i));\n    }\n    containsKey(t, e) {\n        const n = Es(e.path), s = IDBKeyRange.bound([ n ], [ st(n) ], \n        /*lowerOpen=*/ !1, \n        /*upperOpen=*/ !0);\n        let i = 0;\n        return Oi(t).Kt({\n            index: $s.documentTargetsIndex,\n            qt: !0,\n            range: s\n        }, (([t, e], n, s) => {\n            // Having a sentinel row for a document does not count as containing that document;\n            // For the target cache, containing the document means the document is part of some\n            // target.\n            0 !== t && (i++, s.done());\n        })).next((() => i > 0));\n    }\n    /**\n     * Looks up a TargetData entry by target ID.\n     *\n     * @param targetId - The target ID of the TargetData entry to look up.\n     * @returns The cached TargetData entry, or null if the cache has no entry for\n     * the target.\n     */\n    // PORTING NOTE: Multi-tab only.\n    Tt(t, e) {\n        return ki(t).get(e).next((t => t ? di(t) : null));\n    }\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the queries object store.\n */ function ki(t) {\n    return ei(t, ks.store);\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the target globals object store.\n */ function $i(t) {\n    return ei(t, Os.store);\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the document target object store.\n */ function Oi(t) {\n    return ei(t, $s.store);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Verifies the error thrown by a LocalStore operation. If a LocalStore\n * operation fails because the primary lease has been taken by another client,\n * we ignore the error (the persistence layer will immediately call\n * `applyPrimaryLease` to propagate the primary state change). All other errors\n * are re-thrown.\n *\n * @param err - An error returned by a LocalStore operation.\n * @returns A Promise that resolves after we recovered, or the original error.\n */ async function Fi(t) {\n    if (t.code !== K.FAILED_PRECONDITION || t.message !== qs) throw t;\n    $(\"LocalStore\", \"Unexpectedly lost primary lease\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function Mi([t, e], [n, s]) {\n    const i = et(t, n);\n    return 0 === i ? et(e, s) : i;\n}\n\n/**\n * Used to calculate the nth sequence number. Keeps a rolling buffer of the\n * lowest n values passed to `addElement`, and finally reports the largest of\n * them in `maxValue`.\n */ class Li {\n    constructor(t) {\n        this.ue = t, this.buffer = new gn(Mi), this.he = 0;\n    }\n    le() {\n        return ++this.he;\n    }\n    fe(t) {\n        const e = [ t, this.le() ];\n        if (this.buffer.size < this.ue) this.buffer = this.buffer.add(e); else {\n            const t = this.buffer.last();\n            Mi(e, t) < 0 && (this.buffer = this.buffer.delete(t).add(e));\n        }\n    }\n    get maxValue() {\n        // Guaranteed to be non-empty. If we decide we are not collecting any\n        // sequence numbers, nthSequenceNumber below short-circuits. If we have\n        // decided that we are collecting n sequence numbers, it's because n is some\n        // percentage of the existing sequence numbers. That means we should never\n        // be in a situation where we are collecting sequence numbers but don't\n        // actually have any.\n        return this.buffer.last()[0];\n    }\n}\n\n/**\n * This class is responsible for the scheduling of LRU garbage collection. It handles checking\n * whether or not GC is enabled, as well as which delay to use before the next run.\n */ class Bi {\n    constructor(t, e) {\n        this.garbageCollector = t, this.asyncQueue = e, this.de = !1, this.we = null;\n    }\n    start(t) {\n        -1 !== this.garbageCollector.params.cacheSizeCollectionThreshold && this._e(t);\n    }\n    stop() {\n        this.we && (this.we.cancel(), this.we = null);\n    }\n    get started() {\n        return null !== this.we;\n    }\n    _e(t) {\n        const e = this.de ? 3e5 : 6e4;\n        $(\"LruGarbageCollector\", `Garbage collection scheduled in ${e}ms`), this.we = this.asyncQueue.enqueueAfterDelay(\"lru_garbage_collection\" /* LruGarbageCollection */ , e, (async () => {\n            this.we = null, this.de = !0;\n            try {\n                await t.collectGarbage(this.garbageCollector);\n            } catch (t) {\n                Hs(t) ? $(\"LruGarbageCollector\", \"Ignoring IndexedDB error during garbage collection: \", t) : await Fi(t);\n            }\n            await this._e(t);\n        }));\n    }\n}\n\n/** Implements the steps for LRU garbage collection. */ class Ui {\n    constructor(t, e) {\n        this.me = t, this.params = e;\n    }\n    calculateTargetCount(t, e) {\n        return this.me.ge(t).next((t => Math.floor(e / 100 * t)));\n    }\n    nthSequenceNumber(t, e) {\n        if (0 === e) return js.resolve(X.T);\n        const n = new Li(e);\n        return this.me.forEachTarget(t, (t => n.fe(t.sequenceNumber))).next((() => this.me.ye(t, (t => n.fe(t))))).next((() => n.maxValue));\n    }\n    removeTargets(t, e, n) {\n        return this.me.removeTargets(t, e, n);\n    }\n    removeOrphanedDocuments(t, e) {\n        return this.me.removeOrphanedDocuments(t, e);\n    }\n    collect(t, e) {\n        return -1 === this.params.cacheSizeCollectionThreshold ? ($(\"LruGarbageCollector\", \"Garbage collection skipped; disabled\"), \n        js.resolve(Ai)) : this.getCacheSize(t).next((n => n < this.params.cacheSizeCollectionThreshold ? ($(\"LruGarbageCollector\", `Garbage collection skipped; Cache size ${n} is lower than threshold ${this.params.cacheSizeCollectionThreshold}`), \n        Ai) : this.pe(t, e)));\n    }\n    getCacheSize(t) {\n        return this.me.getCacheSize(t);\n    }\n    pe(t, e) {\n        let n, s, i, r, o, a, u;\n        const h = Date.now();\n        return this.calculateTargetCount(t, this.params.percentileToCollect).next((e => (\n        // Cap at the configured max\n        e > this.params.maximumSequenceNumbersToCollect ? ($(\"LruGarbageCollector\", `Capping sequence numbers to collect down to the maximum of ${this.params.maximumSequenceNumbersToCollect} from ${e}`), \n        s = this.params.maximumSequenceNumbersToCollect) : s = e, r = Date.now(), this.nthSequenceNumber(t, s)))).next((s => (n = s, \n        o = Date.now(), this.removeTargets(t, n, e)))).next((e => (i = e, a = Date.now(), \n        this.removeOrphanedDocuments(t, n)))).next((t => {\n            if (u = Date.now(), x() <= LogLevel.DEBUG) {\n                $(\"LruGarbageCollector\", `LRU Garbage Collection\\n\\tCounted targets in ${r - h}ms\\n\\tDetermined least recently used ${s} in ` + (o - r) + \"ms\\n\" + `\\tRemoved ${i} targets in ` + (a - o) + \"ms\\n\" + `\\tRemoved ${t} documents in ` + (u - a) + \"ms\\n\" + `Total Duration: ${u - h}ms`);\n            }\n            return js.resolve({\n                didRun: !0,\n                sequenceNumbersCollected: s,\n                targetsRemoved: i,\n                documentsRemoved: t\n            });\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Provides LRU functionality for IndexedDB persistence. */\nclass qi {\n    constructor(t, e) {\n        this.db = t, this.garbageCollector = function(t, e) {\n            return new Ui(t, e);\n        }(this, e);\n    }\n    ge(t) {\n        const e = this.Te(t);\n        return this.db.getTargetCache().getTargetCount(t).next((t => e.next((e => t + e))));\n    }\n    Te(t) {\n        let e = 0;\n        return this.ye(t, (t => {\n            e++;\n        })).next((() => e));\n    }\n    forEachTarget(t, e) {\n        return this.db.getTargetCache().forEachTarget(t, e);\n    }\n    ye(t, e) {\n        return this.Ee(t, ((t, n) => e(n)));\n    }\n    addReference(t, e, n) {\n        return Ki(t, n);\n    }\n    removeReference(t, e, n) {\n        return Ki(t, n);\n    }\n    removeTargets(t, e, n) {\n        return this.db.getTargetCache().removeTargets(t, e, n);\n    }\n    markPotentiallyOrphaned(t, e) {\n        return Ki(t, e);\n    }\n    /**\n     * Returns true if anything would prevent this document from being garbage\n     * collected, given that the document in question is not present in any\n     * targets and has a sequence number less than or equal to the upper bound for\n     * the collection run.\n     */    Ie(t, e) {\n        return function(t, e) {\n            let n = !1;\n            return Ci(t).jt((s => Vi(t, s, e).next((t => (t && (n = !0), js.resolve(!t)))))).next((() => n));\n        }(t, e);\n    }\n    removeOrphanedDocuments(t, e) {\n        const n = this.db.getRemoteDocumentCache().newChangeBuffer(), s = [];\n        let i = 0;\n        return this.Ee(t, ((r, o) => {\n            if (o <= e) {\n                const e = this.Ie(t, r).next((e => {\n                    if (!e) \n                    // Our size accounting requires us to read all documents before\n                    // removing them.\n                    return i++, n.getEntry(t, r).next((() => (n.removeEntry(r), Oi(t).delete([ 0, Es(r.path) ]))));\n                }));\n                s.push(e);\n            }\n        })).next((() => js.waitFor(s))).next((() => n.apply(t))).next((() => i));\n    }\n    removeTarget(t, e) {\n        const n = e.withSequenceNumber(t.currentSequenceNumber);\n        return this.db.getTargetCache().updateTargetData(t, n);\n    }\n    updateLimboDocument(t, e) {\n        return Ki(t, e);\n    }\n    /**\n     * Call provided function for each document in the cache that is 'orphaned'. Orphaned\n     * means not a part of any target, so the only entry in the target-document index for\n     * that document will be the sentinel row (targetId 0), which will also have the sequence\n     * number for the last time the document was accessed.\n     */    Ee(t, e) {\n        const n = Oi(t);\n        let s, i = X.T;\n        return n.Kt({\n            index: $s.documentTargetsIndex\n        }, (([t, n], {path: r, sequenceNumber: o}) => {\n            0 === t ? (\n            // if nextToReport is valid, report it, this is a new key so the\n            // last one must not be a member of any targets.\n            i !== X.T && e(new Pt(Rs(s)), i), \n            // set nextToReport to be this sequence number. It's the next one we\n            // might report, if we don't find any targets for this document.\n            // Note that the sequence number must be defined when the targetId\n            // is 0.\n            i = o, s = r) : \n            // set nextToReport to be invalid, we know we don't need to report\n            // this one since we found a target for it.\n            i = X.T;\n        })).next((() => {\n            // Since we report sequence numbers after getting to the next key, we\n            // need to check if the last key we iterated over was an orphaned\n            // document and report it.\n            i !== X.T && e(new Pt(Rs(s)), i);\n        }));\n    }\n    getCacheSize(t) {\n        return this.db.getRemoteDocumentCache().getSize(t);\n    }\n}\n\nfunction Ki(t, e) {\n    return Oi(t).put(\n    /**\n * @returns A value suitable for writing a sentinel row in the target-document\n * store.\n */\n    function(t, e) {\n        return new $s(0, Es(t.path), e);\n    }(e, t.currentSequenceNumber));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A map implementation that uses objects as keys. Objects must have an\n * associated equals function and must be immutable. Entries in the map are\n * stored together with the key being produced from the mapKeyFn. This map\n * automatically handles collisions of keys.\n */ class ji {\n    constructor(t, e) {\n        this.mapKeyFn = t, this.equalsFn = e, \n        /**\n         * The inner map for a key/value pair. Due to the possibility of collisions we\n         * keep a list of entries that we do a linear search through to find an actual\n         * match. Note that collisions should be rare, so we still expect near\n         * constant time lookups in practice.\n         */\n        this.inner = {};\n    }\n    /** Get a value for this key, or undefined if it does not exist. */    get(t) {\n        const e = this.mapKeyFn(t), n = this.inner[e];\n        if (void 0 !== n) for (const [e, s] of n) if (this.equalsFn(e, t)) return s;\n    }\n    has(t) {\n        return void 0 !== this.get(t);\n    }\n    /** Put this key and value in the map. */    set(t, e) {\n        const n = this.mapKeyFn(t), s = this.inner[n];\n        if (void 0 !== s) {\n            for (let n = 0; n < s.length; n++) if (this.equalsFn(s[n][0], t)) return void (s[n] = [ t, e ]);\n            s.push([ t, e ]);\n        } else this.inner[n] = [ [ t, e ] ];\n    }\n    /**\n     * Remove this key from the map. Returns a boolean if anything was deleted.\n     */    delete(t) {\n        const e = this.mapKeyFn(t), n = this.inner[e];\n        if (void 0 === n) return !1;\n        for (let s = 0; s < n.length; s++) if (this.equalsFn(n[s][0], t)) return 1 === n.length ? delete this.inner[e] : n.splice(s, 1), \n        !0;\n        return !1;\n    }\n    forEach(t) {\n        ct(this.inner, ((e, n) => {\n            for (const [e, s] of n) t(e, s);\n        }));\n    }\n    isEmpty() {\n        return at(this.inner);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An in-memory buffer of entries to be written to a RemoteDocumentCache.\n * It can be used to batch up a set of changes to be written to the cache, but\n * additionally supports reading entries back with the `getEntry()` method,\n * falling back to the underlying RemoteDocumentCache if no entry is\n * buffered.\n *\n * Entries added to the cache *must* be read first. This is to facilitate\n * calculating the size delta of the pending changes.\n *\n * PORTING NOTE: This class was implemented then removed from other platforms.\n * If byte-counting ends up being needed on the other platforms, consider\n * porting this class as part of that implementation work.\n */ class Qi {\n    constructor() {\n        // A mapping of document key to the new cache entry that should be written (or null if any\n        // existing cache entry should be removed).\n        this.changes = new ji((t => t.toString()), ((t, e) => t.isEqual(e))), this.changesApplied = !1;\n    }\n    getReadTime(t) {\n        const e = this.changes.get(t);\n        return e ? e.readTime : rt.min();\n    }\n    /**\n     * Buffers a `RemoteDocumentCache.addEntry()` call.\n     *\n     * You can only modify documents that have already been retrieved via\n     * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).\n     */    addEntry(t, e) {\n        this.assertNotApplied(), this.changes.set(t.key, {\n            document: t,\n            readTime: e\n        });\n    }\n    /**\n     * Buffers a `RemoteDocumentCache.removeEntry()` call.\n     *\n     * You can only remove documents that have already been retrieved via\n     * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).\n     */    removeEntry(t, e = null) {\n        this.assertNotApplied(), this.changes.set(t, {\n            document: Kt.newInvalidDocument(t),\n            readTime: e\n        });\n    }\n    /**\n     * Looks up an entry in the cache. The buffered changes will first be checked,\n     * and if no buffered change applies, this will forward to\n     * `RemoteDocumentCache.getEntry()`.\n     *\n     * @param transaction - The transaction in which to perform any persistence\n     *     operations.\n     * @param documentKey - The key of the entry to look up.\n     * @returns The cached document or an invalid document if we have nothing\n     * cached.\n     */    getEntry(t, e) {\n        this.assertNotApplied();\n        const n = this.changes.get(e);\n        return void 0 !== n ? js.resolve(n.document) : this.getFromCache(t, e);\n    }\n    /**\n     * Looks up several entries in the cache, forwarding to\n     * `RemoteDocumentCache.getEntry()`.\n     *\n     * @param transaction - The transaction in which to perform any persistence\n     *     operations.\n     * @param documentKeys - The keys of the entries to look up.\n     * @returns A map of cached documents, indexed by key. If an entry cannot be\n     *     found, the corresponding key will be mapped to an invalid document.\n     */    getEntries(t, e) {\n        return this.getAllFromCache(t, e);\n    }\n    /**\n     * Applies buffered changes to the underlying RemoteDocumentCache, using\n     * the provided transaction.\n     */    apply(t) {\n        return this.assertNotApplied(), this.changesApplied = !0, this.applyChanges(t);\n    }\n    /** Helper to assert this.changes is not null  */    assertNotApplied() {}\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The RemoteDocumentCache for IndexedDb. To construct, invoke\n * `newIndexedDbRemoteDocumentCache()`.\n */ class Wi {\n    /**\n     * @param serializer - The document serializer.\n     * @param indexManager - The query indexes that need to be maintained.\n     */\n    constructor(t, e) {\n        this.N = t, this.Ht = e;\n    }\n    /**\n     * Adds the supplied entries to the cache.\n     *\n     * All calls of `addEntry` are required to go through the RemoteDocumentChangeBuffer\n     * returned by `newChangeBuffer()` to ensure proper accounting of metadata.\n     */    addEntry(t, e, n) {\n        return Hi(t).put(Ji(e), n);\n    }\n    /**\n     * Removes a document from the cache.\n     *\n     * All calls of `removeEntry`  are required to go through the RemoteDocumentChangeBuffer\n     * returned by `newChangeBuffer()` to ensure proper accounting of metadata.\n     */    removeEntry(t, e) {\n        const n = Hi(t), s = Ji(e);\n        return n.delete(s);\n    }\n    /**\n     * Updates the current cache size.\n     *\n     * Callers to `addEntry()` and `removeEntry()` *must* call this afterwards to update the\n     * cache's metadata.\n     */    updateMetadata(t, e) {\n        return this.getMetadata(t).next((n => (n.byteSize += e, this.Ae(t, n))));\n    }\n    getEntry(t, e) {\n        return Hi(t).get(Ji(e)).next((t => this.Re(e, t)));\n    }\n    /**\n     * Looks up an entry in the cache.\n     *\n     * @param documentKey - The key of the entry to look up.\n     * @returns The cached document entry and its size.\n     */    be(t, e) {\n        return Hi(t).get(Ji(e)).next((t => ({\n            document: this.Re(e, t),\n            size: Pi(t)\n        })));\n    }\n    getEntries(t, e) {\n        let n = Tn();\n        return this.Pe(t, e, ((t, e) => {\n            const s = this.Re(t, e);\n            n = n.insert(t, s);\n        })).next((() => n));\n    }\n    /**\n     * Looks up several entries in the cache.\n     *\n     * @param documentKeys - The set of keys entries to look up.\n     * @returns A map of documents indexed by key and a map of sizes indexed by\n     *     key (zero if the document does not exist).\n     */    ve(t, e) {\n        let n = Tn(), s = new wn(Pt.comparator);\n        return this.Pe(t, e, ((t, e) => {\n            const i = this.Re(t, e);\n            n = n.insert(t, i), s = s.insert(t, Pi(e));\n        })).next((() => ({\n            documents: n,\n            Ve: s\n        })));\n    }\n    Pe(t, e, n) {\n        if (e.isEmpty()) return js.resolve();\n        const s = IDBKeyRange.bound(e.first().path.toArray(), e.last().path.toArray()), i = e.getIterator();\n        let r = i.getNext();\n        return Hi(t).Kt({\n            range: s\n        }, ((t, e, s) => {\n            const o = Pt.fromSegments(t);\n            // Go through keys not found in cache.\n                        for (;r && Pt.comparator(r, o) < 0; ) n(r, null), r = i.getNext();\n            r && r.isEqual(o) && (\n            // Key found in cache.\n            n(r, e), r = i.hasNext() ? i.getNext() : null), \n            // Skip to the next key (if there is one).\n            r ? s.Mt(r.path.toArray()) : s.done();\n        })).next((() => {\n            // The rest of the keys are not in the cache. One case where `iterate`\n            // above won't go through them is when the cache is empty.\n            for (;r; ) n(r, null), r = i.hasNext() ? i.getNext() : null;\n        }));\n    }\n    getDocumentsMatchingQuery(t, e, n) {\n        let s = Tn();\n        const i = e.path.length + 1, r = {};\n        if (n.isEqual(rt.min())) {\n            // Documents are ordered by key, so we can use a prefix scan to narrow\n            // down the documents we need to match the query against.\n            const t = e.path.toArray();\n            r.range = IDBKeyRange.lowerBound(t);\n        } else {\n            // Execute an index-free query and filter by read time. This is safe\n            // since all document changes to queries that have a\n            // lastLimboFreeSnapshotVersion (`sinceReadTime`) have a read time set.\n            const t = e.path.toArray(), s = ai(n);\n            r.range = IDBKeyRange.lowerBound([ t, s ], \n            /* open= */ !0), r.index = Ns.collectionReadTimeIndex;\n        }\n        return Hi(t).Kt(r, ((t, n, r) => {\n            // The query is actually returning any path that starts with the query\n            // path prefix which may include documents in subcollections. For\n            // example, a query on 'rooms' will return rooms/abc/messages/xyx but we\n            // shouldn't match it. Fix this by discarding rows with document keys\n            // more than one segment longer than the query path.\n            if (t.length !== i) return;\n            const o = oi(this.N, n);\n            e.path.isPrefixOf(o.key.path) ? Pe(e, o) && (s = s.insert(o.key, o)) : r.done();\n        })).next((() => s));\n    }\n    newChangeBuffer(t) {\n        return new Gi(this, !!t && t.trackRemovals);\n    }\n    getSize(t) {\n        return this.getMetadata(t).next((t => t.byteSize));\n    }\n    getMetadata(t) {\n        return zi(t).get(xs.key).next((t => (B(!!t), t)));\n    }\n    Ae(t, e) {\n        return zi(t).put(xs.key, e);\n    }\n    /**\n     * Decodes `remoteDoc` and returns the document (or null, if the document\n     * corresponds to the format used for sentinel deletes).\n     */    Re(t, e) {\n        if (e) {\n            const t = oi(this.N, e);\n            // Whether the document is a sentinel removal and should only be used in the\n            // `getNewDocumentChanges()`\n                        if (!(t.isNoDocument() && t.version.isEqual(rt.min()))) return t;\n        }\n        return Kt.newInvalidDocument(t);\n    }\n}\n\n/**\n * Creates a new IndexedDbRemoteDocumentCache.\n *\n * @param serializer - The document serializer.\n * @param indexManager - The query indexes that need to be maintained.\n */\n/**\n * Handles the details of adding and updating documents in the IndexedDbRemoteDocumentCache.\n *\n * Unlike the MemoryRemoteDocumentChangeBuffer, the IndexedDb implementation computes the size\n * delta for all submitted changes. This avoids having to re-read all documents from IndexedDb\n * when we apply the changes.\n */\nclass Gi extends Qi {\n    /**\n     * @param documentCache - The IndexedDbRemoteDocumentCache to apply the changes to.\n     * @param trackRemovals - Whether to create sentinel deletes that can be tracked by\n     * `getNewDocumentChanges()`.\n     */\n    constructor(t, e) {\n        super(), this.Se = t, this.trackRemovals = e, \n        // A map of document sizes prior to applying the changes in this buffer.\n        this.De = new ji((t => t.toString()), ((t, e) => t.isEqual(e)));\n    }\n    applyChanges(t) {\n        const e = [];\n        let n = 0, s = new gn(((t, e) => et(t.canonicalString(), e.canonicalString())));\n        return this.changes.forEach(((i, r) => {\n            const o = this.De.get(i);\n            if (r.document.isValidDocument()) {\n                const c = ci(this.Se.N, r.document, this.getReadTime(i));\n                s = s.add(i.path.popLast());\n                const a = Pi(c);\n                n += a - o, e.push(this.Se.addEntry(t, i, c));\n            } else if (n -= o, this.trackRemovals) {\n                // In order to track removals, we store a \"sentinel delete\" in the\n                // RemoteDocumentCache. This entry is represented by a NoDocument\n                // with a version of 0 and ignored by `maybeDecodeDocument()` but\n                // preserved in `getNewDocumentChanges()`.\n                const n = ci(this.Se.N, Kt.newNoDocument(i, rt.min()), this.getReadTime(i));\n                e.push(this.Se.addEntry(t, i, n));\n            } else e.push(this.Se.removeEntry(t, i));\n        })), s.forEach((n => {\n            e.push(this.Se.Ht.addToCollectionParentIndex(t, n));\n        })), e.push(this.Se.updateMetadata(t, n)), js.waitFor(e);\n    }\n    getFromCache(t, e) {\n        // Record the size of everything we load from the cache so we can compute a delta later.\n        return this.Se.be(t, e).next((t => (this.De.set(e, t.size), t.document)));\n    }\n    getAllFromCache(t, e) {\n        // Record the size of everything we load from the cache so we can compute\n        // a delta later.\n        return this.Se.ve(t, e).next((({documents: t, Ve: e}) => (\n        // Note: `getAllFromCache` returns two maps instead of a single map from\n        // keys to `DocumentSizeEntry`s. This is to allow returning the\n        // `MutableDocumentMap` directly, without a conversion.\n        e.forEach(((t, e) => {\n            this.De.set(t, e);\n        })), t)));\n    }\n}\n\nfunction zi(t) {\n    return ei(t, xs.store);\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the remoteDocuments object store.\n */ function Hi(t) {\n    return ei(t, Ns.store);\n}\n\nfunction Ji(t) {\n    return t.path.toArray();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Performs database creation and schema upgrades. */ class Yi {\n    constructor(t) {\n        this.N = t;\n    }\n    /**\n     * Performs database creation and schema upgrades.\n     *\n     * Note that in production, this method is only ever used to upgrade the schema\n     * to SCHEMA_VERSION. Different values of toVersion are only used for testing\n     * and local feature development.\n     */    Ct(t, e, n, s) {\n        B(n < s && n >= 0 && s <= 11);\n        const i = new Qs(\"createOrUpgrade\", e);\n        n < 1 && s >= 1 && (function(t) {\n            t.createObjectStore(Ps.store);\n        }(t), function(t) {\n            t.createObjectStore(vs.store, {\n                keyPath: vs.keyPath\n            });\n            t.createObjectStore(Vs.store, {\n                keyPath: Vs.keyPath,\n                autoIncrement: !0\n            }).createIndex(Vs.userMutationsIndex, Vs.userMutationsKeyPath, {\n                unique: !0\n            }), t.createObjectStore(Ss.store);\n        }\n        /**\n * Upgrade function to migrate the 'mutations' store from V1 to V3. Loads\n * and rewrites all data.\n */ (t), Xi(t), function(t) {\n            t.createObjectStore(Ns.store);\n        }(t));\n        // Migration 2 to populate the targetGlobal object no longer needed since\n        // migration 3 unconditionally clears it.\n                let r = js.resolve();\n        return n < 3 && s >= 3 && (\n        // Brand new clients don't need to drop and recreate--only clients that\n        // potentially have corrupt data.\n        0 !== n && (!function(t) {\n            t.deleteObjectStore($s.store), t.deleteObjectStore(ks.store), t.deleteObjectStore(Os.store);\n        }(t), Xi(t)), r = r.next((() => \n        /**\n * Creates the target global singleton row.\n *\n * @param txn - The version upgrade transaction for indexeddb\n */\n        function(t) {\n            const e = t.store(Os.store), n = new Os(\n            /*highestTargetId=*/ 0, \n            /*lastListenSequenceNumber=*/ 0, rt.min().toTimestamp(), \n            /*targetCount=*/ 0);\n            return e.put(Os.key, n);\n        }\n        /**\n * Creates indices on the RemoteDocuments store used for both multi-tab\n * and Index-Free queries.\n */ (i)))), n < 4 && s >= 4 && (0 !== n && (\n        // Schema version 3 uses auto-generated keys to generate globally unique\n        // mutation batch IDs (this was previously ensured internally by the\n        // client). To migrate to the new schema, we have to read all mutations\n        // and write them back out. We preserve the existing batch IDs to guarantee\n        // consistency with other object stores. Any further mutation batch IDs will\n        // be auto-generated.\n        r = r.next((() => function(t, e) {\n            return e.store(Vs.store).Lt().next((n => {\n                t.deleteObjectStore(Vs.store);\n                t.createObjectStore(Vs.store, {\n                    keyPath: Vs.keyPath,\n                    autoIncrement: !0\n                }).createIndex(Vs.userMutationsIndex, Vs.userMutationsKeyPath, {\n                    unique: !0\n                });\n                const s = e.store(Vs.store), i = n.map((t => s.put(t)));\n                return js.waitFor(i);\n            }));\n        }(t, i)))), r = r.next((() => {\n            !function(t) {\n                t.createObjectStore(Ms.store, {\n                    keyPath: Ms.keyPath\n                });\n            }(t);\n        }))), n < 5 && s >= 5 && (r = r.next((() => this.Ce(i)))), n < 6 && s >= 6 && (r = r.next((() => (function(t) {\n            t.createObjectStore(xs.store);\n        }(t), this.Ne(i))))), n < 7 && s >= 7 && (r = r.next((() => this.xe(i)))), n < 8 && s >= 8 && (r = r.next((() => this.ke(t, i)))), \n        n < 9 && s >= 9 && (r = r.next((() => {\n            // Multi-Tab used to manage its own changelog, but this has been moved\n            // to the DbRemoteDocument object store itself. Since the previous change\n            // log only contained transient data, we can drop its object store.\n            !function(t) {\n                t.objectStoreNames.contains(\"remoteDocumentChanges\") && t.deleteObjectStore(\"remoteDocumentChanges\");\n            }(t), function(t) {\n                const e = t.objectStore(Ns.store);\n                e.createIndex(Ns.readTimeIndex, Ns.readTimeIndexPath, {\n                    unique: !1\n                }), e.createIndex(Ns.collectionReadTimeIndex, Ns.collectionReadTimeIndexPath, {\n                    unique: !1\n                });\n            }(e);\n        }))), n < 10 && s >= 10 && (r = r.next((() => this.$e(i)))), n < 11 && s >= 11 && (r = r.next((() => {\n            !function(t) {\n                t.createObjectStore(Ls.store, {\n                    keyPath: Ls.keyPath\n                });\n            }(t), function(t) {\n                t.createObjectStore(Bs.store, {\n                    keyPath: Bs.keyPath\n                });\n            }\n            /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t);\n        }))), r;\n    }\n    Ne(t) {\n        let e = 0;\n        return t.store(Ns.store).Kt(((t, n) => {\n            e += Pi(n);\n        })).next((() => {\n            const n = new xs(e);\n            return t.store(xs.store).put(xs.key, n);\n        }));\n    }\n    Ce(t) {\n        const e = t.store(vs.store), n = t.store(Vs.store);\n        return e.Lt().next((e => js.forEach(e, (e => {\n            const s = IDBKeyRange.bound([ e.userId, -1 ], [ e.userId, e.lastAcknowledgedBatchId ]);\n            return n.Lt(Vs.userMutationsIndex, s).next((n => js.forEach(n, (n => {\n                B(n.userId === e.userId);\n                const s = fi(this.N, n);\n                return bi(t, e.userId, s).next((() => {}));\n            }))));\n        }))));\n    }\n    /**\n     * Ensures that every document in the remote document cache has a corresponding sentinel row\n     * with a sequence number. Missing rows are given the most recently used sequence number.\n     */    xe(t) {\n        const e = t.store($s.store), n = t.store(Ns.store);\n        return t.store(Os.store).get(Os.key).next((t => {\n            const s = [];\n            return n.Kt(((n, i) => {\n                const r = new ht(n), o = function(t) {\n                    return [ 0, Es(t) ];\n                }(r);\n                s.push(e.get(o).next((n => n ? js.resolve() : (n => e.put(new $s(0, Es(n), t.highestListenSequenceNumber)))(r))));\n            })).next((() => js.waitFor(s)));\n        }));\n    }\n    ke(t, e) {\n        // Create the index.\n        t.createObjectStore(Fs.store, {\n            keyPath: Fs.keyPath\n        });\n        const n = e.store(Fs.store), s = new Ti, i = t => {\n            if (s.add(t)) {\n                const e = t.lastSegment(), s = t.popLast();\n                return n.put({\n                    collectionId: e,\n                    parent: Es(s)\n                });\n            }\n        };\n        // Helper to add an index entry iff we haven't already written it.\n                // Index existing remote documents.\n        return e.store(Ns.store).Kt({\n            qt: !0\n        }, ((t, e) => {\n            const n = new ht(t);\n            return i(n.popLast());\n        })).next((() => e.store(Ss.store).Kt({\n            qt: !0\n        }, (([t, e, n], s) => {\n            const r = Rs(e);\n            return i(r.popLast());\n        }))));\n    }\n    $e(t) {\n        const e = t.store(ks.store);\n        return e.Kt(((t, n) => {\n            const s = di(n), i = wi(this.N, s);\n            return e.put(i);\n        }));\n    }\n}\n\nfunction Xi(t) {\n    t.createObjectStore($s.store, {\n        keyPath: $s.keyPath\n    }).createIndex($s.documentTargetsIndex, $s.documentTargetsKeyPath, {\n        unique: !0\n    });\n    // NOTE: This is unique only because the TargetId is the suffix.\n    t.createObjectStore(ks.store, {\n        keyPath: ks.keyPath\n    }).createIndex(ks.queryTargetsIndexName, ks.queryTargetsKeyPath, {\n        unique: !0\n    }), t.createObjectStore(Os.store);\n}\n\nconst Zi = \"Failed to obtain exclusive access to the persistence layer. To allow shared access, multi-tab synchronization has to be enabled in all tabs. If you are using `experimentalForceOwningTab:true`, make sure that only one tab has persistence enabled at any given time.\";\n\n/**\n * Oldest acceptable age in milliseconds for client metadata before the client\n * is considered inactive and its associated data is garbage collected.\n */\n/**\n * An IndexedDB-backed instance of Persistence. Data is stored persistently\n * across sessions.\n *\n * On Web only, the Firestore SDKs support shared access to its persistence\n * layer. This allows multiple browser tabs to read and write to IndexedDb and\n * to synchronize state even without network connectivity. Shared access is\n * currently optional and not enabled unless all clients invoke\n * `enablePersistence()` with `{synchronizeTabs:true}`.\n *\n * In multi-tab mode, if multiple clients are active at the same time, the SDK\n * will designate one client as the “primary client”. An effort is made to pick\n * a visible, network-connected and active client, and this client is\n * responsible for letting other clients know about its presence. The primary\n * client writes a unique client-generated identifier (the client ID) to\n * IndexedDb’s “owner” store every 4 seconds. If the primary client fails to\n * update this entry, another client can acquire the lease and take over as\n * primary.\n *\n * Some persistence operations in the SDK are designated as primary-client only\n * operations. This includes the acknowledgment of mutations and all updates of\n * remote documents. The effects of these operations are written to persistence\n * and then broadcast to other tabs via LocalStorage (see\n * `WebStorageSharedClientState`), which then refresh their state from\n * persistence.\n *\n * Similarly, the primary client listens to notifications sent by secondary\n * clients to discover persistence changes written by secondary clients, such as\n * the addition of new mutations and query targets.\n *\n * If multi-tab is not enabled and another tab already obtained the primary\n * lease, IndexedDbPersistence enters a failed state and all subsequent\n * operations will automatically fail.\n *\n * Additionally, there is an optimization so that when a tab is closed, the\n * primary lease is released immediately (this is especially important to make\n * sure that a refreshed tab is able to immediately re-acquire the primary\n * lease). Unfortunately, IndexedDB cannot be reliably used in window.unload\n * since it is an asynchronous API. So in addition to attempting to give up the\n * lease, the leaseholder writes its client ID to a \"zombiedClient\" entry in\n * LocalStorage which acts as an indicator that another tab should go ahead and\n * take the primary lease immediately regardless of the current lease timestamp.\n *\n * TODO(b/114226234): Remove `synchronizeTabs` section when multi-tab is no\n * longer optional.\n */\nclass tr {\n    constructor(\n    /**\n     * Whether to synchronize the in-memory state of multiple tabs and share\n     * access to local persistence.\n     */\n    t, e, n, s, i, r, o, c, a, \n    /**\n     * If set to true, forcefully obtains database access. Existing tabs will\n     * no longer be able to access IndexedDB.\n     */\n    u) {\n        if (this.allowTabSynchronization = t, this.persistenceKey = e, this.clientId = n, \n        this.Oe = i, this.window = r, this.document = o, this.Fe = a, this.Me = u, this.Le = null, \n        this.Be = !1, this.isPrimary = !1, this.networkEnabled = !0, \n        /** Our window.unload handler, if registered. */\n        this.Ue = null, this.inForeground = !1, \n        /** Our 'visibilitychange' listener if registered. */\n        this.qe = null, \n        /** The client metadata refresh task. */\n        this.Ke = null, \n        /** The last time we garbage collected the client metadata object store. */\n        this.je = Number.NEGATIVE_INFINITY, \n        /** A listener to notify on primary state changes. */\n        this.Qe = t => Promise.resolve(), !tr.bt()) throw new j(K.UNIMPLEMENTED, \"This platform is either missing IndexedDB or is known to have an incomplete implementation. Offline persistence has been disabled.\");\n        this.referenceDelegate = new qi(this, s), this.We = e + \"main\", this.N = new ri(c), \n        this.Ge = new Ws(this.We, 11, new Yi(this.N)), this.ze = new xi(this.referenceDelegate, this.N), \n        this.Ht = new Ei, this.He = function(t, e) {\n            return new Wi(t, e);\n        }\n        /**\n * Returns the set of documents that have changed since the specified read\n * time.\n */\n        // PORTING NOTE: This is only used for multi-tab synchronization.\n        (this.N, this.Ht), this.Je = new mi, this.window && this.window.localStorage ? this.Ye = this.window.localStorage : (this.Ye = null, \n        !1 === u && O(\"IndexedDbPersistence\", \"LocalStorage is unavailable. As a result, persistence may not work reliably. In particular enablePersistence() could fail immediately after refreshing the page.\"));\n    }\n    /**\n     * Attempt to start IndexedDb persistence.\n     *\n     * @returns Whether persistence was enabled.\n     */    start() {\n        // NOTE: This is expected to fail sometimes (in the case of another tab\n        // already having the persistence lock), so it's the first thing we should\n        // do.\n        return this.Xe().then((() => {\n            if (!this.isPrimary && !this.allowTabSynchronization) \n            // Fail `start()` if `synchronizeTabs` is disabled and we cannot\n            // obtain the primary lease.\n            throw new j(K.FAILED_PRECONDITION, Zi);\n            return this.Ze(), this.tn(), this.en(), this.runTransaction(\"getHighestListenSequenceNumber\", \"readonly\", (t => this.ze.getHighestSequenceNumber(t)));\n        })).then((t => {\n            this.Le = new X(t, this.Fe);\n        })).then((() => {\n            this.Be = !0;\n        })).catch((t => (this.Ge && this.Ge.close(), Promise.reject(t))));\n    }\n    /**\n     * Registers a listener that gets called when the primary state of the\n     * instance changes. Upon registering, this listener is invoked immediately\n     * with the current primary state.\n     *\n     * PORTING NOTE: This is only used for Web multi-tab.\n     */    nn(t) {\n        return this.Qe = async e => {\n            if (this.started) return t(e);\n        }, t(this.isPrimary);\n    }\n    /**\n     * Registers a listener that gets called when the database receives a\n     * version change event indicating that it has deleted.\n     *\n     * PORTING NOTE: This is only used for Web multi-tab.\n     */    setDatabaseDeletedListener(t) {\n        this.Ge.xt((async e => {\n            // Check if an attempt is made to delete IndexedDB.\n            null === e.newVersion && await t();\n        }));\n    }\n    /**\n     * Adjusts the current network state in the client's metadata, potentially\n     * affecting the primary lease.\n     *\n     * PORTING NOTE: This is only used for Web multi-tab.\n     */    setNetworkEnabled(t) {\n        this.networkEnabled !== t && (this.networkEnabled = t, \n        // Schedule a primary lease refresh for immediate execution. The eventual\n        // lease update will be propagated via `primaryStateListener`.\n        this.Oe.enqueueAndForget((async () => {\n            this.started && await this.Xe();\n        })));\n    }\n    /**\n     * Updates the client metadata in IndexedDb and attempts to either obtain or\n     * extend the primary lease for the local client. Asynchronously notifies the\n     * primary state listener if the client either newly obtained or released its\n     * primary lease.\n     */    Xe() {\n        return this.runTransaction(\"updateClientMetadataAndTryBecomePrimary\", \"readwrite\", (t => nr(t).put(new Ms(this.clientId, Date.now(), this.networkEnabled, this.inForeground)).next((() => {\n            if (this.isPrimary) return this.sn(t).next((t => {\n                t || (this.isPrimary = !1, this.Oe.enqueueRetryable((() => this.Qe(!1))));\n            }));\n        })).next((() => this.rn(t))).next((e => this.isPrimary && !e ? this.on(t).next((() => !1)) : !!e && this.cn(t).next((() => !0)))))).catch((t => {\n            if (Hs(t)) \n            // Proceed with the existing state. Any subsequent access to\n            // IndexedDB will verify the lease.\n            return $(\"IndexedDbPersistence\", \"Failed to extend owner lease: \", t), this.isPrimary;\n            if (!this.allowTabSynchronization) throw t;\n            return $(\"IndexedDbPersistence\", \"Releasing owner lease after error during lease refresh\", t), \n            /* isPrimary= */ !1;\n        })).then((t => {\n            this.isPrimary !== t && this.Oe.enqueueRetryable((() => this.Qe(t))), this.isPrimary = t;\n        }));\n    }\n    sn(t) {\n        return er(t).get(Ps.key).next((t => js.resolve(this.an(t))));\n    }\n    un(t) {\n        return nr(t).delete(this.clientId);\n    }\n    /**\n     * If the garbage collection threshold has passed, prunes the\n     * RemoteDocumentChanges and the ClientMetadata store based on the last update\n     * time of all clients.\n     */    async hn() {\n        if (this.isPrimary && !this.ln(this.je, 18e5)) {\n            this.je = Date.now();\n            const t = await this.runTransaction(\"maybeGarbageCollectMultiClientState\", \"readwrite-primary\", (t => {\n                const e = ei(t, Ms.store);\n                return e.Lt().next((t => {\n                    const n = this.fn(t, 18e5), s = t.filter((t => -1 === n.indexOf(t)));\n                    // Delete metadata for clients that are no longer considered active.\n                    return js.forEach(s, (t => e.delete(t.clientId))).next((() => s));\n                }));\n            })).catch((() => []));\n            // Delete potential leftover entries that may continue to mark the\n            // inactive clients as zombied in LocalStorage.\n            // Ideally we'd delete the IndexedDb and LocalStorage zombie entries for\n            // the client atomically, but we can't. So we opt to delete the IndexedDb\n            // entries first to avoid potentially reviving a zombied client.\n                        if (this.Ye) for (const e of t) this.Ye.removeItem(this.dn(e.clientId));\n        }\n    }\n    /**\n     * Schedules a recurring timer to update the client metadata and to either\n     * extend or acquire the primary lease if the client is eligible.\n     */    en() {\n        this.Ke = this.Oe.enqueueAfterDelay(\"client_metadata_refresh\" /* ClientMetadataRefresh */ , 4e3, (() => this.Xe().then((() => this.hn())).then((() => this.en()))));\n    }\n    /** Checks whether `client` is the local client. */    an(t) {\n        return !!t && t.ownerId === this.clientId;\n    }\n    /**\n     * Evaluate the state of all active clients and determine whether the local\n     * client is or can act as the holder of the primary lease. Returns whether\n     * the client is eligible for the lease, but does not actually acquire it.\n     * May return 'false' even if there is no active leaseholder and another\n     * (foreground) client should become leaseholder instead.\n     */    rn(t) {\n        if (this.Me) return js.resolve(!0);\n        return er(t).get(Ps.key).next((e => {\n            // A client is eligible for the primary lease if:\n            // - its network is enabled and the client's tab is in the foreground.\n            // - its network is enabled and no other client's tab is in the\n            //   foreground.\n            // - every clients network is disabled and the client's tab is in the\n            //   foreground.\n            // - every clients network is disabled and no other client's tab is in\n            //   the foreground.\n            // - the `forceOwningTab` setting was passed in.\n            if (null !== e && this.ln(e.leaseTimestampMs, 5e3) && !this.wn(e.ownerId)) {\n                if (this.an(e) && this.networkEnabled) return !0;\n                if (!this.an(e)) {\n                    if (!e.allowTabSynchronization) \n                    // Fail the `canActAsPrimary` check if the current leaseholder has\n                    // not opted into multi-tab synchronization. If this happens at\n                    // client startup, we reject the Promise returned by\n                    // `enablePersistence()` and the user can continue to use Firestore\n                    // with in-memory persistence.\n                    // If this fails during a lease refresh, we will instead block the\n                    // AsyncQueue from executing further operations. Note that this is\n                    // acceptable since mixing & matching different `synchronizeTabs`\n                    // settings is not supported.\n                    // TODO(b/114226234): Remove this check when `synchronizeTabs` can\n                    // no longer be turned off.\n                    throw new j(K.FAILED_PRECONDITION, Zi);\n                    return !1;\n                }\n            }\n            return !(!this.networkEnabled || !this.inForeground) || nr(t).Lt().next((t => void 0 === this.fn(t, 5e3).find((t => {\n                if (this.clientId !== t.clientId) {\n                    const e = !this.networkEnabled && t.networkEnabled, n = !this.inForeground && t.inForeground, s = this.networkEnabled === t.networkEnabled;\n                    if (e || n && s) return !0;\n                }\n                return !1;\n            }))));\n        })).next((t => (this.isPrimary !== t && $(\"IndexedDbPersistence\", `Client ${t ? \"is\" : \"is not\"} eligible for a primary lease.`), \n        t)));\n    }\n    async shutdown() {\n        // The shutdown() operations are idempotent and can be called even when\n        // start() aborted (e.g. because it couldn't acquire the persistence lease).\n        this.Be = !1, this._n(), this.Ke && (this.Ke.cancel(), this.Ke = null), this.mn(), \n        this.gn(), \n        // Use `SimpleDb.runTransaction` directly to avoid failing if another tab\n        // has obtained the primary lease.\n        await this.Ge.runTransaction(\"shutdown\", \"readwrite\", [ Ps.store, Ms.store ], (t => {\n            const e = new ti(t, X.T);\n            return this.on(e).next((() => this.un(e)));\n        })), this.Ge.close(), \n        // Remove the entry marking the client as zombied from LocalStorage since\n        // we successfully deleted its metadata from IndexedDb.\n        this.yn();\n    }\n    /**\n     * Returns clients that are not zombied and have an updateTime within the\n     * provided threshold.\n     */    fn(t, e) {\n        return t.filter((t => this.ln(t.updateTimeMs, e) && !this.wn(t.clientId)));\n    }\n    /**\n     * Returns the IDs of the clients that are currently active. If multi-tab\n     * is not supported, returns an array that only contains the local client's\n     * ID.\n     *\n     * PORTING NOTE: This is only used for Web multi-tab.\n     */    pn() {\n        return this.runTransaction(\"getActiveClients\", \"readonly\", (t => nr(t).Lt().next((t => this.fn(t, 18e5).map((t => t.clientId))))));\n    }\n    get started() {\n        return this.Be;\n    }\n    getMutationQueue(t) {\n        return vi.Yt(t, this.N, this.Ht, this.referenceDelegate);\n    }\n    getTargetCache() {\n        return this.ze;\n    }\n    getRemoteDocumentCache() {\n        return this.He;\n    }\n    getIndexManager() {\n        return this.Ht;\n    }\n    getBundleCache() {\n        return this.Je;\n    }\n    runTransaction(t, e, n) {\n        $(\"IndexedDbPersistence\", \"Starting transaction:\", t);\n        const s = \"readonly\" === e ? \"readonly\" : \"readwrite\";\n        let i;\n        // Do all transactions as readwrite against all object stores, since we\n        // are the only reader/writer.\n                return this.Ge.runTransaction(t, s, Us, (s => (i = new ti(s, this.Le ? this.Le.next() : X.T), \n        \"readwrite-primary\" === e ? this.sn(i).next((t => !!t || this.rn(i))).next((e => {\n            if (!e) throw O(`Failed to obtain primary lease for action '${t}'.`), this.isPrimary = !1, \n            this.Oe.enqueueRetryable((() => this.Qe(!1))), new j(K.FAILED_PRECONDITION, qs);\n            return n(i);\n        })).next((t => this.cn(i).next((() => t)))) : this.Tn(i).next((() => n(i)))))).then((t => (i.raiseOnCommittedEvent(), \n        t)));\n    }\n    /**\n     * Verifies that the current tab is the primary leaseholder or alternatively\n     * that the leaseholder has opted into multi-tab synchronization.\n     */\n    // TODO(b/114226234): Remove this check when `synchronizeTabs` can no longer\n    // be turned off.\n    Tn(t) {\n        return er(t).get(Ps.key).next((t => {\n            if (null !== t && this.ln(t.leaseTimestampMs, 5e3) && !this.wn(t.ownerId) && !this.an(t) && !(this.Me || this.allowTabSynchronization && t.allowTabSynchronization)) throw new j(K.FAILED_PRECONDITION, Zi);\n        }));\n    }\n    /**\n     * Obtains or extends the new primary lease for the local client. This\n     * method does not verify that the client is eligible for this lease.\n     */    cn(t) {\n        const e = new Ps(this.clientId, this.allowTabSynchronization, Date.now());\n        return er(t).put(Ps.key, e);\n    }\n    static bt() {\n        return Ws.bt();\n    }\n    /** Checks the primary lease and removes it if we are the current primary. */    on(t) {\n        const e = er(t);\n        return e.get(Ps.key).next((t => this.an(t) ? ($(\"IndexedDbPersistence\", \"Releasing primary lease.\"), \n        e.delete(Ps.key)) : js.resolve()));\n    }\n    /** Verifies that `updateTimeMs` is within `maxAgeMs`. */    ln(t, e) {\n        const n = Date.now();\n        return !(t < n - e) && (!(t > n) || (O(`Detected an update time that is in the future: ${t} > ${n}`), \n        !1));\n    }\n    Ze() {\n        null !== this.document && \"function\" == typeof this.document.addEventListener && (this.qe = () => {\n            this.Oe.enqueueAndForget((() => (this.inForeground = \"visible\" === this.document.visibilityState, \n            this.Xe())));\n        }, this.document.addEventListener(\"visibilitychange\", this.qe), this.inForeground = \"visible\" === this.document.visibilityState);\n    }\n    mn() {\n        this.qe && (this.document.removeEventListener(\"visibilitychange\", this.qe), this.qe = null);\n    }\n    /**\n     * Attaches a window.unload handler that will synchronously write our\n     * clientId to a \"zombie client id\" location in LocalStorage. This can be used\n     * by tabs trying to acquire the primary lease to determine that the lease\n     * is no longer valid even if the timestamp is recent. This is particularly\n     * important for the refresh case (so the tab correctly re-acquires the\n     * primary lease). LocalStorage is used for this rather than IndexedDb because\n     * it is a synchronous API and so can be used reliably from  an unload\n     * handler.\n     */    tn() {\n        var t;\n        \"function\" == typeof (null === (t = this.window) || void 0 === t ? void 0 : t.addEventListener) && (this.Ue = () => {\n            // Note: In theory, this should be scheduled on the AsyncQueue since it\n            // accesses internal state. We execute this code directly during shutdown\n            // to make sure it gets a chance to run.\n            this._n(), isSafari() && navigator.appVersion.match(\"Version/14\") && \n            // On Safari 14, we do not run any cleanup actions as it might trigger\n            // a bug that prevents Safari from re-opening IndexedDB during the\n            // next page load.\n            // See https://bugs.webkit.org/show_bug.cgi?id=226547\n            this.Oe.enterRestrictedMode(/* purgeExistingTasks= */ !0), this.Oe.enqueueAndForget((() => this.shutdown()));\n        }, this.window.addEventListener(\"pagehide\", this.Ue));\n    }\n    gn() {\n        this.Ue && (this.window.removeEventListener(\"pagehide\", this.Ue), this.Ue = null);\n    }\n    /**\n     * Returns whether a client is \"zombied\" based on its LocalStorage entry.\n     * Clients become zombied when their tab closes without running all of the\n     * cleanup logic in `shutdown()`.\n     */    wn(t) {\n        var e;\n        try {\n            const n = null !== (null === (e = this.Ye) || void 0 === e ? void 0 : e.getItem(this.dn(t)));\n            return $(\"IndexedDbPersistence\", `Client '${t}' ${n ? \"is\" : \"is not\"} zombied in LocalStorage`), \n            n;\n        } catch (t) {\n            // Gracefully handle if LocalStorage isn't working.\n            return O(\"IndexedDbPersistence\", \"Failed to get zombied client id.\", t), !1;\n        }\n    }\n    /**\n     * Record client as zombied (a client that had its tab closed). Zombied\n     * clients are ignored during primary tab selection.\n     */    _n() {\n        if (this.Ye) try {\n            this.Ye.setItem(this.dn(this.clientId), String(Date.now()));\n        } catch (t) {\n            // Gracefully handle if LocalStorage isn't available / working.\n            O(\"Failed to set zombie client id.\", t);\n        }\n    }\n    /** Removes the zombied client entry if it exists. */    yn() {\n        if (this.Ye) try {\n            this.Ye.removeItem(this.dn(this.clientId));\n        } catch (t) {\n            // Ignore\n        }\n    }\n    dn(t) {\n        return `firestore_zombie_${this.persistenceKey}_${t}`;\n    }\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the primary client object store.\n */ function er(t) {\n    return ei(t, Ps.store);\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the client metadata object store.\n */ function nr(t) {\n    return ei(t, Ms.store);\n}\n\n/**\n * Generates a string used as a prefix when storing data in IndexedDB and\n * LocalStorage.\n */ function sr(t, e) {\n    // Use two different prefix formats:\n    //   * firestore / persistenceKey / projectID . databaseID / ...\n    //   * firestore / persistenceKey / projectID / ...\n    // projectIDs are DNS-compatible names and cannot contain dots\n    // so there's no danger of collisions.\n    let n = t.projectId;\n    return t.isDefaultDatabase || (n += \".\" + t.database), \"firestore/\" + e + \"/\" + n + \"/\";\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass ir {\n    constructor(t, e) {\n        this.progress = t, this.En = e;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A readonly view of the local state of all documents we're tracking (i.e. we\n * have a cached version in remoteDocumentCache or local mutations for the\n * document). The view is computed by applying the mutations in the\n * MutationQueue to the RemoteDocumentCache.\n */ class rr {\n    constructor(t, e, n) {\n        this.He = t, this.In = e, this.Ht = n;\n    }\n    /**\n     * Get the local view of the document identified by `key`.\n     *\n     * @returns Local view of the document or null if we don't have any cached\n     * state for it.\n     */    An(t, e) {\n        return this.In.getAllMutationBatchesAffectingDocumentKey(t, e).next((n => this.Rn(t, e, n)));\n    }\n    /** Internal version of `getDocument` that allows reusing batches. */    Rn(t, e, n) {\n        return this.He.getEntry(t, e).next((t => {\n            for (const e of n) e.applyToLocalView(t);\n            return t;\n        }));\n    }\n    // Returns the view of the given `docs` as they would appear after applying\n    // all mutations in the given `batches`.\n    bn(t, e) {\n        t.forEach(((t, n) => {\n            for (const t of e) t.applyToLocalView(n);\n        }));\n    }\n    /**\n     * Gets the local view of the documents identified by `keys`.\n     *\n     * If we don't have cached state for a document in `keys`, a NoDocument will\n     * be stored for that key in the resulting set.\n     */    Pn(t, e) {\n        return this.He.getEntries(t, e).next((e => this.vn(t, e).next((() => e))));\n    }\n    /**\n     * Applies the local view the given `baseDocs` without retrieving documents\n     * from the local store.\n     */    vn(t, e) {\n        return this.In.getAllMutationBatchesAffectingDocumentKeys(t, e).next((t => this.bn(e, t)));\n    }\n    /**\n     * Performs a query against the local view of all documents.\n     *\n     * @param transaction - The persistence transaction.\n     * @param query - The query to match documents against.\n     * @param sinceReadTime - If not set to SnapshotVersion.min(), return only\n     *     documents that have been read since this snapshot version (exclusive).\n     */    getDocumentsMatchingQuery(t, e, n) {\n        /**\n * Returns whether the query matches a single document by path (rather than a\n * collection).\n */\n        return function(t) {\n            return Pt.isDocumentKey(t.path) && null === t.collectionGroup && 0 === t.filters.length;\n        }(e) ? this.Vn(t, e.path) : pe(e) ? this.Sn(t, e, n) : this.Dn(t, e, n);\n    }\n    Vn(t, e) {\n        // Just do a simple document lookup.\n        return this.An(t, new Pt(e)).next((t => {\n            let e = In();\n            return t.isFoundDocument() && (e = e.insert(t.key, t)), e;\n        }));\n    }\n    Sn(t, e, n) {\n        const s = e.collectionGroup;\n        let i = In();\n        return this.Ht.getCollectionParents(t, s).next((r => js.forEach(r, (r => {\n            const o = function(t, e) {\n                return new fe(e, \n                /*collectionGroup=*/ null, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n            }\n            /**\n * Returns true if this query does not specify any query constraints that\n * could remove results.\n */ (e, r.child(s));\n            return this.Dn(t, o, n).next((t => {\n                t.forEach(((t, e) => {\n                    i = i.insert(t, e);\n                }));\n            }));\n        })).next((() => i))));\n    }\n    Dn(t, e, n) {\n        // Query the remote documents and overlay mutations.\n        let s, i;\n        return this.He.getDocumentsMatchingQuery(t, e, n).next((n => (s = n, this.In.getAllMutationBatchesAffectingQuery(t, e)))).next((e => (i = e, \n        this.Cn(t, i, s).next((t => {\n            s = t;\n            for (const t of i) for (const e of t.mutations) {\n                const n = e.key;\n                let i = s.get(n);\n                null == i && (\n                // Create invalid document to apply mutations on top of\n                i = Kt.newInvalidDocument(n), s = s.insert(n, i)), Ye(e, i, t.localWriteTime), i.isFoundDocument() || (s = s.remove(n));\n            }\n        }))))).next((() => (\n        // Finally, filter out any documents that don't actually match\n        // the query.\n        s.forEach(((t, n) => {\n            Pe(e, n) || (s = s.remove(t));\n        })), s)));\n    }\n    Cn(t, e, n) {\n        let s = Pn();\n        for (const t of e) for (const e of t.mutations) e instanceof nn && null === n.get(e.key) && (s = s.add(e.key));\n        let i = n;\n        return this.He.getEntries(t, s).next((t => (t.forEach(((t, e) => {\n            e.isFoundDocument() && (i = i.insert(t, e));\n        })), i)));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A set of changes to what documents are currently in view and out of view for\n * a given query. These changes are sent to the LocalStore by the View (via\n * the SyncEngine) and are used to pin / unpin documents as appropriate.\n */ class or {\n    constructor(t, e, n, s) {\n        this.targetId = t, this.fromCache = e, this.Nn = n, this.xn = s;\n    }\n    static kn(t, e) {\n        let n = Pn(), s = Pn();\n        for (const t of e.docChanges) switch (t.type) {\n          case 0 /* Added */ :\n            n = n.add(t.doc.key);\n            break;\n\n          case 1 /* Removed */ :\n            s = s.add(t.doc.key);\n // do nothing\n                }\n        return new or(t, e.fromCache, n, s);\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A query engine that takes advantage of the target document mapping in the\n * QueryCache. Query execution is optimized by only reading the documents that\n * previously matched a query plus any documents that were edited after the\n * query was last listened to.\n *\n * There are some cases when this optimization is not guaranteed to produce\n * the same results as full collection scans. In these cases, query\n * processing falls back to full scans. These cases are:\n *\n * - Limit queries where a document that matched the query previously no longer\n *   matches the query.\n *\n * - Limit queries where a document edit may cause the document to sort below\n *   another document that is in the local cache.\n *\n * - Queries that have never been CURRENT or free of limbo documents.\n */ class cr {\n    /** Sets the document view to query against. */\n    $n(t) {\n        this.On = t;\n    }\n    /** Returns all local documents matching the specified query. */    getDocumentsMatchingQuery(t, e, n, s) {\n        // Queries that match all documents don't benefit from using\n        // key-based lookups. It is more efficient to scan all documents in a\n        // collection, rather than to perform individual lookups.\n        return function(t) {\n            return 0 === t.filters.length && null === t.limit && null == t.startAt && null == t.endAt && (0 === t.explicitOrderBy.length || 1 === t.explicitOrderBy.length && t.explicitOrderBy[0].field.isKeyField());\n        }(e) || n.isEqual(rt.min()) ? this.Fn(t, e) : this.On.Pn(t, s).next((i => {\n            const r = this.Mn(e, i);\n            return (_e(e) || me(e)) && this.Ln(e.limitType, r, s, n) ? this.Fn(t, e) : (x() <= LogLevel.DEBUG && $(\"QueryEngine\", \"Re-using previous result from %s to execute query: %s\", n.toString(), be(e)), \n            this.On.getDocumentsMatchingQuery(t, e, n).next((t => (\n            // We merge `previousResults` into `updateResults`, since\n            // `updateResults` is already a DocumentMap. If a document is\n            // contained in both lists, then its contents are the same.\n            r.forEach((e => {\n                t = t.insert(e.key, e);\n            })), t))));\n        }));\n        // Queries that have never seen a snapshot without limbo free documents\n        // should also be run as a full collection scan.\n        }\n    /** Applies the query filter and sorting to the provided documents.  */    Mn(t, e) {\n        // Sort the documents and re-apply the query filter since previously\n        // matching documents do not necessarily still match the query.\n        let n = new gn(ve(t));\n        return e.forEach(((e, s) => {\n            Pe(t, s) && (n = n.add(s));\n        })), n;\n    }\n    /**\n     * Determines if a limit query needs to be refilled from cache, making it\n     * ineligible for index-free execution.\n     *\n     * @param sortedPreviousResults - The documents that matched the query when it\n     * was last synchronized, sorted by the query's comparator.\n     * @param remoteKeys - The document keys that matched the query at the last\n     * snapshot.\n     * @param limboFreeSnapshotVersion - The version of the snapshot when the\n     * query was last synchronized.\n     */    Ln(t, e, n, s) {\n        // The query needs to be refilled if a previously matching document no\n        // longer matches.\n        if (n.size !== e.size) return !0;\n        // Limit queries are not eligible for index-free query execution if there is\n        // a potential that an older document from cache now sorts before a document\n        // that was previously part of the limit. This, however, can only happen if\n        // the document at the edge of the limit goes out of limit.\n        // If a document that is not the limit boundary sorts differently,\n        // the boundary of the limit itself did not change and documents from cache\n        // will continue to be \"rejected\" by this boundary. Therefore, we can ignore\n        // any modifications that don't affect the last document.\n                const i = \"F\" /* First */ === t ? e.last() : e.first();\n        return !!i && (i.hasPendingWrites || i.version.compareTo(s) > 0);\n    }\n    Fn(t, e) {\n        return x() <= LogLevel.DEBUG && $(\"QueryEngine\", \"Using full collection scan to execute query:\", be(e)), \n        this.On.getDocumentsMatchingQuery(t, e, rt.min());\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Implements `LocalStore` interface.\n *\n * Note: some field defined in this class might have public access level, but\n * the class is not exported so they are only accessible from this module.\n * This is useful to implement optional features (like bundles) in free\n * functions, such that they are tree-shakeable.\n */\nclass ar {\n    constructor(\n    /** Manages our in-memory or durable persistence. */\n    t, e, n, s) {\n        this.persistence = t, this.Bn = e, this.N = s, \n        /**\n         * Maps a targetID to data about its target.\n         *\n         * PORTING NOTE: We are using an immutable data structure on Web to make re-runs\n         * of `applyRemoteEvent()` idempotent.\n         */\n        this.Un = new wn(et), \n        /** Maps a target to its targetID. */\n        // TODO(wuandy): Evaluate if TargetId can be part of Target.\n        this.qn = new ji((t => Wt(t)), zt), \n        /**\n         * The read time of the last entry processed by `getNewDocumentChanges()`.\n         *\n         * PORTING NOTE: This is only used for multi-tab synchronization.\n         */\n        this.Kn = rt.min(), this.In = t.getMutationQueue(n), this.jn = t.getRemoteDocumentCache(), \n        this.ze = t.getTargetCache(), this.Qn = new rr(this.jn, this.In, this.persistence.getIndexManager()), \n        this.Je = t.getBundleCache(), this.Bn.$n(this.Qn);\n    }\n    collectGarbage(t) {\n        return this.persistence.runTransaction(\"Collect garbage\", \"readwrite-primary\", (e => t.collect(e, this.Un)));\n    }\n}\n\nfunction ur(\n/** Manages our in-memory or durable persistence. */\nt, e, n, s) {\n    return new ar(t, e, n, s);\n}\n\n/**\n * Tells the LocalStore that the currently authenticated user has changed.\n *\n * In response the local store switches the mutation queue to the new user and\n * returns any resulting document changes.\n */\n// PORTING NOTE: Android and iOS only return the documents affected by the\n// change.\nasync function hr(t, e) {\n    const n = q(t);\n    let s = n.In, i = n.Qn;\n    const r = await n.persistence.runTransaction(\"Handle user change\", \"readonly\", (t => {\n        // Swap out the mutation queue, grabbing the pending mutation batches\n        // before and after.\n        let r;\n        return n.In.getAllMutationBatches(t).next((o => (r = o, s = n.persistence.getMutationQueue(e), \n        // Recreate our LocalDocumentsView using the new\n        // MutationQueue.\n        i = new rr(n.jn, s, n.persistence.getIndexManager()), s.getAllMutationBatches(t)))).next((e => {\n            const n = [], s = [];\n            // Union the old/new changed keys.\n            let o = Pn();\n            for (const t of r) {\n                n.push(t.batchId);\n                for (const e of t.mutations) o = o.add(e.key);\n            }\n            for (const t of e) {\n                s.push(t.batchId);\n                for (const e of t.mutations) o = o.add(e.key);\n            }\n            // Return the set of all (potentially) changed documents and the list\n            // of mutation batch IDs that were affected by change.\n                        return i.Pn(t, o).next((t => ({\n                Wn: t,\n                removedBatchIds: n,\n                addedBatchIds: s\n            })));\n        }));\n    }));\n    return n.In = s, n.Qn = i, n.Bn.$n(n.Qn), r;\n}\n\n/* Accepts locally generated Mutations and commit them to storage. */\n/**\n * Acknowledges the given batch.\n *\n * On the happy path when a batch is acknowledged, the local store will\n *\n *  + remove the batch from the mutation queue;\n *  + apply the changes to the remote document cache;\n *  + recalculate the latency compensated view implied by those changes (there\n *    may be mutations in the queue that affect the documents but haven't been\n *    acknowledged yet); and\n *  + give the changed documents back the sync engine\n *\n * @returns The resulting (modified) documents.\n */\nfunction lr(t, e) {\n    const n = q(t);\n    return n.persistence.runTransaction(\"Acknowledge batch\", \"readwrite-primary\", (t => {\n        const s = e.batch.keys(), i = n.jn.newChangeBuffer({\n            trackRemovals: !0\n        });\n        return function(t, e, n, s) {\n            const i = n.batch, r = i.keys();\n            let o = js.resolve();\n            return r.forEach((t => {\n                o = o.next((() => s.getEntry(e, t))).next((e => {\n                    const r = n.docVersions.get(t);\n                    B(null !== r), e.version.compareTo(r) < 0 && (i.applyToRemoteDocument(e, n), e.isValidDocument() && \n                    // We use the commitVersion as the readTime rather than the\n                    // document's updateTime since the updateTime is not advanced\n                    // for updates that do not modify the underlying document.\n                    s.addEntry(e, n.commitVersion));\n                }));\n            })), o.next((() => t.In.removeMutationBatch(e, i)));\n        }\n        /** Returns the local view of the documents affected by a mutation batch. */\n        // PORTING NOTE: Multi-Tab only.\n        (n, t, e, i).next((() => i.apply(t))).next((() => n.In.performConsistencyCheck(t))).next((() => n.Qn.Pn(t, s)));\n    }));\n}\n\n/**\n * Removes mutations from the MutationQueue for the specified batch;\n * LocalDocuments will be recalculated.\n *\n * @returns The resulting modified documents.\n */\n/**\n * Returns the last consistent snapshot processed (used by the RemoteStore to\n * determine whether to buffer incoming snapshots from the backend).\n */\nfunction fr(t) {\n    const e = q(t);\n    return e.persistence.runTransaction(\"Get last remote snapshot version\", \"readonly\", (t => e.ze.getLastRemoteSnapshotVersion(t)));\n}\n\n/**\n * Updates the \"ground-state\" (remote) documents. We assume that the remote\n * event reflects any write batches that have been acknowledged or rejected\n * (i.e. we do not re-apply local mutations to updates from this event).\n *\n * LocalDocuments are re-calculated if there are remaining mutations in the\n * queue.\n */ function dr(t, e) {\n    const n = q(t), s = e.snapshotVersion;\n    let i = n.Un;\n    return n.persistence.runTransaction(\"Apply remote event\", \"readwrite-primary\", (t => {\n        const r = n.jn.newChangeBuffer({\n            trackRemovals: !0\n        });\n        // Reset newTargetDataByTargetMap in case this transaction gets re-run.\n                i = n.Un;\n        const o = [];\n        e.targetChanges.forEach(((e, r) => {\n            const c = i.get(r);\n            if (!c) return;\n            // Only update the remote keys if the target is still active. This\n            // ensures that we can persist the updated target data along with\n            // the updated assignment.\n                        o.push(n.ze.removeMatchingKeys(t, e.removedDocuments, r).next((() => n.ze.addMatchingKeys(t, e.addedDocuments, r))));\n            const a = e.resumeToken;\n            // Update the resume token if the change includes one.\n                        if (a.approximateByteSize() > 0) {\n                const u = c.withResumeToken(a, s).withSequenceNumber(t.currentSequenceNumber);\n                i = i.insert(r, u), \n                // Update the target data if there are target changes (or if\n                // sufficient time has passed since the last update).\n                /**\n * Returns true if the newTargetData should be persisted during an update of\n * an active target. TargetData should always be persisted when a target is\n * being released and should not call this function.\n *\n * While the target is active, TargetData updates can be omitted when nothing\n * about the target has changed except metadata like the resume token or\n * snapshot version. Occasionally it's worth the extra write to prevent these\n * values from getting too stale after a crash, but this doesn't have to be\n * too frequent.\n */\n                function(t, e, n) {\n                    // Always persist target data if we don't already have a resume token.\n                    if (B(e.resumeToken.approximateByteSize() > 0), 0 === t.resumeToken.approximateByteSize()) return !0;\n                    // Don't allow resume token changes to be buffered indefinitely. This\n                    // allows us to be reasonably up-to-date after a crash and avoids needing\n                    // to loop over all active queries on shutdown. Especially in the browser\n                    // we may not get time to do anything interesting while the current tab is\n                    // closing.\n                                        if (e.snapshotVersion.toMicroseconds() - t.snapshotVersion.toMicroseconds() >= 3e8) return !0;\n                    // Otherwise if the only thing that has changed about a target is its resume\n                    // token it's not worth persisting. Note that the RemoteStore keeps an\n                    // in-memory view of the currently active targets which includes the current\n                    // resume token, so stream failure or user changes will still use an\n                    // up-to-date resume token regardless of what we do here.\n                                        return n.addedDocuments.size + n.modifiedDocuments.size + n.removedDocuments.size > 0;\n                }\n                /**\n * Notifies local store of the changed views to locally pin documents.\n */ (c, u, e) && o.push(n.ze.updateTargetData(t, u));\n            }\n        }));\n        let c = Tn();\n        // HACK: The only reason we allow a null snapshot version is so that we\n        // can synthesize remote events when we get permission denied errors while\n        // trying to resolve the state of a locally cached document that is in\n        // limbo.\n        if (e.documentUpdates.forEach(((s, i) => {\n            e.resolvedLimboDocuments.has(s) && o.push(n.persistence.referenceDelegate.updateLimboDocument(t, s));\n        })), \n        // Each loop iteration only affects its \"own\" doc, so it's safe to get all the remote\n        // documents in advance in a single call.\n        o.push(wr(t, r, e.documentUpdates, s, void 0).next((t => {\n            c = t;\n        }))), !s.isEqual(rt.min())) {\n            const e = n.ze.getLastRemoteSnapshotVersion(t).next((e => n.ze.setTargetsMetadata(t, t.currentSequenceNumber, s)));\n            o.push(e);\n        }\n        return js.waitFor(o).next((() => r.apply(t))).next((() => n.Qn.vn(t, c))).next((() => c));\n    })).then((t => (n.Un = i, t)));\n}\n\n/**\n * Populates document change buffer with documents from backend or a bundle.\n * Returns the document changes resulting from applying those documents.\n *\n * @param txn - Transaction to use to read existing documents from storage.\n * @param documentBuffer - Document buffer to collect the resulted changes to be\n *        applied to storage.\n * @param documents - Documents to be applied.\n * @param globalVersion - A `SnapshotVersion` representing the read time if all\n *        documents have the same read time.\n * @param documentVersions - A DocumentKey-to-SnapshotVersion map if documents\n *        have their own read time.\n *\n * Note: this function will use `documentVersions` if it is defined;\n * when it is not defined, resorts to `globalVersion`.\n */ function wr(t, e, n, s, \n// TODO(wuandy): We could add `readTime` to MaybeDocument instead to remove\n// this parameter.\ni) {\n    let r = Pn();\n    return n.forEach((t => r = r.add(t))), e.getEntries(t, r).next((t => {\n        let r = Tn();\n        return n.forEach(((n, o) => {\n            const c = t.get(n), a = (null == i ? void 0 : i.get(n)) || s;\n            // Note: The order of the steps below is important, since we want\n            // to ensure that rejected limbo resolutions (which fabricate\n            // NoDocuments with SnapshotVersion.min()) never add documents to\n            // cache.\n            o.isNoDocument() && o.version.isEqual(rt.min()) ? (\n            // NoDocuments with SnapshotVersion.min() are used in manufactured\n            // events. We remove these documents from cache since we lost\n            // access.\n            e.removeEntry(n, a), r = r.insert(n, o)) : !c.isValidDocument() || o.version.compareTo(c.version) > 0 || 0 === o.version.compareTo(c.version) && c.hasPendingWrites ? (e.addEntry(o, a), \n            r = r.insert(n, o)) : $(\"LocalStore\", \"Ignoring outdated watch update for \", n, \". Current version:\", c.version, \" Watch version:\", o.version);\n        })), r;\n    }));\n}\n\n/**\n * Gets the mutation batch after the passed in batchId in the mutation queue\n * or null if empty.\n * @param afterBatchId - If provided, the batch to search after.\n * @returns The next mutation or null if there wasn't one.\n */\nfunction _r(t, e) {\n    const n = q(t);\n    return n.persistence.runTransaction(\"Get next mutation batch\", \"readonly\", (t => (void 0 === e && (e = -1), \n    n.In.getNextMutationBatchAfterBatchId(t, e))));\n}\n\n/**\n * Reads the current value of a Document with a given key or null if not\n * found - used for testing.\n */\n/**\n * Assigns the given target an internal ID so that its results can be pinned so\n * they don't get GC'd. A target must be allocated in the local store before\n * the store can be used to manage its view.\n *\n * Allocating an already allocated `Target` will return the existing `TargetData`\n * for that `Target`.\n */\nfunction mr(t, e) {\n    const n = q(t);\n    return n.persistence.runTransaction(\"Allocate target\", \"readwrite\", (t => {\n        let s;\n        return n.ze.getTargetData(t, e).next((i => i ? (\n        // This target has been listened to previously, so reuse the\n        // previous targetID.\n        // TODO(mcg): freshen last accessed date?\n        s = i, js.resolve(s)) : n.ze.allocateTargetId(t).next((i => (s = new ii(e, i, 0 /* Listen */ , t.currentSequenceNumber), \n        n.ze.addTargetData(t, s).next((() => s)))))));\n    })).then((t => {\n        // If Multi-Tab is enabled, the existing target data may be newer than\n        // the in-memory data\n        const s = n.Un.get(t.targetId);\n        return (null === s || t.snapshotVersion.compareTo(s.snapshotVersion) > 0) && (n.Un = n.Un.insert(t.targetId, t), \n        n.qn.set(e, t.targetId)), t;\n    }));\n}\n\n/**\n * Returns the TargetData as seen by the LocalStore, including updates that may\n * have not yet been persisted to the TargetCache.\n */\n// Visible for testing.\n/**\n * Unpins all the documents associated with the given target. If\n * `keepPersistedTargetData` is set to false and Eager GC enabled, the method\n * directly removes the associated target data from the target cache.\n *\n * Releasing a non-existing `Target` is a no-op.\n */\n// PORTING NOTE: `keepPersistedTargetData` is multi-tab only.\nasync function gr(t, e, n) {\n    const s = q(t), i = s.Un.get(e), r = n ? \"readwrite\" : \"readwrite-primary\";\n    try {\n        n || await s.persistence.runTransaction(\"Release target\", r, (t => s.persistence.referenceDelegate.removeTarget(t, i)));\n    } catch (t) {\n        if (!Hs(t)) throw t;\n        // All `releaseTarget` does is record the final metadata state for the\n        // target, but we've been recording this periodically during target\n        // activity. If we lose this write this could cause a very slight\n        // difference in the order of target deletion during GC, but we\n        // don't define exact LRU semantics so this is acceptable.\n        $(\"LocalStore\", `Failed to update sequence numbers for target ${e}: ${t}`);\n    }\n    s.Un = s.Un.remove(e), s.qn.delete(i.target);\n}\n\n/**\n * Runs the specified query against the local store and returns the results,\n * potentially taking advantage of query data from previous executions (such\n * as the set of remote keys).\n *\n * @param usePreviousResults - Whether results from previous executions can\n * be used to optimize this query execution.\n */ function yr(t, e, n) {\n    const s = q(t);\n    let i = rt.min(), r = Pn();\n    return s.persistence.runTransaction(\"Execute query\", \"readonly\", (t => function(t, e, n) {\n        const s = q(t), i = s.qn.get(n);\n        return void 0 !== i ? js.resolve(s.Un.get(i)) : s.ze.getTargetData(e, n);\n    }(s, t, Ee(e)).next((e => {\n        if (e) return i = e.lastLimboFreeSnapshotVersion, s.ze.getMatchingKeysForTargetId(t, e.targetId).next((t => {\n            r = t;\n        }));\n    })).next((() => s.Bn.getDocumentsMatchingQuery(t, e, n ? i : rt.min(), n ? r : Pn()))).next((t => ({\n        documents: t,\n        Gn: r\n    })))));\n}\n\n// PORTING NOTE: Multi-Tab only.\nfunction pr(t, e) {\n    const n = q(t), s = q(n.ze), i = n.Un.get(e);\n    return i ? Promise.resolve(i.target) : n.persistence.runTransaction(\"Get target data\", \"readonly\", (t => s.Tt(t, e).next((t => t ? t.target : null))));\n}\n\n/**\n * Returns the set of documents that have been updated since the last call.\n * If this is the first call, returns the set of changes since client\n * initialization. Further invocations will return document that have changed\n * since the prior call.\n */\n// PORTING NOTE: Multi-Tab only.\nfunction Tr(t) {\n    const e = q(t);\n    return e.persistence.runTransaction(\"Get new document changes\", \"readonly\", (t => function(t, e, n) {\n        const s = q(t);\n        let i = Tn(), r = ai(n);\n        const o = Hi(e), c = IDBKeyRange.lowerBound(r, !0);\n        return o.Kt({\n            index: Ns.readTimeIndex,\n            range: c\n        }, ((t, e) => {\n            // Unlike `getEntry()` and others, `getNewDocumentChanges()` parses\n            // the documents directly since we want to keep sentinel deletes.\n            const n = oi(s.N, e);\n            i = i.insert(n.key, n), r = e.readTime;\n        })).next((() => ({\n            En: i,\n            readTime: ui(r)\n        })));\n    }\n    /**\n * Returns the read time of the most recently read document in the cache, or\n * SnapshotVersion.min() if not available.\n */\n    // PORTING NOTE: This is only used for multi-tab synchronization.\n    (e.jn, t, e.Kn))).then((({En: t, readTime: n}) => (e.Kn = n, t)));\n}\n\n/**\n * Reads the newest document change from persistence and moves the internal\n * synchronization marker forward so that calls to `getNewDocumentChanges()`\n * only return changes that happened after client initialization.\n */\n// PORTING NOTE: Multi-Tab only.\nasync function Er(t) {\n    const e = q(t);\n    return e.persistence.runTransaction(\"Synchronize last document change read time\", \"readonly\", (t => function(t) {\n        const e = Hi(t);\n        // If there are no existing entries, we return SnapshotVersion.min().\n                let n = rt.min();\n        return e.Kt({\n            index: Ns.readTimeIndex,\n            reverse: !0\n        }, ((t, e, s) => {\n            e.readTime && (n = ui(e.readTime)), s.done();\n        })).next((() => n));\n    }(t))).then((t => {\n        e.Kn = t;\n    }));\n}\n\n/**\n * Creates a new target using the given bundle name, which will be used to\n * hold the keys of all documents from the bundle in query-document mappings.\n * This ensures that the loaded documents do not get garbage collected\n * right away.\n */\n/**\n * Applies the documents from a bundle to the \"ground-state\" (remote)\n * documents.\n *\n * LocalDocuments are re-calculated if there are remaining mutations in the\n * queue.\n */\nasync function Ir(t, e, n, s) {\n    const i = q(t);\n    let r = Pn(), o = Tn(), c = Rn();\n    for (const t of n) {\n        const n = e.zn(t.metadata.name);\n        t.document && (r = r.add(n)), o = o.insert(n, e.Hn(t)), c = c.insert(n, e.Jn(t.metadata.readTime));\n    }\n    const a = i.jn.newChangeBuffer({\n        trackRemovals: !0\n    }), u = await mr(i, function(t) {\n        // It is OK that the path used for the query is not valid, because this will\n        // not be read and queried.\n        return Ee(we(ht.fromString(`__bundle__/docs/${t}`)));\n    }(s));\n    // Allocates a target to hold all document keys from the bundle, such that\n    // they will not get garbage collected right away.\n        return i.persistence.runTransaction(\"Apply bundle documents\", \"readwrite\", (t => wr(t, a, o, rt.min(), c).next((e => (a.apply(t), \n    e))).next((e => i.ze.removeMatchingKeysForTargetId(t, u.targetId).next((() => i.ze.addMatchingKeys(t, r, u.targetId))).next((() => i.Qn.vn(t, e))).next((() => e))))));\n}\n\n/**\n * Returns a promise of a boolean to indicate if the given bundle has already\n * been loaded and the create time is newer than the current loading bundle.\n */\n/**\n * Saves the given `NamedQuery` to local persistence.\n */\nasync function Ar(t, e, n = Pn()) {\n    // Allocate a target for the named query such that it can be resumed\n    // from associated read time if users use it to listen.\n    // NOTE: this also means if no corresponding target exists, the new target\n    // will remain active and will not get collected, unless users happen to\n    // unlisten the query somehow.\n    const s = await mr(t, Ee(_i(e.bundledQuery))), i = q(t);\n    return i.persistence.runTransaction(\"Save named query\", \"readwrite\", (t => {\n        const r = jn(e.readTime);\n        // Simply save the query itself if it is older than what the SDK already\n        // has.\n                if (s.snapshotVersion.compareTo(r) >= 0) return i.Je.saveNamedQuery(t, e);\n        // Update existing target data because the query from the bundle is newer.\n                const o = s.withResumeToken(_t.EMPTY_BYTE_STRING, r);\n        return i.Un = i.Un.insert(o.targetId, o), i.ze.updateTargetData(t, o).next((() => i.ze.removeMatchingKeysForTargetId(t, s.targetId))).next((() => i.ze.addMatchingKeys(t, n, s.targetId))).next((() => i.Je.saveNamedQuery(t, e)));\n    }));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Rr {\n    constructor(t) {\n        this.N = t, this.Yn = new Map, this.Xn = new Map;\n    }\n    getBundleMetadata(t, e) {\n        return js.resolve(this.Yn.get(e));\n    }\n    saveBundleMetadata(t, e) {\n        /** Decodes a BundleMetadata proto into a BundleMetadata object. */\n        var n;\n        return this.Yn.set(e.id, {\n            id: (n = e).id,\n            version: n.version,\n            createTime: jn(n.createTime)\n        }), js.resolve();\n    }\n    getNamedQuery(t, e) {\n        return js.resolve(this.Xn.get(e));\n    }\n    saveNamedQuery(t, e) {\n        return this.Xn.set(e.name, function(t) {\n            return {\n                name: t.name,\n                query: _i(t.bundledQuery),\n                readTime: jn(t.readTime)\n            };\n        }(e)), js.resolve();\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A collection of references to a document from some kind of numbered entity\n * (either a target ID or batch ID). As references are added to or removed from\n * the set corresponding events are emitted to a registered garbage collector.\n *\n * Each reference is represented by a DocumentReference object. Each of them\n * contains enough information to uniquely identify the reference. They are all\n * stored primarily in a set sorted by key. A document is considered garbage if\n * there's no references in that set (this can be efficiently checked thanks to\n * sorting by key).\n *\n * ReferenceSet also keeps a secondary set that contains references sorted by\n * IDs. This one is used to efficiently implement removal of all references by\n * some target ID.\n */ class br {\n    constructor() {\n        // A set of outstanding references to a document sorted by key.\n        this.Zn = new gn(Pr.ts), \n        // A set of outstanding references to a document sorted by target id.\n        this.es = new gn(Pr.ns);\n    }\n    /** Returns true if the reference set contains no references. */    isEmpty() {\n        return this.Zn.isEmpty();\n    }\n    /** Adds a reference to the given document key for the given ID. */    addReference(t, e) {\n        const n = new Pr(t, e);\n        this.Zn = this.Zn.add(n), this.es = this.es.add(n);\n    }\n    /** Add references to the given document keys for the given ID. */    ss(t, e) {\n        t.forEach((t => this.addReference(t, e)));\n    }\n    /**\n     * Removes a reference to the given document key for the given\n     * ID.\n     */    removeReference(t, e) {\n        this.rs(new Pr(t, e));\n    }\n    os(t, e) {\n        t.forEach((t => this.removeReference(t, e)));\n    }\n    /**\n     * Clears all references with a given ID. Calls removeRef() for each key\n     * removed.\n     */    cs(t) {\n        const e = new Pt(new ht([])), n = new Pr(e, t), s = new Pr(e, t + 1), i = [];\n        return this.es.forEachInRange([ n, s ], (t => {\n            this.rs(t), i.push(t.key);\n        })), i;\n    }\n    us() {\n        this.Zn.forEach((t => this.rs(t)));\n    }\n    rs(t) {\n        this.Zn = this.Zn.delete(t), this.es = this.es.delete(t);\n    }\n    hs(t) {\n        const e = new Pt(new ht([])), n = new Pr(e, t), s = new Pr(e, t + 1);\n        let i = Pn();\n        return this.es.forEachInRange([ n, s ], (t => {\n            i = i.add(t.key);\n        })), i;\n    }\n    containsKey(t) {\n        const e = new Pr(t, 0), n = this.Zn.firstAfterOrEqual(e);\n        return null !== n && t.isEqual(n.key);\n    }\n}\n\nclass Pr {\n    constructor(t, e) {\n        this.key = t, this.ls = e;\n    }\n    /** Compare by key then by ID */    static ts(t, e) {\n        return Pt.comparator(t.key, e.key) || et(t.ls, e.ls);\n    }\n    /** Compare by ID then by key */    static ns(t, e) {\n        return et(t.ls, e.ls) || Pt.comparator(t.key, e.key);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class vr {\n    constructor(t, e) {\n        this.Ht = t, this.referenceDelegate = e, \n        /**\n         * The set of all mutations that have been sent but not yet been applied to\n         * the backend.\n         */\n        this.In = [], \n        /** Next value to use when assigning sequential IDs to each mutation batch. */\n        this.fs = 1, \n        /** An ordered mapping between documents and the mutations batch IDs. */\n        this.ds = new gn(Pr.ts);\n    }\n    checkEmpty(t) {\n        return js.resolve(0 === this.In.length);\n    }\n    addMutationBatch(t, e, n, s) {\n        const i = this.fs;\n        this.fs++, this.In.length > 0 && this.In[this.In.length - 1];\n        const r = new ni(i, e, n, s);\n        this.In.push(r);\n        // Track references by document key and index collection parents.\n        for (const e of s) this.ds = this.ds.add(new Pr(e.key, i)), this.Ht.addToCollectionParentIndex(t, e.key.path.popLast());\n        return js.resolve(r);\n    }\n    lookupMutationBatch(t, e) {\n        return js.resolve(this.ws(e));\n    }\n    getNextMutationBatchAfterBatchId(t, e) {\n        const n = e + 1, s = this._s(n), i = s < 0 ? 0 : s;\n        // The requested batchId may still be out of range so normalize it to the\n        // start of the queue.\n                return js.resolve(this.In.length > i ? this.In[i] : null);\n    }\n    getHighestUnacknowledgedBatchId() {\n        return js.resolve(0 === this.In.length ? -1 : this.fs - 1);\n    }\n    getAllMutationBatches(t) {\n        return js.resolve(this.In.slice());\n    }\n    getAllMutationBatchesAffectingDocumentKey(t, e) {\n        const n = new Pr(e, 0), s = new Pr(e, Number.POSITIVE_INFINITY), i = [];\n        return this.ds.forEachInRange([ n, s ], (t => {\n            const e = this.ws(t.ls);\n            i.push(e);\n        })), js.resolve(i);\n    }\n    getAllMutationBatchesAffectingDocumentKeys(t, e) {\n        let n = new gn(et);\n        return e.forEach((t => {\n            const e = new Pr(t, 0), s = new Pr(t, Number.POSITIVE_INFINITY);\n            this.ds.forEachInRange([ e, s ], (t => {\n                n = n.add(t.ls);\n            }));\n        })), js.resolve(this.gs(n));\n    }\n    getAllMutationBatchesAffectingQuery(t, e) {\n        // Use the query path as a prefix for testing if a document matches the\n        // query.\n        const n = e.path, s = n.length + 1;\n        // Construct a document reference for actually scanning the index. Unlike\n        // the prefix the document key in this reference must have an even number of\n        // segments. The empty segment can be used a suffix of the query path\n        // because it precedes all other segments in an ordered traversal.\n        let i = n;\n        Pt.isDocumentKey(i) || (i = i.child(\"\"));\n        const r = new Pr(new Pt(i), 0);\n        // Find unique batchIDs referenced by all documents potentially matching the\n        // query.\n                let o = new gn(et);\n        return this.ds.forEachWhile((t => {\n            const e = t.key.path;\n            return !!n.isPrefixOf(e) && (\n            // Rows with document keys more than one segment longer than the query\n            // path can't be matches. For example, a query on 'rooms' can't match\n            // the document /rooms/abc/messages/xyx.\n            // TODO(mcg): we'll need a different scanner when we implement\n            // ancestor queries.\n            e.length === s && (o = o.add(t.ls)), !0);\n        }), r), js.resolve(this.gs(o));\n    }\n    gs(t) {\n        // Construct an array of matching batches, sorted by batchID to ensure that\n        // multiple mutations affecting the same document key are applied in order.\n        const e = [];\n        return t.forEach((t => {\n            const n = this.ws(t);\n            null !== n && e.push(n);\n        })), e;\n    }\n    removeMutationBatch(t, e) {\n        B(0 === this.ys(e.batchId, \"removed\")), this.In.shift();\n        let n = this.ds;\n        return js.forEach(e.mutations, (s => {\n            const i = new Pr(s.key, e.batchId);\n            return n = n.delete(i), this.referenceDelegate.markPotentiallyOrphaned(t, s.key);\n        })).next((() => {\n            this.ds = n;\n        }));\n    }\n    te(t) {\n        // No-op since the memory mutation queue does not maintain a separate cache.\n    }\n    containsKey(t, e) {\n        const n = new Pr(e, 0), s = this.ds.firstAfterOrEqual(n);\n        return js.resolve(e.isEqual(s && s.key));\n    }\n    performConsistencyCheck(t) {\n        return this.In.length, js.resolve();\n    }\n    /**\n     * Finds the index of the given batchId in the mutation queue and asserts that\n     * the resulting index is within the bounds of the queue.\n     *\n     * @param batchId - The batchId to search for\n     * @param action - A description of what the caller is doing, phrased in passive\n     * form (e.g. \"acknowledged\" in a routine that acknowledges batches).\n     */    ys(t, e) {\n        return this._s(t);\n    }\n    /**\n     * Finds the index of the given batchId in the mutation queue. This operation\n     * is O(1).\n     *\n     * @returns The computed index of the batch with the given batchId, based on\n     * the state of the queue. Note this index can be negative if the requested\n     * batchId has already been remvoed from the queue or past the end of the\n     * queue if the batchId is larger than the last added batch.\n     */    _s(t) {\n        if (0 === this.In.length) \n        // As an index this is past the end of the queue\n        return 0;\n        // Examine the front of the queue to figure out the difference between the\n        // batchId and indexes in the array. Note that since the queue is ordered\n        // by batchId, if the first batch has a larger batchId then the requested\n        // batchId doesn't exist in the queue.\n                return t - this.In[0].batchId;\n    }\n    /**\n     * A version of lookupMutationBatch that doesn't return a promise, this makes\n     * other functions that uses this code easier to read and more efficent.\n     */    ws(t) {\n        const e = this._s(t);\n        if (e < 0 || e >= this.In.length) return null;\n        return this.In[e];\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The memory-only RemoteDocumentCache for IndexedDb. To construct, invoke\n * `newMemoryRemoteDocumentCache()`.\n */\nclass Vr {\n    /**\n     * @param sizer - Used to assess the size of a document. For eager GC, this is\n     * expected to just return 0 to avoid unnecessarily doing the work of\n     * calculating the size.\n     */\n    constructor(t, e) {\n        this.Ht = t, this.ps = e, \n        /** Underlying cache of documents and their read times. */\n        this.docs = new wn(Pt.comparator), \n        /** Size of all cached documents. */\n        this.size = 0;\n    }\n    /**\n     * Adds the supplied entry to the cache and updates the cache size as appropriate.\n     *\n     * All calls of `addEntry`  are required to go through the RemoteDocumentChangeBuffer\n     * returned by `newChangeBuffer()`.\n     */    addEntry(t, e, n) {\n        const s = e.key, i = this.docs.get(s), r = i ? i.size : 0, o = this.ps(e);\n        return this.docs = this.docs.insert(s, {\n            document: e.clone(),\n            size: o,\n            readTime: n\n        }), this.size += o - r, this.Ht.addToCollectionParentIndex(t, s.path.popLast());\n    }\n    /**\n     * Removes the specified entry from the cache and updates the cache size as appropriate.\n     *\n     * All calls of `removeEntry` are required to go through the RemoteDocumentChangeBuffer\n     * returned by `newChangeBuffer()`.\n     */    removeEntry(t) {\n        const e = this.docs.get(t);\n        e && (this.docs = this.docs.remove(t), this.size -= e.size);\n    }\n    getEntry(t, e) {\n        const n = this.docs.get(e);\n        return js.resolve(n ? n.document.clone() : Kt.newInvalidDocument(e));\n    }\n    getEntries(t, e) {\n        let n = Tn();\n        return e.forEach((t => {\n            const e = this.docs.get(t);\n            n = n.insert(t, e ? e.document.clone() : Kt.newInvalidDocument(t));\n        })), js.resolve(n);\n    }\n    getDocumentsMatchingQuery(t, e, n) {\n        let s = Tn();\n        // Documents are ordered by key, so we can use a prefix scan to narrow down\n        // the documents we need to match the query against.\n                const i = new Pt(e.path.child(\"\")), r = this.docs.getIteratorFrom(i);\n        for (;r.hasNext(); ) {\n            const {key: t, value: {document: i, readTime: o}} = r.getNext();\n            if (!e.path.isPrefixOf(t.path)) break;\n            o.compareTo(n) <= 0 || Pe(e, i) && (s = s.insert(i.key, i.clone()));\n        }\n        return js.resolve(s);\n    }\n    Ts(t, e) {\n        return js.forEach(this.docs, (t => e(t)));\n    }\n    newChangeBuffer(t) {\n        // `trackRemovals` is ignores since the MemoryRemoteDocumentCache keeps\n        // a separate changelog and does not need special handling for removals.\n        return new Sr(this);\n    }\n    getSize(t) {\n        return js.resolve(this.size);\n    }\n}\n\n/**\n * Creates a new memory-only RemoteDocumentCache.\n *\n * @param indexManager - A class that manages collection group indices.\n * @param sizer - Used to assess the size of a document. For eager GC, this is\n * expected to just return 0 to avoid unnecessarily doing the work of\n * calculating the size.\n */\n/**\n * Handles the details of adding and updating documents in the MemoryRemoteDocumentCache.\n */\nclass Sr extends Qi {\n    constructor(t) {\n        super(), this.Se = t;\n    }\n    applyChanges(t) {\n        const e = [];\n        return this.changes.forEach(((n, s) => {\n            s.document.isValidDocument() ? e.push(this.Se.addEntry(t, s.document, this.getReadTime(n))) : this.Se.removeEntry(n);\n        })), js.waitFor(e);\n    }\n    getFromCache(t, e) {\n        return this.Se.getEntry(t, e);\n    }\n    getAllFromCache(t, e) {\n        return this.Se.getEntries(t, e);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Dr {\n    constructor(t) {\n        this.persistence = t, \n        /**\n         * Maps a target to the data about that target\n         */\n        this.Es = new ji((t => Wt(t)), zt), \n        /** The last received snapshot version. */\n        this.lastRemoteSnapshotVersion = rt.min(), \n        /** The highest numbered target ID encountered. */\n        this.highestTargetId = 0, \n        /** The highest sequence number encountered. */\n        this.Is = 0, \n        /**\n         * A ordered bidirectional mapping between documents and the remote target\n         * IDs.\n         */\n        this.As = new br, this.targetCount = 0, this.Rs = Ni.se();\n    }\n    forEachTarget(t, e) {\n        return this.Es.forEach(((t, n) => e(n))), js.resolve();\n    }\n    getLastRemoteSnapshotVersion(t) {\n        return js.resolve(this.lastRemoteSnapshotVersion);\n    }\n    getHighestSequenceNumber(t) {\n        return js.resolve(this.Is);\n    }\n    allocateTargetId(t) {\n        return this.highestTargetId = this.Rs.next(), js.resolve(this.highestTargetId);\n    }\n    setTargetsMetadata(t, e, n) {\n        return n && (this.lastRemoteSnapshotVersion = n), e > this.Is && (this.Is = e), \n        js.resolve();\n    }\n    ce(t) {\n        this.Es.set(t.target, t);\n        const e = t.targetId;\n        e > this.highestTargetId && (this.Rs = new Ni(e), this.highestTargetId = e), t.sequenceNumber > this.Is && (this.Is = t.sequenceNumber);\n    }\n    addTargetData(t, e) {\n        return this.ce(e), this.targetCount += 1, js.resolve();\n    }\n    updateTargetData(t, e) {\n        return this.ce(e), js.resolve();\n    }\n    removeTargetData(t, e) {\n        return this.Es.delete(e.target), this.As.cs(e.targetId), this.targetCount -= 1, \n        js.resolve();\n    }\n    removeTargets(t, e, n) {\n        let s = 0;\n        const i = [];\n        return this.Es.forEach(((r, o) => {\n            o.sequenceNumber <= e && null === n.get(o.targetId) && (this.Es.delete(r), i.push(this.removeMatchingKeysForTargetId(t, o.targetId)), \n            s++);\n        })), js.waitFor(i).next((() => s));\n    }\n    getTargetCount(t) {\n        return js.resolve(this.targetCount);\n    }\n    getTargetData(t, e) {\n        const n = this.Es.get(e) || null;\n        return js.resolve(n);\n    }\n    addMatchingKeys(t, e, n) {\n        return this.As.ss(e, n), js.resolve();\n    }\n    removeMatchingKeys(t, e, n) {\n        this.As.os(e, n);\n        const s = this.persistence.referenceDelegate, i = [];\n        return s && e.forEach((e => {\n            i.push(s.markPotentiallyOrphaned(t, e));\n        })), js.waitFor(i);\n    }\n    removeMatchingKeysForTargetId(t, e) {\n        return this.As.cs(e), js.resolve();\n    }\n    getMatchingKeysForTargetId(t, e) {\n        const n = this.As.hs(e);\n        return js.resolve(n);\n    }\n    containsKey(t, e) {\n        return js.resolve(this.As.containsKey(e));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A memory-backed instance of Persistence. Data is stored only in RAM and\n * not persisted across sessions.\n */\nclass Cr {\n    /**\n     * The constructor accepts a factory for creating a reference delegate. This\n     * allows both the delegate and this instance to have strong references to\n     * each other without having nullable fields that would then need to be\n     * checked or asserted on every access.\n     */\n    constructor(t, e) {\n        this.bs = {}, this.Le = new X(0), this.Be = !1, this.Be = !0, this.referenceDelegate = t(this), \n        this.ze = new Dr(this);\n        this.Ht = new pi, this.He = function(t, e) {\n            return new Vr(t, e);\n        }(this.Ht, (t => this.referenceDelegate.Ps(t))), this.N = new ri(e), this.Je = new Rr(this.N);\n    }\n    start() {\n        return Promise.resolve();\n    }\n    shutdown() {\n        // No durable state to ensure is closed on shutdown.\n        return this.Be = !1, Promise.resolve();\n    }\n    get started() {\n        return this.Be;\n    }\n    setDatabaseDeletedListener() {\n        // No op.\n    }\n    setNetworkEnabled() {\n        // No op.\n    }\n    getIndexManager() {\n        return this.Ht;\n    }\n    getMutationQueue(t) {\n        let e = this.bs[t.toKey()];\n        return e || (e = new vr(this.Ht, this.referenceDelegate), this.bs[t.toKey()] = e), \n        e;\n    }\n    getTargetCache() {\n        return this.ze;\n    }\n    getRemoteDocumentCache() {\n        return this.He;\n    }\n    getBundleCache() {\n        return this.Je;\n    }\n    runTransaction(t, e, n) {\n        $(\"MemoryPersistence\", \"Starting transaction:\", t);\n        const s = new Nr(this.Le.next());\n        return this.referenceDelegate.vs(), n(s).next((t => this.referenceDelegate.Vs(s).next((() => t)))).toPromise().then((t => (s.raiseOnCommittedEvent(), \n        t)));\n    }\n    Ss(t, e) {\n        return js.or(Object.values(this.bs).map((n => () => n.containsKey(t, e))));\n    }\n}\n\n/**\n * Memory persistence is not actually transactional, but future implementations\n * may have transaction-scoped state.\n */ class Nr extends Ks {\n    constructor(t) {\n        super(), this.currentSequenceNumber = t;\n    }\n}\n\nclass xr {\n    constructor(t) {\n        this.persistence = t, \n        /** Tracks all documents that are active in Query views. */\n        this.Ds = new br, \n        /** The list of documents that are potentially GCed after each transaction. */\n        this.Cs = null;\n    }\n    static Ns(t) {\n        return new xr(t);\n    }\n    get xs() {\n        if (this.Cs) return this.Cs;\n        throw L();\n    }\n    addReference(t, e, n) {\n        return this.Ds.addReference(n, e), this.xs.delete(n.toString()), js.resolve();\n    }\n    removeReference(t, e, n) {\n        return this.Ds.removeReference(n, e), this.xs.add(n.toString()), js.resolve();\n    }\n    markPotentiallyOrphaned(t, e) {\n        return this.xs.add(e.toString()), js.resolve();\n    }\n    removeTarget(t, e) {\n        this.Ds.cs(e.targetId).forEach((t => this.xs.add(t.toString())));\n        const n = this.persistence.getTargetCache();\n        return n.getMatchingKeysForTargetId(t, e.targetId).next((t => {\n            t.forEach((t => this.xs.add(t.toString())));\n        })).next((() => n.removeTargetData(t, e)));\n    }\n    vs() {\n        this.Cs = new Set;\n    }\n    Vs(t) {\n        // Remove newly orphaned documents.\n        const e = this.persistence.getRemoteDocumentCache().newChangeBuffer();\n        return js.forEach(this.xs, (n => {\n            const s = Pt.fromPath(n);\n            return this.ks(t, s).next((t => {\n                t || e.removeEntry(s);\n            }));\n        })).next((() => (this.Cs = null, e.apply(t))));\n    }\n    updateLimboDocument(t, e) {\n        return this.ks(t, e).next((t => {\n            t ? this.xs.delete(e.toString()) : this.xs.add(e.toString());\n        }));\n    }\n    Ps(t) {\n        // For eager GC, we don't care about the document size, there are no size thresholds.\n        return 0;\n    }\n    ks(t, e) {\n        return js.or([ () => js.resolve(this.Ds.containsKey(e)), () => this.persistence.getTargetCache().containsKey(t, e), () => this.persistence.Ss(t, e) ]);\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The format of the LocalStorage key that stores the client state is:\n//     firestore_clients_<persistence_prefix>_<instance_key>\n/** Assembles the key for a client state in WebStorage */\nfunction kr(t, e) {\n    return `firestore_clients_${t}_${e}`;\n}\n\n// The format of the WebStorage key that stores the mutation state is:\n//     firestore_mutations_<persistence_prefix>_<batch_id>\n//     (for unauthenticated users)\n// or: firestore_mutations_<persistence_prefix>_<batch_id>_<user_uid>\n\n// 'user_uid' is last to avoid needing to escape '_' characters that it might\n// contain.\n/** Assembles the key for a mutation batch in WebStorage */\nfunction $r(t, e, n) {\n    let s = `firestore_mutations_${t}_${n}`;\n    return e.isAuthenticated() && (s += `_${e.uid}`), s;\n}\n\n// The format of the WebStorage key that stores a query target's metadata is:\n//     firestore_targets_<persistence_prefix>_<target_id>\n/** Assembles the key for a query state in WebStorage */\nfunction Or(t, e) {\n    return `firestore_targets_${t}_${e}`;\n}\n\n// The WebStorage prefix that stores the primary tab's online state. The\n// format of the key is:\n//     firestore_online_state_<persistence_prefix>\n/**\n * Holds the state of a mutation batch, including its user ID, batch ID and\n * whether the batch is 'pending', 'acknowledged' or 'rejected'.\n */\n// Visible for testing\nclass Fr {\n    constructor(t, e, n, s) {\n        this.user = t, this.batchId = e, this.state = n, this.error = s;\n    }\n    /**\n     * Parses a MutationMetadata from its JSON representation in WebStorage.\n     * Logs a warning and returns null if the format of the data is not valid.\n     */    static $s(t, e, n) {\n        const s = JSON.parse(n);\n        let i, r = \"object\" == typeof s && -1 !== [ \"pending\", \"acknowledged\", \"rejected\" ].indexOf(s.state) && (void 0 === s.error || \"object\" == typeof s.error);\n        return r && s.error && (r = \"string\" == typeof s.error.message && \"string\" == typeof s.error.code, \n        r && (i = new j(s.error.code, s.error.message))), r ? new Fr(t, e, s.state, i) : (O(\"SharedClientState\", `Failed to parse mutation state for ID '${e}': ${n}`), \n        null);\n    }\n    Os() {\n        const t = {\n            state: this.state,\n            updateTimeMs: Date.now()\n        };\n        return this.error && (t.error = {\n            code: this.error.code,\n            message: this.error.message\n        }), JSON.stringify(t);\n    }\n}\n\n/**\n * Holds the state of a query target, including its target ID and whether the\n * target is 'not-current', 'current' or 'rejected'.\n */\n// Visible for testing\nclass Mr {\n    constructor(t, e, n) {\n        this.targetId = t, this.state = e, this.error = n;\n    }\n    /**\n     * Parses a QueryTargetMetadata from its JSON representation in WebStorage.\n     * Logs a warning and returns null if the format of the data is not valid.\n     */    static $s(t, e) {\n        const n = JSON.parse(e);\n        let s, i = \"object\" == typeof n && -1 !== [ \"not-current\", \"current\", \"rejected\" ].indexOf(n.state) && (void 0 === n.error || \"object\" == typeof n.error);\n        return i && n.error && (i = \"string\" == typeof n.error.message && \"string\" == typeof n.error.code, \n        i && (s = new j(n.error.code, n.error.message))), i ? new Mr(t, n.state, s) : (O(\"SharedClientState\", `Failed to parse target state for ID '${t}': ${e}`), \n        null);\n    }\n    Os() {\n        const t = {\n            state: this.state,\n            updateTimeMs: Date.now()\n        };\n        return this.error && (t.error = {\n            code: this.error.code,\n            message: this.error.message\n        }), JSON.stringify(t);\n    }\n}\n\n/**\n * This class represents the immutable ClientState for a client read from\n * WebStorage, containing the list of active query targets.\n */ class Lr {\n    constructor(t, e) {\n        this.clientId = t, this.activeTargetIds = e;\n    }\n    /**\n     * Parses a RemoteClientState from the JSON representation in WebStorage.\n     * Logs a warning and returns null if the format of the data is not valid.\n     */    static $s(t, e) {\n        const n = JSON.parse(e);\n        let s = \"object\" == typeof n && n.activeTargetIds instanceof Array, i = Vn();\n        for (let t = 0; s && t < n.activeTargetIds.length; ++t) s = bt(n.activeTargetIds[t]), \n        i = i.add(n.activeTargetIds[t]);\n        return s ? new Lr(t, i) : (O(\"SharedClientState\", `Failed to parse client data for instance '${t}': ${e}`), \n        null);\n    }\n}\n\n/**\n * This class represents the online state for all clients participating in\n * multi-tab. The online state is only written to by the primary client, and\n * used in secondary clients to update their query views.\n */ class Br {\n    constructor(t, e) {\n        this.clientId = t, this.onlineState = e;\n    }\n    /**\n     * Parses a SharedOnlineState from its JSON representation in WebStorage.\n     * Logs a warning and returns null if the format of the data is not valid.\n     */    static $s(t) {\n        const e = JSON.parse(t);\n        return \"object\" == typeof e && -1 !== [ \"Unknown\", \"Online\", \"Offline\" ].indexOf(e.onlineState) && \"string\" == typeof e.clientId ? new Br(e.clientId, e.onlineState) : (O(\"SharedClientState\", `Failed to parse online state: ${t}`), \n        null);\n    }\n}\n\n/**\n * Metadata state of the local client. Unlike `RemoteClientState`, this class is\n * mutable and keeps track of all pending mutations, which allows us to\n * update the range of pending mutation batch IDs as new mutations are added or\n * removed.\n *\n * The data in `LocalClientState` is not read from WebStorage and instead\n * updated via its instance methods. The updated state can be serialized via\n * `toWebStorageJSON()`.\n */\n// Visible for testing.\nclass Ur {\n    constructor() {\n        this.activeTargetIds = Vn();\n    }\n    Fs(t) {\n        this.activeTargetIds = this.activeTargetIds.add(t);\n    }\n    Ms(t) {\n        this.activeTargetIds = this.activeTargetIds.delete(t);\n    }\n    /**\n     * Converts this entry into a JSON-encoded format we can use for WebStorage.\n     * Does not encode `clientId` as it is part of the key in WebStorage.\n     */    Os() {\n        const t = {\n            activeTargetIds: this.activeTargetIds.toArray(),\n            updateTimeMs: Date.now()\n        };\n        return JSON.stringify(t);\n    }\n}\n\n/**\n * `WebStorageSharedClientState` uses WebStorage (window.localStorage) as the\n * backing store for the SharedClientState. It keeps track of all active\n * clients and supports modifications of the local client's data.\n */ class qr {\n    constructor(t, e, n, s, i) {\n        this.window = t, this.Oe = e, this.persistenceKey = n, this.Ls = s, this.syncEngine = null, \n        this.onlineStateHandler = null, this.sequenceNumberHandler = null, this.Bs = this.Us.bind(this), \n        this.qs = new wn(et), this.started = !1, \n        /**\n         * Captures WebStorage events that occur before `start()` is called. These\n         * events are replayed once `WebStorageSharedClientState` is started.\n         */\n        this.Ks = [];\n        // Escape the special characters mentioned here:\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\n        const r = n.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n        this.storage = this.window.localStorage, this.currentUser = i, this.js = kr(this.persistenceKey, this.Ls), \n        this.Qs = \n        /** Assembles the key for the current sequence number. */\n        function(t) {\n            return `firestore_sequence_number_${t}`;\n        }\n        /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (this.persistenceKey), this.qs = this.qs.insert(this.Ls, new Ur), this.Ws = new RegExp(`^firestore_clients_${r}_([^_]*)$`), \n        this.Gs = new RegExp(`^firestore_mutations_${r}_(\\\\d+)(?:_(.*))?$`), this.zs = new RegExp(`^firestore_targets_${r}_(\\\\d+)$`), \n        this.Hs = \n        /** Assembles the key for the online state of the primary tab. */\n        function(t) {\n            return `firestore_online_state_${t}`;\n        }\n        // The WebStorage prefix that plays as a event to indicate the remote documents\n        // might have changed due to some secondary tabs loading a bundle.\n        // format of the key is:\n        //     firestore_bundle_loaded_<persistenceKey>\n        (this.persistenceKey), this.Js = function(t) {\n            return `firestore_bundle_loaded_${t}`;\n        }\n        // The WebStorage key prefix for the key that stores the last sequence number allocated. The key\n        // looks like 'firestore_sequence_number_<persistence_prefix>'.\n        (this.persistenceKey), \n        // Rather than adding the storage observer during start(), we add the\n        // storage observer during initialization. This ensures that we collect\n        // events before other components populate their initial state (during their\n        // respective start() calls). Otherwise, we might for example miss a\n        // mutation that is added after LocalStore's start() processed the existing\n        // mutations but before we observe WebStorage events.\n        this.window.addEventListener(\"storage\", this.Bs);\n    }\n    /** Returns 'true' if WebStorage is available in the current environment. */    static bt(t) {\n        return !(!t || !t.localStorage);\n    }\n    async start() {\n        // Retrieve the list of existing clients to backfill the data in\n        // SharedClientState.\n        const t = await this.syncEngine.pn();\n        for (const e of t) {\n            if (e === this.Ls) continue;\n            const t = this.getItem(kr(this.persistenceKey, e));\n            if (t) {\n                const n = Lr.$s(e, t);\n                n && (this.qs = this.qs.insert(n.clientId, n));\n            }\n        }\n        this.Ys();\n        // Check if there is an existing online state and call the callback handler\n        // if applicable.\n        const e = this.storage.getItem(this.Hs);\n        if (e) {\n            const t = this.Xs(e);\n            t && this.Zs(t);\n        }\n        for (const t of this.Ks) this.Us(t);\n        this.Ks = [], \n        // Register a window unload hook to remove the client metadata entry from\n        // WebStorage even if `shutdown()` was not called.\n        this.window.addEventListener(\"pagehide\", (() => this.shutdown())), this.started = !0;\n    }\n    writeSequenceNumber(t) {\n        this.setItem(this.Qs, JSON.stringify(t));\n    }\n    getAllActiveQueryTargets() {\n        return this.ti(this.qs);\n    }\n    isActiveQueryTarget(t) {\n        let e = !1;\n        return this.qs.forEach(((n, s) => {\n            s.activeTargetIds.has(t) && (e = !0);\n        })), e;\n    }\n    addPendingMutation(t) {\n        this.ei(t, \"pending\");\n    }\n    updateMutationState(t, e, n) {\n        this.ei(t, e, n), \n        // Once a final mutation result is observed by other clients, they no longer\n        // access the mutation's metadata entry. Since WebStorage replays events\n        // in order, it is safe to delete the entry right after updating it.\n        this.ni(t);\n    }\n    addLocalQueryTarget(t) {\n        let e = \"not-current\";\n        // Lookup an existing query state if the target ID was already registered\n        // by another tab\n                if (this.isActiveQueryTarget(t)) {\n            const n = this.storage.getItem(Or(this.persistenceKey, t));\n            if (n) {\n                const s = Mr.$s(t, n);\n                s && (e = s.state);\n            }\n        }\n        return this.si.Fs(t), this.Ys(), e;\n    }\n    removeLocalQueryTarget(t) {\n        this.si.Ms(t), this.Ys();\n    }\n    isLocalQueryTarget(t) {\n        return this.si.activeTargetIds.has(t);\n    }\n    clearQueryState(t) {\n        this.removeItem(Or(this.persistenceKey, t));\n    }\n    updateQueryState(t, e, n) {\n        this.ii(t, e, n);\n    }\n    handleUserChange(t, e, n) {\n        e.forEach((t => {\n            this.ni(t);\n        })), this.currentUser = t, n.forEach((t => {\n            this.addPendingMutation(t);\n        }));\n    }\n    setOnlineState(t) {\n        this.ri(t);\n    }\n    notifyBundleLoaded() {\n        this.oi();\n    }\n    shutdown() {\n        this.started && (this.window.removeEventListener(\"storage\", this.Bs), this.removeItem(this.js), \n        this.started = !1);\n    }\n    getItem(t) {\n        const e = this.storage.getItem(t);\n        return $(\"SharedClientState\", \"READ\", t, e), e;\n    }\n    setItem(t, e) {\n        $(\"SharedClientState\", \"SET\", t, e), this.storage.setItem(t, e);\n    }\n    removeItem(t) {\n        $(\"SharedClientState\", \"REMOVE\", t), this.storage.removeItem(t);\n    }\n    Us(t) {\n        // Note: The function is typed to take Event to be interface-compatible with\n        // `Window.addEventListener`.\n        const e = t;\n        if (e.storageArea === this.storage) {\n            if ($(\"SharedClientState\", \"EVENT\", e.key, e.newValue), e.key === this.js) return void O(\"Received WebStorage notification for local change. Another client might have garbage-collected our state\");\n            this.Oe.enqueueRetryable((async () => {\n                if (this.started) {\n                    if (null !== e.key) if (this.Ws.test(e.key)) {\n                        if (null == e.newValue) {\n                            const t = this.ci(e.key);\n                            return this.ai(t, null);\n                        }\n                        {\n                            const t = this.ui(e.key, e.newValue);\n                            if (t) return this.ai(t.clientId, t);\n                        }\n                    } else if (this.Gs.test(e.key)) {\n                        if (null !== e.newValue) {\n                            const t = this.hi(e.key, e.newValue);\n                            if (t) return this.li(t);\n                        }\n                    } else if (this.zs.test(e.key)) {\n                        if (null !== e.newValue) {\n                            const t = this.fi(e.key, e.newValue);\n                            if (t) return this.di(t);\n                        }\n                    } else if (e.key === this.Hs) {\n                        if (null !== e.newValue) {\n                            const t = this.Xs(e.newValue);\n                            if (t) return this.Zs(t);\n                        }\n                    } else if (e.key === this.Qs) {\n                        const t = function(t) {\n                            let e = X.T;\n                            if (null != t) try {\n                                const n = JSON.parse(t);\n                                B(\"number\" == typeof n), e = n;\n                            } catch (t) {\n                                O(\"SharedClientState\", \"Failed to read sequence number from WebStorage\", t);\n                            }\n                            return e;\n                        }\n                        /**\n * `MemorySharedClientState` is a simple implementation of SharedClientState for\n * clients using memory persistence. The state in this class remains fully\n * isolated and no synchronization is performed.\n */ (e.newValue);\n                        t !== X.T && this.sequenceNumberHandler(t);\n                    } else if (e.key === this.Js) return this.syncEngine.wi();\n                } else this.Ks.push(e);\n            }));\n        }\n    }\n    get si() {\n        return this.qs.get(this.Ls);\n    }\n    Ys() {\n        this.setItem(this.js, this.si.Os());\n    }\n    ei(t, e, n) {\n        const s = new Fr(this.currentUser, t, e, n), i = $r(this.persistenceKey, this.currentUser, t);\n        this.setItem(i, s.Os());\n    }\n    ni(t) {\n        const e = $r(this.persistenceKey, this.currentUser, t);\n        this.removeItem(e);\n    }\n    ri(t) {\n        const e = {\n            clientId: this.Ls,\n            onlineState: t\n        };\n        this.storage.setItem(this.Hs, JSON.stringify(e));\n    }\n    ii(t, e, n) {\n        const s = Or(this.persistenceKey, t), i = new Mr(t, e, n);\n        this.setItem(s, i.Os());\n    }\n    oi() {\n        this.setItem(this.Js, \"value-not-used\");\n    }\n    /**\n     * Parses a client state key in WebStorage. Returns null if the key does not\n     * match the expected key format.\n     */    ci(t) {\n        const e = this.Ws.exec(t);\n        return e ? e[1] : null;\n    }\n    /**\n     * Parses a client state in WebStorage. Returns 'null' if the value could not\n     * be parsed.\n     */    ui(t, e) {\n        const n = this.ci(t);\n        return Lr.$s(n, e);\n    }\n    /**\n     * Parses a mutation batch state in WebStorage. Returns 'null' if the value\n     * could not be parsed.\n     */    hi(t, e) {\n        const n = this.Gs.exec(t), s = Number(n[1]), i = void 0 !== n[2] ? n[2] : null;\n        return Fr.$s(new D(i), s, e);\n    }\n    /**\n     * Parses a query target state from WebStorage. Returns 'null' if the value\n     * could not be parsed.\n     */    fi(t, e) {\n        const n = this.zs.exec(t), s = Number(n[1]);\n        return Mr.$s(s, e);\n    }\n    /**\n     * Parses an online state from WebStorage. Returns 'null' if the value\n     * could not be parsed.\n     */    Xs(t) {\n        return Br.$s(t);\n    }\n    async li(t) {\n        if (t.user.uid === this.currentUser.uid) return this.syncEngine._i(t.batchId, t.state, t.error);\n        $(\"SharedClientState\", `Ignoring mutation for non-active user ${t.user.uid}`);\n    }\n    di(t) {\n        return this.syncEngine.mi(t.targetId, t.state, t.error);\n    }\n    ai(t, e) {\n        const n = e ? this.qs.insert(t, e) : this.qs.remove(t), s = this.ti(this.qs), i = this.ti(n), r = [], o = [];\n        return i.forEach((t => {\n            s.has(t) || r.push(t);\n        })), s.forEach((t => {\n            i.has(t) || o.push(t);\n        })), this.syncEngine.gi(r, o).then((() => {\n            this.qs = n;\n        }));\n    }\n    Zs(t) {\n        // We check whether the client that wrote this online state is still active\n        // by comparing its client ID to the list of clients kept active in\n        // IndexedDb. If a client does not update their IndexedDb client state\n        // within 5 seconds, it is considered inactive and we don't emit an online\n        // state event.\n        this.qs.get(t.clientId) && this.onlineStateHandler(t.onlineState);\n    }\n    ti(t) {\n        let e = Vn();\n        return t.forEach(((t, n) => {\n            e = e.unionWith(n.activeTargetIds);\n        })), e;\n    }\n}\n\nclass Kr {\n    constructor() {\n        this.yi = new Ur, this.pi = {}, this.onlineStateHandler = null, this.sequenceNumberHandler = null;\n    }\n    addPendingMutation(t) {\n        // No op.\n    }\n    updateMutationState(t, e, n) {\n        // No op.\n    }\n    addLocalQueryTarget(t) {\n        return this.yi.Fs(t), this.pi[t] || \"not-current\";\n    }\n    updateQueryState(t, e, n) {\n        this.pi[t] = e;\n    }\n    removeLocalQueryTarget(t) {\n        this.yi.Ms(t);\n    }\n    isLocalQueryTarget(t) {\n        return this.yi.activeTargetIds.has(t);\n    }\n    clearQueryState(t) {\n        delete this.pi[t];\n    }\n    getAllActiveQueryTargets() {\n        return this.yi.activeTargetIds;\n    }\n    isActiveQueryTarget(t) {\n        return this.yi.activeTargetIds.has(t);\n    }\n    start() {\n        return this.yi = new Ur, Promise.resolve();\n    }\n    handleUserChange(t, e, n) {\n        // No op.\n    }\n    setOnlineState(t) {\n        // No op.\n    }\n    shutdown() {}\n    writeSequenceNumber(t) {}\n    notifyBundleLoaded() {\n        // No op.\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class jr {\n    Ti(t) {\n        // No-op.\n    }\n    shutdown() {\n        // No-op.\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// References to `window` are guarded by BrowserConnectivityMonitor.isAvailable()\n/* eslint-disable no-restricted-globals */\n/**\n * Browser implementation of ConnectivityMonitor.\n */\nclass Qr {\n    constructor() {\n        this.Ei = () => this.Ii(), this.Ai = () => this.Ri(), this.bi = [], this.Pi();\n    }\n    Ti(t) {\n        this.bi.push(t);\n    }\n    shutdown() {\n        window.removeEventListener(\"online\", this.Ei), window.removeEventListener(\"offline\", this.Ai);\n    }\n    Pi() {\n        window.addEventListener(\"online\", this.Ei), window.addEventListener(\"offline\", this.Ai);\n    }\n    Ii() {\n        $(\"ConnectivityMonitor\", \"Network connectivity changed: AVAILABLE\");\n        for (const t of this.bi) t(0 /* AVAILABLE */);\n    }\n    Ri() {\n        $(\"ConnectivityMonitor\", \"Network connectivity changed: UNAVAILABLE\");\n        for (const t of this.bi) t(1 /* UNAVAILABLE */);\n    }\n    // TODO(chenbrian): Consider passing in window either into this component or\n    // here for testing via FakeWindow.\n    /** Checks that all used attributes of window are available. */\n    static bt() {\n        return \"undefined\" != typeof window && void 0 !== window.addEventListener && void 0 !== window.removeEventListener;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Wr = {\n    BatchGetDocuments: \"batchGet\",\n    Commit: \"commit\",\n    RunQuery: \"runQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a simple helper class that implements the Stream interface to\n * bridge to other implementations that are streams but do not implement the\n * interface. The stream callbacks are invoked with the callOn... methods.\n */\nclass Gr {\n    constructor(t) {\n        this.vi = t.vi, this.Vi = t.Vi;\n    }\n    Si(t) {\n        this.Di = t;\n    }\n    Ci(t) {\n        this.Ni = t;\n    }\n    onMessage(t) {\n        this.xi = t;\n    }\n    close() {\n        this.Vi();\n    }\n    send(t) {\n        this.vi(t);\n    }\n    ki() {\n        this.Di();\n    }\n    $i(t) {\n        this.Ni(t);\n    }\n    Oi(t) {\n        this.xi(t);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class zr extends \n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n    constructor(t) {\n        this.databaseInfo = t, this.databaseId = t.databaseId;\n        const e = t.ssl ? \"https\" : \"http\";\n        this.Fi = e + \"://\" + t.host, this.Mi = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n    }\n    Li(t, e, n, s) {\n        const i = this.Bi(t, e);\n        $(\"RestConnection\", \"Sending: \", i, n);\n        const r = {};\n        return this.Ui(r, s), this.qi(t, i, r, n).then((t => ($(\"RestConnection\", \"Received: \", t), \n        t)), (e => {\n            throw F(\"RestConnection\", `${t} failed with error: `, e, \"url: \", i, \"request:\", n), \n            e;\n        }));\n    }\n    Ki(t, e, n, s) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.Li(t, e, n, s);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */    Ui(t, e) {\n        if (t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + C, \n        // Content-Type: text/plain will avoid preflight requests which might\n        // mess with CORS and redirects by proxies. If we add custom headers\n        // we will need to change this code to potentially use the $httpOverwrite\n        // parameter supported by ESF to avoid triggering preflight requests.\n        t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), \n        e) for (const n in e.authHeaders) e.authHeaders.hasOwnProperty(n) && (t[n] = e.authHeaders[n]);\n    }\n    Bi(t, e) {\n        const n = Wr[t];\n        return `${this.Fi}/v1/${e}:${n}`;\n    }\n} {\n    constructor(t) {\n        super(t), this.forceLongPolling = t.forceLongPolling, this.autoDetectLongPolling = t.autoDetectLongPolling, \n        this.useFetchStreams = t.useFetchStreams;\n    }\n    qi(t, e, n, s) {\n        return new Promise(((i, r) => {\n            const o = new XhrIo;\n            o.listenOnce(EventType.COMPLETE, (() => {\n                try {\n                    switch (o.getLastErrorCode()) {\n                      case ErrorCode.NO_ERROR:\n                        const e = o.getResponseJson();\n                        $(\"Connection\", \"XHR received:\", JSON.stringify(e)), i(e);\n                        break;\n\n                      case ErrorCode.TIMEOUT:\n                        $(\"Connection\", 'RPC \"' + t + '\" timed out'), r(new j(K.DEADLINE_EXCEEDED, \"Request time out\"));\n                        break;\n\n                      case ErrorCode.HTTP_ERROR:\n                        const n = o.getStatus();\n                        if ($(\"Connection\", 'RPC \"' + t + '\" failed with status:', n, \"response text:\", o.getResponseText()), \n                        n > 0) {\n                            const t = o.getResponseJson().error;\n                            if (t && t.status && t.message) {\n                                const e = function(t) {\n                                    const e = t.toLowerCase().replace(/_/g, \"-\");\n                                    return Object.values(K).indexOf(e) >= 0 ? e : K.UNKNOWN;\n                                }(t.status);\n                                r(new j(e, t.message));\n                            } else r(new j(K.UNKNOWN, \"Server responded with status \" + o.getStatus()));\n                        } else \n                        // If we received an HTTP_ERROR but there's no status code,\n                        // it's most probably a connection issue\n                        r(new j(K.UNAVAILABLE, \"Connection failed.\"));\n                        break;\n\n                      default:\n                        L();\n                    }\n                } finally {\n                    $(\"Connection\", 'RPC \"' + t + '\" completed.');\n                }\n            }));\n            const c = JSON.stringify(s);\n            o.send(e, \"POST\", c, n, 15);\n        }));\n    }\n    ji(t, e) {\n        const n = [ this.Fi, \"/\", \"google.firestore.v1.Firestore\", \"/\", t, \"/channel\" ], s = createWebChannelTransport(), i = getStatEventTarget(), r = {\n            // Required for backend stickiness, routing behavior is based on this\n            // parameter.\n            httpSessionIdParam: \"gsessionid\",\n            initMessageHeaders: {},\n            messageUrlParams: {\n                // This param is used to improve routing and project isolation by the\n                // backend and must be included in every request.\n                database: `projects/${this.databaseId.projectId}/databases/${this.databaseId.database}`\n            },\n            sendRawJson: !0,\n            supportsCrossDomainXhr: !0,\n            internalChannelParams: {\n                // Override the default timeout (randomized between 10-20 seconds) since\n                // a large write batch on a slow internet connection may take a long\n                // time to send to the backend. Rather than have WebChannel impose a\n                // tight timeout which could lead to infinite timeouts and retries, we\n                // set it very large (5-10 minutes) and rely on the browser's builtin\n                // timeouts to kick in if the request isn't working.\n                forwardChannelRequestTimeoutMs: 6e5\n            },\n            forceLongPolling: this.forceLongPolling,\n            detectBufferingProxy: this.autoDetectLongPolling\n        };\n        this.useFetchStreams && (r.xmlHttpFactory = new FetchXmlHttpFactory({})), this.Ui(r.initMessageHeaders, e), \n        // Sending the custom headers we just added to request.initMessageHeaders\n        // (Authorization, etc.) will trigger the browser to make a CORS preflight\n        // request because the XHR will no longer meet the criteria for a \"simple\"\n        // CORS request:\n        // https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Simple_requests\n        // Therefore to avoid the CORS preflight request (an extra network\n        // roundtrip), we use the httpHeadersOverwriteParam option to specify that\n        // the headers should instead be encoded into a special \"$httpHeaders\" query\n        // parameter, which is recognized by the webchannel backend. This is\n        // formally defined here:\n        // https://github.com/google/closure-library/blob/b0e1815b13fb92a46d7c9b3c30de5d6a396a3245/closure/goog/net/rpc/httpcors.js#L32\n        // TODO(b/145624756): There is a backend bug where $httpHeaders isn't respected if the request\n        // doesn't have an Origin header. So we have to exclude a few browser environments that are\n        // known to (sometimes) not include an Origin. See\n        // https://github.com/firebase/firebase-js-sdk/issues/1491.\n        isMobileCordova() || isReactNative() || isElectron() || isIE() || isUWP() || isBrowserExtension() || (r.httpHeadersOverwriteParam = \"$httpHeaders\");\n        const o = n.join(\"\");\n        $(\"Connection\", \"Creating WebChannel: \" + o, r);\n        const c = s.createWebChannel(o, r);\n        // WebChannel supports sending the first message with the handshake - saving\n        // a network round trip. However, it will have to call send in the same\n        // JS event loop as open. In order to enforce this, we delay actually\n        // opening the WebChannel until send is called. Whether we have called\n        // open is tracked with this variable.\n                let a = !1, u = !1;\n        // A flag to determine whether the stream was closed (by us or through an\n        // error/close event) to avoid delivering multiple close events or sending\n        // on a closed stream\n                const h = new Gr({\n            vi: t => {\n                u ? $(\"Connection\", \"Not sending because WebChannel is closed:\", t) : (a || ($(\"Connection\", \"Opening WebChannel transport.\"), \n                c.open(), a = !0), $(\"Connection\", \"WebChannel sending:\", t), c.send(t));\n            },\n            Vi: () => c.close()\n        }), g = (t, e, n) => {\n            // TODO(dimond): closure typing seems broken because WebChannel does\n            // not implement goog.events.Listenable\n            t.listen(e, (t => {\n                try {\n                    n(t);\n                } catch (t) {\n                    setTimeout((() => {\n                        throw t;\n                    }), 0);\n                }\n            }));\n        };\n        // Closure events are guarded and exceptions are swallowed, so catch any\n        // exception and rethrow using a setTimeout so they become visible again.\n        // Note that eventually this function could go away if we are confident\n        // enough the code is exception free.\n                return g(c, WebChannel.EventType.OPEN, (() => {\n            u || $(\"Connection\", \"WebChannel transport opened.\");\n        })), g(c, WebChannel.EventType.CLOSE, (() => {\n            u || (u = !0, $(\"Connection\", \"WebChannel transport closed\"), h.$i());\n        })), g(c, WebChannel.EventType.ERROR, (t => {\n            u || (u = !0, F(\"Connection\", \"WebChannel transport errored:\", t), h.$i(new j(K.UNAVAILABLE, \"The operation could not be completed\")));\n        })), g(c, WebChannel.EventType.MESSAGE, (t => {\n            var e;\n            if (!u) {\n                const n = t.data[0];\n                B(!!n);\n                // TODO(b/35143891): There is a bug in One Platform that caused errors\n                // (and only errors) to be wrapped in an extra array. To be forward\n                // compatible with the bug we need to check either condition. The latter\n                // can be removed once the fix has been rolled out.\n                // Use any because msgData.error is not typed.\n                const s = n, i = s.error || (null === (e = s[0]) || void 0 === e ? void 0 : e.error);\n                if (i) {\n                    $(\"Connection\", \"WebChannel received error:\", i);\n                    // error.status will be a string like 'OK' or 'NOT_FOUND'.\n                    const t = i.status;\n                    let e = \n                    /**\n * Maps an error Code from a GRPC status identifier like 'NOT_FOUND'.\n *\n * @returns The Code equivalent to the given status string or undefined if\n *     there is no match.\n */\n                    function(t) {\n                        // lookup by string\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        const e = hn[t];\n                        if (void 0 !== e) return dn(e);\n                    }(t), n = i.message;\n                    void 0 === e && (e = K.INTERNAL, n = \"Unknown error status: \" + t + \" with message \" + i.message), \n                    // Mark closed so no further events are propagated\n                    u = !0, h.$i(new j(e, n)), c.close();\n                } else $(\"Connection\", \"WebChannel received:\", n), h.Oi(n);\n            }\n        })), g(i, Event.STAT_EVENT, (t => {\n            t.stat === Stat.PROXY ? $(\"Connection\", \"Detected buffering proxy\") : t.stat === Stat.NOPROXY && $(\"Connection\", \"Detected no buffering proxy\");\n        })), setTimeout((() => {\n            // Technically we could/should wait for the WebChannel opened event,\n            // but because we want to send the first message with the WebChannel\n            // handshake we pretend the channel opened here (asynchronously), and\n            // then delay the actual open until the first message is sent.\n            h.ki();\n        }), 0), h;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the WebChannelConnection for the browser. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'window' implementation or null if not available. */\nfunction Hr() {\n    // `window` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof window ? window : null;\n}\n\n/** The Platform's 'document' implementation or null if not available. */ function Jr() {\n    // `document` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function Yr(t) {\n    return new Bn(t, /* useProto3Json= */ !0);\n}\n\n/**\n * An instance of the Platform's 'TextEncoder' implementation.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass Xr {\n    constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    t, \n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    e, \n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    n = 1e3\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */ , s = 1.5\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */ , i = 6e4) {\n        this.Oe = t, this.timerId = e, this.Qi = n, this.Wi = s, this.Gi = i, this.zi = 0, \n        this.Hi = null, \n        /** The last backoff attempt, as epoch milliseconds. */\n        this.Ji = Date.now(), this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */    reset() {\n        this.zi = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */    Yi() {\n        this.zi = this.Gi;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */    Xi(t) {\n        // Cancel any pending backoff operation.\n        this.cancel();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        const e = Math.floor(this.zi + this.Zi()), n = Math.max(0, Date.now() - this.Ji), s = Math.max(0, e - n);\n        // Guard against lastAttemptTime being in the future due to a clock change.\n                s > 0 && $(\"ExponentialBackoff\", `Backing off for ${s} ms (base delay: ${this.zi} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), \n        this.Hi = this.Oe.enqueueAfterDelay(this.timerId, s, (() => (this.Ji = Date.now(), \n        t()))), \n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.zi *= this.Wi, this.zi < this.Qi && (this.zi = this.Qi), this.zi > this.Gi && (this.zi = this.Gi);\n    }\n    tr() {\n        null !== this.Hi && (this.Hi.skipDelay(), this.Hi = null);\n    }\n    cancel() {\n        null !== this.Hi && (this.Hi.cancel(), this.Hi = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */    Zi() {\n        return (Math.random() - .5) * this.zi;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A PersistentStream is an abstract base class that represents a streaming RPC\n * to the Firestore backend. It's built on top of the connections own support\n * for streaming RPCs, and adds several critical features for our clients:\n *\n *   - Exponential backoff on failure\n *   - Authentication via CredentialsProvider\n *   - Dispatching all callbacks into the shared worker queue\n *   - Closing idle streams after 60 seconds of inactivity\n *\n * Subclasses of PersistentStream implement serialization of models to and\n * from the JSON representation of the protocol buffers for a specific\n * streaming RPC.\n *\n * ## Starting and Stopping\n *\n * Streaming RPCs are stateful and need to be start()ed before messages can\n * be sent and received. The PersistentStream will call the onOpen() function\n * of the listener once the stream is ready to accept requests.\n *\n * Should a start() fail, PersistentStream will call the registered onClose()\n * listener with a FirestoreError indicating what went wrong.\n *\n * A PersistentStream can be started and stopped repeatedly.\n *\n * Generic types:\n *  SendType: The type of the outgoing message of the underlying\n *    connection stream\n *  ReceiveType: The type of the incoming message of the underlying\n *    connection stream\n *  ListenerType: The type of the listener that will be used for callbacks\n */\nclass Zr {\n    constructor(t, e, n, s, i, r, o) {\n        this.Oe = t, this.er = n, this.nr = s, this.sr = i, this.credentialsProvider = r, \n        this.listener = o, this.state = 0 /* Initial */ , \n        /**\n         * A close count that's incremented every time the stream is closed; used by\n         * getCloseGuardedDispatcher() to invalidate callbacks that happen after\n         * close.\n         */\n        this.ir = 0, this.rr = null, this.cr = null, this.stream = null, this.ar = new Xr(t, e);\n    }\n    /**\n     * Returns true if start() has been called and no error has occurred. True\n     * indicates the stream is open or in the process of opening (which\n     * encompasses respecting backoff, getting auth tokens, and starting the\n     * actual RPC). Use isOpen() to determine if the stream is open and ready for\n     * outbound requests.\n     */    ur() {\n        return 1 /* Starting */ === this.state || 5 /* Backoff */ === this.state || this.hr();\n    }\n    /**\n     * Returns true if the underlying RPC is open (the onOpen() listener has been\n     * called) and the stream is ready for outbound requests.\n     */    hr() {\n        return 2 /* Open */ === this.state || 3 /* Healthy */ === this.state;\n    }\n    /**\n     * Starts the RPC. Only allowed if isStarted() returns false. The stream is\n     * not immediately ready for use: onOpen() will be invoked when the RPC is\n     * ready for outbound requests, at which point isOpen() will return true.\n     *\n     * When start returns, isStarted() will return true.\n     */    start() {\n        4 /* Error */ !== this.state ? this.auth() : this.lr();\n    }\n    /**\n     * Stops the RPC. This call is idempotent and allowed regardless of the\n     * current isStarted() state.\n     *\n     * When stop returns, isStarted() and isOpen() will both return false.\n     */    async stop() {\n        this.ur() && await this.close(0 /* Initial */);\n    }\n    /**\n     * After an error the stream will usually back off on the next attempt to\n     * start it. If the error warrants an immediate restart of the stream, the\n     * sender can use this to indicate that the receiver should not back off.\n     *\n     * Each error will call the onClose() listener. That function can decide to\n     * inhibit backoff if required.\n     */    dr() {\n        this.state = 0 /* Initial */ , this.ar.reset();\n    }\n    /**\n     * Marks this stream as idle. If no further actions are performed on the\n     * stream for one minute, the stream will automatically close itself and\n     * notify the stream's onClose() handler with Status.OK. The stream will then\n     * be in a !isStarted() state, requiring the caller to start the stream again\n     * before further use.\n     *\n     * Only streams that are in state 'Open' can be marked idle, as all other\n     * states imply pending network operations.\n     */    wr() {\n        // Starts the idle time if we are in state 'Open' and are not yet already\n        // running a timer (in which case the previous idle timeout still applies).\n        this.hr() && null === this.rr && (this.rr = this.Oe.enqueueAfterDelay(this.er, 6e4, (() => this._r())));\n    }\n    /** Sends a message to the underlying stream. */    mr(t) {\n        this.gr(), this.stream.send(t);\n    }\n    /** Called by the idle timer when the stream should close due to inactivity. */    async _r() {\n        if (this.hr()) \n        // When timing out an idle stream there's no reason to force the stream into backoff when\n        // it restarts so set the stream state to Initial instead of Error.\n        return this.close(0 /* Initial */);\n    }\n    /** Marks the stream as active again. */    gr() {\n        this.rr && (this.rr.cancel(), this.rr = null);\n    }\n    /** Cancels the health check delayed operation. */    yr() {\n        this.cr && (this.cr.cancel(), this.cr = null);\n    }\n    /**\n     * Closes the stream and cleans up as necessary:\n     *\n     * * closes the underlying GRPC stream;\n     * * calls the onClose handler with the given 'error';\n     * * sets internal stream state to 'finalState';\n     * * adjusts the backoff timer based on the error\n     *\n     * A new stream can be opened by calling start().\n     *\n     * @param finalState - the intended state of the stream after closing.\n     * @param error - the error the connection was closed with.\n     */    async close(t, e) {\n        // Cancel any outstanding timers (they're guaranteed not to execute).\n        this.gr(), this.yr(), this.ar.cancel(), \n        // Invalidates any stream-related callbacks (e.g. from auth or the\n        // underlying stream), guaranteeing they won't execute.\n        this.ir++, 4 /* Error */ !== t ? \n        // If this is an intentional close ensure we don't delay our next connection attempt.\n        this.ar.reset() : e && e.code === K.RESOURCE_EXHAUSTED ? (\n        // Log the error. (Probably either 'quota exceeded' or 'max queue length reached'.)\n        O(e.toString()), O(\"Using maximum backoff delay to prevent overloading the backend.\"), \n        this.ar.Yi()) : e && e.code === K.UNAUTHENTICATED && 3 /* Healthy */ !== this.state && \n        // \"unauthenticated\" error means the token was rejected. This should rarely\n        // happen since both Auth and AppCheck ensure a sufficient TTL when we\n        // request a token. If a user manually resets their system clock this can\n        // fail, however. In this case, we should get a Code.UNAUTHENTICATED error\n        // before we received the first message and we need to invalidate the token\n        // to ensure that we fetch a new token.\n        this.credentialsProvider.invalidateToken(), \n        // Clean up the underlying stream because we are no longer interested in events.\n        null !== this.stream && (this.pr(), this.stream.close(), this.stream = null), \n        // This state must be assigned before calling onClose() to allow the callback to\n        // inhibit backoff or otherwise manipulate the state in its non-started state.\n        this.state = t, \n        // Notify the listener that the stream closed.\n        await this.listener.Ci(e);\n    }\n    /**\n     * Can be overridden to perform additional cleanup before the stream is closed.\n     * Calling super.tearDown() is not required.\n     */    pr() {}\n    auth() {\n        this.state = 1 /* Starting */;\n        const t = this.Tr(this.ir), e = this.ir;\n        // TODO(mikelehen): Just use dispatchIfNotClosed, but see TODO below.\n                this.credentialsProvider.getToken().then((t => {\n            // Stream can be stopped while waiting for authentication.\n            // TODO(mikelehen): We really should just use dispatchIfNotClosed\n            // and let this dispatch onto the queue, but that opened a spec test can\n            // of worms that I don't want to deal with in this PR.\n            this.ir === e && \n            // Normally we'd have to schedule the callback on the AsyncQueue.\n            // However, the following calls are safe to be called outside the\n            // AsyncQueue since they don't chain asynchronous calls\n            this.Er(t);\n        }), (e => {\n            t((() => {\n                const t = new j(K.UNKNOWN, \"Fetching auth token failed: \" + e.message);\n                return this.Ir(t);\n            }));\n        }));\n    }\n    Er(t) {\n        const e = this.Tr(this.ir);\n        this.stream = this.Ar(t), this.stream.Si((() => {\n            e((() => (this.state = 2 /* Open */ , this.cr = this.Oe.enqueueAfterDelay(this.nr, 1e4, (() => (this.hr() && (this.state = 3 /* Healthy */), \n            Promise.resolve()))), this.listener.Si())));\n        })), this.stream.Ci((t => {\n            e((() => this.Ir(t)));\n        })), this.stream.onMessage((t => {\n            e((() => this.onMessage(t)));\n        }));\n    }\n    lr() {\n        this.state = 5 /* Backoff */ , this.ar.Xi((async () => {\n            this.state = 0 /* Initial */ , this.start();\n        }));\n    }\n    // Visible for tests\n    Ir(t) {\n        // In theory the stream could close cleanly, however, in our current model\n        // we never expect this to happen because if we stop a stream ourselves,\n        // this callback will never be called. To prevent cases where we retry\n        // without a backoff accidentally, we set the stream to error in all cases.\n        return $(\"PersistentStream\", `close with error: ${t}`), this.stream = null, this.close(4 /* Error */ , t);\n    }\n    /**\n     * Returns a \"dispatcher\" function that dispatches operations onto the\n     * AsyncQueue but only runs them if closeCount remains unchanged. This allows\n     * us to turn auth / stream callbacks into no-ops if the stream is closed /\n     * re-opened, etc.\n     */    Tr(t) {\n        return e => {\n            this.Oe.enqueueAndForget((() => this.ir === t ? e() : ($(\"PersistentStream\", \"stream callback skipped by getCloseGuardedDispatcher.\"), \n            Promise.resolve())));\n        };\n    }\n}\n\n/**\n * A PersistentStream that implements the Listen RPC.\n *\n * Once the Listen stream has called the onOpen() listener, any number of\n * listen() and unlisten() calls can be made to control what changes will be\n * sent from the server for ListenResponses.\n */ class to extends Zr {\n    constructor(t, e, n, s, i) {\n        super(t, \"listen_stream_connection_backoff\" /* ListenStreamConnectionBackoff */ , \"listen_stream_idle\" /* ListenStreamIdle */ , \"health_check_timeout\" /* HealthCheckTimeout */ , e, n, i), \n        this.N = s;\n    }\n    Ar(t) {\n        return this.sr.ji(\"Listen\", t);\n    }\n    onMessage(t) {\n        // A successful response means the stream is healthy\n        this.ar.reset();\n        const e = ns(this.N, t), n = function(t) {\n            // We have only reached a consistent snapshot for the entire stream if there\n            // is a read_time set and it applies to all targets (i.e. the list of\n            // targets is empty). The backend is guaranteed to send such responses.\n            if (!(\"targetChange\" in t)) return rt.min();\n            const e = t.targetChange;\n            return e.targetIds && e.targetIds.length ? rt.min() : e.readTime ? jn(e.readTime) : rt.min();\n        }(t);\n        return this.listener.Rr(e, n);\n    }\n    /**\n     * Registers interest in the results of the given target. If the target\n     * includes a resumeToken it will be included in the request. Results that\n     * affect the target will be streamed back as WatchChange messages that\n     * reference the targetId.\n     */    br(t) {\n        const e = {};\n        e.database = Yn(this.N), e.addTarget = function(t, e) {\n            let n;\n            const s = e.target;\n            return n = Ht(s) ? {\n                documents: os(t, s)\n            } : {\n                query: cs(t, s)\n            }, n.targetId = e.targetId, e.resumeToken.approximateByteSize() > 0 ? n.resumeToken = qn(t, e.resumeToken) : e.snapshotVersion.compareTo(rt.min()) > 0 && (\n            // TODO(wuandy): Consider removing above check because it is most likely true.\n            // Right now, many tests depend on this behaviour though (leaving min() out\n            // of serialization).\n            n.readTime = Un(t, e.snapshotVersion.toTimestamp())), n;\n        }(this.N, t);\n        const n = us(this.N, t);\n        n && (e.labels = n), this.mr(e);\n    }\n    /**\n     * Unregisters interest in the results of the target associated with the\n     * given targetId.\n     */    Pr(t) {\n        const e = {};\n        e.database = Yn(this.N), e.removeTarget = t, this.mr(e);\n    }\n}\n\n/**\n * A Stream that implements the Write RPC.\n *\n * The Write RPC requires the caller to maintain special streamToken\n * state in between calls, to help the server understand which responses the\n * client has processed by the time the next request is made. Every response\n * will contain a streamToken; this value must be passed to the next\n * request.\n *\n * After calling start() on this stream, the next request must be a handshake,\n * containing whatever streamToken is on hand. Once a response to this\n * request is received, all pending mutations may be submitted. When\n * submitting multiple batches of mutations at the same time, it's\n * okay to use the same streamToken for the calls to writeMutations.\n *\n * TODO(b/33271235): Use proto types\n */ class eo extends Zr {\n    constructor(t, e, n, s, i) {\n        super(t, \"write_stream_connection_backoff\" /* WriteStreamConnectionBackoff */ , \"write_stream_idle\" /* WriteStreamIdle */ , \"health_check_timeout\" /* HealthCheckTimeout */ , e, n, i), \n        this.N = s, this.vr = !1;\n    }\n    /**\n     * Tracks whether or not a handshake has been successfully exchanged and\n     * the stream is ready to accept mutations.\n     */    get Vr() {\n        return this.vr;\n    }\n    // Override of PersistentStream.start\n    start() {\n        this.vr = !1, this.lastStreamToken = void 0, super.start();\n    }\n    pr() {\n        this.vr && this.Sr([]);\n    }\n    Ar(t) {\n        return this.sr.ji(\"Write\", t);\n    }\n    onMessage(t) {\n        if (\n        // Always capture the last stream token.\n        B(!!t.streamToken), this.lastStreamToken = t.streamToken, this.vr) {\n            // A successful first write response means the stream is healthy,\n            // Note, that we could consider a successful handshake healthy, however,\n            // the write itself might be causing an error we want to back off from.\n            this.ar.reset();\n            const e = rs(t.writeResults, t.commitTime), n = jn(t.commitTime);\n            return this.listener.Dr(n, e);\n        }\n        // The first response is always the handshake response\n        return B(!t.writeResults || 0 === t.writeResults.length), this.vr = !0, this.listener.Cr();\n    }\n    /**\n     * Sends an initial streamToken to the server, performing the handshake\n     * required to make the StreamingWrite RPC work. Subsequent\n     * calls should wait until onHandshakeComplete was called.\n     */    Nr() {\n        // TODO(dimond): Support stream resumption. We intentionally do not set the\n        // stream token on the handshake, ignoring any stream token we might have.\n        const t = {};\n        t.database = Yn(this.N), this.mr(t);\n    }\n    /** Sends a group of mutations to the Firestore backend to apply. */    Sr(t) {\n        const e = {\n            streamToken: this.lastStreamToken,\n            writes: t.map((t => ss(this.N, t)))\n        };\n        this.mr(e);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass no extends class {} {\n    constructor(t, e, n) {\n        super(), this.credentials = t, this.sr = e, this.N = n, this.kr = !1;\n    }\n    $r() {\n        if (this.kr) throw new j(K.FAILED_PRECONDITION, \"The client has already been terminated.\");\n    }\n    /** Gets an auth token and invokes the provided RPC. */    Li(t, e, n) {\n        return this.$r(), this.credentials.getToken().then((s => this.sr.Li(t, e, n, s))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === K.UNAUTHENTICATED && this.credentials.invalidateToken(), \n            t) : new j(K.UNKNOWN, t.toString());\n        }));\n    }\n    /** Gets an auth token and invokes the provided RPC with streamed results. */    Ki(t, e, n) {\n        return this.$r(), this.credentials.getToken().then((s => this.sr.Ki(t, e, n, s))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === K.UNAUTHENTICATED && this.credentials.invalidateToken(), \n            t) : new j(K.UNKNOWN, t.toString());\n        }));\n    }\n    terminate() {\n        this.kr = !0;\n    }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\n/**\n * A component used by the RemoteStore to track the OnlineState (that is,\n * whether or not the client as a whole should be considered to be online or\n * offline), implementing the appropriate heuristics.\n *\n * In particular, when the client is trying to connect to the backend, we\n * allow up to MAX_WATCH_STREAM_FAILURES within ONLINE_STATE_TIMEOUT_MS for\n * a connection to succeed. If we have too many failures or the timeout elapses,\n * then we set the OnlineState to Offline, and the client will behave as if\n * it is offline (get()s will return cached data, etc.).\n */\nclass so {\n    constructor(t, e) {\n        this.asyncQueue = t, this.onlineStateHandler = e, \n        /** The current OnlineState. */\n        this.state = \"Unknown\" /* Unknown */ , \n        /**\n         * A count of consecutive failures to open the stream. If it reaches the\n         * maximum defined by MAX_WATCH_STREAM_FAILURES, we'll set the OnlineState to\n         * Offline.\n         */\n        this.Or = 0, \n        /**\n         * A timer that elapses after ONLINE_STATE_TIMEOUT_MS, at which point we\n         * transition from OnlineState.Unknown to OnlineState.Offline without waiting\n         * for the stream to actually fail (MAX_WATCH_STREAM_FAILURES times).\n         */\n        this.Fr = null, \n        /**\n         * Whether the client should log a warning message if it fails to connect to\n         * the backend (initially true, cleared after a successful stream, or if we've\n         * logged the message already).\n         */\n        this.Mr = !0;\n    }\n    /**\n     * Called by RemoteStore when a watch stream is started (including on each\n     * backoff attempt).\n     *\n     * If this is the first attempt, it sets the OnlineState to Unknown and starts\n     * the onlineStateTimer.\n     */    Lr() {\n        0 === this.Or && (this.Br(\"Unknown\" /* Unknown */), this.Fr = this.asyncQueue.enqueueAfterDelay(\"online_state_timeout\" /* OnlineStateTimeout */ , 1e4, (() => (this.Fr = null, \n        this.Ur(\"Backend didn't respond within 10 seconds.\"), this.Br(\"Offline\" /* Offline */), \n        Promise.resolve()))));\n    }\n    /**\n     * Updates our OnlineState as appropriate after the watch stream reports a\n     * failure. The first failure moves us to the 'Unknown' state. We then may\n     * allow multiple failures (based on MAX_WATCH_STREAM_FAILURES) before we\n     * actually transition to the 'Offline' state.\n     */    qr(t) {\n        \"Online\" /* Online */ === this.state ? this.Br(\"Unknown\" /* Unknown */) : (this.Or++, \n        this.Or >= 1 && (this.Kr(), this.Ur(`Connection failed 1 times. Most recent error: ${t.toString()}`), \n        this.Br(\"Offline\" /* Offline */)));\n    }\n    /**\n     * Explicitly sets the OnlineState to the specified state.\n     *\n     * Note that this resets our timers / failure counters, etc. used by our\n     * Offline heuristics, so must not be used in place of\n     * handleWatchStreamStart() and handleWatchStreamFailure().\n     */    set(t) {\n        this.Kr(), this.Or = 0, \"Online\" /* Online */ === t && (\n        // We've connected to watch at least once. Don't warn the developer\n        // about being offline going forward.\n        this.Mr = !1), this.Br(t);\n    }\n    Br(t) {\n        t !== this.state && (this.state = t, this.onlineStateHandler(t));\n    }\n    Ur(t) {\n        const e = `Could not reach Cloud Firestore backend. ${t}\\nThis typically indicates that your device does not have a healthy Internet connection at the moment. The client will operate in offline mode until it is able to successfully connect to the backend.`;\n        this.Mr ? (O(e), this.Mr = !1) : $(\"OnlineStateTracker\", e);\n    }\n    Kr() {\n        null !== this.Fr && (this.Fr.cancel(), this.Fr = null);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class io {\n    constructor(\n    /**\n     * The local store, used to fill the write pipeline with outbound mutations.\n     */\n    t, \n    /** The client-side proxy for interacting with the backend. */\n    e, n, s, i) {\n        this.localStore = t, this.datastore = e, this.asyncQueue = n, this.remoteSyncer = {}, \n        /**\n         * A list of up to MAX_PENDING_WRITES writes that we have fetched from the\n         * LocalStore via fillWritePipeline() and have or will send to the write\n         * stream.\n         *\n         * Whenever writePipeline.length > 0 the RemoteStore will attempt to start or\n         * restart the write stream. When the stream is established the writes in the\n         * pipeline will be sent in order.\n         *\n         * Writes remain in writePipeline until they are acknowledged by the backend\n         * and thus will automatically be re-sent if the stream is interrupted /\n         * restarted before they're acknowledged.\n         *\n         * Write responses from the backend are linked to their originating request\n         * purely based on order, and so we can just shift() writes from the front of\n         * the writePipeline as we receive responses.\n         */\n        this.jr = [], \n        /**\n         * A mapping of watched targets that the client cares about tracking and the\n         * user has explicitly called a 'listen' for this target.\n         *\n         * These targets may or may not have been sent to or acknowledged by the\n         * server. On re-establishing the listen stream, these targets should be sent\n         * to the server. The targets removed with unlistens are removed eagerly\n         * without waiting for confirmation from the listen stream.\n         */\n        this.Qr = new Map, \n        /**\n         * A set of reasons for why the RemoteStore may be offline. If empty, the\n         * RemoteStore may start its network connections.\n         */\n        this.Wr = new Set, \n        /**\n         * Event handlers that get called when the network is disabled or enabled.\n         *\n         * PORTING NOTE: These functions are used on the Web client to create the\n         * underlying streams (to support tree-shakeable streams). On Android and iOS,\n         * the streams are created during construction of RemoteStore.\n         */\n        this.Gr = [], this.zr = i, this.zr.Ti((t => {\n            n.enqueueAndForget((async () => {\n                // Porting Note: Unlike iOS, `restartNetwork()` is called even when the\n                // network becomes unreachable as we don't have any other way to tear\n                // down our streams.\n                wo(this) && ($(\"RemoteStore\", \"Restarting streams for network reachability change.\"), \n                await async function(t) {\n                    const e = q(t);\n                    e.Wr.add(4 /* ConnectivityChange */), await oo(e), e.Hr.set(\"Unknown\" /* Unknown */), \n                    e.Wr.delete(4 /* ConnectivityChange */), await ro(e);\n                }(this));\n            }));\n        })), this.Hr = new so(n, s);\n    }\n}\n\nasync function ro(t) {\n    if (wo(t)) for (const e of t.Gr) await e(/* enabled= */ !0);\n}\n\n/**\n * Temporarily disables the network. The network can be re-enabled using\n * enableNetwork().\n */ async function oo(t) {\n    for (const e of t.Gr) await e(/* enabled= */ !1);\n}\n\n/**\n * Starts new listen for the given target. Uses resume token if provided. It\n * is a no-op if the target of given `TargetData` is already being listened to.\n */\nfunction co(t, e) {\n    const n = q(t);\n    n.Qr.has(e.targetId) || (\n    // Mark this as something the client is currently listening for.\n    n.Qr.set(e.targetId, e), fo(n) ? \n    // The listen will be sent in onWatchStreamOpen\n    lo(n) : Co(n).hr() && uo(n, e));\n}\n\n/**\n * Removes the listen from server. It is a no-op if the given target id is\n * not being listened to.\n */ function ao(t, e) {\n    const n = q(t), s = Co(n);\n    n.Qr.delete(e), s.hr() && ho(n, e), 0 === n.Qr.size && (s.hr() ? s.wr() : wo(n) && \n    // Revert to OnlineState.Unknown if the watch stream is not open and we\n    // have no listeners, since without any listens to send we cannot\n    // confirm if the stream is healthy and upgrade to OnlineState.Online.\n    n.Hr.set(\"Unknown\" /* Unknown */));\n}\n\n/**\n * We need to increment the the expected number of pending responses we're due\n * from watch so we wait for the ack to process any messages from this target.\n */ function uo(t, e) {\n    t.Jr.Y(e.targetId), Co(t).br(e);\n}\n\n/**\n * We need to increment the expected number of pending responses we're due\n * from watch so we wait for the removal on the server before we process any\n * messages from this target.\n */ function ho(t, e) {\n    t.Jr.Y(e), Co(t).Pr(e);\n}\n\nfunction lo(t) {\n    t.Jr = new $n({\n        getRemoteKeysForTarget: e => t.remoteSyncer.getRemoteKeysForTarget(e),\n        Tt: e => t.Qr.get(e) || null\n    }), Co(t).start(), t.Hr.Lr();\n}\n\n/**\n * Returns whether the watch stream should be started because it's necessary\n * and has not yet been started.\n */ function fo(t) {\n    return wo(t) && !Co(t).ur() && t.Qr.size > 0;\n}\n\nfunction wo(t) {\n    return 0 === q(t).Wr.size;\n}\n\nfunction _o(t) {\n    t.Jr = void 0;\n}\n\nasync function mo(t) {\n    t.Qr.forEach(((e, n) => {\n        uo(t, e);\n    }));\n}\n\nasync function go(t, e) {\n    _o(t), \n    // If we still need the watch stream, retry the connection.\n    fo(t) ? (t.Hr.qr(e), lo(t)) : \n    // No need to restart watch stream because there are no active targets.\n    // The online state is set to unknown because there is no active attempt\n    // at establishing a connection\n    t.Hr.set(\"Unknown\" /* Unknown */);\n}\n\nasync function yo(t, e, n) {\n    if (\n    // Mark the client as online since we got a message from the server\n    t.Hr.set(\"Online\" /* Online */), e instanceof xn && 2 /* Removed */ === e.state && e.cause) \n    // There was an error on a target, don't wait for a consistent snapshot\n    // to raise events\n    try {\n        await \n        /** Handles an error on a target */\n        async function(t, e) {\n            const n = e.cause;\n            for (const s of e.targetIds) \n            // A watched target might have been removed already.\n            t.Qr.has(s) && (await t.remoteSyncer.rejectListen(s, n), t.Qr.delete(s), t.Jr.removeTarget(s));\n        }\n        /**\n * Attempts to fill our write pipeline with writes from the LocalStore.\n *\n * Called internally to bootstrap or refill the write pipeline and by\n * SyncEngine whenever there are new mutations to process.\n *\n * Starts the write stream if necessary.\n */ (t, e);\n    } catch (n) {\n        $(\"RemoteStore\", \"Failed to remove targets %s: %s \", e.targetIds.join(\",\"), n), \n        await po(t, n);\n    } else if (e instanceof Cn ? t.Jr.rt(e) : e instanceof Nn ? t.Jr.ft(e) : t.Jr.at(e), \n    !n.isEqual(rt.min())) try {\n        const e = await fr(t.localStore);\n        n.compareTo(e) >= 0 && \n        // We have received a target change with a global snapshot if the snapshot\n        // version is not equal to SnapshotVersion.min().\n        await \n        /**\n * Takes a batch of changes from the Datastore, repackages them as a\n * RemoteEvent, and passes that on to the listener, which is typically the\n * SyncEngine.\n */\n        function(t, e) {\n            const n = t.Jr._t(e);\n            // Update in-memory resume tokens. LocalStore will update the\n            // persistent view of these when applying the completed RemoteEvent.\n                        return n.targetChanges.forEach(((n, s) => {\n                if (n.resumeToken.approximateByteSize() > 0) {\n                    const i = t.Qr.get(s);\n                    // A watched target might have been removed already.\n                                        i && t.Qr.set(s, i.withResumeToken(n.resumeToken, e));\n                }\n            })), \n            // Re-establish listens for the targets that have been invalidated by\n            // existence filter mismatches.\n            n.targetMismatches.forEach((e => {\n                const n = t.Qr.get(e);\n                if (!n) \n                // A watched target might have been removed already.\n                return;\n                // Clear the resume token for the target, since we're in a known mismatch\n                // state.\n                                t.Qr.set(e, n.withResumeToken(_t.EMPTY_BYTE_STRING, n.snapshotVersion)), \n                // Cause a hard reset by unwatching and rewatching immediately, but\n                // deliberately don't send a resume token so that we get a full update.\n                ho(t, e);\n                // Mark the target we send as being on behalf of an existence filter\n                // mismatch, but don't actually retain that in listenTargets. This ensures\n                // that we flag the first re-listen this way without impacting future\n                // listens of this target (that might happen e.g. on reconnect).\n                const s = new ii(n.target, e, 1 /* ExistenceFilterMismatch */ , n.sequenceNumber);\n                uo(t, s);\n            })), t.remoteSyncer.applyRemoteEvent(n);\n        }(t, n);\n    } catch (e) {\n        $(\"RemoteStore\", \"Failed to raise snapshot:\", e), await po(t, e);\n    }\n}\n\n/**\n * Recovery logic for IndexedDB errors that takes the network offline until\n * `op` succeeds. Retries are scheduled with backoff using\n * `enqueueRetryable()`. If `op()` is not provided, IndexedDB access is\n * validated via a generic operation.\n *\n * The returned Promise is resolved once the network is disabled and before\n * any retry attempt.\n */ async function po(t, e, n) {\n    if (!Hs(e)) throw e;\n    t.Wr.add(1 /* IndexedDbFailed */), \n    // Disable network and raise offline snapshots\n    await oo(t), t.Hr.set(\"Offline\" /* Offline */), n || (\n    // Use a simple read operation to determine if IndexedDB recovered.\n    // Ideally, we would expose a health check directly on SimpleDb, but\n    // RemoteStore only has access to persistence through LocalStore.\n    n = () => fr(t.localStore)), \n    // Probe IndexedDB periodically and re-enable network\n    t.asyncQueue.enqueueRetryable((async () => {\n        $(\"RemoteStore\", \"Retrying IndexedDB access\"), await n(), t.Wr.delete(1 /* IndexedDbFailed */), \n        await ro(t);\n    }));\n}\n\n/**\n * Executes `op`. If `op` fails, takes the network offline until `op`\n * succeeds. Returns after the first attempt.\n */ function To(t, e) {\n    return e().catch((n => po(t, n, e)));\n}\n\nasync function Eo(t) {\n    const e = q(t), n = No(e);\n    let s = e.jr.length > 0 ? e.jr[e.jr.length - 1].batchId : -1;\n    for (;Io(e); ) try {\n        const t = await _r(e.localStore, s);\n        if (null === t) {\n            0 === e.jr.length && n.wr();\n            break;\n        }\n        s = t.batchId, Ao(e, t);\n    } catch (t) {\n        await po(e, t);\n    }\n    Ro(e) && bo(e);\n}\n\n/**\n * Returns true if we can add to the write pipeline (i.e. the network is\n * enabled and the write pipeline is not full).\n */ function Io(t) {\n    return wo(t) && t.jr.length < 10;\n}\n\n/**\n * Queues additional writes to be sent to the write stream, sending them\n * immediately if the write stream is established.\n */ function Ao(t, e) {\n    t.jr.push(e);\n    const n = No(t);\n    n.hr() && n.Vr && n.Sr(e.mutations);\n}\n\nfunction Ro(t) {\n    return wo(t) && !No(t).ur() && t.jr.length > 0;\n}\n\nfunction bo(t) {\n    No(t).start();\n}\n\nasync function Po(t) {\n    No(t).Nr();\n}\n\nasync function vo(t) {\n    const e = No(t);\n    // Send the write pipeline now that the stream is established.\n        for (const n of t.jr) e.Sr(n.mutations);\n}\n\nasync function Vo(t, e, n) {\n    const s = t.jr.shift(), i = si.from(s, e, n);\n    await To(t, (() => t.remoteSyncer.applySuccessfulWrite(i))), \n    // It's possible that with the completion of this mutation another\n    // slot has freed up.\n    await Eo(t);\n}\n\nasync function So(t, e) {\n    // If the write stream closed after the write handshake completes, a write\n    // operation failed and we fail the pending operation.\n    e && No(t).Vr && \n    // This error affects the actual write.\n    await async function(t, e) {\n        // Only handle permanent errors here. If it's transient, just let the retry\n        // logic kick in.\n        if (n = e.code, fn(n) && n !== K.ABORTED) {\n            // This was a permanent error, the request itself was the problem\n            // so it's not going to succeed if we resend it.\n            const n = t.jr.shift();\n            // In this case it's also unlikely that the server itself is melting\n            // down -- this was just a bad request so inhibit backoff on the next\n            // restart.\n                        No(t).dr(), await To(t, (() => t.remoteSyncer.rejectFailedWrite(n.batchId, e))), \n            // It's possible that with the completion of this mutation\n            // another slot has freed up.\n            await Eo(t);\n        }\n        var n;\n    }(t, e), \n    // The write stream might have been started by refilling the write\n    // pipeline for failed writes\n    Ro(t) && bo(t);\n}\n\n/**\n * Toggles the network state when the client gains or loses its primary lease.\n */\nasync function Do(t, e) {\n    const n = q(t);\n    e ? (n.Wr.delete(2 /* IsSecondary */), await ro(n)) : e || (n.Wr.add(2 /* IsSecondary */), \n    await oo(n), n.Hr.set(\"Unknown\" /* Unknown */));\n}\n\n/**\n * If not yet initialized, registers the WatchStream and its network state\n * callback with `remoteStoreImpl`. Returns the existing stream if one is\n * already available.\n *\n * PORTING NOTE: On iOS and Android, the WatchStream gets registered on startup.\n * This is not done on Web to allow it to be tree-shaken.\n */ function Co(t) {\n    return t.Yr || (\n    // Create stream (but note that it is not started yet).\n    t.Yr = function(t, e, n) {\n        const s = q(t);\n        return s.$r(), new to(e, s.sr, s.credentials, s.N, n);\n    }\n    /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t.datastore, t.asyncQueue, {\n        Si: mo.bind(null, t),\n        Ci: go.bind(null, t),\n        Rr: yo.bind(null, t)\n    }), t.Gr.push((async e => {\n        e ? (t.Yr.dr(), fo(t) ? lo(t) : t.Hr.set(\"Unknown\" /* Unknown */)) : (await t.Yr.stop(), \n        _o(t));\n    }))), t.Yr;\n}\n\n/**\n * If not yet initialized, registers the WriteStream and its network state\n * callback with `remoteStoreImpl`. Returns the existing stream if one is\n * already available.\n *\n * PORTING NOTE: On iOS and Android, the WriteStream gets registered on startup.\n * This is not done on Web to allow it to be tree-shaken.\n */ function No(t) {\n    return t.Xr || (\n    // Create stream (but note that it is not started yet).\n    t.Xr = function(t, e, n) {\n        const s = q(t);\n        return s.$r(), new eo(e, s.sr, s.credentials, s.N, n);\n    }(t.datastore, t.asyncQueue, {\n        Si: Po.bind(null, t),\n        Ci: So.bind(null, t),\n        Cr: vo.bind(null, t),\n        Dr: Vo.bind(null, t)\n    }), t.Gr.push((async e => {\n        e ? (t.Xr.dr(), \n        // This will start the write stream if necessary.\n        await Eo(t)) : (await t.Xr.stop(), t.jr.length > 0 && ($(\"RemoteStore\", `Stopping write stream with ${t.jr.length} pending writes`), \n        t.jr = []));\n    }))), t.Xr;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */\nclass xo {\n    constructor(t, e, n, s, i) {\n        this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = s, this.removalCallback = i, \n        this.deferred = new Q, this.then = this.deferred.promise.then.bind(this.deferred.promise), \n        // It's normal for the deferred promise to be canceled (due to cancellation)\n        // and so we attach a dummy catch callback to avoid\n        // 'UnhandledPromiseRejectionWarning' log spam.\n        this.deferred.promise.catch((t => {}));\n    }\n    /**\n     * Creates and returns a DelayedOperation that has been scheduled to be\n     * executed on the provided asyncQueue after the provided delayMs.\n     *\n     * @param asyncQueue - The queue to schedule the operation on.\n     * @param id - A Timer ID identifying the type of operation this is.\n     * @param delayMs - The delay (ms) before the operation should be scheduled.\n     * @param op - The operation to run.\n     * @param removalCallback - A callback to be called synchronously once the\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\n     *   from its delayedOperations list.\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n     *   the DelayedOperation class public.\n     */    static createAndSchedule(t, e, n, s, i) {\n        const r = Date.now() + n, o = new xo(t, e, r, s, i);\n        return o.start(n), o;\n    }\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */    start(t) {\n        this.timerHandle = setTimeout((() => this.handleDelayElapsed()), t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */    skipDelay() {\n        return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */    cancel(t) {\n        null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new j(K.CANCELLED, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n    handleDelayElapsed() {\n        this.asyncQueue.enqueueAndForget((() => null !== this.timerHandle ? (this.clearTimeout(), \n        this.op().then((t => this.deferred.resolve(t)))) : Promise.resolve()));\n    }\n    clearTimeout() {\n        null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), \n        this.timerHandle = null);\n    }\n}\n\n/**\n * Returns a FirestoreError that can be surfaced to the user if the provided\n * error is an IndexedDbTransactionError. Re-throws the error otherwise.\n */ function ko(t, e) {\n    if (O(\"AsyncQueue\", `${e}: ${t}`), Hs(t)) return new j(K.UNAVAILABLE, `${e}: ${t}`);\n    throw t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * DocumentSet is an immutable (copy-on-write) collection that holds documents\n * in order specified by the provided comparator. We always add a document key\n * comparator on top of what is provided to guarantee document equality based on\n * the key.\n */ class $o {\n    /** The default ordering is by key if the comparator is omitted */\n    constructor(t) {\n        // We are adding document key comparator to the end as it's the only\n        // guaranteed unique property of a document.\n        this.comparator = t ? (e, n) => t(e, n) || Pt.comparator(e.key, n.key) : (t, e) => Pt.comparator(t.key, e.key), \n        this.keyedMap = In(), this.sortedSet = new wn(this.comparator);\n    }\n    /**\n     * Returns an empty copy of the existing DocumentSet, using the same\n     * comparator.\n     */    static emptySet(t) {\n        return new $o(t.comparator);\n    }\n    has(t) {\n        return null != this.keyedMap.get(t);\n    }\n    get(t) {\n        return this.keyedMap.get(t);\n    }\n    first() {\n        return this.sortedSet.minKey();\n    }\n    last() {\n        return this.sortedSet.maxKey();\n    }\n    isEmpty() {\n        return this.sortedSet.isEmpty();\n    }\n    /**\n     * Returns the index of the provided key in the document set, or -1 if the\n     * document key is not present in the set;\n     */    indexOf(t) {\n        const e = this.keyedMap.get(t);\n        return e ? this.sortedSet.indexOf(e) : -1;\n    }\n    get size() {\n        return this.sortedSet.size;\n    }\n    /** Iterates documents in order defined by \"comparator\" */    forEach(t) {\n        this.sortedSet.inorderTraversal(((e, n) => (t(e), !1)));\n    }\n    /** Inserts or updates a document with the same key */    add(t) {\n        // First remove the element if we have it.\n        const e = this.delete(t.key);\n        return e.copy(e.keyedMap.insert(t.key, t), e.sortedSet.insert(t, null));\n    }\n    /** Deletes a document with a given key */    delete(t) {\n        const e = this.get(t);\n        return e ? this.copy(this.keyedMap.remove(t), this.sortedSet.remove(e)) : this;\n    }\n    isEqual(t) {\n        if (!(t instanceof $o)) return !1;\n        if (this.size !== t.size) return !1;\n        const e = this.sortedSet.getIterator(), n = t.sortedSet.getIterator();\n        for (;e.hasNext(); ) {\n            const t = e.getNext().key, s = n.getNext().key;\n            if (!t.isEqual(s)) return !1;\n        }\n        return !0;\n    }\n    toString() {\n        const t = [];\n        return this.forEach((e => {\n            t.push(e.toString());\n        })), 0 === t.length ? \"DocumentSet ()\" : \"DocumentSet (\\n  \" + t.join(\"  \\n\") + \"\\n)\";\n    }\n    copy(t, e) {\n        const n = new $o;\n        return n.comparator = this.comparator, n.keyedMap = t, n.sortedSet = e, n;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * DocumentChangeSet keeps track of a set of changes to docs in a query, merging\n * duplicate events for the same doc.\n */ class Oo {\n    constructor() {\n        this.Zr = new wn(Pt.comparator);\n    }\n    track(t) {\n        const e = t.doc.key, n = this.Zr.get(e);\n        n ? \n        // Merge the new change with the existing change.\n        0 /* Added */ !== t.type && 3 /* Metadata */ === n.type ? this.Zr = this.Zr.insert(e, t) : 3 /* Metadata */ === t.type && 1 /* Removed */ !== n.type ? this.Zr = this.Zr.insert(e, {\n            type: n.type,\n            doc: t.doc\n        }) : 2 /* Modified */ === t.type && 2 /* Modified */ === n.type ? this.Zr = this.Zr.insert(e, {\n            type: 2 /* Modified */ ,\n            doc: t.doc\n        }) : 2 /* Modified */ === t.type && 0 /* Added */ === n.type ? this.Zr = this.Zr.insert(e, {\n            type: 0 /* Added */ ,\n            doc: t.doc\n        }) : 1 /* Removed */ === t.type && 0 /* Added */ === n.type ? this.Zr = this.Zr.remove(e) : 1 /* Removed */ === t.type && 2 /* Modified */ === n.type ? this.Zr = this.Zr.insert(e, {\n            type: 1 /* Removed */ ,\n            doc: n.doc\n        }) : 0 /* Added */ === t.type && 1 /* Removed */ === n.type ? this.Zr = this.Zr.insert(e, {\n            type: 2 /* Modified */ ,\n            doc: t.doc\n        }) : \n        // This includes these cases, which don't make sense:\n        // Added->Added\n        // Removed->Removed\n        // Modified->Added\n        // Removed->Modified\n        // Metadata->Added\n        // Removed->Metadata\n        L() : this.Zr = this.Zr.insert(e, t);\n    }\n    eo() {\n        const t = [];\n        return this.Zr.inorderTraversal(((e, n) => {\n            t.push(n);\n        })), t;\n    }\n}\n\nclass Fo {\n    constructor(t, e, n, s, i, r, o, c) {\n        this.query = t, this.docs = e, this.oldDocs = n, this.docChanges = s, this.mutatedKeys = i, \n        this.fromCache = r, this.syncStateChanged = o, this.excludesMetadataChanges = c;\n    }\n    /** Returns a view snapshot as if all documents in the snapshot were added. */    static fromInitialDocuments(t, e, n, s) {\n        const i = [];\n        return e.forEach((t => {\n            i.push({\n                type: 0 /* Added */ ,\n                doc: t\n            });\n        })), new Fo(t, e, $o.emptySet(e), i, n, s, \n        /* syncStateChanged= */ !0, \n        /* excludesMetadataChanges= */ !1);\n    }\n    get hasPendingWrites() {\n        return !this.mutatedKeys.isEmpty();\n    }\n    isEqual(t) {\n        if (!(this.fromCache === t.fromCache && this.syncStateChanged === t.syncStateChanged && this.mutatedKeys.isEqual(t.mutatedKeys) && Ae(this.query, t.query) && this.docs.isEqual(t.docs) && this.oldDocs.isEqual(t.oldDocs))) return !1;\n        const e = this.docChanges, n = t.docChanges;\n        if (e.length !== n.length) return !1;\n        for (let t = 0; t < e.length; t++) if (e[t].type !== n[t].type || !e[t].doc.isEqual(n[t].doc)) return !1;\n        return !0;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Holds the listeners and the last received ViewSnapshot for a query being\n * tracked by EventManager.\n */ class Mo {\n    constructor() {\n        this.no = void 0, this.listeners = [];\n    }\n}\n\nclass Lo {\n    constructor() {\n        this.queries = new ji((t => Re(t)), Ae), this.onlineState = \"Unknown\" /* Unknown */ , \n        this.so = new Set;\n    }\n}\n\nasync function Bo(t, e) {\n    const n = q(t), s = e.query;\n    let i = !1, r = n.queries.get(s);\n    if (r || (i = !0, r = new Mo), i) try {\n        r.no = await n.onListen(s);\n    } catch (t) {\n        const n = ko(t, `Initialization of query '${be(e.query)}' failed`);\n        return void e.onError(n);\n    }\n    if (n.queries.set(s, r), r.listeners.push(e), \n    // Run global snapshot listeners if a consistent snapshot has been emitted.\n    e.io(n.onlineState), r.no) {\n        e.ro(r.no) && jo(n);\n    }\n}\n\nasync function Uo(t, e) {\n    const n = q(t), s = e.query;\n    let i = !1;\n    const r = n.queries.get(s);\n    if (r) {\n        const t = r.listeners.indexOf(e);\n        t >= 0 && (r.listeners.splice(t, 1), i = 0 === r.listeners.length);\n    }\n    if (i) return n.queries.delete(s), n.onUnlisten(s);\n}\n\nfunction qo(t, e) {\n    const n = q(t);\n    let s = !1;\n    for (const t of e) {\n        const e = t.query, i = n.queries.get(e);\n        if (i) {\n            for (const e of i.listeners) e.ro(t) && (s = !0);\n            i.no = t;\n        }\n    }\n    s && jo(n);\n}\n\nfunction Ko(t, e, n) {\n    const s = q(t), i = s.queries.get(e);\n    if (i) for (const t of i.listeners) t.onError(n);\n    // Remove all listeners. NOTE: We don't need to call syncEngine.unlisten()\n    // after an error.\n        s.queries.delete(e);\n}\n\n// Call all global snapshot listeners that have been set.\nfunction jo(t) {\n    t.so.forEach((t => {\n        t.next();\n    }));\n}\n\n/**\n * QueryListener takes a series of internal view snapshots and determines\n * when to raise the event.\n *\n * It uses an Observer to dispatch events.\n */ class Qo {\n    constructor(t, e, n) {\n        this.query = t, this.oo = e, \n        /**\n         * Initial snapshots (e.g. from cache) may not be propagated to the wrapped\n         * observer. This flag is set to true once we've actually raised an event.\n         */\n        this.co = !1, this.ao = null, this.onlineState = \"Unknown\" /* Unknown */ , this.options = n || {};\n    }\n    /**\n     * Applies the new ViewSnapshot to this listener, raising a user-facing event\n     * if applicable (depending on what changed, whether the user has opted into\n     * metadata-only changes, etc.). Returns true if a user-facing event was\n     * indeed raised.\n     */    ro(t) {\n        if (!this.options.includeMetadataChanges) {\n            // Remove the metadata only changes.\n            const e = [];\n            for (const n of t.docChanges) 3 /* Metadata */ !== n.type && e.push(n);\n            t = new Fo(t.query, t.docs, t.oldDocs, e, t.mutatedKeys, t.fromCache, t.syncStateChanged, \n            /* excludesMetadataChanges= */ !0);\n        }\n        let e = !1;\n        return this.co ? this.uo(t) && (this.oo.next(t), e = !0) : this.ho(t, this.onlineState) && (this.lo(t), \n        e = !0), this.ao = t, e;\n    }\n    onError(t) {\n        this.oo.error(t);\n    }\n    /** Returns whether a snapshot was raised. */    io(t) {\n        this.onlineState = t;\n        let e = !1;\n        return this.ao && !this.co && this.ho(this.ao, t) && (this.lo(this.ao), e = !0), \n        e;\n    }\n    ho(t, e) {\n        // Always raise the first event when we're synced\n        if (!t.fromCache) return !0;\n        // NOTE: We consider OnlineState.Unknown as online (it should become Offline\n        // or Online if we wait long enough).\n                const n = \"Offline\" /* Offline */ !== e;\n        // Don't raise the event if we're online, aren't synced yet (checked\n        // above) and are waiting for a sync.\n                return (!this.options.fo || !n) && (!t.docs.isEmpty() || \"Offline\" /* Offline */ === e);\n        // Raise data from cache if we have any documents or we are offline\n        }\n    uo(t) {\n        // We don't need to handle includeDocumentMetadataChanges here because\n        // the Metadata only changes have already been stripped out if needed.\n        // At this point the only changes we will see are the ones we should\n        // propagate.\n        if (t.docChanges.length > 0) return !0;\n        const e = this.ao && this.ao.hasPendingWrites !== t.hasPendingWrites;\n        return !(!t.syncStateChanged && !e) && !0 === this.options.includeMetadataChanges;\n        // Generally we should have hit one of the cases above, but it's possible\n        // to get here if there were only metadata docChanges and they got\n        // stripped out.\n        }\n    lo(t) {\n        t = Fo.fromInitialDocuments(t.query, t.docs, t.mutatedKeys, t.fromCache), this.co = !0, \n        this.oo.next(t);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A complete element in the bundle stream, together with the byte length it\n * occupies in the stream.\n */ class Wo {\n    constructor(t, \n    // How many bytes this element takes to store in the bundle.\n    e) {\n        this.payload = t, this.byteLength = e;\n    }\n    wo() {\n        return \"metadata\" in this.payload;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Helper to convert objects from bundles to model objects in the SDK.\n */ class Go {\n    constructor(t) {\n        this.N = t;\n    }\n    zn(t) {\n        return zn(this.N, t);\n    }\n    /**\n     * Converts a BundleDocument to a MutableDocument.\n     */    Hn(t) {\n        return t.metadata.exists ? ts(this.N, t.document, !1) : Kt.newNoDocument(this.zn(t.metadata.name), this.Jn(t.metadata.readTime));\n    }\n    Jn(t) {\n        return jn(t);\n    }\n}\n\n/**\n * A class to process the elements from a bundle, load them into local\n * storage and provide progress update while loading.\n */ class zo {\n    constructor(t, e, n) {\n        this._o = t, this.localStore = e, this.N = n, \n        /** Batched queries to be saved into storage */\n        this.queries = [], \n        /** Batched documents to be saved into storage */\n        this.documents = [], this.progress = Ho(t);\n    }\n    /**\n     * Adds an element from the bundle to the loader.\n     *\n     * Returns a new progress if adding the element leads to a new progress,\n     * otherwise returns null.\n     */    mo(t) {\n        this.progress.bytesLoaded += t.byteLength;\n        let e = this.progress.documentsLoaded;\n        return t.payload.namedQuery ? this.queries.push(t.payload.namedQuery) : t.payload.documentMetadata ? (this.documents.push({\n            metadata: t.payload.documentMetadata\n        }), t.payload.documentMetadata.exists || ++e) : t.payload.document && (this.documents[this.documents.length - 1].document = t.payload.document, \n        ++e), e !== this.progress.documentsLoaded ? (this.progress.documentsLoaded = e, \n        Object.assign({}, this.progress)) : null;\n    }\n    yo(t) {\n        const e = new Map, n = new Go(this.N);\n        for (const s of t) if (s.metadata.queries) {\n            const t = n.zn(s.metadata.name);\n            for (const n of s.metadata.queries) {\n                const s = (e.get(n) || Pn()).add(t);\n                e.set(n, s);\n            }\n        }\n        return e;\n    }\n    /**\n     * Update the progress to 'Success' and return the updated progress.\n     */    async complete() {\n        const t = await Ir(this.localStore, new Go(this.N), this.documents, this._o.id), e = this.yo(this.documents);\n        for (const t of this.queries) await Ar(this.localStore, t, e.get(t.name));\n        return this.progress.taskState = \"Success\", new ir(Object.assign({}, this.progress), t);\n    }\n}\n\n/**\n * Returns a `LoadBundleTaskProgress` representing the initial progress of\n * loading a bundle.\n */ function Ho(t) {\n    return {\n        taskState: \"Running\",\n        documentsLoaded: 0,\n        bytesLoaded: 0,\n        totalDocuments: t.totalDocuments,\n        totalBytes: t.totalBytes\n    };\n}\n\n/**\n * Returns a `LoadBundleTaskProgress` representing the progress that the loading\n * has succeeded.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass Jo {\n    constructor(t) {\n        this.key = t;\n    }\n}\n\nclass Yo {\n    constructor(t) {\n        this.key = t;\n    }\n}\n\n/**\n * View is responsible for computing the final merged truth of what docs are in\n * a query. It gets notified of local and remote changes to docs, and applies\n * the query filters and limits to determine the most correct possible results.\n */ class Xo {\n    constructor(t, \n    /** Documents included in the remote target */\n    e) {\n        this.query = t, this.po = e, this.To = null, \n        /**\n         * A flag whether the view is current with the backend. A view is considered\n         * current after it has seen the current flag from the backend and did not\n         * lose consistency within the watch stream (e.g. because of an existence\n         * filter mismatch).\n         */\n        this.current = !1, \n        /** Documents in the view but not in the remote target */\n        this.Eo = Pn(), \n        /** Document Keys that have local changes */\n        this.mutatedKeys = Pn(), this.Io = ve(t), this.Ao = new $o(this.Io);\n    }\n    /**\n     * The set of remote documents that the server has told us belongs to the target associated with\n     * this view.\n     */    get Ro() {\n        return this.po;\n    }\n    /**\n     * Iterates over a set of doc changes, applies the query limit, and computes\n     * what the new results should be, what the changes were, and whether we may\n     * need to go back to the local cache for more results. Does not make any\n     * changes to the view.\n     * @param docChanges - The doc changes to apply to this view.\n     * @param previousChanges - If this is being called with a refill, then start\n     *        with this set of docs and changes instead of the current view.\n     * @returns a new set of docs, changes, and refill flag.\n     */    bo(t, e) {\n        const n = e ? e.Po : new Oo, s = e ? e.Ao : this.Ao;\n        let i = e ? e.mutatedKeys : this.mutatedKeys, r = s, o = !1;\n        // Track the last doc in a (full) limit. This is necessary, because some\n        // update (a delete, or an update moving a doc past the old limit) might\n        // mean there is some other document in the local cache that either should\n        // come (1) between the old last limit doc and the new last document, in the\n        // case of updates, or (2) after the new last document, in the case of\n        // deletes. So we keep this doc at the old limit to compare the updates to.\n        // Note that this should never get used in a refill (when previousChanges is\n        // set), because there will only be adds -- no deletes or updates.\n        const c = _e(this.query) && s.size === this.query.limit ? s.last() : null, a = me(this.query) && s.size === this.query.limit ? s.first() : null;\n        // Drop documents out to meet limit/limitToLast requirement.\n        if (t.inorderTraversal(((t, e) => {\n            const u = s.get(t), h = Pe(this.query, e) ? e : null, l = !!u && this.mutatedKeys.has(u.key), f = !!h && (h.hasLocalMutations || \n            // We only consider committed mutations for documents that were\n            // mutated during the lifetime of the view.\n            this.mutatedKeys.has(h.key) && h.hasCommittedMutations);\n            let d = !1;\n            // Calculate change\n                        if (u && h) {\n                u.data.isEqual(h.data) ? l !== f && (n.track({\n                    type: 3 /* Metadata */ ,\n                    doc: h\n                }), d = !0) : this.vo(u, h) || (n.track({\n                    type: 2 /* Modified */ ,\n                    doc: h\n                }), d = !0, (c && this.Io(h, c) > 0 || a && this.Io(h, a) < 0) && (\n                // This doc moved from inside the limit to outside the limit.\n                // That means there may be some other doc in the local cache\n                // that should be included instead.\n                o = !0));\n            } else !u && h ? (n.track({\n                type: 0 /* Added */ ,\n                doc: h\n            }), d = !0) : u && !h && (n.track({\n                type: 1 /* Removed */ ,\n                doc: u\n            }), d = !0, (c || a) && (\n            // A doc was removed from a full limit query. We'll need to\n            // requery from the local cache to see if we know about some other\n            // doc that should be in the results.\n            o = !0));\n            d && (h ? (r = r.add(h), i = f ? i.add(t) : i.delete(t)) : (r = r.delete(t), i = i.delete(t)));\n        })), _e(this.query) || me(this.query)) for (;r.size > this.query.limit; ) {\n            const t = _e(this.query) ? r.last() : r.first();\n            r = r.delete(t.key), i = i.delete(t.key), n.track({\n                type: 1 /* Removed */ ,\n                doc: t\n            });\n        }\n        return {\n            Ao: r,\n            Po: n,\n            Ln: o,\n            mutatedKeys: i\n        };\n    }\n    vo(t, e) {\n        // We suppress the initial change event for documents that were modified as\n        // part of a write acknowledgment (e.g. when the value of a server transform\n        // is applied) as Watch will send us the same document again.\n        // By suppressing the event, we only raise two user visible events (one with\n        // `hasPendingWrites` and the final state of the document) instead of three\n        // (one with `hasPendingWrites`, the modified document with\n        // `hasPendingWrites` and the final state of the document).\n        return t.hasLocalMutations && e.hasCommittedMutations && !e.hasLocalMutations;\n    }\n    /**\n     * Updates the view with the given ViewDocumentChanges and optionally updates\n     * limbo docs and sync state from the provided target change.\n     * @param docChanges - The set of changes to make to the view's docs.\n     * @param updateLimboDocuments - Whether to update limbo documents based on\n     *        this change.\n     * @param targetChange - A target change to apply for computing limbo docs and\n     *        sync state.\n     * @returns A new ViewChange with the given docs, changes, and sync state.\n     */\n    // PORTING NOTE: The iOS/Android clients always compute limbo document changes.\n    applyChanges(t, e, n) {\n        const s = this.Ao;\n        this.Ao = t.Ao, this.mutatedKeys = t.mutatedKeys;\n        // Sort changes based on type and query comparator\n        const i = t.Po.eo();\n        i.sort(((t, e) => function(t, e) {\n            const n = t => {\n                switch (t) {\n                  case 0 /* Added */ :\n                    return 1;\n\n                  case 2 /* Modified */ :\n                  case 3 /* Metadata */ :\n                    // A metadata change is converted to a modified change at the public\n                    // api layer.  Since we sort by document key and then change type,\n                    // metadata and modified changes must be sorted equivalently.\n                    return 2;\n\n                  case 1 /* Removed */ :\n                    return 0;\n\n                  default:\n                    return L();\n                }\n            };\n            return n(t) - n(e);\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t.type, e.type) || this.Io(t.doc, e.doc))), this.Vo(n);\n        const r = e ? this.So() : [], o = 0 === this.Eo.size && this.current ? 1 /* Synced */ : 0 /* Local */ , c = o !== this.To;\n        if (this.To = o, 0 !== i.length || c) {\n            return {\n                snapshot: new Fo(this.query, t.Ao, s, i, t.mutatedKeys, 0 /* Local */ === o, c, \n                /* excludesMetadataChanges= */ !1),\n                Do: r\n            };\n        }\n        // no changes\n        return {\n            Do: r\n        };\n    }\n    /**\n     * Applies an OnlineState change to the view, potentially generating a\n     * ViewChange if the view's syncState changes as a result.\n     */    io(t) {\n        return this.current && \"Offline\" /* Offline */ === t ? (\n        // If we're offline, set `current` to false and then call applyChanges()\n        // to refresh our syncState and generate a ViewChange as appropriate. We\n        // are guaranteed to get a new TargetChange that sets `current` back to\n        // true once the client is back online.\n        this.current = !1, this.applyChanges({\n            Ao: this.Ao,\n            Po: new Oo,\n            mutatedKeys: this.mutatedKeys,\n            Ln: !1\n        }, \n        /* updateLimboDocuments= */ !1)) : {\n            Do: []\n        };\n    }\n    /**\n     * Returns whether the doc for the given key should be in limbo.\n     */    Co(t) {\n        // If the remote end says it's part of this query, it's not in limbo.\n        return !this.po.has(t) && (\n        // The local store doesn't think it's a result, so it shouldn't be in limbo.\n        !!this.Ao.has(t) && !this.Ao.get(t).hasLocalMutations);\n    }\n    /**\n     * Updates syncedDocuments, current, and limbo docs based on the given change.\n     * Returns the list of changes to which docs are in limbo.\n     */    Vo(t) {\n        t && (t.addedDocuments.forEach((t => this.po = this.po.add(t))), t.modifiedDocuments.forEach((t => {})), \n        t.removedDocuments.forEach((t => this.po = this.po.delete(t))), this.current = t.current);\n    }\n    So() {\n        // We can only determine limbo documents when we're in-sync with the server.\n        if (!this.current) return [];\n        // TODO(klimt): Do this incrementally so that it's not quadratic when\n        // updating many documents.\n                const t = this.Eo;\n        this.Eo = Pn(), this.Ao.forEach((t => {\n            this.Co(t.key) && (this.Eo = this.Eo.add(t.key));\n        }));\n        // Diff the new limbo docs with the old limbo docs.\n        const e = [];\n        return t.forEach((t => {\n            this.Eo.has(t) || e.push(new Yo(t));\n        })), this.Eo.forEach((n => {\n            t.has(n) || e.push(new Jo(n));\n        })), e;\n    }\n    /**\n     * Update the in-memory state of the current view with the state read from\n     * persistence.\n     *\n     * We update the query view whenever a client's primary status changes:\n     * - When a client transitions from primary to secondary, it can miss\n     *   LocalStorage updates and its query views may temporarily not be\n     *   synchronized with the state on disk.\n     * - For secondary to primary transitions, the client needs to update the list\n     *   of `syncedDocuments` since secondary clients update their query views\n     *   based purely on synthesized RemoteEvents.\n     *\n     * @param queryResult.documents - The documents that match the query according\n     * to the LocalStore.\n     * @param queryResult.remoteKeys - The keys of the documents that match the\n     * query according to the backend.\n     *\n     * @returns The ViewChange that resulted from this synchronization.\n     */\n    // PORTING NOTE: Multi-tab only.\n    No(t) {\n        this.po = t.Gn, this.Eo = Pn();\n        const e = this.bo(t.documents);\n        return this.applyChanges(e, /*updateLimboDocuments=*/ !0);\n    }\n    /**\n     * Returns a view snapshot as if this query was just listened to. Contains\n     * a document add for every existing document and the `fromCache` and\n     * `hasPendingWrites` status of the already established view.\n     */\n    // PORTING NOTE: Multi-tab only.\n    xo() {\n        return Fo.fromInitialDocuments(this.query, this.Ao, this.mutatedKeys, 0 /* Local */ === this.To);\n    }\n}\n\n/**\n * QueryView contains all of the data that SyncEngine needs to keep track of for\n * a particular query.\n */\nclass Zo {\n    constructor(\n    /**\n     * The query itself.\n     */\n    t, \n    /**\n     * The target number created by the client that is used in the watch\n     * stream to identify this query.\n     */\n    e, \n    /**\n     * The view is responsible for computing the final merged truth of what\n     * docs are in the query. It gets notified of local and remote changes,\n     * and applies the query filters and limits to determine the most correct\n     * possible results.\n     */\n    n) {\n        this.query = t, this.targetId = e, this.view = n;\n    }\n}\n\n/** Tracks a limbo resolution. */ class tc {\n    constructor(t) {\n        this.key = t, \n        /**\n         * Set to true once we've received a document. This is used in\n         * getRemoteKeysForTarget() and ultimately used by WatchChangeAggregator to\n         * decide whether it needs to manufacture a delete event for the target once\n         * the target is CURRENT.\n         */\n        this.ko = !1;\n    }\n}\n\n/**\n * An implementation of `SyncEngine` coordinating with other parts of SDK.\n *\n * The parts of SyncEngine that act as a callback to RemoteStore need to be\n * registered individually. This is done in `syncEngineWrite()` and\n * `syncEngineListen()` (as well as `applyPrimaryState()`) as these methods\n * serve as entry points to RemoteStore's functionality.\n *\n * Note: some field defined in this class might have public access level, but\n * the class is not exported so they are only accessible from this module.\n * This is useful to implement optional features (like bundles) in free\n * functions, such that they are tree-shakeable.\n */ class ec {\n    constructor(t, e, n, \n    // PORTING NOTE: Manages state synchronization in multi-tab environments.\n    s, i, r) {\n        this.localStore = t, this.remoteStore = e, this.eventManager = n, this.sharedClientState = s, \n        this.currentUser = i, this.maxConcurrentLimboResolutions = r, this.$o = {}, this.Oo = new ji((t => Re(t)), Ae), \n        this.Fo = new Map, \n        /**\n         * The keys of documents that are in limbo for which we haven't yet started a\n         * limbo resolution query. The strings in this set are the result of calling\n         * `key.path.canonicalString()` where `key` is a `DocumentKey` object.\n         *\n         * The `Set` type was chosen because it provides efficient lookup and removal\n         * of arbitrary elements and it also maintains insertion order, providing the\n         * desired queue-like FIFO semantics.\n         */\n        this.Mo = new Set, \n        /**\n         * Keeps track of the target ID for each document that is in limbo with an\n         * active target.\n         */\n        this.Lo = new wn(Pt.comparator), \n        /**\n         * Keeps track of the information about an active limbo resolution for each\n         * active target ID that was started for the purpose of limbo resolution.\n         */\n        this.Bo = new Map, this.Uo = new br, \n        /** Stores user completion handlers, indexed by User and BatchId. */\n        this.qo = {}, \n        /** Stores user callbacks waiting for all pending writes to be acknowledged. */\n        this.Ko = new Map, this.jo = Ni.ie(), this.onlineState = \"Unknown\" /* Unknown */ , \n        // The primary state is set to `true` or `false` immediately after Firestore\n        // startup. In the interim, a client should only be considered primary if\n        // `isPrimary` is true.\n        this.Qo = void 0;\n    }\n    get isPrimaryClient() {\n        return !0 === this.Qo;\n    }\n}\n\n/**\n * Initiates the new listen, resolves promise when listen enqueued to the\n * server. All the subsequent view snapshots or errors are sent to the\n * subscribed handlers. Returns the initial snapshot.\n */\nasync function nc(t, e) {\n    const n = Cc(t);\n    let s, i;\n    const r = n.Oo.get(e);\n    if (r) \n    // PORTING NOTE: With Multi-Tab Web, it is possible that a query view\n    // already exists when EventManager calls us for the first time. This\n    // happens when the primary tab is already listening to this query on\n    // behalf of another tab and the user of the primary also starts listening\n    // to the query. EventManager will not have an assigned target ID in this\n    // case and calls `listen` to obtain this ID.\n    s = r.targetId, n.sharedClientState.addLocalQueryTarget(s), i = r.view.xo(); else {\n        const t = await mr(n.localStore, Ee(e)), r = n.sharedClientState.addLocalQueryTarget(t.targetId);\n        s = t.targetId, i = await sc(n, e, s, \"current\" === r), n.isPrimaryClient && co(n.remoteStore, t);\n    }\n    return i;\n}\n\n/**\n * Registers a view for a previously unknown query and computes its initial\n * snapshot.\n */ async function sc(t, e, n, s) {\n    // PORTING NOTE: On Web only, we inject the code that registers new Limbo\n    // targets based on view changes. This allows us to only depend on Limbo\n    // changes when user code includes queries.\n    t.Wo = (e, n, s) => async function(t, e, n, s) {\n        let i = e.view.bo(n);\n        i.Ln && (\n        // The query has a limit and some docs were removed, so we need\n        // to re-run the query against the local store to make sure we\n        // didn't lose any good docs that had been past the limit.\n        i = await yr(t.localStore, e.query, \n        /* usePreviousResults= */ !1).then((({documents: t}) => e.view.bo(t, i))));\n        const r = s && s.targetChanges.get(e.targetId), o = e.view.applyChanges(i, \n        /* updateLimboDocuments= */ t.isPrimaryClient, r);\n        return mc(t, e.targetId, o.Do), o.snapshot;\n    }(t, e, n, s);\n    const i = await yr(t.localStore, e, \n    /* usePreviousResults= */ !0), r = new Xo(e, i.Gn), o = r.bo(i.documents), c = Dn.createSynthesizedTargetChangeForCurrentChange(n, s && \"Offline\" /* Offline */ !== t.onlineState), a = r.applyChanges(o, \n    /* updateLimboDocuments= */ t.isPrimaryClient, c);\n    mc(t, n, a.Do);\n    const u = new Zo(e, n, r);\n    return t.Oo.set(e, u), t.Fo.has(n) ? t.Fo.get(n).push(e) : t.Fo.set(n, [ e ]), a.snapshot;\n}\n\n/** Stops listening to the query. */ async function ic(t, e) {\n    const n = q(t), s = n.Oo.get(e), i = n.Fo.get(s.targetId);\n    if (i.length > 1) return n.Fo.set(s.targetId, i.filter((t => !Ae(t, e)))), void n.Oo.delete(e);\n    // No other queries are mapped to the target, clean up the query and the target.\n        if (n.isPrimaryClient) {\n        // We need to remove the local query target first to allow us to verify\n        // whether any other client is still interested in this target.\n        n.sharedClientState.removeLocalQueryTarget(s.targetId);\n        n.sharedClientState.isActiveQueryTarget(s.targetId) || await gr(n.localStore, s.targetId, \n        /*keepPersistedTargetData=*/ !1).then((() => {\n            n.sharedClientState.clearQueryState(s.targetId), ao(n.remoteStore, s.targetId), \n            wc(n, s.targetId);\n        })).catch(Fi);\n    } else wc(n, s.targetId), await gr(n.localStore, s.targetId, \n    /*keepPersistedTargetData=*/ !0);\n}\n\n/**\n * Initiates the write of local mutation batch which involves adding the\n * writes to the mutation queue, notifying the remote store about new\n * mutations and raising events for any changes this write caused.\n *\n * The promise returned by this call is resolved when the above steps\n * have completed, *not* when the write was acked by the backend. The\n * userCallback is resolved once the write was acked/rejected by the\n * backend (or failed locally for any other reason).\n */ async function rc(t, e, n) {\n    const s = Nc(t);\n    try {\n        const t = await function(t, e) {\n            const n = q(t), s = it.now(), i = e.reduce(((t, e) => t.add(e.key)), Pn());\n            let r;\n            return n.persistence.runTransaction(\"Locally write mutations\", \"readwrite\", (t => n.Qn.Pn(t, i).next((i => {\n                r = i;\n                // For non-idempotent mutations (such as `FieldValue.increment()`),\n                // we record the base state in a separate patch mutation. This is\n                // later used to guarantee consistent values and prevents flicker\n                // even if the backend sends us an update that already includes our\n                // transform.\n                const o = [];\n                for (const t of e) {\n                    const e = Xe(t, r.get(t.key));\n                    null != e && \n                    // NOTE: The base state should only be applied if there's some\n                    // existing document to override, so use a Precondition of\n                    // exists=true\n                    o.push(new nn(t.key, e, qt(e.value.mapValue), Ge.exists(!0)));\n                }\n                return n.In.addMutationBatch(t, s, o, e);\n            })))).then((t => (t.applyToLocalDocumentSet(r), {\n                batchId: t.batchId,\n                changes: r\n            })));\n        }(s.localStore, e);\n        s.sharedClientState.addPendingMutation(t.batchId), function(t, e, n) {\n            let s = t.qo[t.currentUser.toKey()];\n            s || (s = new wn(et));\n            s = s.insert(e, n), t.qo[t.currentUser.toKey()] = s;\n        }\n        /**\n * Resolves or rejects the user callback for the given batch and then discards\n * it.\n */ (s, t.batchId, n), await pc(s, t.changes), await Eo(s.remoteStore);\n    } catch (t) {\n        // If we can't persist the mutation, we reject the user callback and\n        // don't send the mutation. The user can then retry the write.\n        const e = ko(t, \"Failed to persist write\");\n        n.reject(e);\n    }\n}\n\n/**\n * Applies one remote event to the sync engine, notifying any views of the\n * changes, and releasing any pending mutation batches that would become\n * visible because of the snapshot version the remote event contains.\n */ async function oc(t, e) {\n    const n = q(t);\n    try {\n        const t = await dr(n.localStore, e);\n        // Update `receivedDocument` as appropriate for any limbo targets.\n                e.targetChanges.forEach(((t, e) => {\n            const s = n.Bo.get(e);\n            s && (\n            // Since this is a limbo resolution lookup, it's for a single document\n            // and it could be added, modified, or removed, but not a combination.\n            B(t.addedDocuments.size + t.modifiedDocuments.size + t.removedDocuments.size <= 1), \n            t.addedDocuments.size > 0 ? s.ko = !0 : t.modifiedDocuments.size > 0 ? B(s.ko) : t.removedDocuments.size > 0 && (B(s.ko), \n            s.ko = !1));\n        })), await pc(n, t, e);\n    } catch (t) {\n        await Fi(t);\n    }\n}\n\n/**\n * Applies an OnlineState change to the sync engine and notifies any views of\n * the change.\n */ function cc(t, e, n) {\n    const s = q(t);\n    // If we are the secondary client, we explicitly ignore the remote store's\n    // online state (the local client may go offline, even though the primary\n    // tab remains online) and only apply the primary tab's online state from\n    // SharedClientState.\n        if (s.isPrimaryClient && 0 /* RemoteStore */ === n || !s.isPrimaryClient && 1 /* SharedClientState */ === n) {\n        const t = [];\n        s.Oo.forEach(((n, s) => {\n            const i = s.view.io(e);\n            i.snapshot && t.push(i.snapshot);\n        })), function(t, e) {\n            const n = q(t);\n            n.onlineState = e;\n            let s = !1;\n            n.queries.forEach(((t, n) => {\n                for (const t of n.listeners) \n                // Run global snapshot listeners if a consistent snapshot has been emitted.\n                t.io(e) && (s = !0);\n            })), s && jo(n);\n        }(s.eventManager, e), t.length && s.$o.Rr(t), s.onlineState = e, s.isPrimaryClient && s.sharedClientState.setOnlineState(e);\n    }\n}\n\n/**\n * Rejects the listen for the given targetID. This can be triggered by the\n * backend for any active target.\n *\n * @param syncEngine - The sync engine implementation.\n * @param targetId - The targetID corresponds to one previously initiated by the\n * user as part of TargetData passed to listen() on RemoteStore.\n * @param err - A description of the condition that has forced the rejection.\n * Nearly always this will be an indication that the user is no longer\n * authorized to see the data matching the target.\n */ async function ac(t, e, n) {\n    const s = q(t);\n    // PORTING NOTE: Multi-tab only.\n        s.sharedClientState.updateQueryState(e, \"rejected\", n);\n    const i = s.Bo.get(e), r = i && i.key;\n    if (r) {\n        // TODO(klimt): We really only should do the following on permission\n        // denied errors, but we don't have the cause code here.\n        // It's a limbo doc. Create a synthetic event saying it was deleted.\n        // This is kind of a hack. Ideally, we would have a method in the local\n        // store to purge a document. However, it would be tricky to keep all of\n        // the local store's invariants with another method.\n        let t = new wn(Pt.comparator);\n        t = t.insert(r, Kt.newNoDocument(r, rt.min()));\n        const n = Pn().add(r), i = new Sn(rt.min(), \n        /* targetChanges= */ new Map, \n        /* targetMismatches= */ new gn(et), t, n);\n        await oc(s, i), \n        // Since this query failed, we won't want to manually unlisten to it.\n        // We only remove it from bookkeeping after we successfully applied the\n        // RemoteEvent. If `applyRemoteEvent()` throws, we want to re-listen to\n        // this query when the RemoteStore restarts the Watch stream, which should\n        // re-trigger the target failure.\n        s.Lo = s.Lo.remove(r), s.Bo.delete(e), yc(s);\n    } else await gr(s.localStore, e, \n    /* keepPersistedTargetData */ !1).then((() => wc(s, e, n))).catch(Fi);\n}\n\nasync function uc(t, e) {\n    const n = q(t), s = e.batch.batchId;\n    try {\n        const t = await lr(n.localStore, e);\n        // The local store may or may not be able to apply the write result and\n        // raise events immediately (depending on whether the watcher is caught\n        // up), so we raise user callbacks first so that they consistently happen\n        // before listen events.\n                dc(n, s, /*error=*/ null), fc(n, s), n.sharedClientState.updateMutationState(s, \"acknowledged\"), \n        await pc(n, t);\n    } catch (t) {\n        await Fi(t);\n    }\n}\n\nasync function hc(t, e, n) {\n    const s = q(t);\n    try {\n        const t = await function(t, e) {\n            const n = q(t);\n            return n.persistence.runTransaction(\"Reject batch\", \"readwrite-primary\", (t => {\n                let s;\n                return n.In.lookupMutationBatch(t, e).next((e => (B(null !== e), s = e.keys(), n.In.removeMutationBatch(t, e)))).next((() => n.In.performConsistencyCheck(t))).next((() => n.Qn.Pn(t, s)));\n            }));\n        }\n        /**\n * Returns the largest (latest) batch id in mutation queue that is pending\n * server response.\n *\n * Returns `BATCHID_UNKNOWN` if the queue is empty.\n */ (s.localStore, e);\n        // The local store may or may not be able to apply the write result and\n        // raise events immediately (depending on whether the watcher is caught up),\n        // so we raise user callbacks first so that they consistently happen before\n        // listen events.\n                dc(s, e, n), fc(s, e), s.sharedClientState.updateMutationState(e, \"rejected\", n), \n        await pc(s, t);\n    } catch (n) {\n        await Fi(n);\n    }\n}\n\n/**\n * Registers a user callback that resolves when all pending mutations at the moment of calling\n * are acknowledged .\n */ async function lc(t, e) {\n    const n = q(t);\n    wo(n.remoteStore) || $(\"SyncEngine\", \"The network is disabled. The task returned by 'awaitPendingWrites()' will not complete until the network is enabled.\");\n    try {\n        const t = await function(t) {\n            const e = q(t);\n            return e.persistence.runTransaction(\"Get highest unacknowledged batch id\", \"readonly\", (t => e.In.getHighestUnacknowledgedBatchId(t)));\n        }(n.localStore);\n        if (-1 === t) \n        // Trigger the callback right away if there is no pending writes at the moment.\n        return void e.resolve();\n        const s = n.Ko.get(t) || [];\n        s.push(e), n.Ko.set(t, s);\n    } catch (t) {\n        const n = ko(t, \"Initialization of waitForPendingWrites() operation failed\");\n        e.reject(n);\n    }\n}\n\n/**\n * Triggers the callbacks that are waiting for this batch id to get acknowledged by server,\n * if there are any.\n */ function fc(t, e) {\n    (t.Ko.get(e) || []).forEach((t => {\n        t.resolve();\n    })), t.Ko.delete(e);\n}\n\n/** Reject all outstanding callbacks waiting for pending writes to complete. */ function dc(t, e, n) {\n    const s = q(t);\n    let i = s.qo[s.currentUser.toKey()];\n    // NOTE: Mutations restored from persistence won't have callbacks, so it's\n    // okay for there to be no callback for this ID.\n        if (i) {\n        const t = i.get(e);\n        t && (n ? t.reject(n) : t.resolve(), i = i.remove(e)), s.qo[s.currentUser.toKey()] = i;\n    }\n}\n\nfunction wc(t, e, n = null) {\n    t.sharedClientState.removeLocalQueryTarget(e);\n    for (const s of t.Fo.get(e)) t.Oo.delete(s), n && t.$o.Go(s, n);\n    if (t.Fo.delete(e), t.isPrimaryClient) {\n        t.Uo.cs(e).forEach((e => {\n            t.Uo.containsKey(e) || \n            // We removed the last reference for this key\n            _c(t, e);\n        }));\n    }\n}\n\nfunction _c(t, e) {\n    t.Mo.delete(e.path.canonicalString());\n    // It's possible that the target already got removed because the query failed. In that case,\n    // the key won't exist in `limboTargetsByKey`. Only do the cleanup if we still have the target.\n    const n = t.Lo.get(e);\n    null !== n && (ao(t.remoteStore, n), t.Lo = t.Lo.remove(e), t.Bo.delete(n), yc(t));\n}\n\nfunction mc(t, e, n) {\n    for (const s of n) if (s instanceof Jo) t.Uo.addReference(s.key, e), gc(t, s); else if (s instanceof Yo) {\n        $(\"SyncEngine\", \"Document no longer in limbo: \" + s.key), t.Uo.removeReference(s.key, e);\n        t.Uo.containsKey(s.key) || \n        // We removed the last reference for this key\n        _c(t, s.key);\n    } else L();\n}\n\nfunction gc(t, e) {\n    const n = e.key, s = n.path.canonicalString();\n    t.Lo.get(n) || t.Mo.has(s) || ($(\"SyncEngine\", \"New document in limbo: \" + n), t.Mo.add(s), \n    yc(t));\n}\n\n/**\n * Starts listens for documents in limbo that are enqueued for resolution,\n * subject to a maximum number of concurrent resolutions.\n *\n * Without bounding the number of concurrent resolutions, the server can fail\n * with \"resource exhausted\" errors which can lead to pathological client\n * behavior as seen in https://github.com/firebase/firebase-js-sdk/issues/2683.\n */ function yc(t) {\n    for (;t.Mo.size > 0 && t.Lo.size < t.maxConcurrentLimboResolutions; ) {\n        const e = t.Mo.values().next().value;\n        t.Mo.delete(e);\n        const n = new Pt(ht.fromString(e)), s = t.jo.next();\n        t.Bo.set(s, new tc(n)), t.Lo = t.Lo.insert(n, s), co(t.remoteStore, new ii(Ee(we(n.path)), s, 2 /* LimboResolution */ , X.T));\n    }\n}\n\nasync function pc(t, e, n) {\n    const s = q(t), i = [], r = [], o = [];\n    s.Oo.isEmpty() || (s.Oo.forEach(((t, c) => {\n        o.push(s.Wo(c, e, n).then((t => {\n            if (t) {\n                s.isPrimaryClient && s.sharedClientState.updateQueryState(c.targetId, t.fromCache ? \"not-current\" : \"current\"), \n                i.push(t);\n                const e = or.kn(c.targetId, t);\n                r.push(e);\n            }\n        })));\n    })), await Promise.all(o), s.$o.Rr(i), await async function(t, e) {\n        const n = q(t);\n        try {\n            await n.persistence.runTransaction(\"notifyLocalViewChanges\", \"readwrite\", (t => js.forEach(e, (e => js.forEach(e.Nn, (s => n.persistence.referenceDelegate.addReference(t, e.targetId, s))).next((() => js.forEach(e.xn, (s => n.persistence.referenceDelegate.removeReference(t, e.targetId, s)))))))));\n        } catch (t) {\n            if (!Hs(t)) throw t;\n            // If `notifyLocalViewChanges` fails, we did not advance the sequence\n            // number for the documents that were included in this transaction.\n            // This might trigger them to be deleted earlier than they otherwise\n            // would have, but it should not invalidate the integrity of the data.\n            $(\"LocalStore\", \"Failed to update sequence numbers: \" + t);\n        }\n        for (const t of e) {\n            const e = t.targetId;\n            if (!t.fromCache) {\n                const t = n.Un.get(e), s = t.snapshotVersion, i = t.withLastLimboFreeSnapshotVersion(s);\n                // Advance the last limbo free snapshot version\n                                n.Un = n.Un.insert(e, i);\n            }\n        }\n    }(s.localStore, r));\n}\n\nasync function Tc(t, e) {\n    const n = q(t);\n    if (!n.currentUser.isEqual(e)) {\n        $(\"SyncEngine\", \"User change. New user:\", e.toKey());\n        const t = await hr(n.localStore, e);\n        n.currentUser = e, \n        // Fails tasks waiting for pending writes requested by previous user.\n        function(t, e) {\n            t.Ko.forEach((t => {\n                t.forEach((t => {\n                    t.reject(new j(K.CANCELLED, e));\n                }));\n            })), t.Ko.clear();\n        }(n, \"'waitForPendingWrites' promise is rejected due to a user change.\"), \n        // TODO(b/114226417): Consider calling this only in the primary tab.\n        n.sharedClientState.handleUserChange(e, t.removedBatchIds, t.addedBatchIds), await pc(n, t.Wn);\n    }\n}\n\nfunction Ec(t, e) {\n    const n = q(t), s = n.Bo.get(e);\n    if (s && s.ko) return Pn().add(s.key);\n    {\n        let t = Pn();\n        const s = n.Fo.get(e);\n        if (!s) return t;\n        for (const e of s) {\n            const s = n.Oo.get(e);\n            t = t.unionWith(s.view.Ro);\n        }\n        return t;\n    }\n}\n\n/**\n * Reconcile the list of synced documents in an existing view with those\n * from persistence.\n */ async function Ic(t, e) {\n    const n = q(t), s = await yr(n.localStore, e.query, \n    /* usePreviousResults= */ !0), i = e.view.No(s);\n    return n.isPrimaryClient && mc(n, e.targetId, i.Do), i;\n}\n\n/**\n * Retrieves newly changed documents from remote document cache and raises\n * snapshots if needed.\n */\n// PORTING NOTE: Multi-Tab only.\nasync function Ac(t) {\n    const e = q(t);\n    return Tr(e.localStore).then((t => pc(e, t)));\n}\n\n/** Applies a mutation state to an existing batch.  */\n// PORTING NOTE: Multi-Tab only.\nasync function Rc(t, e, n, s) {\n    const i = q(t), r = await function(t, e) {\n        const n = q(t), s = q(n.In);\n        return n.persistence.runTransaction(\"Lookup mutation documents\", \"readonly\", (t => s.Xt(t, e).next((e => e ? n.Qn.Pn(t, e) : js.resolve(null)))));\n    }\n    // PORTING NOTE: Multi-Tab only.\n    (i.localStore, e);\n    null !== r ? (\"pending\" === n ? \n    // If we are the primary client, we need to send this write to the\n    // backend. Secondary clients will ignore these writes since their remote\n    // connection is disabled.\n    await Eo(i.remoteStore) : \"acknowledged\" === n || \"rejected\" === n ? (\n    // NOTE: Both these methods are no-ops for batches that originated from\n    // other clients.\n    dc(i, e, s || null), fc(i, e), function(t, e) {\n        q(q(t).In).te(e);\n    }\n    // PORTING NOTE: Multi-Tab only.\n    (i.localStore, e)) : L(), await pc(i, r)) : \n    // A throttled tab may not have seen the mutation before it was completed\n    // and removed from the mutation queue, in which case we won't have cached\n    // the affected documents. In this case we can safely ignore the update\n    // since that means we didn't apply the mutation locally at all (if we\n    // had, we would have cached the affected documents), and so we will just\n    // see any resulting document changes via normal remote document updates\n    // as applicable.\n    $(\"SyncEngine\", \"Cannot apply mutation batch with id: \" + e);\n}\n\n/** Applies a query target change from a different tab. */\n// PORTING NOTE: Multi-Tab only.\nasync function bc(t, e) {\n    const n = q(t);\n    if (Cc(n), Nc(n), !0 === e && !0 !== n.Qo) {\n        // Secondary tabs only maintain Views for their local listeners and the\n        // Views internal state may not be 100% populated (in particular\n        // secondary tabs don't track syncedDocuments, the set of documents the\n        // server considers to be in the target). So when a secondary becomes\n        // primary, we need to need to make sure that all views for all targets\n        // match the state on disk.\n        const t = n.sharedClientState.getAllActiveQueryTargets(), e = await Pc(n, t.toArray());\n        n.Qo = !0, await Do(n.remoteStore, !0);\n        for (const t of e) co(n.remoteStore, t);\n    } else if (!1 === e && !1 !== n.Qo) {\n        const t = [];\n        let e = Promise.resolve();\n        n.Fo.forEach(((s, i) => {\n            n.sharedClientState.isLocalQueryTarget(i) ? t.push(i) : e = e.then((() => (wc(n, i), \n            gr(n.localStore, i, \n            /*keepPersistedTargetData=*/ !0)))), ao(n.remoteStore, i);\n        })), await e, await Pc(n, t), \n        // PORTING NOTE: Multi-Tab only.\n        function(t) {\n            const e = q(t);\n            e.Bo.forEach(((t, n) => {\n                ao(e.remoteStore, n);\n            })), e.Uo.us(), e.Bo = new Map, e.Lo = new wn(Pt.comparator);\n        }\n        /**\n * Reconcile the query views of the provided query targets with the state from\n * persistence. Raises snapshots for any changes that affect the local\n * client and returns the updated state of all target's query data.\n *\n * @param syncEngine - The sync engine implementation\n * @param targets - the list of targets with views that need to be recomputed\n * @param transitionToPrimary - `true` iff the tab transitions from a secondary\n * tab to a primary tab\n */\n        // PORTING NOTE: Multi-Tab only.\n        (n), n.Qo = !1, await Do(n.remoteStore, !1);\n    }\n}\n\nasync function Pc(t, e, n) {\n    const s = q(t), i = [], r = [];\n    for (const t of e) {\n        let e;\n        const n = s.Fo.get(t);\n        if (n && 0 !== n.length) {\n            // For queries that have a local View, we fetch their current state\n            // from LocalStore (as the resume token and the snapshot version\n            // might have changed) and reconcile their views with the persisted\n            // state (the list of syncedDocuments may have gotten out of sync).\n            e = await mr(s.localStore, Ee(n[0]));\n            for (const t of n) {\n                const e = s.Oo.get(t), n = await Ic(s, e);\n                n.snapshot && r.push(n.snapshot);\n            }\n        } else {\n            // For queries that never executed on this client, we need to\n            // allocate the target in LocalStore and initialize a new View.\n            const n = await pr(s.localStore, t);\n            e = await mr(s.localStore, n), await sc(s, vc(n), t, \n            /*current=*/ !1);\n        }\n        i.push(e);\n    }\n    return s.$o.Rr(r), i;\n}\n\n/**\n * Creates a `Query` object from the specified `Target`. There is no way to\n * obtain the original `Query`, so we synthesize a `Query` from the `Target`\n * object.\n *\n * The synthesized result might be different from the original `Query`, but\n * since the synthesized `Query` should return the same results as the\n * original one (only the presentation of results might differ), the potential\n * difference will not cause issues.\n */\n// PORTING NOTE: Multi-Tab only.\nfunction vc(t) {\n    return de(t.path, t.collectionGroup, t.orderBy, t.filters, t.limit, \"F\" /* First */ , t.startAt, t.endAt);\n}\n\n/** Returns the IDs of the clients that are currently active. */\n// PORTING NOTE: Multi-Tab only.\nfunction Vc(t) {\n    const e = q(t);\n    return q(q(e.localStore).persistence).pn();\n}\n\n/** Applies a query target change from a different tab. */\n// PORTING NOTE: Multi-Tab only.\nasync function Sc(t, e, n, s) {\n    const i = q(t);\n    if (i.Qo) \n    // If we receive a target state notification via WebStorage, we are\n    // either already secondary or another tab has taken the primary lease.\n    $(\"SyncEngine\", \"Ignoring unexpected query state notification.\"); else if (i.Fo.has(e)) switch (n) {\n      case \"current\":\n      case \"not-current\":\n        {\n            const t = await Tr(i.localStore), s = Sn.createSynthesizedRemoteEventForCurrentChange(e, \"current\" === n);\n            await pc(i, t, s);\n            break;\n        }\n\n      case \"rejected\":\n        await gr(i.localStore, e, \n        /* keepPersistedTargetData */ !0), wc(i, e, s);\n        break;\n\n      default:\n        L();\n    }\n}\n\n/** Adds or removes Watch targets for queries from different tabs. */ async function Dc(t, e, n) {\n    const s = Cc(t);\n    if (s.Qo) {\n        for (const t of e) {\n            if (s.Fo.has(t)) {\n                // A target might have been added in a previous attempt\n                $(\"SyncEngine\", \"Adding an already active target \" + t);\n                continue;\n            }\n            const e = await pr(s.localStore, t), n = await mr(s.localStore, e);\n            await sc(s, vc(e), n.targetId, \n            /*current=*/ !1), co(s.remoteStore, n);\n        }\n        for (const t of n) \n        // Check that the target is still active since the target might have been\n        // removed if it has been rejected by the backend.\n        s.Fo.has(t) && \n        // Release queries that are still active.\n        await gr(s.localStore, t, \n        /* keepPersistedTargetData */ !1).then((() => {\n            ao(s.remoteStore, t), wc(s, t);\n        })).catch(Fi);\n    }\n}\n\nfunction Cc(t) {\n    const e = q(t);\n    return e.remoteStore.remoteSyncer.applyRemoteEvent = oc.bind(null, e), e.remoteStore.remoteSyncer.getRemoteKeysForTarget = Ec.bind(null, e), \n    e.remoteStore.remoteSyncer.rejectListen = ac.bind(null, e), e.$o.Rr = qo.bind(null, e.eventManager), \n    e.$o.Go = Ko.bind(null, e.eventManager), e;\n}\n\nfunction Nc(t) {\n    const e = q(t);\n    return e.remoteStore.remoteSyncer.applySuccessfulWrite = uc.bind(null, e), e.remoteStore.remoteSyncer.rejectFailedWrite = hc.bind(null, e), \n    e;\n}\n\n/**\n * Loads a Firestore bundle into the SDK. The returned promise resolves when\n * the bundle finished loading.\n *\n * @param syncEngine - SyncEngine to use.\n * @param bundleReader - Bundle to load into the SDK.\n * @param task - LoadBundleTask used to update the loading progress to public API.\n */ function xc(t, e, n) {\n    const s = q(t);\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        (async function(t, e, n) {\n        try {\n            const s = await e.getMetadata();\n            if (await function(t, e) {\n                const n = q(t), s = jn(e.createTime);\n                return n.persistence.runTransaction(\"hasNewerBundle\", \"readonly\", (t => n.Je.getBundleMetadata(t, e.id))).then((t => !!t && t.createTime.compareTo(s) >= 0));\n            }\n            /**\n * Saves the given `BundleMetadata` to local persistence.\n */ (t.localStore, s)) return await e.close(), void n._completeWith(function(t) {\n                return {\n                    taskState: \"Success\",\n                    documentsLoaded: t.totalDocuments,\n                    bytesLoaded: t.totalBytes,\n                    totalDocuments: t.totalDocuments,\n                    totalBytes: t.totalBytes\n                };\n            }(s));\n            n._updateProgress(Ho(s));\n            const i = new zo(s, t.localStore, e.N);\n            let r = await e.zo();\n            for (;r; ) {\n                const t = await i.mo(r);\n                t && n._updateProgress(t), r = await e.zo();\n            }\n            const o = await i.complete();\n            // TODO(b/160876443): This currently raises snapshots with\n            // `fromCache=false` if users already listen to some queries and bundles\n            // has newer version.\n                        await pc(t, o.En, \n            /* remoteEvent */ void 0), \n            // Save metadata, so loading the same bundle will skip.\n            await function(t, e) {\n                const n = q(t);\n                return n.persistence.runTransaction(\"Save bundle\", \"readwrite\", (t => n.Je.saveBundleMetadata(t, e)));\n            }\n            /**\n * Returns a promise of a `NamedQuery` associated with given query name. Promise\n * resolves to undefined if no persisted data can be found.\n */ (t.localStore, s), n._completeWith(o.progress);\n        } catch (t) {\n            F(\"SyncEngine\", `Loading bundle failed with ${t}`), n._failWith(t);\n        }\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Provides all components needed for Firestore with in-memory persistence.\n * Uses EagerGC garbage collection.\n */)(s, e, n).then((() => {\n        s.sharedClientState.notifyBundleLoaded();\n    }));\n}\n\nclass kc {\n    constructor() {\n        this.synchronizeTabs = !1;\n    }\n    async initialize(t) {\n        this.N = Yr(t.databaseInfo.databaseId), this.sharedClientState = this.Ho(t), this.persistence = this.Jo(t), \n        await this.persistence.start(), this.gcScheduler = this.Yo(t), this.localStore = this.Xo(t);\n    }\n    Yo(t) {\n        return null;\n    }\n    Xo(t) {\n        return ur(this.persistence, new cr, t.initialUser, this.N);\n    }\n    Jo(t) {\n        return new Cr(xr.Ns, this.N);\n    }\n    Ho(t) {\n        return new Kr;\n    }\n    async terminate() {\n        this.gcScheduler && this.gcScheduler.stop(), await this.sharedClientState.shutdown(), \n        await this.persistence.shutdown();\n    }\n}\n\n/**\n * Provides all components needed for Firestore with IndexedDB persistence.\n */ class $c extends kc {\n    constructor(t, e, n) {\n        super(), this.Zo = t, this.cacheSizeBytes = e, this.forceOwnership = n, this.synchronizeTabs = !1;\n    }\n    async initialize(t) {\n        await super.initialize(t), await Er(this.localStore), await this.Zo.initialize(this, t), \n        // Enqueue writes from a previous session\n        await Nc(this.Zo.syncEngine), await Eo(this.Zo.remoteStore), \n        // NOTE: This will immediately call the listener, so we make sure to\n        // set it after localStore / remoteStore are started.\n        await this.persistence.nn((() => (this.gcScheduler && !this.gcScheduler.started && this.gcScheduler.start(this.localStore), \n        Promise.resolve())));\n    }\n    Xo(t) {\n        return ur(this.persistence, new cr, t.initialUser, this.N);\n    }\n    Yo(t) {\n        const e = this.persistence.referenceDelegate.garbageCollector;\n        return new Bi(e, t.asyncQueue);\n    }\n    Jo(t) {\n        const e = sr(t.databaseInfo.databaseId, t.databaseInfo.persistenceKey), n = void 0 !== this.cacheSizeBytes ? Ri.withCacheSize(this.cacheSizeBytes) : Ri.DEFAULT;\n        return new tr(this.synchronizeTabs, e, t.clientId, n, t.asyncQueue, Hr(), Jr(), this.N, this.sharedClientState, !!this.forceOwnership);\n    }\n    Ho(t) {\n        return new Kr;\n    }\n}\n\n/**\n * Provides all components needed for Firestore with multi-tab IndexedDB\n * persistence.\n *\n * In the legacy client, this provider is used to provide both multi-tab and\n * non-multi-tab persistence since we cannot tell at build time whether\n * `synchronizeTabs` will be enabled.\n */ class Oc extends $c {\n    constructor(t, e) {\n        super(t, e, /* forceOwnership= */ !1), this.Zo = t, this.cacheSizeBytes = e, this.synchronizeTabs = !0;\n    }\n    async initialize(t) {\n        await super.initialize(t);\n        const e = this.Zo.syncEngine;\n        this.sharedClientState instanceof qr && (this.sharedClientState.syncEngine = {\n            _i: Rc.bind(null, e),\n            mi: Sc.bind(null, e),\n            gi: Dc.bind(null, e),\n            pn: Vc.bind(null, e),\n            wi: Ac.bind(null, e)\n        }, await this.sharedClientState.start()), \n        // NOTE: This will immediately call the listener, so we make sure to\n        // set it after localStore / remoteStore are started.\n        await this.persistence.nn((async t => {\n            await bc(this.Zo.syncEngine, t), this.gcScheduler && (t && !this.gcScheduler.started ? this.gcScheduler.start(this.localStore) : t || this.gcScheduler.stop());\n        }));\n    }\n    Ho(t) {\n        const e = Hr();\n        if (!qr.bt(e)) throw new j(K.UNIMPLEMENTED, \"IndexedDB persistence is only available on platforms that support LocalStorage.\");\n        const n = sr(t.databaseInfo.databaseId, t.databaseInfo.persistenceKey);\n        return new qr(e, t.asyncQueue, n, t.clientId, t.initialUser);\n    }\n}\n\n/**\n * Initializes and wires the components that are needed to interface with the\n * network.\n */ class Fc {\n    async initialize(t, e) {\n        this.localStore || (this.localStore = t.localStore, this.sharedClientState = t.sharedClientState, \n        this.datastore = this.createDatastore(e), this.remoteStore = this.createRemoteStore(e), \n        this.eventManager = this.createEventManager(e), this.syncEngine = this.createSyncEngine(e, \n        /* startAsPrimary=*/ !t.synchronizeTabs), this.sharedClientState.onlineStateHandler = t => cc(this.syncEngine, t, 1 /* SharedClientState */), \n        this.remoteStore.remoteSyncer.handleCredentialChange = Tc.bind(null, this.syncEngine), \n        await Do(this.remoteStore, this.syncEngine.isPrimaryClient));\n    }\n    createEventManager(t) {\n        return new Lo;\n    }\n    createDatastore(t) {\n        const e = Yr(t.databaseInfo.databaseId), n = (s = t.databaseInfo, new zr(s));\n        var s;\n        /** Return the Platform-specific connectivity monitor. */        return function(t, e, n) {\n            return new no(t, e, n);\n        }(t.credentials, n, e);\n    }\n    createRemoteStore(t) {\n        return e = this.localStore, n = this.datastore, s = t.asyncQueue, i = t => cc(this.syncEngine, t, 0 /* RemoteStore */), \n        r = Qr.bt() ? new Qr : new jr, new io(e, n, s, i, r);\n        var e, n, s, i, r;\n        /** Re-enables the network. Idempotent. */    }\n    createSyncEngine(t, e) {\n        return function(t, e, n, \n        // PORTING NOTE: Manages state synchronization in multi-tab environments.\n        s, i, r, o) {\n            const c = new ec(t, e, n, s, i, r);\n            return o && (c.Qo = !0), c;\n        }(this.localStore, this.remoteStore, this.eventManager, this.sharedClientState, t.initialUser, t.maxConcurrentLimboResolutions, e);\n    }\n    terminate() {\n        return async function(t) {\n            const e = q(t);\n            $(\"RemoteStore\", \"RemoteStore shutting down.\"), e.Wr.add(5 /* Shutdown */), await oo(e), \n            e.zr.shutdown(), \n            // Set the OnlineState to Unknown (rather than Offline) to avoid potentially\n            // triggering spurious listener events with cached data, etc.\n            e.Hr.set(\"Unknown\" /* Unknown */);\n        }(this.remoteStore);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * How many bytes to read each time when `ReadableStreamReader.read()` is\n * called. Only applicable for byte streams that we control (e.g. those backed\n * by an UInt8Array).\n */\n/**\n * Builds a `ByteStreamReader` from a UInt8Array.\n * @param source - The data source to use.\n * @param bytesPerRead - How many bytes each `read()` from the returned reader\n *        will read.\n */\nfunction Mc(t, e = 10240) {\n    let n = 0;\n    // The TypeScript definition for ReadableStreamReader changed. We use\n    // `any` here to allow this code to compile with different versions.\n    // See https://github.com/microsoft/TypeScript/issues/42970\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        async read() {\n            if (n < t.byteLength) {\n                const s = {\n                    value: t.slice(n, n + e),\n                    done: !1\n                };\n                return n += e, s;\n            }\n            return {\n                done: !0\n            };\n        },\n        async cancel() {},\n        releaseLock() {},\n        closed: Promise.reject(\"unimplemented\")\n    };\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * On web, a `ReadableStream` is wrapped around by a `ByteStreamReader`.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/*\n * A wrapper implementation of Observer<T> that will dispatch events\n * asynchronously. To allow immediate silencing, a mute call is added which\n * causes events scheduled to no longer be raised.\n */\nclass Lc {\n    constructor(t) {\n        this.observer = t, \n        /**\n         * When set to true, will not raise future events. Necessary to deal with\n         * async detachment of listener.\n         */\n        this.muted = !1;\n    }\n    next(t) {\n        this.observer.next && this.tc(this.observer.next, t);\n    }\n    error(t) {\n        this.observer.error ? this.tc(this.observer.error, t) : console.error(\"Uncaught Error in snapshot listener:\", t);\n    }\n    ec() {\n        this.muted = !0;\n    }\n    tc(t, e) {\n        this.muted || setTimeout((() => {\n            this.muted || t(e);\n        }), 0);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A class representing a bundle.\n *\n * Takes a bundle stream or buffer, and presents abstractions to read bundled\n * elements out of the underlying content.\n */ class Bc {\n    constructor(\n    /** The reader to read from underlying binary bundle data source. */\n    t, e) {\n        this.nc = t, this.N = e, \n        /** Cached bundle metadata. */\n        this.metadata = new Q, \n        /**\n         * Internal buffer to hold bundle content, accumulating incomplete element\n         * content.\n         */\n        this.buffer = new Uint8Array, this.sc = new TextDecoder(\"utf-8\"), \n        // Read the metadata (which is the first element).\n        this.ic().then((t => {\n            t && t.wo() ? this.metadata.resolve(t.payload.metadata) : this.metadata.reject(new Error(`The first element of the bundle is not a metadata, it is\\n             ${JSON.stringify(null == t ? void 0 : t.payload)}`));\n        }), (t => this.metadata.reject(t)));\n    }\n    close() {\n        return this.nc.cancel();\n    }\n    async getMetadata() {\n        return this.metadata.promise;\n    }\n    async zo() {\n        // Makes sure metadata is read before proceeding.\n        return await this.getMetadata(), this.ic();\n    }\n    /**\n     * Reads from the head of internal buffer, and pulling more data from\n     * underlying stream if a complete element cannot be found, until an\n     * element(including the prefixed length and the JSON string) is found.\n     *\n     * Once a complete element is read, it is dropped from internal buffer.\n     *\n     * Returns either the bundled element, or null if we have reached the end of\n     * the stream.\n     */    async ic() {\n        const t = await this.rc();\n        if (null === t) return null;\n        const e = this.sc.decode(t), n = Number(e);\n        isNaN(n) && this.oc(`length string (${e}) is not valid number`);\n        const s = await this.cc(n);\n        return new Wo(JSON.parse(s), t.length + n);\n    }\n    /** First index of '{' from the underlying buffer. */    ac() {\n        return this.buffer.findIndex((t => t === \"{\".charCodeAt(0)));\n    }\n    /**\n     * Reads from the beginning of the internal buffer, until the first '{', and\n     * return the content.\n     *\n     * If reached end of the stream, returns a null.\n     */    async rc() {\n        for (;this.ac() < 0; ) {\n            if (await this.uc()) break;\n        }\n        // Broke out of the loop because underlying stream is closed, and there\n        // happens to be no more data to process.\n                if (0 === this.buffer.length) return null;\n        const t = this.ac();\n        // Broke out of the loop because underlying stream is closed, but still\n        // cannot find an open bracket.\n                t < 0 && this.oc(\"Reached the end of bundle when a length string is expected.\");\n        const e = this.buffer.slice(0, t);\n        // Update the internal buffer to drop the read length.\n                return this.buffer = this.buffer.slice(t), e;\n    }\n    /**\n     * Reads from a specified position from the internal buffer, for a specified\n     * number of bytes, pulling more data from the underlying stream if needed.\n     *\n     * Returns a string decoded from the read bytes.\n     */    async cc(t) {\n        for (;this.buffer.length < t; ) {\n            await this.uc() && this.oc(\"Reached the end of bundle when more is expected.\");\n        }\n        const e = this.sc.decode(this.buffer.slice(0, t));\n        // Update the internal buffer to drop the read json string.\n                return this.buffer = this.buffer.slice(t), e;\n    }\n    oc(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        throw this.nc.cancel(), new Error(`Invalid bundle format: ${t}`);\n    }\n    /**\n     * Pulls more data from underlying stream to internal buffer.\n     * Returns a boolean indicating whether the stream is finished.\n     */    async uc() {\n        const t = await this.nc.read();\n        if (!t.done) {\n            const e = new Uint8Array(this.buffer.length + t.value.length);\n            e.set(this.buffer), e.set(t.value, this.buffer.length), this.buffer = e;\n        }\n        return t.done;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */\nclass Uc {\n    constructor(t) {\n        this.datastore = t, \n        // The version of each document that was read during this transaction.\n        this.readVersions = new Map, this.mutations = [], this.committed = !1, \n        /**\n         * A deferred usage error that occurred previously in this transaction that\n         * will cause the transaction to fail once it actually commits.\n         */\n        this.lastWriteError = null, \n        /**\n         * Set of documents that have been written in the transaction.\n         *\n         * When there's more than one write to the same key in a transaction, any\n         * writes after the first are handled differently.\n         */\n        this.writtenDocs = new Set;\n    }\n    async lookup(t) {\n        if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new j(K.INVALID_ARGUMENT, \"Firestore transactions require all reads to be executed before all writes.\");\n        const e = await async function(t, e) {\n            const n = q(t), s = Yn(n.N) + \"/documents\", i = {\n                documents: e.map((t => Gn(n.N, t)))\n            }, r = await n.Ki(\"BatchGetDocuments\", s, i), o = new Map;\n            r.forEach((t => {\n                const e = es(n.N, t);\n                o.set(e.key.toString(), e);\n            }));\n            const c = [];\n            return e.forEach((t => {\n                const e = o.get(t.toString());\n                B(!!e), c.push(e);\n            })), c;\n        }(this.datastore, t);\n        return e.forEach((t => this.recordVersion(t))), e;\n    }\n    set(t, e) {\n        this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    update(t, e) {\n        try {\n            this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n        } catch (t) {\n            this.lastWriteError = t;\n        }\n        this.writtenDocs.add(t.toString());\n    }\n    delete(t) {\n        this.write(new cn(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    async commit() {\n        if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n        const t = this.readVersions;\n        // For each mutation, note that the doc was written.\n                this.mutations.forEach((e => {\n            t.delete(e.key.toString());\n        })), \n        // For each document that was read but not written to, we want to perform\n        // a `verify` operation.\n        t.forEach(((t, e) => {\n            const n = Pt.fromPath(e);\n            this.mutations.push(new an(n, this.precondition(n)));\n        })), await async function(t, e) {\n            const n = q(t), s = Yn(n.N) + \"/documents\", i = {\n                writes: e.map((t => ss(n.N, t)))\n            };\n            await n.Li(\"Commit\", s, i);\n        }(this.datastore, this.mutations), this.committed = !0;\n    }\n    recordVersion(t) {\n        let e;\n        if (t.isFoundDocument()) e = t.version; else {\n            if (!t.isNoDocument()) throw L();\n            // For deleted docs, we must use baseVersion 0 when we overwrite them.\n            e = rt.min();\n        }\n        const n = this.readVersions.get(t.key.toString());\n        if (n) {\n            if (!e.isEqual(n)) \n            // This transaction will fail no matter what.\n            throw new j(K.ABORTED, \"Document version changed between two reads.\");\n        } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */    precondition(t) {\n        const e = this.readVersions.get(t.toString());\n        return !this.writtenDocs.has(t.toString()) && e ? Ge.updateTime(e) : Ge.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */    preconditionForUpdate(t) {\n        const e = this.readVersions.get(t.toString());\n        // The first time a document is written, we want to take into account the\n        // read time and existence\n                if (!this.writtenDocs.has(t.toString()) && e) {\n            if (e.isEqual(rt.min())) \n            // The document doesn't exist, so fail the transaction.\n            // This has to be validated locally because you can't send a\n            // precondition that a document does not exist without changing the\n            // semantics of the backend write to be an insert. This is the reverse\n            // of what we want, since we want to assert that the document doesn't\n            // exist but then send the update and have it fail. Since we can't\n            // express that to the backend, we have to validate locally.\n            // Note: this can change once we can send separate verify writes in the\n            // transaction.\n            throw new j(K.INVALID_ARGUMENT, \"Can't update a document that doesn't exist.\");\n            // Document exists, base precondition on document update time.\n                        return Ge.updateTime(e);\n        }\n        // Document was not read, so we just use the preconditions for a blind\n        // update.\n        return Ge.exists(!0);\n    }\n    write(t) {\n        this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n    ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nclass qc {\n    constructor(t, e, n, s) {\n        this.asyncQueue = t, this.datastore = e, this.updateFunction = n, this.deferred = s, \n        this.hc = 5, this.ar = new Xr(this.asyncQueue, \"transaction_retry\" /* TransactionRetry */);\n    }\n    /** Runs the transaction and sets the result on deferred. */    run() {\n        this.hc -= 1, this.lc();\n    }\n    lc() {\n        this.ar.Xi((async () => {\n            const t = new Uc(this.datastore), e = this.fc(t);\n            e && e.then((e => {\n                this.asyncQueue.enqueueAndForget((() => t.commit().then((() => {\n                    this.deferred.resolve(e);\n                })).catch((t => {\n                    this.dc(t);\n                }))));\n            })).catch((t => {\n                this.dc(t);\n            }));\n        }));\n    }\n    fc(t) {\n        try {\n            const e = this.updateFunction(t);\n            return !At(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), \n            null);\n        } catch (t) {\n            // Do not retry errors thrown by user provided updateFunction.\n            return this.deferred.reject(t), null;\n        }\n    }\n    dc(t) {\n        this.hc > 0 && this.wc(t) ? (this.hc -= 1, this.asyncQueue.enqueueAndForget((() => (this.lc(), \n        Promise.resolve())))) : this.deferred.reject(t);\n    }\n    wc(t) {\n        if (\"FirebaseError\" === t.name) {\n            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n            // non-matching document versions with ABORTED. These errors should be retried.\n            const e = t.code;\n            return \"aborted\" === e || \"failed-precondition\" === e || !fn(e);\n        }\n        return !1;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * FirestoreClient is a top-level class that constructs and owns all of the\n * pieces of the client SDK architecture. It is responsible for creating the\n * async queue that is shared by all of the other components in the system.\n */\nclass Kc {\n    constructor(t, \n    /**\n     * Asynchronous queue responsible for all of our internal processing. When\n     * we get incoming work from the user (via public API) or the network\n     * (incoming GRPC messages), we should always schedule onto this queue.\n     * This ensures all of our work is properly serialized (e.g. we don't\n     * start processing a new operation while the previous one is waiting for\n     * an async I/O to complete).\n     */\n    e, n) {\n        this.credentials = t, this.asyncQueue = e, this.databaseInfo = n, this.user = D.UNAUTHENTICATED, \n        this.clientId = tt.I(), this.credentialListener = () => Promise.resolve(), this.credentials.start(e, (async t => {\n            $(\"FirestoreClient\", \"Received user=\", t.uid), await this.credentialListener(t), \n            this.user = t;\n        }));\n    }\n    async getConfiguration() {\n        return {\n            asyncQueue: this.asyncQueue,\n            databaseInfo: this.databaseInfo,\n            clientId: this.clientId,\n            credentials: this.credentials,\n            initialUser: this.user,\n            maxConcurrentLimboResolutions: 100\n        };\n    }\n    setCredentialChangeListener(t) {\n        this.credentialListener = t;\n    }\n    /**\n     * Checks that the client has not been terminated. Ensures that other methods on\n     * this class cannot be called after the client is terminated.\n     */    verifyNotTerminated() {\n        if (this.asyncQueue.isShuttingDown) throw new j(K.FAILED_PRECONDITION, \"The client has already been terminated.\");\n    }\n    terminate() {\n        this.asyncQueue.enterRestrictedMode();\n        const t = new Q;\n        return this.asyncQueue.enqueueAndForgetEvenWhileRestricted((async () => {\n            try {\n                this.onlineComponents && await this.onlineComponents.terminate(), this.offlineComponents && await this.offlineComponents.terminate(), \n                // The credentials provider must be terminated after shutting down the\n                // RemoteStore as it will prevent the RemoteStore from retrieving auth\n                // tokens.\n                this.credentials.shutdown(), t.resolve();\n            } catch (e) {\n                const n = ko(e, \"Failed to shutdown persistence\");\n                t.reject(n);\n            }\n        })), t.promise;\n    }\n}\n\nasync function jc(t, e) {\n    t.asyncQueue.verifyOperationInProgress(), $(\"FirestoreClient\", \"Initializing OfflineComponentProvider\");\n    const n = await t.getConfiguration();\n    await e.initialize(n);\n    let s = n.initialUser;\n    t.setCredentialChangeListener((async t => {\n        s.isEqual(t) || (await hr(e.localStore, t), s = t);\n    })), \n    // When a user calls clearPersistence() in one client, all other clients\n    // need to be terminated to allow the delete to succeed.\n    e.persistence.setDatabaseDeletedListener((() => t.terminate())), t.offlineComponents = e;\n}\n\nasync function Qc(t, e) {\n    t.asyncQueue.verifyOperationInProgress();\n    const n = await Wc(t);\n    $(\"FirestoreClient\", \"Initializing OnlineComponentProvider\");\n    const s = await t.getConfiguration();\n    await e.initialize(n, s), \n    // The CredentialChangeListener of the online component provider takes\n    // precedence over the offline component provider.\n    t.setCredentialChangeListener((t => async function(t, e) {\n        const n = q(t);\n        n.asyncQueue.verifyOperationInProgress(), $(\"RemoteStore\", \"RemoteStore received new credentials\");\n        const s = wo(n);\n        // Tear down and re-create our network streams. This will ensure we get a\n        // fresh auth token for the new user and re-fill the write pipeline with\n        // new mutations from the LocalStore (since mutations are per-user).\n                n.Wr.add(3 /* CredentialChange */), await oo(n), s && \n        // Don't set the network status to Unknown if we are offline.\n        n.Hr.set(\"Unknown\" /* Unknown */), await n.remoteSyncer.handleCredentialChange(e), \n        n.Wr.delete(3 /* CredentialChange */), await ro(n);\n    }(e.remoteStore, t))), t.onlineComponents = e;\n}\n\nasync function Wc(t) {\n    return t.offlineComponents || ($(\"FirestoreClient\", \"Using default OfflineComponentProvider\"), \n    await jc(t, new kc)), t.offlineComponents;\n}\n\nasync function Gc(t) {\n    return t.onlineComponents || ($(\"FirestoreClient\", \"Using default OnlineComponentProvider\"), \n    await Qc(t, new Fc)), t.onlineComponents;\n}\n\nfunction zc(t) {\n    return Wc(t).then((t => t.persistence));\n}\n\nfunction Hc(t) {\n    return Wc(t).then((t => t.localStore));\n}\n\nfunction Jc(t) {\n    return Gc(t).then((t => t.remoteStore));\n}\n\nfunction Yc(t) {\n    return Gc(t).then((t => t.syncEngine));\n}\n\nasync function Xc(t) {\n    const e = await Gc(t), n = e.eventManager;\n    return n.onListen = nc.bind(null, e.syncEngine), n.onUnlisten = ic.bind(null, e.syncEngine), \n    n;\n}\n\n/** Enables the network connection and re-enqueues all pending operations. */ function Zc(t) {\n    return t.asyncQueue.enqueue((async () => {\n        const e = await zc(t), n = await Jc(t);\n        return e.setNetworkEnabled(!0), function(t) {\n            const e = q(t);\n            return e.Wr.delete(0 /* UserDisabled */), ro(e);\n        }(n);\n    }));\n}\n\n/** Disables the network connection. Pending operations will not complete. */ function ta(t) {\n    return t.asyncQueue.enqueue((async () => {\n        const e = await zc(t), n = await Jc(t);\n        return e.setNetworkEnabled(!1), async function(t) {\n            const e = q(t);\n            e.Wr.add(0 /* UserDisabled */), await oo(e), \n            // Set the OnlineState to Offline so get()s return from cache, etc.\n            e.Hr.set(\"Offline\" /* Offline */);\n        }(n);\n    }));\n}\n\n/**\n * Returns a Promise that resolves when all writes that were pending at the time\n * this method was called received server acknowledgement. An acknowledgement\n * can be either acceptance or rejection.\n */ function ea(t, e) {\n    const n = new Q;\n    return t.asyncQueue.enqueueAndForget((async () => async function(t, e, n) {\n        try {\n            const s = await function(t, e) {\n                const n = q(t);\n                return n.persistence.runTransaction(\"read document\", \"readonly\", (t => n.Qn.An(t, e)));\n            }(t, e);\n            s.isFoundDocument() ? n.resolve(s) : s.isNoDocument() ? n.resolve(null) : n.reject(new j(K.UNAVAILABLE, \"Failed to get document from cache. (However, this document may exist on the server. Run again without setting 'source' in the GetOptions to attempt to retrieve the document from the server.)\"));\n        } catch (t) {\n            const s = ko(t, `Failed to get document '${e} from cache`);\n            n.reject(s);\n        }\n    }\n    /**\n * Retrieves a latency-compensated document from the backend via a\n * SnapshotListener.\n */ (await Hc(t), e, n))), n.promise;\n}\n\nfunction na(t, e, n = {}) {\n    const s = new Q;\n    return t.asyncQueue.enqueueAndForget((async () => function(t, e, n, s, i) {\n        const r = new Lc({\n            next: r => {\n                // Remove query first before passing event to user to avoid\n                // user actions affecting the now stale query.\n                e.enqueueAndForget((() => Uo(t, o)));\n                const c = r.docs.has(n);\n                !c && r.fromCache ? \n                // TODO(dimond): If we're online and the document doesn't\n                // exist then we resolve with a doc.exists set to false. If\n                // we're offline however, we reject the Promise in this\n                // case. Two options: 1) Cache the negative response from\n                // the server so we can deliver that even when you're\n                // offline 2) Actually reject the Promise in the online case\n                // if the document doesn't exist.\n                i.reject(new j(K.UNAVAILABLE, \"Failed to get document because the client is offline.\")) : c && r.fromCache && s && \"server\" === s.source ? i.reject(new j(K.UNAVAILABLE, 'Failed to get document from server. (However, this document does exist in the local cache. Run again without setting source to \"server\" to retrieve the cached document.)')) : i.resolve(r);\n            },\n            error: t => i.reject(t)\n        }), o = new Qo(we(n.path), r, {\n            includeMetadataChanges: !0,\n            fo: !0\n        });\n        return Bo(t, o);\n    }(await Xc(t), t.asyncQueue, e, n, s))), s.promise;\n}\n\nfunction sa(t, e) {\n    const n = new Q;\n    return t.asyncQueue.enqueueAndForget((async () => async function(t, e, n) {\n        try {\n            const s = await yr(t, e, \n            /* usePreviousResults= */ !0), i = new Xo(e, s.Gn), r = i.bo(s.documents), o = i.applyChanges(r, \n            /* updateLimboDocuments= */ !1);\n            n.resolve(o.snapshot);\n        } catch (t) {\n            const s = ko(t, `Failed to execute query '${e} against cache`);\n            n.reject(s);\n        }\n    }\n    /**\n * Retrieves a latency-compensated query snapshot from the backend via a\n * SnapshotListener.\n */ (await Hc(t), e, n))), n.promise;\n}\n\nfunction ia(t, e, n = {}) {\n    const s = new Q;\n    return t.asyncQueue.enqueueAndForget((async () => function(t, e, n, s, i) {\n        const r = new Lc({\n            next: n => {\n                // Remove query first before passing event to user to avoid\n                // user actions affecting the now stale query.\n                e.enqueueAndForget((() => Uo(t, o))), n.fromCache && \"server\" === s.source ? i.reject(new j(K.UNAVAILABLE, 'Failed to get documents from server. (However, these documents may exist in the local cache. Run again without setting source to \"server\" to retrieve the cached documents.)')) : i.resolve(n);\n            },\n            error: t => i.reject(t)\n        }), o = new Qo(n, r, {\n            includeMetadataChanges: !0,\n            fo: !0\n        });\n        return Bo(t, o);\n    }(await Xc(t), t.asyncQueue, e, n, s))), s.promise;\n}\n\nfunction ra(t, e) {\n    const n = new Lc(e);\n    return t.asyncQueue.enqueueAndForget((async () => function(t, e) {\n        q(t).so.add(e), \n        // Immediately fire an initial event, indicating all existing listeners\n        // are in-sync.\n        e.next();\n    }(await Xc(t), n))), () => {\n        n.ec(), t.asyncQueue.enqueueAndForget((async () => function(t, e) {\n            q(t).so.delete(e);\n        }(await Xc(t), n)));\n    };\n}\n\n/**\n * Takes an updateFunction in which a set of reads and writes can be performed\n * atomically. In the updateFunction, the client can read and write values\n * using the supplied transaction object. After the updateFunction, all\n * changes will be committed. If a retryable error occurs (ex: some other\n * client has changed any of the data referenced), then the updateFunction\n * will be called again after a backoff. If the updateFunction still fails\n * after all retries, then the transaction will be rejected.\n *\n * The transaction object passed to the updateFunction contains methods for\n * accessing documents and collections. Unlike other datastore access, data\n * accessed with the transaction will not reflect local changes that have not\n * been committed. For this reason, it is required that all reads are\n * performed before any writes. Transactions must be performed while online.\n */ function oa(t, e) {\n    const n = new Q;\n    return t.asyncQueue.enqueueAndForget((async () => {\n        const s = await function(t) {\n            return Gc(t).then((t => t.datastore));\n        }(t);\n        new qc(t.asyncQueue, s, e, n).run();\n    })), n.promise;\n}\n\nfunction ca(t, e, n, s) {\n    const i = function(t, e) {\n        let n;\n        n = \"string\" == typeof t ? (new TextEncoder).encode(t) : t;\n        return function(t, e) {\n            return new Bc(t, e);\n        }(function(t, e) {\n            if (t instanceof Uint8Array) return Mc(t, e);\n            if (t instanceof ArrayBuffer) return Mc(new Uint8Array(t), e);\n            if (t instanceof ReadableStream) return t.getReader();\n            throw new Error(\"Source of `toByteStreamReader` has to be a ArrayBuffer or ReadableStream\");\n        }(n), e);\n    }\n    /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (n, Yr(e));\n    t.asyncQueue.enqueueAndForget((async () => {\n        xc(await Yc(t), i, s);\n    }));\n}\n\nfunction aa(t, e) {\n    return t.asyncQueue.enqueue((async () => function(t, e) {\n        const n = q(t);\n        return n.persistence.runTransaction(\"Get named query\", \"readonly\", (t => n.Je.getNamedQuery(t, e)));\n    }(await Hc(t), e)));\n}\n\nclass ua {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId - The database to use.\n     * @param appId - The Firebase App Id.\n     * @param persistenceKey - A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host - The Firestore backend host to connect to.\n     * @param ssl - Whether to use SSL when connecting.\n     * @param forceLongPolling - Whether to use the forceLongPolling option\n     * when using WebChannel as the network transport.\n     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n     * option when using WebChannel as the network transport.\n     * @param useFetchStreams Whether to use the Fetch API instead of\n     * XMLHTTPRequest\n     */\n    constructor(t, e, n, s, i, r, o, c) {\n        this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = s, this.ssl = i, \n        this.forceLongPolling = r, this.autoDetectLongPolling = o, this.useFetchStreams = c;\n    }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass ha {\n    constructor(t, e) {\n        this.projectId = t, this.database = e || \"(default)\";\n    }\n    get isDefaultDatabase() {\n        return \"(default)\" === this.database;\n    }\n    isEqual(t) {\n        return t instanceof ha && t.projectId === this.projectId && t.database === this.database;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const la = new Map;\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction fa(t, e, n) {\n    if (!n) throw new j(K.INVALID_ARGUMENT, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */ function da(t, e, n, s) {\n    if (!0 === e && !0 === s) throw new j(K.INVALID_ARGUMENT, `${t} and ${n} cannot be used together.`);\n}\n\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */ function wa(t) {\n    if (!Pt.isDocumentKey(t)) throw new j(K.INVALID_ARGUMENT, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */ function _a(t) {\n    if (Pt.isDocumentKey(t)) throw new j(K.INVALID_ARGUMENT, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction ma(t) {\n    if (void 0 === t) return \"undefined\";\n    if (null === t) return \"null\";\n    if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), \n    JSON.stringify(t);\n    if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n    if (\"object\" == typeof t) {\n        if (t instanceof Array) return \"an array\";\n        {\n            const e = \n            /** try to get the constructor name for an object. */\n            function(t) {\n                if (t.constructor) return t.constructor.name;\n                return null;\n            }\n            /**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */ (t);\n            return e ? `a custom ${e} object` : \"an object\";\n        }\n    }\n    return \"function\" == typeof t ? \"a function\" : L();\n}\n\nfunction ga(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    if (\"_delegate\" in t && (\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t = t._delegate), !(t instanceof e)) {\n        if (e.name === t.constructor.name) throw new j(K.INVALID_ARGUMENT, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n        {\n            const n = ma(t);\n            throw new j(K.INVALID_ARGUMENT, `Expected type '${e.name}', but it was: ${n}`);\n        }\n    }\n    return t;\n}\n\nfunction ya(t, e) {\n    if (e <= 0) throw new j(K.INVALID_ARGUMENT, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// settings() defaults:\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass pa {\n    constructor(t) {\n        var e;\n        if (void 0 === t.host) {\n            if (void 0 !== t.ssl) throw new j(K.INVALID_ARGUMENT, \"Can't provide ssl option if host option is not set\");\n            this.host = \"firestore.googleapis.com\", this.ssl = true;\n        } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n        if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, \n        void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040; else {\n            if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new j(K.INVALID_ARGUMENT, \"cacheSizeBytes must be at least 1048576\");\n            this.cacheSizeBytes = t.cacheSizeBytes;\n        }\n        this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, \n        this.useFetchStreams = !!t.useFetchStreams, da(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n    }\n    isEqual(t) {\n        return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link getFirestore}.\n */ class Ta {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._credentials = e, \n        /**\n         * Whether it's a Firestore or Firestore Lite instance.\n         */\n        this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new pa({}), \n        this._settingsFrozen = !1, t instanceof ha ? this._databaseId = t : (this._app = t, \n        this._databaseId = function(t) {\n            if (!Object.prototype.hasOwnProperty.apply(t.options, [ \"projectId\" ])) throw new j(K.INVALID_ARGUMENT, '\"projectId\" not provided in firebase.initializeApp.');\n            return new ha(t.options.projectId);\n        }\n        /**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */ (t));\n    }\n    /**\n     * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n     * instance.\n     */    get app() {\n        if (!this._app) throw new j(K.FAILED_PRECONDITION, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n        return this._app;\n    }\n    get _initialized() {\n        return this._settingsFrozen;\n    }\n    get _terminated() {\n        return void 0 !== this._terminateTask;\n    }\n    _setSettings(t) {\n        if (this._settingsFrozen) throw new j(K.FAILED_PRECONDITION, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n        this._settings = new pa(t), void 0 !== t.credentials && (this._credentials = function(t) {\n            if (!t) return new G;\n            switch (t.type) {\n              case \"gapi\":\n                const e = t.client;\n                // Make sure this really is a Gapi client.\n                                return B(!(\"object\" != typeof e || null === e || !e.auth || !e.auth.getAuthHeaderValueForFirstParty)), \n                new Y(e, t.sessionIndex || \"0\", t.iamToken || null);\n\n              case \"provider\":\n                return t.client;\n\n              default:\n                throw new j(K.INVALID_ARGUMENT, \"makeCredentialsProvider failed due to invalid credential type\");\n            }\n        }(t.credentials));\n    }\n    _getSettings() {\n        return this._settings;\n    }\n    _freezeSettings() {\n        return this._settingsFrozen = !0, this._settings;\n    }\n    _delete() {\n        return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */    toJSON() {\n        return {\n            app: this._app,\n            databaseId: this._databaseId,\n            settings: this._settings\n        };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */    _terminate() {\n        /**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n        return function(t) {\n            const e = la.get(t);\n            e && ($(\"ComponentProvider\", \"Removing Datastore\"), la.delete(t), e.terminate());\n        }(this), Promise.resolve();\n    }\n}\n\nfunction Ea(t, e, n, s = {}) {\n    var i;\n    const r = (t = ga(t, Ta))._getSettings();\n    if (\"firestore.googleapis.com\" !== r.host && r.host !== e && F(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), \n    t._setSettings(Object.assign(Object.assign({}, r), {\n        host: `${e}:${n}`,\n        ssl: !1\n    })), s.mockUserToken) {\n        let e, n;\n        if (\"string\" == typeof s.mockUserToken) e = s.mockUserToken, n = D.MOCK_USER; else {\n            // Let createMockUserToken validate first (catches common mistakes like\n            // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n            e = createMockUserToken(s.mockUserToken, null === (i = t._app) || void 0 === i ? void 0 : i.options.projectId);\n            const r = s.mockUserToken.sub || s.mockUserToken.user_id;\n            if (!r) throw new j(K.INVALID_ARGUMENT, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n            n = new D(r);\n        }\n        t._credentials = new z(new W(e, n));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */ class Ia {\n    /** @hideconstructor */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._key = n, \n        /** The type of this Firestore reference. */\n        this.type = \"document\", this.firestore = t;\n    }\n    get _path() {\n        return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */    get path() {\n        return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */    get parent() {\n        return new Ra(this.firestore, this.converter, this._key.path.popLast());\n    }\n    withConverter(t) {\n        return new Ia(this.firestore, t, this._key);\n    }\n}\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */ class Aa {\n    // This is the lite version of the Query class in the main SDK.\n    /** @hideconstructor protected */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._query = n, \n        /** The type of this Firestore reference. */\n        this.type = \"query\", this.firestore = t;\n    }\n    withConverter(t) {\n        return new Aa(this.firestore, t, this._query);\n    }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */ class Ra extends Aa {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        super(t, e, we(n)), this._path = n, \n        /** The type of this Firestore reference. */\n        this.type = \"collection\";\n    }\n    /** The collection's identifier. */    get id() {\n        return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */    get path() {\n        return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */    get parent() {\n        const t = this._path.popLast();\n        return t.isEmpty() ? null : new Ia(this.firestore, \n        /* converter= */ null, new Pt(t));\n    }\n    withConverter(t) {\n        return new Ra(this.firestore, t, this._path);\n    }\n}\n\nfunction ba(t, e, ...n) {\n    if (t = getModularInstance(t), fa(\"collection\", \"path\", e), t instanceof Ta) {\n        const s = ht.fromString(e, ...n);\n        return _a(s), new Ra(t, /* converter= */ null, s);\n    }\n    {\n        if (!(t instanceof Ia || t instanceof Ra)) throw new j(K.INVALID_ARGUMENT, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const s = t._path.child(ht.fromString(e, ...n));\n        return _a(s), new Ra(t.firestore, \n        /* converter= */ null, s);\n    }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */ function Pa(t, e) {\n    if (t = ga(t, Ta), fa(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new j(K.INVALID_ARGUMENT, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n    return new Aa(t, \n    /* converter= */ null, \n    /**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n    function(t) {\n        return new fe(ht.emptyPath(), t);\n    }(e));\n}\n\nfunction va(t, e, ...n) {\n    if (t = getModularInstance(t), \n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    1 === arguments.length && (e = tt.I()), fa(\"doc\", \"path\", e), t instanceof Ta) {\n        const s = ht.fromString(e, ...n);\n        return wa(s), new Ia(t, \n        /* converter= */ null, new Pt(s));\n    }\n    {\n        if (!(t instanceof Ia || t instanceof Ra)) throw new j(K.INVALID_ARGUMENT, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const s = t._path.child(ht.fromString(e, ...n));\n        return wa(s), new Ia(t.firestore, t instanceof Ra ? t.converter : null, new Pt(s));\n    }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function Va(t, e) {\n    return t = getModularInstance(t), e = getModularInstance(e), (t instanceof Ia || t instanceof Ra) && (e instanceof Ia || e instanceof Ra) && (t.firestore === e.firestore && t.path === e.path && t.converter === e.converter);\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function Sa(t, e) {\n    return t = getModularInstance(t), e = getModularInstance(e), t instanceof Aa && e instanceof Aa && (t.firestore === e.firestore && Ae(t._query, e._query) && t.converter === e.converter);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Da {\n    constructor() {\n        // The last promise in the queue.\n        this._c = Promise.resolve(), \n        // A list of retryable operations. Retryable operations are run in order and\n        // retried with backoff.\n        this.mc = [], \n        // Is this AsyncQueue being shut down? Once it is set to true, it will not\n        // be changed again.\n        this.gc = !1, \n        // Operations scheduled to be queued in the future. Operations are\n        // automatically removed after they are run or canceled.\n        this.yc = [], \n        // visible for testing\n        this.Tc = null, \n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.Ec = !1, \n        // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n        this.Ic = !1, \n        // List of TimerIds to fast-forward delays for.\n        this.Ac = [], \n        // Backoff timer used to schedule retries for retryable operations\n        this.ar = new Xr(this, \"async_queue_retry\" /* AsyncQueueRetry */), \n        // Visibility handler that triggers an immediate retry of all retryable\n        // operations. Meant to speed up recovery when we regain file system access\n        // after page comes into foreground.\n        this.Rc = () => {\n            const t = Jr();\n            t && $(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.ar.tr();\n        };\n        const t = Jr();\n        t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Rc);\n    }\n    get isShuttingDown() {\n        return this.gc;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */    enqueueAndForget(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueue(t);\n    }\n    enqueueAndForgetEvenWhileRestricted(t) {\n        this.bc(), \n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.Pc(t);\n    }\n    enterRestrictedMode(t) {\n        if (!this.gc) {\n            this.gc = !0, this.Ic = t || !1;\n            const e = Jr();\n            e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Rc);\n        }\n    }\n    enqueue(t) {\n        if (this.bc(), this.gc) \n        // Return a Promise which never resolves.\n        return new Promise((() => {}));\n        // Create a deferred Promise that we can return to the callee. This\n        // allows us to return a \"hanging Promise\" only to the callee and still\n        // advance the queue even when the operation is not run.\n                const e = new Q;\n        return this.Pc((() => this.gc && this.Ic ? Promise.resolve() : (t().then(e.resolve, e.reject), \n        e.promise))).then((() => e.promise));\n    }\n    enqueueRetryable(t) {\n        this.enqueueAndForget((() => (this.mc.push(t), this.vc())));\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */    async vc() {\n        if (0 !== this.mc.length) {\n            try {\n                await this.mc[0](), this.mc.shift(), this.ar.reset();\n            } catch (t) {\n                if (!Hs(t)) throw t;\n // Failure will be handled by AsyncQueue\n                                $(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n            }\n            this.mc.length > 0 && \n            // If there are additional operations, we re-schedule `retryNextOp()`.\n            // This is necessary to run retryable operations that failed during\n            // their initial attempt since we don't know whether they are already\n            // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n            // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n            // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n            // call scheduled here.\n            // Since `backoffAndRun()` cancels an existing backoff and schedules a\n            // new backoff on every call, there is only ever a single additional\n            // operation in the queue.\n            this.ar.Xi((() => this.vc()));\n        }\n    }\n    Pc(t) {\n        const e = this._c.then((() => (this.Ec = !0, t().catch((t => {\n            this.Tc = t, this.Ec = !1;\n            const e = \n            /**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\n            function(t) {\n                let e = t.message || \"\";\n                t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n                return e;\n            }\n            /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t);\n            // Re-throw the error so that this.tail becomes a rejected Promise and\n            // all further attempts to chain (via .then) will just short-circuit\n            // and return the rejected Promise.\n            throw O(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        })).then((t => (this.Ec = !1, t))))));\n        return this._c = e, e;\n    }\n    enqueueAfterDelay(t, e, n) {\n        this.bc(), \n        // Fast-forward delays for timerIds that have been overriden.\n        this.Ac.indexOf(t) > -1 && (e = 0);\n        const s = xo.createAndSchedule(this, t, e, n, (t => this.Vc(t)));\n        return this.yc.push(s), s;\n    }\n    bc() {\n        this.Tc && L();\n    }\n    verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */    async Sc() {\n        // Operations in the queue prior to draining may have enqueued additional\n        // operations. Keep draining the queue until the tail is no longer advanced,\n        // which indicates that no more new operations were enqueued and that all\n        // operations were executed.\n        let t;\n        do {\n            t = this._c, await t;\n        } while (t !== this._c);\n    }\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */    Dc(t) {\n        for (const e of this.yc) if (e.timerId === t) return !0;\n        return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */    Cc(t) {\n        // Note that draining may generate more delayed ops, so we do that first.\n        return this.Sc().then((() => {\n            // Run ops in the same order they'd run if they ran naturally.\n            this.yc.sort(((t, e) => t.targetTimeMs - e.targetTimeMs));\n            for (const e of this.yc) if (e.skipDelay(), \"all\" /* All */ !== t && e.timerId === t) break;\n            return this.Sc();\n        }));\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */    Nc(t) {\n        this.Ac.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */    Vc(t) {\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n        const e = this.yc.indexOf(t);\n        this.yc.splice(e, 1);\n    }\n}\n\nfunction Ca(t) {\n    /**\n * Returns true if obj is an object and contains at least one of the specified\n * methods.\n */\n    return function(t, e) {\n        if (\"object\" != typeof t || null === t) return !1;\n        const n = t;\n        for (const t of e) if (t in n && \"function\" == typeof n[t]) return !0;\n        return !1;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Represents the task of loading a Firestore bundle. It provides progress of bundle\n * loading, as well as task completion and error events.\n *\n * The API is compatible with `Promise<LoadBundleTaskProgress>`.\n */ (t, [ \"next\", \"error\", \"complete\" ]);\n}\n\nclass Na {\n    constructor() {\n        this._progressObserver = {}, this._taskCompletionResolver = new Q, this._lastProgress = {\n            taskState: \"Running\",\n            totalBytes: 0,\n            totalDocuments: 0,\n            bytesLoaded: 0,\n            documentsLoaded: 0\n        };\n    }\n    /**\n     * Registers functions to listen to bundle loading progress events.\n     * @param next - Called when there is a progress update from bundle loading. Typically `next` calls occur\n     *   each time a Firestore document is loaded from the bundle.\n     * @param error - Called when an error occurs during bundle loading. The task aborts after reporting the\n     *   error, and there should be no more updates after this.\n     * @param complete - Called when the loading task is complete.\n     */    onProgress(t, e, n) {\n        this._progressObserver = {\n            next: t,\n            error: e,\n            complete: n\n        };\n    }\n    /**\n     * Implements the `Promise<LoadBundleTaskProgress>.catch` interface.\n     *\n     * @param onRejected - Called when an error occurs during bundle loading.\n     */    catch(t) {\n        return this._taskCompletionResolver.promise.catch(t);\n    }\n    /**\n     * Implements the `Promise<LoadBundleTaskProgress>.then` interface.\n     *\n     * @param onFulfilled - Called on the completion of the loading task with a final `LoadBundleTaskProgress` update.\n     *   The update will always have its `taskState` set to `\"Success\"`.\n     * @param onRejected - Called when an error occurs during bundle loading.\n     */    then(t, e) {\n        return this._taskCompletionResolver.promise.then(t, e);\n    }\n    /**\n     * Notifies all observers that bundle loading has completed, with a provided\n     * `LoadBundleTaskProgress` object.\n     *\n     * @private\n     */    _completeWith(t) {\n        this._updateProgress(t), this._progressObserver.complete && this._progressObserver.complete(), \n        this._taskCompletionResolver.resolve(t);\n    }\n    /**\n     * Notifies all observers that bundle loading has failed, with a provided\n     * `Error` as the reason.\n     *\n     * @private\n     */    _failWith(t) {\n        this._lastProgress.taskState = \"Error\", this._progressObserver.next && this._progressObserver.next(this._lastProgress), \n        this._progressObserver.error && this._progressObserver.error(t), this._taskCompletionResolver.reject(t);\n    }\n    /**\n     * Notifies a progress update of loading a bundle.\n     * @param progress - The new progress.\n     *\n     * @private\n     */    _updateProgress(t) {\n        this._lastProgress = t, this._progressObserver.next && this._progressObserver.next(t);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** DOMException error code constants. */ const xa = -1;\n\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link getFirestore}.\n */\nclass ka extends Ta {\n    /** @hideconstructor */\n    constructor(t, e) {\n        super(t, e), \n        /**\n         * Whether it's a {@link Firestore} or Firestore Lite instance.\n         */\n        this.type = \"firestore\", this._queue = new Da, this._persistenceKey = \"name\" in t ? t.name : \"[DEFAULT]\";\n    }\n    _terminate() {\n        return this._firestoreClient || \n        // The client must be initialized to ensure that all subsequent API\n        // usage throws an exception.\n        Ma(this), this._firestoreClient.terminate();\n    }\n}\n\n/**\n * Initializes a new instance of {@link Firestore} with the provided settings.\n * Can only be called before any other function, including\n * {@link getFirestore}. If the custom settings are empty, this function is\n * equivalent to calling {@link getFirestore}.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} with which the {@link Firestore} instance will\n * be associated.\n * @param settings - A settings object to configure the {@link Firestore} instance.\n * @returns A newly initialized {@link Firestore} instance.\n */ function $a(t, e) {\n    const n = _getProvider(t, \"firestore\");\n    if (n.isInitialized()) {\n        const t = n.getImmediate(), s = n.getOptions();\n        if (deepEqual(s, e)) return t;\n        throw new j(K.FAILED_PRECONDITION, \"initializeFirestore() has already been called with different options. To avoid this error, call initializeFirestore() with the same options as when it was originally called, or call getFirestore() to return the already initialized instance.\");\n    }\n    if (void 0 !== e.cacheSizeBytes && -1 !== e.cacheSizeBytes && e.cacheSizeBytes < 1048576) throw new j(K.INVALID_ARGUMENT, \"cacheSizeBytes must be at least 1048576\");\n    return n.initialize({\n        options: e\n    });\n}\n\n/**\n * Returns the existing {@link Firestore} instance that is associated with the\n * provided {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned {@link Firestore}\n * instance is associated with.\n * @returns The {@link Firestore} instance of the provided app.\n */ function Oa(e = getApp()) {\n    return _getProvider(e, \"firestore\").getImmediate();\n}\n\n/**\n * @internal\n */ function Fa(t) {\n    return t._firestoreClient || Ma(t), t._firestoreClient.verifyNotTerminated(), t._firestoreClient;\n}\n\nfunction Ma(t) {\n    var e;\n    const n = t._freezeSettings(), s = function(t, e, n, s) {\n        return new ua(t, e, n, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams);\n    }(t._databaseId, (null === (e = t._app) || void 0 === e ? void 0 : e.options.appId) || \"\", t._persistenceKey, n);\n    t._firestoreClient = new Kc(t._credentials, t._queue, s);\n}\n\n/**\n * Attempts to enable persistent storage, if possible.\n *\n * Must be called before any other functions (other than\n * {@link initializeFirestore}, {@link getFirestore} or\n * {@link clearIndexedDbPersistence}.\n *\n * If this fails, `enableIndexedDbPersistence()` will reject the promise it\n * returns. Note that even after this failure, the {@link Firestore} instance will\n * remain usable, however offline persistence will be disabled.\n *\n * There are several reasons why this can fail, which can be identified by\n * the `code` on the error.\n *\n *   * failed-precondition: The app is already open in another browser tab.\n *   * unimplemented: The browser is incompatible with the offline\n *     persistence implementation.\n *\n * @param firestore - The {@link Firestore} instance to enable persistence for.\n * @param persistenceSettings - Optional settings object to configure\n * persistence.\n * @returns A `Promise` that represents successfully enabling persistent storage.\n */ function La(t, e) {\n    Ha(t = ga(t, ka));\n    const n = Fa(t), s = t._freezeSettings(), i = new Fc;\n    return Ua(n, i, new $c(i, s.cacheSizeBytes, null == e ? void 0 : e.forceOwnership));\n}\n\n/**\n * Attempts to enable multi-tab persistent storage, if possible. If enabled\n * across all tabs, all operations share access to local persistence, including\n * shared execution of queries and latency-compensated local document updates\n * across all connected instances.\n *\n * If this fails, `enableMultiTabIndexedDbPersistence()` will reject the promise\n * it returns. Note that even after this failure, the {@link Firestore} instance will\n * remain usable, however offline persistence will be disabled.\n *\n * There are several reasons why this can fail, which can be identified by\n * the `code` on the error.\n *\n *   * failed-precondition: The app is already open in another browser tab and\n *     multi-tab is not enabled.\n *   * unimplemented: The browser is incompatible with the offline\n *     persistence implementation.\n *\n * @param firestore - The {@link Firestore} instance to enable persistence for.\n * @returns A `Promise` that represents successfully enabling persistent\n * storage.\n */ function Ba(t) {\n    Ha(t = ga(t, ka));\n    const e = Fa(t), n = t._freezeSettings(), s = new Fc;\n    return Ua(e, s, new Oc(s, n.cacheSizeBytes));\n}\n\n/**\n * Registers both the `OfflineComponentProvider` and `OnlineComponentProvider`.\n * If the operation fails with a recoverable error (see\n * `canRecoverFromIndexedDbError()` below), the returned Promise is rejected\n * but the client remains usable.\n */ function Ua(t, e, n) {\n    const s = new Q;\n    return t.asyncQueue.enqueue((async () => {\n        try {\n            await jc(t, n), await Qc(t, e), s.resolve();\n        } catch (t) {\n            if (!\n            /**\n * Decides whether the provided error allows us to gracefully disable\n * persistence (as opposed to crashing the client).\n */\n            function(t) {\n                if (\"FirebaseError\" === t.name) return t.code === K.FAILED_PRECONDITION || t.code === K.UNIMPLEMENTED;\n                if (\"undefined\" != typeof DOMException && t instanceof DOMException) \n                // There are a few known circumstances where we can open IndexedDb but\n                // trying to read/write will fail (e.g. quota exceeded). For\n                // well-understood cases, we attempt to detect these and then gracefully\n                // fall back to memory persistence.\n                // NOTE: Rather than continue to add to this list, we could decide to\n                // always fall back, with the risk that we might accidentally hide errors\n                // representing actual SDK bugs.\n                // When the browser is out of quota we could get either quota exceeded\n                // or an aborted error depending on whether the error happened during\n                // schema migration.\n                return 22 === t.code || 20 === t.code || \n                // Firefox Private Browsing mode disables IndexedDb and returns\n                // INVALID_STATE for any usage.\n                11 === t.code;\n                return !0;\n            }\n            /**\n * Clears the persistent storage. This includes pending writes and cached\n * documents.\n *\n * Must be called while the {@link Firestore} instance is not started (after the app is\n * terminated or when the app is first initialized). On startup, this function\n * must be called before other functions (other than {@link\n * initializeFirestore} or {@link getFirestore})). If the {@link Firestore}\n * instance is still running, the promise will be rejected with the error code\n * of `failed-precondition`.\n *\n * Note: `clearIndexedDbPersistence()` is primarily intended to help write\n * reliable tests that use Cloud Firestore. It uses an efficient mechanism for\n * dropping existing data but does not attempt to securely overwrite or\n * otherwise make cached data unrecoverable. For applications that are sensitive\n * to the disclosure of cached data in between user sessions, we strongly\n * recommend not enabling persistence at all.\n *\n * @param firestore - The {@link Firestore} instance to clear persistence for.\n * @returns A `Promise` that is resolved when the persistent storage is\n * cleared. Otherwise, the promise is rejected with an error.\n */ (t)) throw t;\n            console.warn(\"Error enabling offline persistence. Falling back to persistence disabled: \" + t), \n            s.reject(t);\n        }\n    })).then((() => s.promise));\n}\n\nfunction qa(t) {\n    if (t._initialized && !t._terminated) throw new j(K.FAILED_PRECONDITION, \"Persistence can only be cleared before a Firestore instance is initialized or after it is terminated.\");\n    const e = new Q;\n    return t._queue.enqueueAndForgetEvenWhileRestricted((async () => {\n        try {\n            await async function(t) {\n                if (!Ws.bt()) return Promise.resolve();\n                const e = t + \"main\";\n                await Ws.delete(e);\n            }(sr(t._databaseId, t._persistenceKey)), e.resolve();\n        } catch (t) {\n            e.reject(t);\n        }\n    })), e.promise;\n}\n\n/**\n * Waits until all currently pending writes for the active user have been\n * acknowledged by the backend.\n *\n * The returned promise resolves immediately if there are no outstanding writes.\n * Otherwise, the promise waits for all previously issued writes (including\n * those written in a previous app session), but it does not wait for writes\n * that were added after the function is called. If you want to wait for\n * additional writes, call `waitForPendingWrites()` again.\n *\n * Any outstanding `waitForPendingWrites()` promises are rejected during user\n * changes.\n *\n * @returns A `Promise` which resolves when all currently pending writes have been\n * acknowledged by the backend.\n */ function Ka(t) {\n    return function(t) {\n        const e = new Q;\n        return t.asyncQueue.enqueueAndForget((async () => lc(await Yc(t), e))), e.promise;\n    }(Fa(t = ga(t, ka)));\n}\n\n/**\n * Re-enables use of the network for this {@link Firestore} instance after a prior\n * call to {@link disableNetwork}.\n *\n * @returns A `Promise` that is resolved once the network has been enabled.\n */ function ja(t) {\n    return Zc(Fa(t = ga(t, ka)));\n}\n\n/**\n * Disables network usage for this instance. It can be re-enabled via {@link\n * enableNetwork}. While the network is disabled, any snapshot listeners,\n * `getDoc()` or `getDocs()` calls will return results from cache, and any write\n * operations will be queued until the network is restored.\n *\n * @returns A `Promise` that is resolved once the network has been disabled.\n */ function Qa(t) {\n    return ta(Fa(t = ga(t, ka)));\n}\n\n/**\n * Terminates the provided {@link Firestore} instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` function\n * may be used. Any other function will throw a `FirestoreError`.\n *\n * To restart after termination, create a new instance of FirebaseFirestore with\n * {@link getFirestore}.\n *\n * Termination does not cancel any pending writes, and any promises that are\n * awaiting a response from the server will not be resolved. If you have\n * persistence enabled, the next time you start this instance, it will resume\n * sending these writes to the server.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all\n * of its resources or in combination with `clearIndexedDbPersistence()` to\n * ensure that all local state is destroyed between test runs.\n *\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */ function Wa(t) {\n    return _removeServiceInstance(t.app, \"firestore\"), t._delete();\n}\n\n/**\n * Loads a Firestore bundle into the local cache.\n *\n * @param firestore - The {@link Firestore} instance to load bundles for for.\n * @param bundleData - An object representing the bundle to be loaded. Valid objects are\n *   `ArrayBuffer`, `ReadableStream<Uint8Array>` or `string`.\n *\n * @returns\n *   A `LoadBundleTask` object, which notifies callers with progress updates, and completion\n *   or error events. It can be used as a `Promise<LoadBundleTaskProgress>`.\n */ function Ga(t, e) {\n    const n = Fa(t = ga(t, ka)), s = new Na;\n    return ca(n, t._databaseId, e, s), s;\n}\n\n/**\n * Reads a Firestore {@link Query} from local cache, identified by the given name.\n *\n * The named queries are packaged  into bundles on the server side (along\n * with resulting documents), and loaded to local cache using `loadBundle`. Once in local\n * cache, use this method to extract a {@link Query} by name.\n */ function za(t, e) {\n    return aa(Fa(t = ga(t, ka)), e).then((e => e ? new Aa(t, null, e.query) : null));\n}\n\nfunction Ha(t) {\n    if (t._initialized || t._terminated) throw new j(K.FAILED_PRECONDITION, \"Firestore has already been started and persistence can no longer be enabled. You can only enable persistence before calling any other methods on a Firestore object.\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */\nclass Ja {\n    /**\n     * Creates a `FieldPath` from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    constructor(...t) {\n        for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new j(K.INVALID_ARGUMENT, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n        this._internalPath = new ft(t);\n    }\n    /**\n     * Returns true if this `FieldPath` is equal to the provided one.\n     *\n     * @param other - The `FieldPath` to compare against.\n     * @returns true if this `FieldPath` is equal to the provided one.\n     */    isEqual(t) {\n        return this._internalPath.isEqual(t._internalPath);\n    }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */ function Ya() {\n    return new Ja(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */ class Xa {\n    /** @hideconstructor */\n    constructor(t) {\n        this._byteString = t;\n    }\n    /**\n     * Creates a new `Bytes` object from the given Base64 string, converting it to\n     * bytes.\n     *\n     * @param base64 - The Base64 string used to create the `Bytes` object.\n     */    static fromBase64String(t) {\n        try {\n            return new Xa(_t.fromBase64String(t));\n        } catch (t) {\n            throw new j(K.INVALID_ARGUMENT, \"Failed to construct data from Base64 string: \" + t);\n        }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */    static fromUint8Array(t) {\n        return new Xa(_t.fromUint8Array(t));\n    }\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */    toBase64() {\n        return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */    toUint8Array() {\n        return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */    toString() {\n        return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */    isEqual(t) {\n        return this._byteString.isEqual(t._byteString);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */ class Za {\n    /**\n     * @param _methodName - The public API endpoint that returns this class.\n     * @hideconstructor\n     */\n    constructor(t) {\n        this._methodName = t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */ class tu {\n    /**\n     * Creates a new immutable `GeoPoint` object with the provided latitude and\n     * longitude values.\n     * @param latitude - The latitude as number between -90 and 90.\n     * @param longitude - The longitude as number between -180 and 180.\n     */\n    constructor(t, e) {\n        if (!isFinite(t) || t < -90 || t > 90) throw new j(K.INVALID_ARGUMENT, \"Latitude must be a number between -90 and 90, but was: \" + t);\n        if (!isFinite(e) || e < -180 || e > 180) throw new j(K.INVALID_ARGUMENT, \"Longitude must be a number between -180 and 180, but was: \" + e);\n        this._lat = t, this._long = e;\n    }\n    /**\n     * The latitude of this `GeoPoint` instance.\n     */    get latitude() {\n        return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */    get longitude() {\n        return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */    isEqual(t) {\n        return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */    toJSON() {\n        return {\n            latitude: this._lat,\n            longitude: this._long\n        };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */    _compareTo(t) {\n        return et(this._lat, t._lat) || et(this._long, t._long);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const eu = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */ class nu {\n    constructor(t, e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return null !== this.fieldMask ? new nn(t, this.data, this.fieldMask, e, this.fieldTransforms) : new en(t, this.data, e, this.fieldTransforms);\n    }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */ class su {\n    constructor(t, \n    // The fieldMask does not include document transforms.\n    e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return new nn(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n}\n\nfunction iu(t) {\n    switch (t) {\n      case 0 /* Set */ :\n // fall through\n              case 2 /* MergeSet */ :\n // fall through\n              case 1 /* Update */ :\n        return !0;\n\n      case 3 /* Argument */ :\n      case 4 /* ArrayArgument */ :\n        return !1;\n\n      default:\n        throw L();\n    }\n}\n\n/** A \"context\" object passed around while parsing user data. */ class ru {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param settings - The settings for the parser.\n     * @param databaseId - The database ID of the Firestore instance.\n     * @param serializer - The serializer to use to generate the Value proto.\n     * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n     * rather than throw.\n     * @param fieldTransforms - A mutable list of field transforms encountered\n     * while parsing the data.\n     * @param fieldMask - A mutable list of field paths encountered while parsing\n     * the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    constructor(t, e, n, s, i, r) {\n        this.settings = t, this.databaseId = e, this.N = n, this.ignoreUndefinedProperties = s, \n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        void 0 === i && this.xc(), this.fieldTransforms = i || [], this.fieldMask = r || [];\n    }\n    get path() {\n        return this.settings.path;\n    }\n    get kc() {\n        return this.settings.kc;\n    }\n    /** Returns a new context with the specified settings overwritten. */    $c(t) {\n        return new ru(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.N, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n    Oc(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), s = this.$c({\n            path: n,\n            Fc: !1\n        });\n        return s.Mc(t), s;\n    }\n    Lc(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), s = this.$c({\n            path: n,\n            Fc: !1\n        });\n        return s.xc(), s;\n    }\n    Bc(t) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // undefined.\n        return this.$c({\n            path: void 0,\n            Fc: !0\n        });\n    }\n    Uc(t) {\n        return bu(t, this.settings.methodName, this.settings.qc || !1, this.path, this.settings.Kc);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */    contains(t) {\n        return void 0 !== this.fieldMask.find((e => t.isPrefixOf(e))) || void 0 !== this.fieldTransforms.find((e => t.isPrefixOf(e.field)));\n    }\n    xc() {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path) for (let t = 0; t < this.path.length; t++) this.Mc(this.path.get(t));\n    }\n    Mc(t) {\n        if (0 === t.length) throw this.Uc(\"Document fields must not be empty\");\n        if (iu(this.kc) && eu.test(t)) throw this.Uc('Document fields cannot begin and end with \"__\"');\n    }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */ class ou {\n    constructor(t, e, n) {\n        this.databaseId = t, this.ignoreUndefinedProperties = e, this.N = n || Yr(t);\n    }\n    /** Creates a new top-level parse context. */    jc(t, e, n, s = !1) {\n        return new ru({\n            kc: t,\n            methodName: e,\n            Kc: n,\n            path: ft.emptyPath(),\n            Fc: !1,\n            qc: s\n        }, this.databaseId, this.N, this.ignoreUndefinedProperties);\n    }\n}\n\nfunction cu(t) {\n    const e = t._freezeSettings(), n = Yr(t._databaseId);\n    return new ou(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n\n/** Parse document data from a set() call. */ function au(t, e, n, s, i, r = {}) {\n    const o = t.jc(r.merge || r.mergeFields ? 2 /* MergeSet */ : 0 /* Set */ , e, n, i);\n    Eu(\"Data must be an object, but it was:\", o, s);\n    const c = pu(s, o);\n    let a, u;\n    if (r.merge) a = new dt(o.fieldMask), u = o.fieldTransforms; else if (r.mergeFields) {\n        const t = [];\n        for (const s of r.mergeFields) {\n            const i = Iu(e, s, n);\n            if (!o.contains(i)) throw new j(K.INVALID_ARGUMENT, `Field '${i}' is specified in your field mask but missing from your input data.`);\n            Pu(t, i) || t.push(i);\n        }\n        a = new dt(t), u = o.fieldTransforms.filter((t => a.covers(t.field)));\n    } else a = null, u = o.fieldTransforms;\n    return new nu(new Ut(c), a, u);\n}\n\nclass uu extends Za {\n    _toFieldTransform(t) {\n        if (2 /* MergeSet */ !== t.kc) throw 1 /* Update */ === t.kc ? t.Uc(`${this._methodName}() can only appear at the top level of your update data`) : t.Uc(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n        // No transform to add for a delete, but we need to add it to our\n        // fieldMask so it gets deleted.\n        return t.fieldMask.push(t.path), null;\n    }\n    isEqual(t) {\n        return t instanceof uu;\n    }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */ function hu(t, e, n) {\n    return new ru({\n        kc: 3 /* Argument */ ,\n        Kc: e.settings.Kc,\n        methodName: t._methodName,\n        Fc: n\n    }, e.databaseId, e.N, e.ignoreUndefinedProperties);\n}\n\nclass lu extends Za {\n    _toFieldTransform(t) {\n        return new je(t.path, new Oe);\n    }\n    isEqual(t) {\n        return t instanceof lu;\n    }\n}\n\nclass fu extends Za {\n    constructor(t, e) {\n        super(t), this.Qc = e;\n    }\n    _toFieldTransform(t) {\n        const e = hu(this, t, \n        /*array=*/ !0), n = this.Qc.map((t => yu(t, e))), s = new Fe(n);\n        return new je(t.path, s);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass du extends Za {\n    constructor(t, e) {\n        super(t), this.Qc = e;\n    }\n    _toFieldTransform(t) {\n        const e = hu(this, t, \n        /*array=*/ !0), n = this.Qc.map((t => yu(t, e))), s = new Le(n);\n        return new je(t.path, s);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass wu extends Za {\n    constructor(t, e) {\n        super(t), this.Wc = e;\n    }\n    _toFieldTransform(t) {\n        const e = new Ue(t.N, Ce(t.N, this.Wc));\n        return new je(t.path, e);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\n/** Parse update data from an update() call. */ function _u(t, e, n, s) {\n    const i = t.jc(1 /* Update */ , e, n);\n    Eu(\"Data must be an object, but it was:\", i, s);\n    const r = [], o = Ut.empty();\n    ct(s, ((t, s) => {\n        const c = Ru(e, t, n);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                s = getModularInstance(s);\n        const a = i.Lc(c);\n        if (s instanceof uu) \n        // Add it to the field mask, but don't add anything to updateData.\n        r.push(c); else {\n            const t = yu(s, a);\n            null != t && (r.push(c), o.set(c, t));\n        }\n    }));\n    const c = new dt(r);\n    return new su(o, c, i.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */ function mu(t, e, n, s, i, r) {\n    const o = t.jc(1 /* Update */ , e, n), c = [ Iu(e, s, n) ], a = [ i ];\n    if (r.length % 2 != 0) throw new j(K.INVALID_ARGUMENT, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n    for (let t = 0; t < r.length; t += 2) c.push(Iu(e, r[t])), a.push(r[t + 1]);\n    const u = [], h = Ut.empty();\n    // We iterate in reverse order to pick the last value for a field if the\n    // user specified the field multiple times.\n    for (let t = c.length - 1; t >= 0; --t) if (!Pu(u, c[t])) {\n        const e = c[t];\n        let n = a[t];\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                n = getModularInstance(n);\n        const s = o.Lc(e);\n        if (n instanceof uu) \n        // Add it to the field mask, but don't add anything to updateData.\n        u.push(e); else {\n            const t = yu(n, s);\n            null != t && (u.push(e), h.set(e, t));\n        }\n    }\n    const l = new dt(u);\n    return new su(h, l, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */ function gu(t, e, n, s = !1) {\n    return yu(n, t.jc(s ? 4 /* ArrayArgument */ : 3 /* Argument */ , e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */ function yu(t, e) {\n    if (Tu(\n    // Unwrap the API type from the Compat SDK. This will return the API type\n    // from firestore-exp.\n    t = getModularInstance(t))) return Eu(\"Unsupported field value:\", e, t), pu(t, e);\n    if (t instanceof Za) \n    // FieldValues usually parse into transforms (except FieldValue.delete())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\n    return function(t, e) {\n        // Sentinels are only supported with writes, and not within arrays.\n        if (!iu(e.kc)) throw e.Uc(`${t._methodName}() can only be used with update() and set()`);\n        if (!e.path) throw e.Uc(`${t._methodName}() is not currently supported inside arrays`);\n        const n = t._toFieldTransform(e);\n        n && e.fieldTransforms.push(n);\n    }\n    /**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */ (t, e), null;\n    if (void 0 === t && e.ignoreUndefinedProperties) \n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n    if (\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    e.path && e.fieldMask.push(e.path), t instanceof Array) {\n        // TODO(b/34871131): Include the path containing the array in the error\n        // message.\n        // In the case of IN queries, the parsed data is an array (representing\n        // the set of values to be included for the IN query) that may directly\n        // contain additional arrays (each representing an individual field\n        // value), so we disable this validation.\n        if (e.settings.Fc && 4 /* ArrayArgument */ !== e.kc) throw e.Uc(\"Nested arrays are not supported\");\n        return function(t, e) {\n            const n = [];\n            let s = 0;\n            for (const i of t) {\n                let t = yu(i, e.Bc(s));\n                null == t && (\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                t = {\n                    nullValue: \"NULL_VALUE\"\n                }), n.push(t), s++;\n            }\n            return {\n                arrayValue: {\n                    values: n\n                }\n            };\n        }(t, e);\n    }\n    return function(t, e) {\n        if (null === (t = getModularInstance(t))) return {\n            nullValue: \"NULL_VALUE\"\n        };\n        if (\"number\" == typeof t) return Ce(e.N, t);\n        if (\"boolean\" == typeof t) return {\n            booleanValue: t\n        };\n        if (\"string\" == typeof t) return {\n            stringValue: t\n        };\n        if (t instanceof Date) {\n            const n = it.fromDate(t);\n            return {\n                timestampValue: Un(e.N, n)\n            };\n        }\n        if (t instanceof it) {\n            // Firestore backend truncates precision down to microseconds. To ensure\n            // offline mode works the same with regards to truncation, perform the\n            // truncation immediately without waiting for the backend to do that.\n            const n = new it(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n            return {\n                timestampValue: Un(e.N, n)\n            };\n        }\n        if (t instanceof tu) return {\n            geoPointValue: {\n                latitude: t.latitude,\n                longitude: t.longitude\n            }\n        };\n        if (t instanceof Xa) return {\n            bytesValue: qn(e.N, t._byteString)\n        };\n        if (t instanceof Ia) {\n            const n = e.databaseId, s = t.firestore._databaseId;\n            if (!s.isEqual(n)) throw e.Uc(`Document reference is for database ${s.projectId}/${s.database} but should be for database ${n.projectId}/${n.database}`);\n            return {\n                referenceValue: Qn(t.firestore._databaseId || e.databaseId, t._key.path)\n            };\n        }\n        throw e.Uc(`Unsupported field value: ${ma(t)}`);\n    }\n    /**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */ (t, e);\n}\n\nfunction pu(t, e) {\n    const n = {};\n    return at(t) ? \n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    e.path && e.path.length > 0 && e.fieldMask.push(e.path) : ct(t, ((t, s) => {\n        const i = yu(s, e.Oc(t));\n        null != i && (n[t] = i);\n    })), {\n        mapValue: {\n            fields: n\n        }\n    };\n}\n\nfunction Tu(t) {\n    return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof it || t instanceof tu || t instanceof Xa || t instanceof Ia || t instanceof Za);\n}\n\nfunction Eu(t, e, n) {\n    if (!Tu(n) || !function(t) {\n        return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n    }(n)) {\n        const s = ma(n);\n        throw \"an object\" === s ? e.Uc(t + \" a custom object\") : e.Uc(t + \" \" + s);\n    }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */ function Iu(t, e, n) {\n    if ((\n    // If required, replace the FieldPath Compat class with with the firestore-exp\n    // FieldPath.\n    e = getModularInstance(e)) instanceof Ja) return e._internalPath;\n    if (\"string\" == typeof e) return Ru(t, e);\n    throw bu(\"Field path arguments must be of type string or FieldPath.\", t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */ const Au = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */ function Ru(t, e, n) {\n    if (e.search(Au) >= 0) throw bu(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n    try {\n        return new Ja(...e.split(\".\"))._internalPath;\n    } catch (s) {\n        throw bu(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, \n        /* hasConverter= */ !1, \n        /* path= */ void 0, n);\n    }\n}\n\nfunction bu(t, e, n, s, i) {\n    const r = s && !s.isEmpty(), o = void 0 !== i;\n    let c = `Function ${e}() called with invalid data`;\n    n && (c += \" (via `toFirestore()`)\"), c += \". \";\n    let a = \"\";\n    return (r || o) && (a += \" (found\", r && (a += ` in field ${s}`), o && (a += ` in document ${i}`), \n    a += \")\"), new j(K.INVALID_ARGUMENT, c + t + a);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */ function Pu(t, e) {\n    return t.some((t => t.isEqual(e)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class vu {\n    // Note: This class is stripped down version of the DocumentSnapshot in\n    // the legacy SDK. The changes are:\n    // - No support for SnapshotMetadata.\n    // - No support for SnapshotOptions.\n    /** @hideconstructor protected */\n    constructor(t, e, n, s, i) {\n        this._firestore = t, this._userDataWriter = e, this._key = n, this._document = s, \n        this._converter = i;\n    }\n    /** Property of the `DocumentSnapshot` that provides the document's ID. */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */    get ref() {\n        return new Ia(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */    exists() {\n        return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */    data() {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const t = new Vu(this._firestore, this._userDataWriter, this._key, this._document, \n                /* converter= */ null);\n                return this._converter.fromFirestore(t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t) {\n        if (this._document) {\n            const e = this._document.data.field(Su(\"DocumentSnapshot.get\", t));\n            if (null !== e) return this._userDataWriter.convertValue(e);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class Vu extends vu {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    data() {\n        return super.data();\n    }\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */ function Su(t, e) {\n    return \"string\" == typeof e ? Ru(t, e) : e instanceof Ja ? e._internalPath : e._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Metadata about a snapshot, describing the state of the snapshot.\n */ class Du {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this.hasPendingWrites = t, this.fromCache = e;\n    }\n    /**\n     * Returns true if this `SnapshotMetadata` is equal to the provided one.\n     *\n     * @param other - The `SnapshotMetadata` to compare against.\n     * @returns true if this `SnapshotMetadata` is equal to the provided one.\n     */    isEqual(t) {\n        return this.hasPendingWrites === t.hasPendingWrites && this.fromCache === t.fromCache;\n    }\n}\n\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class Cu extends vu {\n    /** @hideconstructor protected */\n    constructor(t, e, n, s, i, r) {\n        super(t, e, n, s, r), this._firestore = t, this._firestoreImpl = t, this.metadata = i;\n    }\n    /**\n     * Property of the `DocumentSnapshot` that signals whether or not the data\n     * exists. True if the document exists.\n     */    exists() {\n        return super.exists();\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * By default, `FieldValue.serverTimestamp()` values that have not yet been\n     * set to their final value will be returned as `null`. You can override\n     * this by passing an options object.\n     *\n     * @param options - An options object to configure how data is retrieved from\n     * the snapshot (for example the desired behavior for server timestamps that\n     * have not yet been set to their final value).\n     * @returns An `Object` containing all fields in the document or `undefined` if\n     * the document doesn't exist.\n     */    data(t = {}) {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const e = new Nu(this._firestore, this._userDataWriter, this._key, this._document, this.metadata, \n                /* converter= */ null);\n                return this._converter.fromFirestore(e, t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value, t.serverTimestamps);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * By default, a `FieldValue.serverTimestamp()` that has not yet been set to\n     * its final value will be returned as `null`. You can override this by\n     * passing an options object.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @param options - An options object to configure how the field is retrieved\n     * from the snapshot (for example the desired behavior for server timestamps\n     * that have not yet been set to their final value).\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t, e = {}) {\n        if (this._document) {\n            const n = this._document.data.field(Su(\"DocumentSnapshot.get\", t));\n            if (null !== n) return this._userDataWriter.convertValue(n, e.serverTimestamps);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class Nu extends Cu {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * By default, `FieldValue.serverTimestamp()` values that have not yet been\n     * set to their final value will be returned as `null`. You can override\n     * this by passing an options object.\n     *\n     * @override\n     * @param options - An options object to configure how data is retrieved from\n     * the snapshot (for example the desired behavior for server timestamps that\n     * have not yet been set to their final value).\n     * @returns An `Object` containing all fields in the document.\n     */\n    data(t = {}) {\n        return super.data(t);\n    }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */ class xu {\n    /** @hideconstructor */\n    constructor(t, e, n, s) {\n        this._firestore = t, this._userDataWriter = e, this._snapshot = s, this.metadata = new Du(s.hasPendingWrites, s.fromCache), \n        this.query = n;\n    }\n    /** An array of all the documents in the `QuerySnapshot`. */    get docs() {\n        const t = [];\n        return this.forEach((e => t.push(e))), t;\n    }\n    /** The number of documents in the `QuerySnapshot`. */    get size() {\n        return this._snapshot.docs.size;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */    get empty() {\n        return 0 === this.size;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */    forEach(t, e) {\n        this._snapshot.docs.forEach((n => {\n            t.call(e, new Nu(this._firestore, this._userDataWriter, n.key, n, new Du(this._snapshot.mutatedKeys.has(n.key), this._snapshot.fromCache), this.query.converter));\n        }));\n    }\n    /**\n     * Returns an array of the documents changes since the last snapshot. If this\n     * is the first snapshot, all documents will be in the list as 'added'\n     * changes.\n     *\n     * @param options - `SnapshotListenOptions` that control whether metadata-only\n     * changes (i.e. only `DocumentSnapshot.metadata` changed) should trigger\n     * snapshot events.\n     */    docChanges(t = {}) {\n        const e = !!t.includeMetadataChanges;\n        if (e && this._snapshot.excludesMetadataChanges) throw new j(K.INVALID_ARGUMENT, \"To include metadata changes with your document changes, you must also pass { includeMetadataChanges:true } to onSnapshot().\");\n        return this._cachedChanges && this._cachedChangesIncludeMetadataChanges === e || (this._cachedChanges = \n        /** Calculates the array of `DocumentChange`s for a given `ViewSnapshot`. */\n        function(t, e) {\n            if (t._snapshot.oldDocs.isEmpty()) {\n                let e = 0;\n                return t._snapshot.docChanges.map((n => ({\n                    type: \"added\",\n                    doc: new Nu(t._firestore, t._userDataWriter, n.doc.key, n.doc, new Du(t._snapshot.mutatedKeys.has(n.doc.key), t._snapshot.fromCache), t.query.converter),\n                    oldIndex: -1,\n                    newIndex: e++\n                })));\n            }\n            {\n                // A `DocumentSet` that is updated incrementally as changes are applied to use\n                // to lookup the index of a document.\n                let n = t._snapshot.oldDocs;\n                return t._snapshot.docChanges.filter((t => e || 3 /* Metadata */ !== t.type)).map((e => {\n                    const s = new Nu(t._firestore, t._userDataWriter, e.doc.key, e.doc, new Du(t._snapshot.mutatedKeys.has(e.doc.key), t._snapshot.fromCache), t.query.converter);\n                    let i = -1, r = -1;\n                    return 0 /* Added */ !== e.type && (i = n.indexOf(e.doc.key), n = n.delete(e.doc.key)), \n                    1 /* Removed */ !== e.type && (n = n.add(e.doc), r = n.indexOf(e.doc.key)), {\n                        type: ku(e.type),\n                        doc: s,\n                        oldIndex: i,\n                        newIndex: r\n                    };\n                }));\n            }\n        }(this, e), this._cachedChangesIncludeMetadataChanges = e), this._cachedChanges;\n    }\n}\n\nfunction ku(t) {\n    switch (t) {\n      case 0 /* Added */ :\n        return \"added\";\n\n      case 2 /* Modified */ :\n      case 3 /* Metadata */ :\n        return \"modified\";\n\n      case 1 /* Removed */ :\n        return \"removed\";\n\n      default:\n        return L();\n    }\n}\n\n// TODO(firestoreexp): Add tests for snapshotEqual with different snapshot\n// metadata\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */ function $u(t, e) {\n    return t instanceof Cu && e instanceof Cu ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof xu && e instanceof xu && (t._firestore === e._firestore && Sa(t.query, e.query) && t.metadata.isEqual(e.metadata) && t._snapshot.isEqual(e._snapshot));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function Ou(t) {\n    if (me(t) && 0 === t.explicitOrderBy.length) throw new j(K.UNIMPLEMENTED, \"limitToLast() queries require specifying at least one orderBy() clause\");\n}\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link\n * endBefore:1}, {@link (endAt:1)}, {@link limit} or {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */ class Fu {}\n\n/**\n * Creates a new immutable instance of {@link Query} that is extended to also include\n * additional query constraints.\n *\n * @param query - The {@link Query} instance to use as a base for the new constraints.\n * @param queryConstraints - The list of {@link QueryConstraint}s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */ function Mu(t, ...e) {\n    for (const n of e) t = n._apply(t);\n    return t;\n}\n\nclass Lu extends Fu {\n    constructor(t, e, n) {\n        super(), this.Gc = t, this.zc = e, this.Hc = n, this.type = \"where\";\n    }\n    _apply(t) {\n        const e = cu(t.firestore), n = function(t, e, n, s, i, r, o) {\n            let c;\n            if (i.isKeyField()) {\n                if (\"array-contains\" /* ARRAY_CONTAINS */ === r || \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === r) throw new j(K.INVALID_ARGUMENT, `Invalid Query. You can't perform '${r}' queries on FieldPath.documentId().`);\n                if (\"in\" /* IN */ === r || \"not-in\" /* NOT_IN */ === r) {\n                    th(o, r);\n                    const e = [];\n                    for (const n of o) e.push(Zu(s, t, n));\n                    c = {\n                        arrayValue: {\n                            values: e\n                        }\n                    };\n                } else c = Zu(s, t, o);\n            } else \"in\" /* IN */ !== r && \"not-in\" /* NOT_IN */ !== r && \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ !== r || th(o, r), \n            c = gu(n, e, o, \n            /* allowArrays= */ \"in\" /* IN */ === r || \"not-in\" /* NOT_IN */ === r);\n            const a = Jt.create(i, r, c);\n            return function(t, e) {\n                if (e.v()) {\n                    const n = ye(t);\n                    if (null !== n && !n.isEqual(e.field)) throw new j(K.INVALID_ARGUMENT, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${e.field.toString()}'`);\n                    const s = ge(t);\n                    null !== s && eh(t, e.field, s);\n                }\n                const n = function(t, e) {\n                    for (const n of t.filters) if (e.indexOf(n.op) >= 0) return n.op;\n                    return null;\n                }(t, \n                /**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one array operator is allowed.\n * 2. Only one disjunctive operator is allowed.\n * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.\n * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n *\n * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`\n * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`\n */\n                function(t) {\n                    switch (t) {\n                      case \"!=\" /* NOT_EQUAL */ :\n                        return [ \"!=\" /* NOT_EQUAL */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"array-contains\" /* ARRAY_CONTAINS */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"in\" /* IN */ :\n                        return [ \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"not-in\" /* NOT_IN */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ , \"!=\" /* NOT_EQUAL */ ];\n\n                      default:\n                        return [];\n                    }\n                }(e.op));\n                if (null !== n) \n                // Special case when it's a duplicate op to give a slightly clearer error message.\n                throw n === e.op ? new j(K.INVALID_ARGUMENT, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new j(K.INVALID_ARGUMENT, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n            }(t, a), a;\n        }(t._query, \"where\", e, t.firestore._databaseId, this.Gc, this.zc, this.Hc);\n        return new Aa(t.firestore, t.converter, function(t, e) {\n            const n = t.filters.concat([ e ]);\n            return new fe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, n));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that enforces that documents must contain the\n * specified field and that the value should satisfy the relation constraint\n * provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link Query}.\n */ function Bu(t, e, n) {\n    const s = e, i = Su(\"where\", t);\n    return new Lu(i, s, n);\n}\n\nclass Uu extends Fu {\n    constructor(t, e) {\n        super(), this.Gc = t, this.Jc = e, this.type = \"orderBy\";\n    }\n    _apply(t) {\n        const e = function(t, e, n) {\n            if (null !== t.startAt) throw new j(K.INVALID_ARGUMENT, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n            if (null !== t.endAt) throw new j(K.INVALID_ARGUMENT, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n            const s = new ae(e, n);\n            return function(t, e) {\n                if (null === ge(t)) {\n                    // This is the first order by. It must match any inequality.\n                    const n = ye(t);\n                    null !== n && eh(t, n, e.field);\n                }\n            }(t, s), s;\n        }\n        /**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */ (t._query, this.Gc, this.Jc);\n        return new Aa(t.firestore, t.converter, function(t, e) {\n            // TODO(dimond): validate that orderBy does not list the same key twice.\n            const n = t.explicitOrderBy.concat([ e ]);\n            return new fe(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, e));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link Query}.\n */ function qu(t, e = \"asc\") {\n    const n = e, s = Su(\"orderBy\", t);\n    return new Uu(s, n);\n}\n\nclass Ku extends Fu {\n    constructor(t, e, n) {\n        super(), this.type = t, this.Yc = e, this.Xc = n;\n    }\n    _apply(t) {\n        return new Aa(t.firestore, t.converter, Ie(t._query, this.Yc, this.Xc));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that only returns the first matching documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */ function ju(t) {\n    return ya(\"limit\", t), new Ku(\"limit\", t, \"F\" /* First */);\n}\n\n/**\n * Creates a {@link QueryConstraint} that only returns the last matching documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */ function Qu(t) {\n    return ya(\"limitToLast\", t), new Ku(\"limitToLast\", t, \"L\" /* Last */);\n}\n\nclass Wu extends Fu {\n    constructor(t, e, n) {\n        super(), this.type = t, this.Zc = e, this.ta = n;\n    }\n    _apply(t) {\n        const e = Xu(t, this.type, this.Zc, this.ta);\n        return new Aa(t.firestore, t.converter, function(t, e) {\n            return new fe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n        }(t._query, e));\n    }\n}\n\nfunction Gu(...t) {\n    return new Wu(\"startAt\", t, /*before=*/ !0);\n}\n\nfunction zu(...t) {\n    return new Wu(\"startAfter\", t, \n    /*before=*/ !1);\n}\n\nclass Hu extends Fu {\n    constructor(t, e, n) {\n        super(), this.type = t, this.Zc = e, this.ta = n;\n    }\n    _apply(t) {\n        const e = Xu(t, this.type, this.Zc, this.ta);\n        return new Aa(t.firestore, t.converter, function(t, e) {\n            return new fe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n        }(t._query, e));\n    }\n}\n\nfunction Ju(...t) {\n    return new Hu(\"endBefore\", t, /*before=*/ !0);\n}\n\nfunction Yu(...t) {\n    return new Hu(\"endAt\", t, /*before=*/ !1);\n}\n\n/** Helper function to create a bound from a document or fields */ function Xu(t, e, n, s) {\n    if (n[0] = getModularInstance(n[0]), n[0] instanceof vu) return function(t, e, n, s, i) {\n        if (!s) throw new j(K.NOT_FOUND, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n        const r = [];\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n                for (const n of Te(t)) if (n.field.isKeyField()) r.push(kt(e, s.key)); else {\n            const t = s.data.field(n.field);\n            if (Tt(t)) throw new j(K.INVALID_ARGUMENT, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n            if (null === t) {\n                const t = n.field.canonicalString();\n                throw new j(K.INVALID_ARGUMENT, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n            }\n            r.push(t);\n        }\n        return new oe(r, i);\n    }\n    /**\n * Converts a list of field values to a `Bound` for the given query.\n */ (t._query, t.firestore._databaseId, e, n[0]._document, s);\n    {\n        const i = cu(t.firestore);\n        return function(t, e, n, s, i, r) {\n            // Use explicit order by's because it has to match the query the user made\n            const o = t.explicitOrderBy;\n            if (i.length > o.length) throw new j(K.INVALID_ARGUMENT, `Too many arguments provided to ${s}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n            const c = [];\n            for (let r = 0; r < i.length; r++) {\n                const a = i[r];\n                if (o[r].field.isKeyField()) {\n                    if (\"string\" != typeof a) throw new j(K.INVALID_ARGUMENT, `Invalid query. Expected a string for document ID in ${s}(), but got a ${typeof a}`);\n                    if (!pe(t) && -1 !== a.indexOf(\"/\")) throw new j(K.INVALID_ARGUMENT, `Invalid query. When querying a collection and ordering by FieldPath.documentId(), the value passed to ${s}() must be a plain document ID, but '${a}' contains a slash.`);\n                    const n = t.path.child(ht.fromString(a));\n                    if (!Pt.isDocumentKey(n)) throw new j(K.INVALID_ARGUMENT, `Invalid query. When querying a collection group and ordering by FieldPath.documentId(), the value passed to ${s}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n                    const i = new Pt(n);\n                    c.push(kt(e, i));\n                } else {\n                    const t = gu(n, s, a);\n                    c.push(t);\n                }\n            }\n            return new oe(c, r);\n        }\n        /**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */ (t._query, t.firestore._databaseId, i, e, n, s);\n    }\n}\n\nfunction Zu(t, e, n) {\n    if (\"string\" == typeof (n = getModularInstance(n))) {\n        if (\"\" === n) throw new j(K.INVALID_ARGUMENT, \"Invalid query. When querying with FieldPath.documentId(), you must provide a valid document ID, but it was an empty string.\");\n        if (!pe(e) && -1 !== n.indexOf(\"/\")) throw new j(K.INVALID_ARGUMENT, `Invalid query. When querying a collection by FieldPath.documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n        const s = e.path.child(ht.fromString(n));\n        if (!Pt.isDocumentKey(s)) throw new j(K.INVALID_ARGUMENT, `Invalid query. When querying a collection group by FieldPath.documentId(), the value provided must result in a valid document path, but '${s}' is not because it has an odd number of segments (${s.length}).`);\n        return kt(t, new Pt(s));\n    }\n    if (n instanceof Ia) return kt(t, n._key);\n    throw new j(K.INVALID_ARGUMENT, `Invalid query. When querying with FieldPath.documentId(), you must provide a valid string or a DocumentReference, but it was: ${ma(n)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */ function th(t, e) {\n    if (!Array.isArray(t) || 0 === t.length) throw new j(K.INVALID_ARGUMENT, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n    if (t.length > 10) throw new j(K.INVALID_ARGUMENT, `Invalid Query. '${e.toString()}' filters support a maximum of 10 elements in the value array.`);\n}\n\nfunction eh(t, e, n) {\n    if (!n.isEqual(e)) throw new j(K.INVALID_ARGUMENT, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */ class nh {\n    convertValue(t, e = \"none\") {\n        switch (vt(t)) {\n          case 0 /* NullValue */ :\n            return null;\n\n          case 1 /* BooleanValue */ :\n            return t.booleanValue;\n\n          case 2 /* NumberValue */ :\n            return yt(t.integerValue || t.doubleValue);\n\n          case 3 /* TimestampValue */ :\n            return this.convertTimestamp(t.timestampValue);\n\n          case 4 /* ServerTimestampValue */ :\n            return this.convertServerTimestamp(t, e);\n\n          case 5 /* StringValue */ :\n            return t.stringValue;\n\n          case 6 /* BlobValue */ :\n            return this.convertBytes(pt(t.bytesValue));\n\n          case 7 /* RefValue */ :\n            return this.convertReference(t.referenceValue);\n\n          case 8 /* GeoPointValue */ :\n            return this.convertGeoPoint(t.geoPointValue);\n\n          case 9 /* ArrayValue */ :\n            return this.convertArray(t.arrayValue, e);\n\n          case 10 /* ObjectValue */ :\n            return this.convertObject(t.mapValue, e);\n\n          default:\n            throw L();\n        }\n    }\n    convertObject(t, e) {\n        const n = {};\n        return ct(t.fields, ((t, s) => {\n            n[t] = this.convertValue(s, e);\n        })), n;\n    }\n    convertGeoPoint(t) {\n        return new tu(yt(t.latitude), yt(t.longitude));\n    }\n    convertArray(t, e) {\n        return (t.values || []).map((t => this.convertValue(t, e)));\n    }\n    convertServerTimestamp(t, e) {\n        switch (e) {\n          case \"previous\":\n            const n = Et(t);\n            return null == n ? null : this.convertValue(n, e);\n\n          case \"estimate\":\n            return this.convertTimestamp(It(t));\n\n          default:\n            return null;\n        }\n    }\n    convertTimestamp(t) {\n        const e = gt(t);\n        return new it(e.seconds, e.nanos);\n    }\n    convertDocumentKey(t, e) {\n        const n = ht.fromString(t);\n        B(Ts(n));\n        const s = new ha(n.get(1), n.get(3)), i = new Pt(n.popFirst(5));\n        return s.isEqual(e) || \n        // TODO(b/64130202): Somehow support foreign references.\n        O(`Document ${i} contains a document reference within a different database (${s.projectId}/${s.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), \n        i;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */ function sh(t, e, n) {\n    let s;\n    // Cast to `any` in order to satisfy the union type constraint on\n    // toFirestore().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return s = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, \n    s;\n}\n\nclass ih extends nh {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new Xa(t);\n    }\n    convertReference(t) {\n        const e = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new Ia(this.firestore, /* converter= */ null, e);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */ class rh {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, \n        this._dataReader = cu(t);\n    }\n    set(t, e, n) {\n        this._verifyNotCommitted();\n        const s = oh(t, this._firestore), i = sh(s.converter, e, n), r = au(this._dataReader, \"WriteBatch.set\", s._key, i, null !== s.converter, n);\n        return this._mutations.push(r.toMutation(s._key, Ge.none())), this;\n    }\n    update(t, e, n, ...s) {\n        this._verifyNotCommitted();\n        const i = oh(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let r;\n        return r = \"string\" == typeof (e = getModularInstance(e)) || e instanceof Ja ? mu(this._dataReader, \"WriteBatch.update\", i._key, e, n, s) : _u(this._dataReader, \"WriteBatch.update\", i._key, e), \n        this._mutations.push(r.toMutation(i._key, Ge.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */    delete(t) {\n        this._verifyNotCommitted();\n        const e = oh(t, this._firestore);\n        return this._mutations = this._mutations.concat(new cn(e._key, Ge.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */    commit() {\n        return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n    _verifyNotCommitted() {\n        if (this._committed) throw new j(K.FAILED_PRECONDITION, \"A write batch can no longer be used after commit() has been called.\");\n    }\n}\n\nfunction oh(t, e) {\n    if ((t = getModularInstance(t)).firestore !== e) throw new j(K.INVALID_ARGUMENT, \"Provided document reference is from a different Firestore instance.\");\n    return t;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n// legacy SDK.\n/**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Reads the document referred to by this `DocumentReference`.\n *\n * Note: `getDoc()` attempts to provide up-to-date data when possible by waiting\n * for data from the server, but it may return cached data or fail if you are\n * offline and the server cannot be reached. To specify this behavior, invoke\n * {@link getDocFromCache} or {@link getDocFromServer}.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the\n * current document contents.\n */\nfunction ch(t) {\n    t = ga(t, Ia);\n    const e = ga(t.firestore, ka);\n    return na(Fa(e), t._key).then((n => Eh(e, t, n)));\n}\n\nclass ah extends nh {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new Xa(t);\n    }\n    convertReference(t) {\n        const e = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new Ia(this.firestore, /* converter= */ null, e);\n    }\n}\n\n/**\n * Reads the document referred to by this `DocumentReference` from cache.\n * Returns an error if the document is not currently cached.\n *\n * @returns A `Promise` resolved with a `DocumentSnapshot` containing the\n * current document contents.\n */ function uh(t) {\n    t = ga(t, Ia);\n    const e = ga(t.firestore, ka), n = Fa(e), s = new ah(e);\n    return ea(n, t._key).then((n => new Cu(e, s, t._key, n, new Du(null !== n && n.hasLocalMutations, \n    /* fromCache= */ !0), t.converter)));\n}\n\n/**\n * Reads the document referred to by this `DocumentReference` from the server.\n * Returns an error if the network is not available.\n *\n * @returns A `Promise` resolved with a `DocumentSnapshot` containing the\n * current document contents.\n */ function hh(t) {\n    t = ga(t, Ia);\n    const e = ga(t.firestore, ka);\n    return na(Fa(e), t._key, {\n        source: \"server\"\n    }).then((n => Eh(e, t, n)));\n}\n\n/**\n * Executes the query and returns the results as a `QuerySnapshot`.\n *\n * Note: `getDocs()` attempts to provide up-to-date data when possible by\n * waiting for data from the server, but it may return cached data or fail if\n * you are offline and the server cannot be reached. To specify this behavior,\n * invoke {@link getDocsFromCache} or {@link getDocsFromServer}.\n *\n * @returns A `Promise` that will be resolved with the results of the query.\n */ function lh(t) {\n    t = ga(t, Aa);\n    const e = ga(t.firestore, ka), n = Fa(e), s = new ah(e);\n    return Ou(t._query), ia(n, t._query).then((n => new xu(e, s, t, n)));\n}\n\n/**\n * Executes the query and returns the results as a `QuerySnapshot` from cache.\n * Returns an error if the document is not currently cached.\n *\n * @returns A `Promise` that will be resolved with the results of the query.\n */ function fh(t) {\n    t = ga(t, Aa);\n    const e = ga(t.firestore, ka), n = Fa(e), s = new ah(e);\n    return sa(n, t._query).then((n => new xu(e, s, t, n)));\n}\n\n/**\n * Executes the query and returns the results as a `QuerySnapshot` from the\n * server. Returns an error if the network is not available.\n *\n * @returns A `Promise` that will be resolved with the results of the query.\n */ function dh(t) {\n    t = ga(t, Aa);\n    const e = ga(t.firestore, ka), n = Fa(e), s = new ah(e);\n    return ia(n, t._query, {\n        source: \"server\"\n    }).then((n => new xu(e, s, t, n)));\n}\n\nfunction wh(t, e, n) {\n    t = ga(t, Ia);\n    const s = ga(t.firestore, ka), i = sh(t.converter, e, n);\n    return Th(s, [ au(cu(s), \"setDoc\", t._key, i, null !== t.converter, n).toMutation(t._key, Ge.none()) ]);\n}\n\nfunction _h(t, e, n, ...s) {\n    t = ga(t, Ia);\n    const i = ga(t.firestore, ka), r = cu(i);\n    let o;\n    o = \"string\" == typeof (\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n    e = getModularInstance(e)) || e instanceof Ja ? mu(r, \"updateDoc\", t._key, e, n, s) : _u(r, \"updateDoc\", t._key, e);\n    return Th(i, [ o.toMutation(t._key, Ge.exists(!0)) ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * @param reference - A reference to the document to delete.\n * @returns A Promise resolved once the document has been successfully\n * deleted from the backend (note that it won't resolve while you're offline).\n */ function mh(t) {\n    return Th(ga(t.firestore, ka), [ new cn(t._key, Ge.none()) ]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend (Note that it\n * won't resolve while you're offline).\n */ function gh(t, e) {\n    const n = ga(t.firestore, ka), s = va(t), i = sh(t.converter, e);\n    return Th(n, [ au(cu(t.firestore), \"addDoc\", s._key, i, null !== t.converter, {}).toMutation(s._key, Ge.exists(!1)) ]).then((() => s));\n}\n\nfunction yh(t, ...e) {\n    var n, s, i;\n    t = getModularInstance(t);\n    let r = {\n        includeMetadataChanges: !1\n    }, o = 0;\n    \"object\" != typeof e[o] || Ca(e[o]) || (r = e[o], o++);\n    const c = {\n        includeMetadataChanges: r.includeMetadataChanges\n    };\n    if (Ca(e[o])) {\n        const t = e[o];\n        e[o] = null === (n = t.next) || void 0 === n ? void 0 : n.bind(t), e[o + 1] = null === (s = t.error) || void 0 === s ? void 0 : s.bind(t), \n        e[o + 2] = null === (i = t.complete) || void 0 === i ? void 0 : i.bind(t);\n    }\n    let a, u, h;\n    if (t instanceof Ia) u = ga(t.firestore, ka), h = we(t._key.path), a = {\n        next: n => {\n            e[o] && e[o](Eh(u, t, n));\n        },\n        error: e[o + 1],\n        complete: e[o + 2]\n    }; else {\n        const n = ga(t, Aa);\n        u = ga(n.firestore, ka), h = n._query;\n        const s = new ah(u);\n        a = {\n            next: t => {\n                e[o] && e[o](new xu(u, s, n, t));\n            },\n            error: e[o + 1],\n            complete: e[o + 2]\n        }, Ou(t._query);\n    }\n    return function(t, e, n, s) {\n        const i = new Lc(s), r = new Qo(e, i, n);\n        return t.asyncQueue.enqueueAndForget((async () => Bo(await Xc(t), r))), () => {\n            i.ec(), t.asyncQueue.enqueueAndForget((async () => Uo(await Xc(t), r)));\n        };\n    }(Fa(u), h, c, a);\n}\n\nfunction ph(t, e) {\n    return ra(Fa(t = ga(t, ka)), Ca(e) ? e : {\n        next: e\n    });\n}\n\n/**\n * Locally writes `mutations` on the async queue.\n * @internal\n */ function Th(t, e) {\n    return function(t, e) {\n        const n = new Q;\n        return t.asyncQueue.enqueueAndForget((async () => rc(await Yc(t), e, n))), n.promise;\n    }(Fa(t), e);\n}\n\n/**\n * Converts a {@link ViewSnapshot} that contains the single document specified by `ref`\n * to a {@link DocumentSnapshot}.\n */ function Eh(t, e, n) {\n    const s = n.docs.get(e._key), i = new ah(t);\n    return new Cu(t, i, e._key, s, new Du(n.hasPendingWrites, n.fromCache), e.converter);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */ class Ih extends class {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._transaction = e, this._dataReader = cu(t);\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const e = oh(t, this._firestore), n = new ih(this._firestore);\n        return this._transaction.lookup([ e._key ]).then((t => {\n            if (!t || 1 !== t.length) return L();\n            const s = t[0];\n            if (s.isFoundDocument()) return new vu(this._firestore, n, s.key, s, e.converter);\n            if (s.isNoDocument()) return new vu(this._firestore, n, e._key, null, e.converter);\n            throw L();\n        }));\n    }\n    set(t, e, n) {\n        const s = oh(t, this._firestore), i = sh(s.converter, e, n), r = au(this._dataReader, \"Transaction.set\", s._key, i, null !== s.converter, n);\n        return this._transaction.set(s._key, r), this;\n    }\n    update(t, e, n, ...s) {\n        const i = oh(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let r;\n        return r = \"string\" == typeof (e = getModularInstance(e)) || e instanceof Ja ? mu(this._dataReader, \"Transaction.update\", i._key, e, n, s) : _u(this._dataReader, \"Transaction.update\", i._key, e), \n        this._transaction.update(i._key, r), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */    delete(t) {\n        const e = oh(t, this._firestore);\n        return this._transaction.delete(e._key), this;\n    }\n} {\n    // This class implements the same logic as the Transaction API in the Lite SDK\n    // but is subclassed in order to return its own DocumentSnapshot types.\n    /** @hideconstructor */\n    constructor(t, e) {\n        super(t, e), this._firestore = t;\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const e = oh(t, this._firestore), n = new ah(this._firestore);\n        return super.get(t).then((t => new Cu(this._firestore, n, e._key, t._document, new Du(\n        /* hasPendingWrites= */ !1, \n        /* fromCache= */ !1), e.converter)));\n    }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */ function Ah(t, e) {\n    return oa(Fa(t = ga(t, ka)), (n => e(new Ih(t, n))));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */ function Rh() {\n    return new uu(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */ function bh() {\n    return new lu(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */ function Ph(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new fu(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function vh(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new du(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function Vh(t) {\n    return new wu(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single {@link WriteBatch}\n * is 500.\n *\n * Unlike transactions, write batches are persisted offline and therefore are\n * preferable when you don't need to condition your writes on read data.\n *\n * @returns A {@link WriteBatch} that can be used to atomically execute multiple\n * writes.\n */ function Sh(t) {\n    return Fa(t = ga(t, ka)), new rh(t, (e => Th(t, e)));\n}\n\n/**\n * Cloud Firestore\n *\n * @packageDocumentation\n */ !function(t, e = !0) {\n    !function(t) {\n        C = t;\n    }(SDK_VERSION), _registerComponent(new Component(\"firestore\", ((t, {options: n}) => {\n        const s = t.getProvider(\"app\").getImmediate(), i = new ka(s, new H(t.getProvider(\"auth-internal\")));\n        return n = Object.assign({\n            useFetchStreams: e\n        }, n), i._setSettings(n), i;\n    }), \"PUBLIC\" /* PUBLIC */)), registerVersion(S, \"3.3.0\", t), \n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n    registerVersion(S, \"3.3.0\", \"esm2017\");\n}();\n\nexport { nh as AbstractUserDataWriter, Xa as Bytes, xa as CACHE_SIZE_UNLIMITED, Ra as CollectionReference, Ia as DocumentReference, Cu as DocumentSnapshot, Ja as FieldPath, Za as FieldValue, ka as Firestore, j as FirestoreError, tu as GeoPoint, Na as LoadBundleTask, Aa as Query, Fu as QueryConstraint, Nu as QueryDocumentSnapshot, xu as QuerySnapshot, Du as SnapshotMetadata, it as Timestamp, Ih as Transaction, rh as WriteBatch, ha as _DatabaseId, Pt as _DocumentKey, G as _EmptyCredentialsProvider, ft as _FieldPath, ga as _cast, U as _debugAssert, wt as _isBase64Available, F as _logWarn, da as _validateIsNotUsedTogether, gh as addDoc, vh as arrayRemove, Ph as arrayUnion, qa as clearIndexedDbPersistence, ba as collection, Pa as collectionGroup, Ea as connectFirestoreEmulator, mh as deleteDoc, Rh as deleteField, Qa as disableNetwork, va as doc, Ya as documentId, La as enableIndexedDbPersistence, Ba as enableMultiTabIndexedDbPersistence, ja as enableNetwork, Yu as endAt, Ju as endBefore, Fa as ensureFirestoreConfigured, Th as executeWrite, ch as getDoc, uh as getDocFromCache, hh as getDocFromServer, lh as getDocs, fh as getDocsFromCache, dh as getDocsFromServer, Oa as getFirestore, Vh as increment, $a as initializeFirestore, ju as limit, Qu as limitToLast, Ga as loadBundle, za as namedQuery, yh as onSnapshot, ph as onSnapshotsInSync, qu as orderBy, Mu as query, Sa as queryEqual, Va as refEqual, Ah as runTransaction, bh as serverTimestamp, wh as setDoc, k as setLogLevel, $u as snapshotEqual, zu as startAfter, Gu as startAt, Wa as terminate, _h as updateDoc, Ka as waitForPendingWrites, Bu as where, Sh as writeBatch };\n//# sourceMappingURL=index.esm2017.js.map\n"]},"metadata":{},"sourceType":"module"}