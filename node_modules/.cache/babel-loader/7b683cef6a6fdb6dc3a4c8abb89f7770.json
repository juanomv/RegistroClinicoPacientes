{"ast":null,"code":"var _jsxFileName = \"/home/juano/reactProjects/qr_guillo (copia)/src/componets/AddExamen.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Url, headers } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddExamen = _ref => {\n  _s();\n\n  let {\n    salir,\n    reload,\n    accion,\n    valores\n  } = _ref;\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [Update, setUpdate] = useState(false);\n  if (accion === \"update\") setUpdate(true);\n  headers.Authorization = 'Bearer ' + localStorage.getItem('Token');\n\n  const addExamen = async data => {\n    try {\n      let res;\n\n      if (accion === 'New') {\n        res = await axios.post(Url + \"Examen/New\", data, {\n          headers\n        });\n      } else if (accion === 'Update') {\n        data.Id = valores.Id;\n        res = await axios.put(Url + \"Examen/Update\", data, {\n          headers\n        });\n      }\n\n      if (res.data.ok) {\n        salir();\n        reload();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(addExamen),\n    className: \"flex flex-col bg-white w-auto p-4 justify-between\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"mt-4 mb-1\",\n      htmlFor: \"Nombre\",\n      children: \"Examen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"w-96 border-b border-gray-600\",\n      type: \"text\",\n      name: \"Nombre\",\n      ...(Update && 'Value={valores.Nombre}'),\n      id: \"Nombre\",\n      minLength: 1,\n      maxLength: 50,\n      placeholder: \"Nombre de Examen\",\n      ...register(\"Nombre\", {\n        required: {\n          value: true,\n          message: \"Nombre de examen es obligatorio\"\n        },\n        maxLength: {\n          value: 50,\n          message: \"Nombre no debe tener mas 50 caracteres\"\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"Warring\",\n      children: errors.Nombre && errors.Nombre.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"mt-4 mb-1\",\n      htmlFor: \"Nombre\",\n      children: \"Descripcion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"w-96 border-b p-2\",\n      minLength: 1,\n      maxLength: 200,\n      placeholder: \"Breve Descripcion\",\n      ...register(\"Descripcion\", {\n        required: {\n          value: true,\n          message: \"La Descripcion es obligatoria\"\n        },\n        maxLength: {\n          value: 200,\n          message: \"Descripcion no debe tener mas 200 caracteres\"\n        },\n        minLength: {\n          value: 1,\n          message: \"Descripcion no debe tener almenos 1 caracter\"\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"Warring\",\n      children: errors.Descripcion && errors.Descripcion.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"m-auto w-2/3 my-6\",\n      type: \"submit\",\n      value: \"Agregar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddExamen, \"CPheWbLf/S4GHtB/QX66zE6A2aY=\", false, function () {\n  return [useForm];\n});\n\n_c = AddExamen;\nexport default AddExamen;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddExamen\");","map":{"version":3,"sources":["/home/juano/reactProjects/qr_guillo (copia)/src/componets/AddExamen.jsx"],"names":["axios","React","useState","useForm","Url","headers","AddExamen","salir","reload","accion","valores","register","handleSubmit","formState","errors","Update","setUpdate","Authorization","localStorage","getItem","addExamen","data","res","post","Id","put","ok","error","console","log","required","value","message","maxLength","Nombre","minLength","Descripcion"],"mappings":"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","sourcesContent":["import axios  from \"axios\";\nimport React,{ useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\n\nimport {Url,headers} from '../config';\nconst AddExamen = ({salir,reload,accion,valores}) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const [Update, setUpdate] = useState(false)\n  if(accion===\"update\")setUpdate(true)\n  headers.Authorization= 'Bearer '+ localStorage.getItem('Token')\n  const addExamen = async (data) => {\n   \n    \n    try {\n      let res\n      if(accion==='New') {res = await axios.post(Url+\"Examen/New\",data,{headers})}\n      else if(accion==='Update'){\n        data.Id=valores.Id; res = await axios.put(Url+\"Examen/Update\",data,{headers})}\n      if(res.data.ok){\n      salir()\n      reload()\n      }\n      \n    } catch (error) {\n      console.log(error)\n    }\n    \n  };\n  return (\n    <form\n      onSubmit={handleSubmit(addExamen)}\n      className=\"flex flex-col bg-white w-auto p-4 justify-between\"\n    >\n      <label className=\"mt-4 mb-1\" htmlFor=\"Nombre\">\n        Examen\n      </label>\n      <input\n        className=\"w-96 border-b border-gray-600\"\n        type=\"text\"\n        name=\"Nombre\"\n        {...Update && 'Value={valores.Nombre}'}\n        id=\"Nombre\"\n        minLength={1}\n        maxLength={50}\n        placeholder=\"Nombre de Examen\"\n        {...register(\"Nombre\", {\n          required: { value: true, message: \"Nombre de examen es obligatorio\" },\n          maxLength: {\n            value: 50,\n            message: \"Nombre no debe tener mas 50 caracteres\",\n          },\n        })}\n      />\n      <span className=\"Warring\">{errors.Nombre && errors.Nombre.message}</span>\n      <label className=\"mt-4 mb-1\" htmlFor=\"Nombre\">\n        Descripcion\n      </label>\n      <textarea\n        className=\"w-96 border-b p-2\"\n        minLength={1}\n        maxLength={200}\n        placeholder=\"Breve Descripcion\"\n        {...register(\"Descripcion\", {\n          required: { value: true, message: \"La Descripcion es obligatoria\" },\n          maxLength: {\n            value: 200,\n            message: \"Descripcion no debe tener mas 200 caracteres\",\n          },\n          minLength: {\n            value: 1,\n            message: \"Descripcion no debe tener almenos 1 caracter\",\n          },\n        })}\n      />\n      <span className=\"Warring\">{errors.Descripcion && errors.Descripcion.message}</span>\n      <input className=\"m-auto w-2/3 my-6\" type=\"submit\" value=\"Agregar\" />\n    </form>\n  );\n};\n\nexport default AddExamen;\n"]},"metadata":{},"sourceType":"module"}