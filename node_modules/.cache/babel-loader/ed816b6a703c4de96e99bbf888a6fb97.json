{"ast":null,"code":"\"use strict\";\n\nfunction matrix2path(matrix) {\n  var N = matrix.length;\n  var filled = [];\n\n  for (var row = -1; row <= N; row++) {\n    filled[row] = [];\n  }\n\n  var path = [];\n\n  for (var row = 0; row < N; row++) {\n    for (var col = 0; col < N; col++) {\n      if (filled[row][col]) continue;\n      filled[row][col] = 1;\n\n      if (isDark(row, col)) {\n        if (!isDark(row - 1, col)) {\n          path.push(plot(row, col, 'right'));\n        }\n      } else {\n        if (isDark(row, col - 1)) {\n          path.push(plot(row, col, 'down'));\n        }\n      }\n    }\n  }\n\n  return path;\n\n  function isDark(row, col) {\n    if (row < 0 || col < 0 || row >= N || col >= N) return false;\n    return !!matrix[row][col];\n  }\n\n  function plot(row0, col0, dir) {\n    filled[row0][col0] = 1;\n    var res = [];\n    res.push(['M', col0, row0]);\n    var row = row0;\n    var col = col0;\n    var len = 0;\n\n    do {\n      switch (dir) {\n        case 'right':\n          filled[row][col] = 1;\n\n          if (isDark(row, col)) {\n            filled[row - 1][col] = 1;\n\n            if (isDark(row - 1, col)) {\n              res.push(['h', len]);\n              len = 0;\n              dir = 'up';\n            } else {\n              len++;\n              col++;\n            }\n          } else {\n            res.push(['h', len]);\n            len = 0;\n            dir = 'down';\n          }\n\n          break;\n\n        case 'left':\n          filled[row - 1][col - 1] = 1;\n\n          if (isDark(row - 1, col - 1)) {\n            filled[row][col - 1] = 1;\n\n            if (isDark(row, col - 1)) {\n              res.push(['h', -len]);\n              len = 0;\n              dir = 'down';\n            } else {\n              len++;\n              col--;\n            }\n          } else {\n            res.push(['h', -len]);\n            len = 0;\n            dir = 'up';\n          }\n\n          break;\n\n        case 'down':\n          filled[row][col - 1] = 1;\n\n          if (isDark(row, col - 1)) {\n            filled[row][col] = 1;\n\n            if (isDark(row, col)) {\n              res.push(['v', len]);\n              len = 0;\n              dir = 'right';\n            } else {\n              len++;\n              row++;\n            }\n          } else {\n            res.push(['v', len]);\n            len = 0;\n            dir = 'left';\n          }\n\n          break;\n\n        case 'up':\n          filled[row - 1][col] = 1;\n\n          if (isDark(row - 1, col)) {\n            filled[row - 1][col - 1] = 1;\n\n            if (isDark(row - 1, col - 1)) {\n              res.push(['v', -len]);\n              len = 0;\n              dir = 'left';\n            } else {\n              len++;\n              row--;\n            }\n          } else {\n            res.push(['v', -len]);\n            len = 0;\n            dir = 'right';\n          }\n\n          break;\n      }\n    } while (row != row0 || col != col0);\n\n    return res;\n  }\n}\n\nfunction pushSVGPath(matrix, stream, margin) {\n  matrix2path(matrix).forEach(function (subpath) {\n    var res = '';\n\n    for (var k = 0; k < subpath.length; k++) {\n      var item = subpath[k];\n\n      switch (item[0]) {\n        case 'M':\n          res += 'M' + (item[1] + margin) + ' ' + (item[2] + margin);\n          break;\n\n        default:\n          res += item.join('');\n      }\n    }\n\n    res += 'z';\n    stream.push(res);\n  });\n}\n\nfunction SVG_object(matrix, margin) {\n  var stream = [];\n  pushSVGPath(matrix, stream, margin);\n  var result = {\n    size: matrix.length + 2 * margin,\n    path: stream.filter(Boolean).join('')\n  };\n  return result;\n}\n\nfunction SVG(matrix, stream, margin, size, foreColor, backColor, transparent) {\n  var X = matrix.length + 2 * margin;\n  stream.push('<svg xmlns=\"http://www.w3.org/2000/svg\" ');\n\n  if (size > 0) {\n    var XY = X * size;\n    stream.push('width=\"' + XY + '\" height=\"' + XY + '\" ');\n  }\n\n  stream.push('viewBox=\"0 0 ' + X + ' ' + X + '\">');\n  backColor = backColor || \"white\"; // if no backColor defined, make it white\n\n  if (!transparent) stream.push(\"<rect fill=\\\"\".concat(backColor, \"\\\" x=\\\"0\\\" y=\\\"0\\\" width=\\\"\").concat(X, \"\\\" height=\\\"\").concat(X, \"\\\" />\"));\n  stream.push('<path ');\n  if (foreColor) stream.push(\"fill=\\\"\".concat(foreColor, \"\\\" \"));\n  stream.push('d=\"');\n  pushSVGPath(matrix, stream, margin);\n  stream.push('\"/></svg>');\n  stream.push(null);\n}\n\nfunction EPS(matrix, stream, margin, size, foreColor, backColor, transparent) {\n  var N = matrix.length;\n  var scale = 9;\n  var X = (N + 2 * margin) * scale;\n  backColor = backColor || \"1.0 g\"; // if no backColor defined, make it white\n\n  stream.push(['%!PS-Adobe-3.0 EPSF-3.0', '%%BoundingBox: 0 0 ' + X + ' ' + X, '/h { 0 rlineto } bind def', '/v { 0 exch neg rlineto } bind def', '/M { neg ' + (N + margin) + ' add moveto } bind def', '/z { closepath } bind def', // Add PDF-like color operators to simplify color parsing\n  '/g { setgray } bind def', '/k { setcmykcolor } bind def', '/rg { setrgbcolor } bind def', //scale + ' ' + scale + ' scale', // We will scale after we draw background, if we have one\n  ''].join('\\n'));\n\n  if (!transparent) {\n    stream.push(\"gsave \".concat(backColor, \"\\n\"));\n    stream.push(\"0 0 \".concat(X, \" \").concat(X, \" rectfill grestore\\n\"));\n  }\n\n  stream.push(scale + ' ' + scale + ' scale\\n');\n\n  if (foreColor) {\n    stream.push(\"\".concat(foreColor, \"\\n\"));\n  }\n\n  matrix2path(matrix).forEach(function (subpath) {\n    var res = '';\n\n    for (var k = 0; k < subpath.length; k++) {\n      var item = subpath[k];\n\n      switch (item[0]) {\n        case 'M':\n          res += item[1] + margin + ' ' + item[2] + ' M ';\n          break;\n\n        default:\n          res += item[1] + ' ' + item[0] + ' ';\n      }\n    }\n\n    res += 'z\\n';\n    stream.push(res);\n  });\n  stream.push('fill\\n%%EOF\\n');\n  stream.push(null);\n}\n\nfunction PDF(matrix, stream, margin, size, foreColor, backColor, transparent) {\n  // TODO deflate\n  var N = matrix.length;\n  var scale = 9;\n  var X = (N + 2 * margin) * scale;\n  var data = ['%PDF-1.0\\n\\n', '1 0 obj << /Type /Catalog /Pages 2 0 R >> endobj\\n', '2 0 obj << /Type /Pages /Count 1 /Kids [ 3 0 R ] >> endobj\\n'];\n  data.push('3 0 obj << /Type /Page /Parent 2 0 R /Resources <<>> ' + '/Contents 4 0 R /MediaBox [ 0 0 ' + X + ' ' + X + ' ] >> endobj\\n');\n  var path = \"\";\n  backColor = backColor || \"1.0 g\"; // if no backColor defined, make it white\n\n  if (!transparent) {\n    // Set color\n    path += \"q \".concat(backColor, \"\\n\"); // Draw rectangle\n\n    path += '0 0 ' + X + ' ' + X + ' re f Q\\n';\n  }\n\n  path += scale + ' 0 0 ' + scale + ' 0 0 cm\\n';\n  if (foreColor) path += \"\".concat(foreColor, \"\\n\");\n  path += matrix2path(matrix).map(function (subpath) {\n    var res = '';\n    var x, y;\n\n    for (var k = 0; k < subpath.length; k++) {\n      var item = subpath[k];\n\n      switch (item[0]) {\n        case 'M':\n          x = item[1] + margin;\n          y = N - item[2] + margin;\n          res += x + ' ' + y + ' m ';\n          break;\n\n        case 'h':\n          x += item[1];\n          res += x + ' ' + y + ' l ';\n          break;\n\n        case 'v':\n          y -= item[1];\n          res += x + ' ' + y + ' l ';\n          break;\n      }\n    }\n\n    res += 'h';\n    return res;\n  }).join('\\n');\n  path += '\\nf\\n';\n  data.push('4 0 obj << /Length ' + path.length + ' >> stream\\n' + path + 'endstream\\nendobj\\n');\n  var xref = 'xref\\n0 5\\n0000000000 65535 f \\n';\n\n  for (var i = 1, l = data[0].length; i < 5; i++) {\n    xref += ('0000000000' + l).substr(-10) + ' 00000 n \\n';\n    l += data[i].length;\n  }\n\n  data.push(xref, 'trailer << /Root 1 0 R /Size 5 >>\\n', 'startxref\\n' + l + '\\n%%EOF\\n');\n  stream.push(data.join(''));\n  stream.push(null);\n}\n\nmodule.exports = {\n  svg: SVG,\n  eps: EPS,\n  pdf: PDF,\n  svg_object: SVG_object\n};","map":{"version":3,"sources":["/home/juano/reactProjects/Novo-Lab-Clinico/node_modules/qr-image-color/lib/vector.js"],"names":["matrix2path","matrix","N","length","filled","row","path","col","isDark","push","plot","row0","col0","dir","res","len","pushSVGPath","stream","margin","forEach","subpath","k","item","join","SVG_object","result","size","filter","Boolean","SVG","foreColor","backColor","transparent","X","XY","EPS","scale","PDF","data","map","x","y","xref","i","l","substr","module","exports","svg","eps","pdf","svg_object"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction matrix2path(matrix) {\n    var N = matrix.length;\n    var filled = [];\n    for (var row = -1; row <= N; row++) {\n        filled[row] = [];\n    }\n\n    var path = [];\n    for (var row = 0; row < N; row++) {\n        for (var col = 0; col < N; col++) {\n            if (filled[row][col]) continue;\n            filled[row][col] = 1;\n            if (isDark(row, col)) {\n                if (!isDark(row - 1, col)) {\n                    path.push(plot(row, col, 'right'));\n                }\n            } else {\n                if (isDark(row, col - 1)) {\n                    path.push(plot(row, col, 'down'));\n                }\n            }\n        }\n    }\n    return path;\n\n    function isDark(row, col) {\n        if (row < 0 || col < 0 || row >= N || col >= N) return false;\n        return !!matrix[row][col];\n    }\n\n    function plot(row0, col0, dir) {\n        filled[row0][col0] = 1;\n        var res = [];\n        res.push(['M',  col0, row0 ]);\n        var row = row0;\n        var col = col0;\n        var len = 0;\n        do {\n            switch (dir) {\n            case 'right':\n                filled[row][col] = 1;\n                if (isDark(row, col)) {\n                    filled[row - 1][col] = 1;\n                    if (isDark(row - 1, col)) {\n                        res.push(['h', len]);\n                        len = 0;\n                        dir = 'up';\n                    } else {\n                        len++;\n                        col++;\n                    }\n                } else {\n                    res.push(['h', len]);\n                    len = 0;\n                    dir = 'down';\n                }\n                break;\n            case 'left':\n                filled[row - 1][col - 1] = 1;\n                if (isDark(row - 1, col - 1)) {\n                    filled[row][col - 1] = 1;\n                    if (isDark(row, col - 1)) {\n                        res.push(['h', -len]);\n                        len = 0;\n                        dir = 'down';\n                    } else {\n                        len++;\n                        col--;\n                    }\n                } else {\n                    res.push(['h', -len]);\n                    len = 0;\n                    dir = 'up';\n                }\n                break;\n            case 'down':\n                filled[row][col - 1] = 1;\n                if (isDark(row, col - 1)) {\n                    filled[row][col] = 1;\n                    if (isDark(row, col)) {\n                        res.push(['v', len]);\n                        len = 0;\n                        dir = 'right';\n                    } else {\n                        len++;\n                        row++;\n                    }\n                } else {\n                    res.push(['v', len]);\n                    len = 0;\n                    dir = 'left';\n                }\n                break;\n            case 'up':\n                filled[row - 1][col] = 1;\n                if (isDark(row - 1, col)) {\n                    filled[row - 1][col - 1] = 1;\n                    if (isDark(row - 1, col - 1)) {\n                        res.push(['v', -len]);\n                        len = 0;\n                        dir = 'left';\n                    } else {\n                        len++;\n                        row--;\n                    }\n                } else {\n                    res.push(['v', -len]);\n                    len = 0;\n                    dir = 'right';\n                }\n                break;\n            }\n        } while (row != row0 || col != col0);\n        return res;\n    }\n}\n\nfunction pushSVGPath(matrix, stream, margin) {\n    matrix2path(matrix).forEach(function(subpath) {\n        var res = '';\n        for (var k = 0; k < subpath.length; k++) {\n            var item = subpath[k];\n            switch (item[0]) {\n            case 'M':\n                res += 'M' + (item[1] + margin) + ' ' + (item[2] + margin);\n                break;\n            default:\n                res += item.join('');\n            }\n        }\n        res += 'z';\n        stream.push(res);\n    });\n}\n\nfunction SVG_object(matrix, margin) {\n    var stream = [];\n    pushSVGPath(matrix, stream, margin);\n\n    var result = {\n        size: matrix.length + 2 * margin,\n        path: stream.filter(Boolean).join('')\n    }\n\n    return result;\n}\n\nfunction SVG(matrix, stream, margin, size, foreColor, backColor, transparent) {\n    var X = matrix.length + 2 * margin;\n    stream.push('<svg xmlns=\"http://www.w3.org/2000/svg\" ');\n    if (size > 0) {\n        var XY = X * size;\n        stream.push('width=\"' + XY + '\" height=\"' + XY + '\" ');\n    }\n    stream.push('viewBox=\"0 0 ' + X + ' ' + X + '\">');\n\n    backColor = backColor || \"white\";     // if no backColor defined, make it white\n\n    if (!transparent)\n        stream.push(`<rect fill=\"${backColor}\" x=\"0\" y=\"0\" width=\"${X}\" height=\"${X}\" />`);\n    stream.push('<path ');\n    if (foreColor)\n        stream.push(`fill=\"${foreColor}\" `);\n    stream.push('d=\"');\n    pushSVGPath(matrix, stream, margin);\n    stream.push('\"/></svg>');\n    stream.push(null);\n}\n\nfunction EPS(matrix, stream, margin, size, foreColor, backColor, transparent) {\n    var N = matrix.length;\n    var scale = 9;\n    var X = (N + 2 * margin) * scale;\n\n    backColor = backColor || \"1.0 g\";     // if no backColor defined, make it white\n\n    stream.push([\n        '%!PS-Adobe-3.0 EPSF-3.0',\n        '%%BoundingBox: 0 0 ' + X + ' ' + X,\n        '/h { 0 rlineto } bind def',\n        '/v { 0 exch neg rlineto } bind def',\n        '/M { neg ' + (N + margin) + ' add moveto } bind def',\n        '/z { closepath } bind def',\n\n        // Add PDF-like color operators to simplify color parsing\n        '/g { setgray } bind def',\n        '/k { setcmykcolor } bind def',\n        '/rg { setrgbcolor } bind def',\n        //scale + ' ' + scale + ' scale', // We will scale after we draw background, if we have one\n        ''\n    ].join('\\n'));\n\n    if (!transparent){\n        stream.push(`gsave ${backColor}\\n`);\n        stream.push(`0 0 ${X} ${X} rectfill grestore\\n`);\n    }\n\n    stream.push( scale + ' ' + scale + ' scale\\n');\n\n    if (foreColor){\n        stream.push(`${foreColor}\\n`);\n    }\n    \n    \n    matrix2path(matrix).forEach(function(subpath) {\n        var res = '';\n        for (var k = 0; k < subpath.length; k++) {\n            var item = subpath[k];\n            switch (item[0]) {\n            case 'M':\n                res += (item[1] + margin) + ' ' + item[2] + ' M ';\n                break;\n            default:\n                res += item[1] + ' ' + item[0] + ' ';\n            }\n        }\n        res += 'z\\n';\n        stream.push(res);\n    });\n\n    stream.push('fill\\n%%EOF\\n');\n    stream.push(null);\n}\n\nfunction PDF(matrix, stream, margin, size, foreColor, backColor, transparent) {\n    // TODO deflate\n    var N = matrix.length;\n    var scale = 9;\n    var X = (N + 2 * margin) * scale;\n    var data = [\n        '%PDF-1.0\\n\\n',\n        '1 0 obj << /Type /Catalog /Pages 2 0 R >> endobj\\n',\n        '2 0 obj << /Type /Pages /Count 1 /Kids [ 3 0 R ] >> endobj\\n',\n    ];\n    data.push('3 0 obj << /Type /Page /Parent 2 0 R /Resources <<>> ' +\n        '/Contents 4 0 R /MediaBox [ 0 0 ' + X + ' ' + X + ' ] >> endobj\\n');\n\n    var path = \"\";\n    \n    backColor = backColor || \"1.0 g\";     // if no backColor defined, make it white\n\n    if (!transparent){\n        // Set color\n        path += `q ${backColor}\\n`;\n        // Draw rectangle\n        path += '0 0 ' + X + ' ' + X + ' re f Q\\n'\n    }\n\n    path += scale + ' 0 0 ' + scale + ' 0 0 cm\\n';\n\n    if (foreColor)\n        path += `${foreColor}\\n`;\n\n    path += matrix2path(matrix).map(function(subpath) {\n        var res = '';\n        var x, y;\n        for (var k = 0; k < subpath.length; k++) {\n            var item = subpath[k];\n            switch (item[0]) {\n            case 'M':\n                x = item[1] + margin;\n                y = N - item[2] + margin;\n                res += x + ' ' + y + ' m ';\n                break;\n            case 'h':\n                x += item[1];\n                res += x + ' ' + y + ' l ';\n                break;\n            case 'v':\n                y -= item[1];\n                res += x + ' ' + y + ' l ';\n                break;\n            }\n        }\n        res += 'h';\n        return res;\n    }).join('\\n');\n    path += '\\nf\\n';\n    data.push('4 0 obj << /Length ' + path.length + ' >> stream\\n' +\n        path + 'endstream\\nendobj\\n');\n\n    var xref = 'xref\\n0 5\\n0000000000 65535 f \\n';\n    for (var i = 1, l = data[0].length; i < 5; i++) {\n        xref += ('0000000000' + l).substr(-10) + ' 00000 n \\n';\n        l += data[i].length;\n    }\n    data.push(\n        xref,\n        'trailer << /Root 1 0 R /Size 5 >>\\n',\n        'startxref\\n' + l + '\\n%%EOF\\n'\n    );\n    stream.push(data.join(''));\n    stream.push(null);\n}\n\nmodule.exports = {\n    svg: SVG,\n    eps: EPS,\n    pdf: PDF,\n    svg_object: SVG_object\n}\n"]},"metadata":{},"sourceType":"script"}