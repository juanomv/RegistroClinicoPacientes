{"ast":null,"code":"import React from 'react';\nimport qr from 'qr-image-color';\n\nfunction objectWithoutProperties(obj, exclude) {\n  var target = {};\n\n  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];\n\n  return target;\n}\n\nvar getTextFromChildren = function (children) {\n  var label = '';\n  React.Children.map(children, function (child) {\n    if (typeof child === 'string') {\n      label += child;\n    }\n  });\n  return label;\n};\n\nvar QRImage = function (ref) {\n  var text = ref.text;\n  var ecLevel = ref.ecLevel;\n  var size = ref.size;\n  var margin = ref.margin;\n  var transparent = ref.transparent;\n  var color = ref.color;\n  var background = ref.background;\n  var children = ref.children;\n  var rest = objectWithoutProperties(ref, [\"text\", \"ecLevel\", \"size\", \"margin\", \"transparent\", \"color\", \"background\", \"children\"]);\n  var props = rest;\n  var options = {\n    type: 'png',\n    ecLevel: ecLevel,\n    size: size,\n    margin: margin,\n    transparent: transparent,\n    color: color,\n    background: background\n  };\n  var svgStr = qr.imageSync(text || getTextFromChildren(children), options);\n  var uri = \"data:image/png;base64, \" + svgStr.toString('base64');\n  return React.createElement('img', Object.assign({}, {\n    alt: ''\n  }, props, {\n    src: uri\n  }));\n};\n\nQRImage.defaultProps = {\n  text: '',\n  ecLevel: 'M',\n  // Error correction level\n  size: 5,\n  // Size of one module in pixels\n  margin: 4,\n  // White space around QR image in modules\n  transparent: false,\n  background: undefined,\n  // Color for code background\n  color: '#333' //  Color for code blocks\n\n};\nvar index = React.memo(QRImage);\nexport default index;","map":{"version":3,"sources":["/home/juano/reactProjects/Novo-Lab-Clinico/node_modules/react-qr-image/dist/react-qr-image.m.js"],"names":["React","qr","objectWithoutProperties","obj","exclude","target","k","Object","prototype","hasOwnProperty","call","indexOf","getTextFromChildren","children","label","Children","map","child","QRImage","ref","text","ecLevel","size","margin","transparent","color","background","rest","props","options","type","svgStr","imageSync","uri","toString","createElement","assign","alt","src","defaultProps","undefined","index","memo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport qr from 'qr-image-color';\n\nfunction objectWithoutProperties (obj, exclude) { var target = {}; for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k]; return target; }\n\nvar getTextFromChildren = function (children) {\n  var label = '';\n  React.Children.map(children, function (child) {\n    if (typeof child === 'string') {\n      label += child;\n    }\n  });\n  return label;\n};\n\nvar QRImage = function (ref) {\n  var text = ref.text;\n  var ecLevel = ref.ecLevel;\n  var size = ref.size;\n  var margin = ref.margin;\n  var transparent = ref.transparent;\n  var color = ref.color;\n  var background = ref.background;\n  var children = ref.children;\n  var rest = objectWithoutProperties( ref, [\"text\", \"ecLevel\", \"size\", \"margin\", \"transparent\", \"color\", \"background\", \"children\"] );\n  var props = rest;\n\n  var options = {\n    type: 'png',\n    ecLevel: ecLevel,\n    size: size,\n    margin: margin,\n    transparent: transparent,\n    color: color,\n    background: background\n  };\n  var svgStr = qr.imageSync(text || getTextFromChildren(children), options);\n  var uri = \"data:image/png;base64, \" + (svgStr.toString('base64'));\n  return React.createElement( 'img', Object.assign({}, { alt: '' }, props, { src: uri }));\n};\n\nQRImage.defaultProps = {\n  text: '',\n  ecLevel: 'M',\n  // Error correction level\n  size: 5,\n  // Size of one module in pixels\n  margin: 4,\n  // White space around QR image in modules\n  transparent: false,\n  background: undefined,\n  // Color for code background\n  color: '#333' //  Color for code blocks\n\n};\nvar index = React.memo(QRImage);\n\nexport default index;\n"]},"metadata":{},"sourceType":"module"}