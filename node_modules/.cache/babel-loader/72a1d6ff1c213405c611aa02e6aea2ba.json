{"ast":null,"code":"var _jsxFileName = \"/home/juano/reactProjects/qr_guillo (copia)/src/componets/AddExamen.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Url, headers } from \"../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddExamen = _ref => {\n  _s();\n\n  let {\n    salir,\n    reload,\n    accion,\n    valores\n  } = _ref;\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [Update, setUpdate] = useState(null);\n  headers.Authorization = \"Bearer \" + localStorage.getItem(\"Token\");\n  useEffect(() => {\n    if (accion === \"Update\") setUpdate(valores);\n  }, []);\n\n  const addExamen = async data => {\n    try {\n      let res;\n\n      if (accion === \"New\") {\n        res = await axios.post(Url + \"Examen/New\", data, {\n          headers\n        });\n      } else if (accion === \"Update\") {\n        data.Id = valores.Id;\n        res = await axios.put(Url + \"Examen/Update\", data, {\n          headers\n        });\n      }\n\n      if (res.data.ok) {\n        salir();\n        reload();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(addExamen),\n    className: \"flex flex-col bg-white w-auto p-4 justify-between\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"mt-4 mb-1\",\n      htmlFor: \"Nombre\",\n      children: \"Examen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"w-96 border-b border-gray-600\",\n      type: \"text\",\n      name: \"Nombre\",\n      id: \"Nombre\",\n      defaultValue: Update,\n      minLength: 1,\n      maxLength: 50,\n      placeholder: \"Nombre de Examen\",\n      ...register(\"Nombre\", {\n        required: {\n          value: true,\n          message: \"Nombre de examen es obligatorio\"\n        },\n        maxLength: {\n          value: 50,\n          message: \"Nombre no debe tener mas 50 caracteres\"\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"Warring\",\n      children: errors.Nombre && errors.Nombre.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"mt-4 mb-1\",\n      htmlFor: \"Nombre\",\n      children: \"Descripcion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"w-96 border-b p-2\",\n      minLength: 1,\n      maxLength: 200,\n      placeholder: \"Breve Descripcion\",\n      ...register(\"Descripcion\", {\n        required: {\n          value: true,\n          message: \"La Descripcion es obligatoria\"\n        },\n        maxLength: {\n          value: 200,\n          message: \"Descripcion no debe tener mas 200 caracteres\"\n        },\n        minLength: {\n          value: 1,\n          message: \"Descripcion no debe tener almenos 1 caracter\"\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"Warring\",\n      children: errors.Descripcion && errors.Descripcion.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"m-auto w-2/3 my-6\",\n      type: \"submit\",\n      value: \"Agregar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddExamen, \"wm4AjIJ+/iSUpVFzsXcH2N1/sCc=\", false, function () {\n  return [useForm];\n});\n\n_c = AddExamen;\nexport default AddExamen;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddExamen\");","map":{"version":3,"sources":["/home/juano/reactProjects/qr_guillo (copia)/src/componets/AddExamen.jsx"],"names":["axios","React","useEffect","useState","useForm","Url","headers","AddExamen","salir","reload","accion","valores","register","handleSubmit","formState","errors","Update","setUpdate","Authorization","localStorage","getItem","addExamen","data","res","post","Id","put","ok","error","console","log","required","value","message","maxLength","Nombre","minLength","Descripcion"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nimport { Url, headers } from \"../config\";\nconst AddExamen = ({ salir, reload, accion, valores }) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const [Update, setUpdate] = useState(null);\n\n  headers.Authorization = \"Bearer \" + localStorage.getItem(\"Token\");\n  useEffect(() => {\n    if (accion === \"Update\") setUpdate(valores);\n  }, []);\n\n  const addExamen = async (data) => {\n    try {\n      let res;\n      if (accion === \"New\") {\n        res = await axios.post(Url + \"Examen/New\", data, { headers });\n      } else if (accion === \"Update\") {\n        data.Id = valores.Id;\n        res = await axios.put(Url + \"Examen/Update\", data, { headers });\n      }\n      if (res.data.ok) {\n        salir();\n        reload();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <form\n      onSubmit={handleSubmit(addExamen)}\n      className=\"flex flex-col bg-white w-auto p-4 justify-between\"\n    >\n      <label className=\"mt-4 mb-1\" htmlFor=\"Nombre\">\n        Examen\n      </label>\n      <input\n        className=\"w-96 border-b border-gray-600\"\n        type=\"text\"\n        name=\"Nombre\"\n        id=\"Nombre\"\n        defaultValue={Update}\n        minLength={1}\n        maxLength={50}\n        placeholder=\"Nombre de Examen\"\n        {...register(\"Nombre\", {\n          required: { value: true, message: \"Nombre de examen es obligatorio\" },\n          maxLength: {\n            value: 50,\n            message: \"Nombre no debe tener mas 50 caracteres\",\n          },\n        })}\n      />\n      <span className=\"Warring\">{errors.Nombre && errors.Nombre.message}</span>\n      <label className=\"mt-4 mb-1\" htmlFor=\"Nombre\">\n        Descripcion\n      </label>\n      <textarea\n        className=\"w-96 border-b p-2\"\n        minLength={1}\n        maxLength={200}\n        placeholder=\"Breve Descripcion\"\n        {...register(\"Descripcion\", {\n          required: { value: true, message: \"La Descripcion es obligatoria\" },\n          maxLength: {\n            value: 200,\n            message: \"Descripcion no debe tener mas 200 caracteres\",\n          },\n          minLength: {\n            value: 1,\n            message: \"Descripcion no debe tener almenos 1 caracter\",\n          },\n        })}\n      />\n      <span className=\"Warring\">\n        {errors.Descripcion && errors.Descripcion.message}\n      </span>\n      <input className=\"m-auto w-2/3 my-6\" type=\"submit\" value=\"Agregar\" />\n    </form>\n  );\n};\n\nexport default AddExamen;\n"]},"metadata":{},"sourceType":"module"}