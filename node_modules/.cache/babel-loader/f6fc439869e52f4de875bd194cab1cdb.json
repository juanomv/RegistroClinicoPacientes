{"ast":null,"code":"import { httpsCallable as httpsCallable$1 } from 'firebase/functions';\nimport { from } from 'rxjs';\nimport { map } from 'rxjs/operators';\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nfunction httpsCallable(functions, name, options) {\n  var callable = httpsCallable$1(functions, name, options);\n  return function (data) {\n    return from(callable(data)).pipe(map(function (r) {\n      return r.data;\n    }));\n  };\n}\n\nexport { httpsCallable };","map":{"version":3,"sources":["../../functions/index.ts"],"names":["vanillaHttpsCallable"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMO,SAAS,aAAT,CAAuB,SAAvB,EAAkC,IAAlC,EAAwC,OAAxC,EAAiD;AACpD,MAAI,QAAQ,GAAGA,eAAoB,CAAC,SAAD,EAAY,IAAZ,EAAkB,OAAlB,CAAnC;AACA,SAAO,UAAU,IAAV,EAAgB;AACnB,WAAO,IAAI,CAAC,QAAQ,CAAC,IAAD,CAAT,CAAJ,CAAqB,IAArB,CAA0B,GAAG,CAAC,UAAU,CAAV,EAAa;AAAE,aAAO,CAAC,CAAC,IAAT;AAAgB,KAAhC,CAA7B,CAAP;AACH,GAFD;AAGJ","sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// function is used as a namespace to access types\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { httpsCallable as vanillaHttpsCallable } from 'firebase/functions';\nimport { from } from 'rxjs';\nimport { map } from 'rxjs/operators';\nexport function httpsCallable(functions, name, options) {\n    var callable = vanillaHttpsCallable(functions, name, options);\n    return function (data) {\n        return from(callable(data)).pipe(map(function (r) { return r.data; }));\n    };\n}\n"]},"metadata":{},"sourceType":"module"}