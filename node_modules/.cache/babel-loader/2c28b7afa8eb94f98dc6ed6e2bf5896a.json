{"ast":null,"code":"import { uuid, toArray } from './util';\n\nfunction formatCSSText(style) {\n  const content = style.getPropertyValue('content');\n  return `${style.cssText} content: '${content.replace(/'|\"/g, '')}';`;\n}\n\nfunction formatCSSProperties(style) {\n  return toArray(style).map(name => {\n    const value = style.getPropertyValue(name);\n    const priority = style.getPropertyPriority(name);\n    return `${name}: ${value}${priority ? ' !important' : ''};`;\n  }).join(' ');\n}\n\nfunction getPseudoElementStyle(className, pseudo, style) {\n  const selector = `.${className}:${pseudo}`;\n  const cssText = style.cssText ? formatCSSText(style) : formatCSSProperties(style);\n  return document.createTextNode(`${selector}{${cssText}}`);\n}\n\nfunction clonePseudoElement(nativeNode, clonedNode, pseudo) {\n  const style = window.getComputedStyle(nativeNode, pseudo);\n  const content = style.getPropertyValue('content');\n\n  if (content === '' || content === 'none') {\n    return;\n  }\n\n  const className = uuid();\n\n  try {\n    clonedNode.className = `${clonedNode.className} ${className}`;\n  } catch (err) {\n    return;\n  }\n\n  const styleElement = document.createElement('style');\n  styleElement.appendChild(getPseudoElementStyle(className, pseudo, style));\n  clonedNode.appendChild(styleElement);\n}\n\nexport function clonePseudoElements(nativeNode, clonedNode) {\n  clonePseudoElement(nativeNode, clonedNode, ':before');\n  clonePseudoElement(nativeNode, clonedNode, ':after');\n}","map":{"version":3,"sources":["../src/clonePseudoElements.ts"],"names":[],"mappings":"AAAA,SAAS,IAAT,EAAe,OAAf,QAA8B,QAA9B;;AAIA,SAAS,aAAT,CAAuB,KAAvB,EAAiD;AAC/C,QAAM,OAAO,GAAG,KAAK,CAAC,gBAAN,CAAuB,SAAvB,CAAhB;AACA,SAAO,GAAG,KAAK,CAAC,OAAO,cAAc,OAAO,CAAC,OAAR,CAAgB,MAAhB,EAAwB,EAAxB,CAA2B,IAAhE;AACD;;AAED,SAAS,mBAAT,CAA6B,KAA7B,EAAuD;AACrD,SAAO,OAAO,CAAS,KAAT,CAAP,CACJ,GADI,CACC,IAAD,IAAS;AACZ,UAAM,KAAK,GAAG,KAAK,CAAC,gBAAN,CAAuB,IAAvB,CAAd;AACA,UAAM,QAAQ,GAAG,KAAK,CAAC,mBAAN,CAA0B,IAA1B,CAAjB;AAEA,WAAO,GAAG,IAAI,KAAK,KAAK,GAAG,QAAQ,GAAG,aAAH,GAAmB,EAAE,GAAxD;AACD,GANI,EAOJ,IAPI,CAOC,GAPD,CAAP;AAQD;;AAED,SAAS,qBAAT,CACE,SADF,EAEE,MAFF,EAGE,KAHF,EAG4B;AAE1B,QAAM,QAAQ,GAAG,IAAI,SAAS,IAAI,MAAM,EAAxC;AACA,QAAM,OAAO,GAAG,KAAK,CAAC,OAAN,GACZ,aAAa,CAAC,KAAD,CADD,GAEZ,mBAAmB,CAAC,KAAD,CAFvB;AAIA,SAAO,QAAQ,CAAC,cAAT,CAAwB,GAAG,QAAQ,IAAI,OAAO,GAA9C,CAAP;AACD;;AAED,SAAS,kBAAT,CACE,UADF,EAEE,UAFF,EAGE,MAHF,EAGgB;AAEd,QAAM,KAAK,GAAG,MAAM,CAAC,gBAAP,CAAwB,UAAxB,EAAoC,MAApC,CAAd;AACA,QAAM,OAAO,GAAG,KAAK,CAAC,gBAAN,CAAuB,SAAvB,CAAhB;;AACA,MAAI,OAAO,KAAK,EAAZ,IAAkB,OAAO,KAAK,MAAlC,EAA0C;AACxC;AACD;;AAED,QAAM,SAAS,GAAG,IAAI,EAAtB;;AAEA,MAAI;AACF,IAAA,UAAU,CAAC,SAAX,GAAuB,GAAG,UAAU,CAAC,SAAS,IAAI,SAAS,EAA3D;AACD,GAFD,CAEE,OAAO,GAAP,EAAY;AACZ;AACD;;AAED,QAAM,YAAY,GAAG,QAAQ,CAAC,aAAT,CAAuB,OAAvB,CAArB;AACA,EAAA,YAAY,CAAC,WAAb,CAAyB,qBAAqB,CAAC,SAAD,EAAY,MAAZ,EAAoB,KAApB,CAA9C;AACA,EAAA,UAAU,CAAC,WAAX,CAAuB,YAAvB;AACD;;AAED,OAAM,SAAU,mBAAV,CACJ,UADI,EAEJ,UAFI,EAES;AAEb,EAAA,kBAAkB,CAAC,UAAD,EAAa,UAAb,EAAyB,SAAzB,CAAlB;AACA,EAAA,kBAAkB,CAAC,UAAD,EAAa,UAAb,EAAyB,QAAzB,CAAlB;AACD","sourceRoot":"","sourcesContent":["import { uuid, toArray } from './util';\nfunction formatCSSText(style) {\n    const content = style.getPropertyValue('content');\n    return `${style.cssText} content: '${content.replace(/'|\"/g, '')}';`;\n}\nfunction formatCSSProperties(style) {\n    return toArray(style)\n        .map((name) => {\n        const value = style.getPropertyValue(name);\n        const priority = style.getPropertyPriority(name);\n        return `${name}: ${value}${priority ? ' !important' : ''};`;\n    })\n        .join(' ');\n}\nfunction getPseudoElementStyle(className, pseudo, style) {\n    const selector = `.${className}:${pseudo}`;\n    const cssText = style.cssText\n        ? formatCSSText(style)\n        : formatCSSProperties(style);\n    return document.createTextNode(`${selector}{${cssText}}`);\n}\nfunction clonePseudoElement(nativeNode, clonedNode, pseudo) {\n    const style = window.getComputedStyle(nativeNode, pseudo);\n    const content = style.getPropertyValue('content');\n    if (content === '' || content === 'none') {\n        return;\n    }\n    const className = uuid();\n    try {\n        clonedNode.className = `${clonedNode.className} ${className}`;\n    }\n    catch (err) {\n        return;\n    }\n    const styleElement = document.createElement('style');\n    styleElement.appendChild(getPseudoElementStyle(className, pseudo, style));\n    clonedNode.appendChild(styleElement);\n}\nexport function clonePseudoElements(nativeNode, clonedNode) {\n    clonePseudoElement(nativeNode, clonedNode, ':before');\n    clonePseudoElement(nativeNode, clonedNode, ':after');\n}\n//# sourceMappingURL=clonePseudoElements.js.map"]},"metadata":{},"sourceType":"module"}