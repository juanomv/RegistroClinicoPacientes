{"ast":null,"code":"import { Observable, merge, from, of } from 'rxjs';\nimport { delay, map, switchMap, scan, distinctUntilChanged, withLatestFrom, skipWhile } from 'rxjs/operators';\nimport { onChildAdded, onChildRemoved, onChildChanged, onChildMoved, onValue, off, get as get$1 } from 'firebase/database';\nimport { __assign, __spreadArray } from 'tslib';\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _a;\n\nvar ListenEvent;\n\n(function (ListenEvent) {\n  ListenEvent[\"added\"] = \"child_added\";\n  ListenEvent[\"removed\"] = \"child_removed\";\n  ListenEvent[\"changed\"] = \"child_changed\";\n  ListenEvent[\"moved\"] = \"child_moved\";\n  ListenEvent[\"value\"] = \"value\";\n})(ListenEvent || (ListenEvent = {}));\n\nvar ListenerMethods = Object.freeze((_a = {}, _a[ListenEvent.added] = onChildAdded, _a[ListenEvent.removed] = onChildRemoved, _a[ListenEvent.changed] = onChildChanged, _a[ListenEvent.moved] = onChildMoved, _a[ListenEvent.value] = onValue, _a));\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Create an observable from a Database Reference or Database Query.\n * @param ref Database Reference\n * @param event Listen event type ('value', 'added', 'changed', 'removed', 'moved')\n */\n\nfunction fromRef(ref, event) {\n  return new Observable(function (subscriber) {\n    var fn = ListenerMethods[event](ref, function (snapshot, prevKey) {\n      subscriber.next({\n        snapshot: snapshot,\n        prevKey: prevKey,\n        event: event\n      });\n    }, subscriber.error.bind(subscriber));\n    return {\n      unsubscribe: function () {\n        off(ref, event, fn);\n      }\n    };\n  }).pipe( // Ensures subscribe on observable is async. This handles\n  // a quirk in the SDK where on/once callbacks can happen\n  // synchronously.\n  delay(0));\n}\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Check the length of the provided array. If it is empty return an array\n * that is populated with all the Realtime Database child events.\n * @param events\n */\n\n\nfunction validateEventsArray(events) {\n  if (events == null || events.length === 0) {\n    events = [ListenEvent.added, ListenEvent.removed, ListenEvent.changed, ListenEvent.moved];\n  }\n\n  return events;\n}\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Get the snapshot changes of an object\n * @param query\n */\n\n\nfunction object(query) {\n  return fromRef(query, ListenEvent.value);\n}\n/**\n * Get an array of object values, optionally with a mapped key\n * @param query object ref or query\n * @param keyField map the object key to a specific field\n */\n\n\nfunction objectVal(query, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return fromRef(query, ListenEvent.value).pipe(map(function (change) {\n    return changeToData(change, options);\n  }));\n}\n\nfunction changeToData(change, options) {\n  var _a;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  var val = change.snapshot.val(); // match the behavior of the JS SDK when the snapshot doesn't exist\n\n  if (!change.snapshot.exists()) {\n    return val;\n  } // val can be a primitive type\n\n\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  return __assign(__assign({}, val), options.keyField ? (_a = {}, _a[options.keyField] = change.snapshot.key, _a) : null);\n}\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction stateChanges(query, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var events = validateEventsArray(options.events);\n  var childEvent$ = events.map(function (event) {\n    return fromRef(query, event);\n  });\n  return merge.apply(void 0, childEvent$);\n}\n\nfunction get(query) {\n  return from(get$1(query)).pipe(map(function (snapshot) {\n    var event = ListenEvent.value;\n    return {\n      snapshot: snapshot,\n      prevKey: null,\n      event: event\n    };\n  }));\n}\n\nfunction list(query, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var events = validateEventsArray(options.events);\n  return get(query).pipe(switchMap(function (change) {\n    if (!change.snapshot.exists()) {\n      return of([]);\n    }\n\n    var childEvent$ = [of(change)];\n    events.forEach(function (event) {\n      childEvent$.push(fromRef(query, event));\n    });\n    return merge.apply(void 0, childEvent$).pipe(scan(buildView, []));\n  }), distinctUntilChanged());\n}\n/**\n * Get an object mapped to its value, and optionally its key\n * @param query object ref or query\n * @param keyField map the object key to a specific field\n */\n\n\nfunction listVal(query, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return list(query).pipe(map(function (arr) {\n    return arr.map(function (change) {\n      return changeToData(change, options);\n    });\n  }));\n}\n\nfunction positionFor(changes, key) {\n  var len = changes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (changes[i].snapshot.key === key) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction positionAfter(changes, prevKey) {\n  if (prevKey == null) {\n    return 0;\n  } else {\n    var i = positionFor(changes, prevKey);\n\n    if (i === -1) {\n      return changes.length;\n    } else {\n      return i + 1;\n    }\n  }\n}\n\nfunction buildView(current, change) {\n  var snapshot = change.snapshot,\n      prevKey = change.prevKey,\n      event = change.event;\n  var key = snapshot.key;\n  var currentKeyPosition = positionFor(current, key);\n  var afterPreviousKeyPosition = positionAfter(current, prevKey || undefined);\n\n  switch (event) {\n    case ListenEvent.value:\n      if (change.snapshot && change.snapshot.exists()) {\n        var prevKey_1 = null;\n        change.snapshot.forEach(function (snapshot) {\n          var action = {\n            snapshot: snapshot,\n            event: ListenEvent.value,\n            prevKey: prevKey_1\n          };\n          prevKey_1 = snapshot.key;\n          current = __spreadArray(__spreadArray([], current), [action]);\n          return false;\n        });\n      }\n\n      return current;\n\n    case ListenEvent.added:\n      if (currentKeyPosition > -1) {\n        // check that the previouskey is what we expect, else reorder\n        var previous = current[currentKeyPosition - 1];\n\n        if ((previous && previous.snapshot.key || null) !== prevKey) {\n          current = current.filter(function (x) {\n            return x.snapshot.key !== snapshot.key;\n          });\n          current.splice(afterPreviousKeyPosition, 0, change);\n        }\n      } else if (prevKey == null) {\n        return __spreadArray([change], current);\n      } else {\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, change);\n      }\n\n      return current;\n\n    case ListenEvent.removed:\n      return current.filter(function (x) {\n        return x.snapshot.key !== snapshot.key;\n      });\n\n    case ListenEvent.changed:\n      return current.map(function (x) {\n        return x.snapshot.key === key ? change : x;\n      });\n\n    case ListenEvent.moved:\n      if (currentKeyPosition > -1) {\n        var data = current.splice(currentKeyPosition, 1)[0];\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, data);\n        return current;\n      }\n\n      return current;\n    // default will also remove null results\n\n    default:\n      return current;\n  }\n}\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction auditTrail(query, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var auditTrail$ = stateChanges(query, options).pipe(scan(function (current, changes) {\n    return __spreadArray(__spreadArray([], current), [changes]);\n  }, []));\n  return waitForLoaded(query, auditTrail$);\n}\n\nfunction loadedData(query) {\n  // Create an observable of loaded values to retrieve the\n  // known dataset. This will allow us to know what key to\n  // emit the \"whole\" array at when listening for child events.\n  return fromRef(query, ListenEvent.value).pipe(map(function (data) {\n    // Store the last key in the data set\n    var lastKeyToLoad; // Loop through loaded dataset to find the last key\n\n    data.snapshot.forEach(function (child) {\n      lastKeyToLoad = child.key;\n      return false;\n    }); // return data set and the current last key loaded\n\n    return {\n      data: data,\n      lastKeyToLoad: lastKeyToLoad\n    };\n  }));\n}\n\nfunction waitForLoaded(query, snap$) {\n  var loaded$ = loadedData(query);\n  return loaded$.pipe(withLatestFrom(snap$), // Get the latest values from the \"loaded\" and \"child\" datasets\n  // We can use both datasets to form an array of the latest values.\n  map(function (_a) {\n    var loaded = _a[0],\n        changes = _a[1]; // Store the last key in the data set\n\n    var lastKeyToLoad = loaded.lastKeyToLoad; // Store all child keys loaded at this point\n\n    var loadedKeys = changes.map(function (change) {\n      return change.snapshot.key;\n    });\n    return {\n      changes: changes,\n      lastKeyToLoad: lastKeyToLoad,\n      loadedKeys: loadedKeys\n    };\n  }), // This is the magical part, only emit when the last load key\n  // in the dataset has been loaded by a child event. At this point\n  // we can assume the dataset is \"whole\".\n  skipWhile(function (meta) {\n    return meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1;\n  }), // Pluck off the meta data because the user only cares\n  // to iterate through the snapshots\n  map(function (meta) {\n    return meta.changes;\n  }));\n}\n\nexport { ListenEvent, ListenerMethods, auditTrail, changeToData, fromRef, list, listVal, object, objectVal, stateChanges };","map":{"version":3,"sources":["../../database/interfaces.ts","../../database/fromRef.ts","../../database/utils.ts","../../database/object/index.ts","../../database/list/index.ts","../../database/list/audit-trail.ts"],"names":["databaseGet"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a;\nimport { onChildAdded, onChildChanged, onChildMoved, onChildRemoved, onValue } from 'firebase/database';\nexport var ListenEvent;\n(function (ListenEvent) {\n    ListenEvent[\"added\"] = \"child_added\";\n    ListenEvent[\"removed\"] = \"child_removed\";\n    ListenEvent[\"changed\"] = \"child_changed\";\n    ListenEvent[\"moved\"] = \"child_moved\";\n    ListenEvent[\"value\"] = \"value\";\n})(ListenEvent || (ListenEvent = {}));\nexport var ListenerMethods = Object.freeze((_a = {},\n    _a[ListenEvent.added] = onChildAdded,\n    _a[ListenEvent.removed] = onChildRemoved,\n    _a[ListenEvent.changed] = onChildChanged,\n    _a[ListenEvent.moved] = onChildMoved,\n    _a[ListenEvent.value] = onValue,\n    _a));\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Observable } from 'rxjs';\nimport { delay } from 'rxjs/operators';\nimport { ListenerMethods } from './interfaces';\nimport { off } from 'firebase/database';\n/**\n * Create an observable from a Database Reference or Database Query.\n * @param ref Database Reference\n * @param event Listen event type ('value', 'added', 'changed', 'removed', 'moved')\n */\nexport function fromRef(ref, event) {\n    return new Observable(function (subscriber) {\n        var fn = ListenerMethods[event](ref, function (snapshot, prevKey) {\n            subscriber.next({ snapshot: snapshot, prevKey: prevKey, event: event });\n        }, subscriber.error.bind(subscriber));\n        return {\n            unsubscribe: function () {\n                off(ref, event, fn);\n            }\n        };\n    }).pipe(\n    // Ensures subscribe on observable is async. This handles\n    // a quirk in the SDK where on/once callbacks can happen\n    // synchronously.\n    delay(0));\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ListenEvent } from './interfaces';\n/**\n * Check the length of the provided array. If it is empty return an array\n * that is populated with all the Realtime Database child events.\n * @param events\n */\nexport function validateEventsArray(events) {\n    if (events == null || events.length === 0) {\n        events = [\n            ListenEvent.added,\n            ListenEvent.removed,\n            ListenEvent.changed,\n            ListenEvent.moved\n        ];\n    }\n    return events;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign } from \"tslib\";\nimport { ListenEvent } from '../interfaces';\nimport { fromRef } from '../fromRef';\nimport { map } from 'rxjs/operators';\n/**\n * Get the snapshot changes of an object\n * @param query\n */\nexport function object(query) {\n    return fromRef(query, ListenEvent.value);\n}\n/**\n * Get an array of object values, optionally with a mapped key\n * @param query object ref or query\n * @param keyField map the object key to a specific field\n */\nexport function objectVal(query, options) {\n    if (options === void 0) { options = {}; }\n    return fromRef(query, ListenEvent.value).pipe(map(function (change) { return changeToData(change, options); }));\n}\nexport function changeToData(change, options) {\n    var _a;\n    if (options === void 0) { options = {}; }\n    var val = change.snapshot.val();\n    // match the behavior of the JS SDK when the snapshot doesn't exist\n    if (!change.snapshot.exists()) {\n        return val;\n    }\n    // val can be a primitive type\n    if (typeof val !== 'object') {\n        return val;\n    }\n    return __assign(__assign({}, val), (options.keyField ? (_a = {}, _a[options.keyField] = change.snapshot.key, _a) : null));\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __spreadArray } from \"tslib\";\nimport { ListenEvent } from '../interfaces';\nimport { of, merge, from } from 'rxjs';\nimport { validateEventsArray } from '../utils';\nimport { fromRef } from '../fromRef';\nimport { switchMap, scan, distinctUntilChanged, map } from 'rxjs/operators';\nimport { changeToData } from '../object';\nimport { get as databaseGet } from 'firebase/database';\nexport function stateChanges(query, options) {\n    if (options === void 0) { options = {}; }\n    var events = validateEventsArray(options.events);\n    var childEvent$ = events.map(function (event) { return fromRef(query, event); });\n    return merge.apply(void 0, childEvent$);\n}\nfunction get(query) {\n    return from(databaseGet(query)).pipe(map(function (snapshot) {\n        var event = ListenEvent.value;\n        return { snapshot: snapshot, prevKey: null, event: event };\n    }));\n}\nexport function list(query, options) {\n    if (options === void 0) { options = {}; }\n    var events = validateEventsArray(options.events);\n    return get(query).pipe(switchMap(function (change) {\n        if (!change.snapshot.exists()) {\n            return of([]);\n        }\n        var childEvent$ = [of(change)];\n        events.forEach(function (event) {\n            childEvent$.push(fromRef(query, event));\n        });\n        return merge.apply(void 0, childEvent$).pipe(scan(buildView, []));\n    }), distinctUntilChanged());\n}\n/**\n * Get an object mapped to its value, and optionally its key\n * @param query object ref or query\n * @param keyField map the object key to a specific field\n */\nexport function listVal(query, options) {\n    if (options === void 0) { options = {}; }\n    return list(query).pipe(map(function (arr) {\n        return arr.map(function (change) { return changeToData(change, options); });\n    }));\n}\nfunction positionFor(changes, key) {\n    var len = changes.length;\n    for (var i = 0; i < len; i++) {\n        if (changes[i].snapshot.key === key) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction positionAfter(changes, prevKey) {\n    if (prevKey == null) {\n        return 0;\n    }\n    else {\n        var i = positionFor(changes, prevKey);\n        if (i === -1) {\n            return changes.length;\n        }\n        else {\n            return i + 1;\n        }\n    }\n}\nfunction buildView(current, change) {\n    var snapshot = change.snapshot, prevKey = change.prevKey, event = change.event;\n    var key = snapshot.key;\n    var currentKeyPosition = positionFor(current, key);\n    var afterPreviousKeyPosition = positionAfter(current, prevKey || undefined);\n    switch (event) {\n        case ListenEvent.value:\n            if (change.snapshot && change.snapshot.exists()) {\n                var prevKey_1 = null;\n                change.snapshot.forEach(function (snapshot) {\n                    var action = {\n                        snapshot: snapshot,\n                        event: ListenEvent.value,\n                        prevKey: prevKey_1\n                    };\n                    prevKey_1 = snapshot.key;\n                    current = __spreadArray(__spreadArray([], current), [action]);\n                    return false;\n                });\n            }\n            return current;\n        case ListenEvent.added:\n            if (currentKeyPosition > -1) {\n                // check that the previouskey is what we expect, else reorder\n                var previous = current[currentKeyPosition - 1];\n                if (((previous && previous.snapshot.key) || null) !== prevKey) {\n                    current = current.filter(function (x) { return x.snapshot.key !== snapshot.key; });\n                    current.splice(afterPreviousKeyPosition, 0, change);\n                }\n            }\n            else if (prevKey == null) {\n                return __spreadArray([change], current);\n            }\n            else {\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, change);\n            }\n            return current;\n        case ListenEvent.removed:\n            return current.filter(function (x) { return x.snapshot.key !== snapshot.key; });\n        case ListenEvent.changed:\n            return current.map(function (x) { return (x.snapshot.key === key ? change : x); });\n        case ListenEvent.moved:\n            if (currentKeyPosition > -1) {\n                var data = current.splice(currentKeyPosition, 1)[0];\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, data);\n                return current;\n            }\n            return current;\n        // default will also remove null results\n        default:\n            return current;\n    }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __spreadArray } from \"tslib\";\nimport { ListenEvent } from '../interfaces';\nimport { fromRef } from '../fromRef';\nimport { map, withLatestFrom, scan, skipWhile } from 'rxjs/operators';\nimport { stateChanges } from './index';\nexport function auditTrail(query, options) {\n    if (options === void 0) { options = {}; }\n    var auditTrail$ = stateChanges(query, options).pipe(scan(function (current, changes) { return __spreadArray(__spreadArray([], current), [changes]); }, []));\n    return waitForLoaded(query, auditTrail$);\n}\nfunction loadedData(query) {\n    // Create an observable of loaded values to retrieve the\n    // known dataset. This will allow us to know what key to\n    // emit the \"whole\" array at when listening for child events.\n    return fromRef(query, ListenEvent.value).pipe(map(function (data) {\n        // Store the last key in the data set\n        var lastKeyToLoad;\n        // Loop through loaded dataset to find the last key\n        data.snapshot.forEach(function (child) {\n            lastKeyToLoad = child.key;\n            return false;\n        });\n        // return data set and the current last key loaded\n        return { data: data, lastKeyToLoad: lastKeyToLoad };\n    }));\n}\nfunction waitForLoaded(query, snap$) {\n    var loaded$ = loadedData(query);\n    return loaded$.pipe(withLatestFrom(snap$), \n    // Get the latest values from the \"loaded\" and \"child\" datasets\n    // We can use both datasets to form an array of the latest values.\n    map(function (_a) {\n        var loaded = _a[0], changes = _a[1];\n        // Store the last key in the data set\n        var lastKeyToLoad = loaded.lastKeyToLoad;\n        // Store all child keys loaded at this point\n        var loadedKeys = changes.map(function (change) { return change.snapshot.key; });\n        return { changes: changes, lastKeyToLoad: lastKeyToLoad, loadedKeys: loadedKeys };\n    }), \n    // This is the magical part, only emit when the last load key\n    // in the dataset has been loaded by a child event. At this point\n    // we can assume the dataset is \"whole\".\n    skipWhile(function (meta) {\n        return meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1;\n    }), \n    // Pluck off the meta data because the user only cares\n    // to iterate through the snapshots\n    map(function (meta) { return meta.changes; }));\n}\n"]},"metadata":{},"sourceType":"module"}