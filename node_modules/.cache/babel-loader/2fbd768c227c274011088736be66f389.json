{"ast":null,"code":"import { Observable } from 'rxjs';\nimport { ensureInitialized, getValue as getValue$1, getString as getString$1, getNumber as getNumber$1, getBoolean as getBoolean$1, getAll as getAll$1 } from 'firebase/remote-config';\n\nfunction parameter$(_a) {\n  var remoteConfig = _a.remoteConfig,\n      key = _a.key,\n      getter = _a.getter;\n  return new Observable(function (subscriber) {\n    ensureInitialized(remoteConfig).then(function () {\n      // 'this' for the getter loses context in the next()\n      // call, so it needs to be bound.\n      var boundGetter = getter.bind(remoteConfig);\n      subscriber.next(boundGetter(remoteConfig, key));\n    });\n  });\n}\n\nfunction getValue(remoteConfig, key) {\n  var getter = getValue$1;\n  return parameter$({\n    remoteConfig: remoteConfig,\n    key: key,\n    getter: getter\n  });\n}\n\nfunction getString(remoteConfig, key) {\n  var getter = getString$1;\n  return parameter$({\n    remoteConfig: remoteConfig,\n    key: key,\n    getter: getter\n  });\n}\n\nfunction getNumber(remoteConfig, key) {\n  var getter = getNumber$1;\n  return parameter$({\n    remoteConfig: remoteConfig,\n    key: key,\n    getter: getter\n  });\n}\n\nfunction getBoolean(remoteConfig, key) {\n  var getter = getBoolean$1;\n  return parameter$({\n    remoteConfig: remoteConfig,\n    key: key,\n    getter: getter\n  });\n}\n\nfunction getAll(remoteConfig) {\n  var getter = getAll$1; // No key is needed for getAll()\n\n  return parameter$({\n    remoteConfig: remoteConfig,\n    key: '',\n    getter: getter\n  });\n}\n\nexport { getAll, getBoolean, getNumber, getString, getValue };","map":{"version":3,"sources":["../../remote-config/index.ts"],"names":["baseGetValue","baseGetString","baseGetNumber","baseGetBoolean","baseGetAll"],"mappings":";;;AAEA,SAAS,UAAT,CAAoB,EAApB,EAAwB;AACpB,MAAI,YAAY,GAAG,EAAE,CAAC,YAAtB;AAAA,MAAoC,GAAG,GAAG,EAAE,CAAC,GAA7C;AAAA,MAAkD,MAAM,GAAG,EAAE,CAAC,MAA9D;AACA,SAAO,IAAI,UAAJ,CAAe,UAAU,UAAV,EAAsB;AACxC,IAAA,iBAAiB,CAAC,YAAD,CAAjB,CAAgC,IAAhC,CAAqC,YAAY;AACzD;AACA;AACY,UAAI,WAAW,GAAG,MAAM,CAAC,IAAP,CAAY,YAAZ,CAAlB;AACA,MAAA,UAAU,CAAC,IAAX,CAAgB,WAAW,CAAC,YAAD,EAAe,GAAf,CAA3B;AACH,KALD;AAMH,GAPM,CAAP;AAQH;;AACM,SAAS,QAAT,CAAkB,YAAlB,EAAgC,GAAhC,EAAqC;AACxC,MAAI,MAAM,GAAGA,UAAb;AACA,SAAO,UAAU,CAAC;AAAE,IAAA,YAAY,EAAE,YAAhB;AAA8B,IAAA,GAAG,EAAE,GAAnC;AAAwC,IAAA,MAAM,EAAE;AAAhD,GAAD,CAAjB;AACH;;AACM,SAAS,SAAT,CAAmB,YAAnB,EAAiC,GAAjC,EAAsC;AACzC,MAAI,MAAM,GAAGC,WAAb;AACA,SAAO,UAAU,CAAC;AAAE,IAAA,YAAY,EAAE,YAAhB;AAA8B,IAAA,GAAG,EAAE,GAAnC;AAAwC,IAAA,MAAM,EAAE;AAAhD,GAAD,CAAjB;AACH;;AACM,SAAS,SAAT,CAAmB,YAAnB,EAAiC,GAAjC,EAAsC;AACzC,MAAI,MAAM,GAAGC,WAAb;AACA,SAAO,UAAU,CAAC;AAAE,IAAA,YAAY,EAAE,YAAhB;AAA8B,IAAA,GAAG,EAAE,GAAnC;AAAwC,IAAA,MAAM,EAAE;AAAhD,GAAD,CAAjB;AACH;;AACM,SAAS,UAAT,CAAoB,YAApB,EAAkC,GAAlC,EAAuC;AAC1C,MAAI,MAAM,GAAGC,YAAb;AACA,SAAO,UAAU,CAAC;AAAE,IAAA,YAAY,EAAE,YAAhB;AAA8B,IAAA,GAAG,EAAE,GAAnC;AAAwC,IAAA,MAAM,EAAE;AAAhD,GAAD,CAAjB;AACH;;AACM,SAAS,MAAT,CAAgB,YAAhB,EAA8B;AACjC,MAAI,MAAM,GAAGC,QAAb,CADiC,CAErC;;AACI,SAAO,UAAU,CAAC;AAAE,IAAA,YAAY,EAAE,YAAhB;AAA8B,IAAA,GAAG,EAAE,EAAnC;AAAuC,IAAA,MAAM,EAAE;AAA/C,GAAD,CAAjB;AACJ","sourcesContent":["import { Observable } from 'rxjs';\nimport { ensureInitialized, getValue as baseGetValue, getString as baseGetString, getNumber as baseGetNumber, getBoolean as baseGetBoolean, getAll as baseGetAll, } from 'firebase/remote-config';\nfunction parameter$(_a) {\n    var remoteConfig = _a.remoteConfig, key = _a.key, getter = _a.getter;\n    return new Observable(function (subscriber) {\n        ensureInitialized(remoteConfig).then(function () {\n            // 'this' for the getter loses context in the next()\n            // call, so it needs to be bound.\n            var boundGetter = getter.bind(remoteConfig);\n            subscriber.next(boundGetter(remoteConfig, key));\n        });\n    });\n}\nexport function getValue(remoteConfig, key) {\n    var getter = baseGetValue;\n    return parameter$({ remoteConfig: remoteConfig, key: key, getter: getter });\n}\nexport function getString(remoteConfig, key) {\n    var getter = baseGetString;\n    return parameter$({ remoteConfig: remoteConfig, key: key, getter: getter });\n}\nexport function getNumber(remoteConfig, key) {\n    var getter = baseGetNumber;\n    return parameter$({ remoteConfig: remoteConfig, key: key, getter: getter });\n}\nexport function getBoolean(remoteConfig, key) {\n    var getter = baseGetBoolean;\n    return parameter$({ remoteConfig: remoteConfig, key: key, getter: getter });\n}\nexport function getAll(remoteConfig) {\n    var getter = baseGetAll;\n    // No key is needed for getAll()\n    return parameter$({ remoteConfig: remoteConfig, key: '', getter: getter });\n}\n"]},"metadata":{},"sourceType":"module"}