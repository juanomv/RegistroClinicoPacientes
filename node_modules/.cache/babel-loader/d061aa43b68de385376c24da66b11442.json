{"ast":null,"code":"import { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function observeOn(scheduler, delay) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n\n  return operate(function (source, subscriber) {\n    source.subscribe(new OperatorSubscriber(subscriber, function (value) {\n      return executeSchedule(subscriber, scheduler, function () {\n        return subscriber.next(value);\n      }, delay);\n    }, function () {\n      return executeSchedule(subscriber, scheduler, function () {\n        return subscriber.complete();\n      }, delay);\n    }, function (err) {\n      return executeSchedule(subscriber, scheduler, function () {\n        return subscriber.error(err);\n      }, delay);\n    }));\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/observeOn.ts"],"names":[],"mappings":"AAEA,SAAS,eAAT,QAAgC,yBAAhC;AACA,SAAS,OAAT,QAAwB,cAAxB;AACA,SAAS,kBAAT,QAAmC,sBAAnC;AAwDA,OAAM,SAAU,SAAV,CAAuB,SAAvB,EAAiD,KAAjD,EAA0D;AAAT,MAAA,KAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAS;;AAC9D,SAAO,OAAO,CAAC,UAAC,MAAD,EAAS,UAAT,EAAmB;AAChC,IAAA,MAAM,CAAC,SAAP,CACE,IAAI,kBAAJ,CACE,UADF,EAEE,UAAC,KAAD,EAAM;AAAK,aAAA,eAAe,CAAC,UAAD,EAAa,SAAb,EAAwB,YAAA;AAAM,eAAA,UAAU,CAAC,IAAX,CAAA,KAAA,CAAA;AAAsB,OAApD,EAAf,KAAe,CAAf;AAA2E,KAFxF,EAGE,YAAA;AAAM,aAAA,eAAe,CAAC,UAAD,EAAa,SAAb,EAAwB,YAAA;AAAM,eAAA,UAAU,CAAV,QAAA,EAAA;AAAqB,OAAnD,EAAf,KAAe,CAAf;AAA0E,KAHlF,EAIE,UAAC,GAAD,EAAI;AAAK,aAAA,eAAe,CAAC,UAAD,EAAa,SAAb,EAAwB,YAAA;AAAM,eAAA,UAAU,CAAC,KAAX,CAAA,GAAA,CAAA;AAAqB,OAAnD,EAAf,KAAe,CAAf;AAA0E,KAJrF,CADF;AAQD,GATa,CAAd;AAUD","sourceRoot":"","sourcesContent":["import { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\nexport function observeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return operate(function (source, subscriber) {\n        source.subscribe(new OperatorSubscriber(subscriber, function (value) { return executeSchedule(subscriber, scheduler, function () { return subscriber.next(value); }, delay); }, function () { return executeSchedule(subscriber, scheduler, function () { return subscriber.complete(); }, delay); }, function (err) { return executeSchedule(subscriber, scheduler, function () { return subscriber.error(err); }, delay); }));\n    });\n}\n//# sourceMappingURL=observeOn.js.map"]},"metadata":{},"sourceType":"module"}