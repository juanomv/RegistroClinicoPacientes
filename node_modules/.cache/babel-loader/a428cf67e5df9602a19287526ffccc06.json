{"ast":null,"code":"import _objectSpread from\"/home/juano/reactProjects/Novo-Lab-Clinico/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/home/juano/reactProjects/Novo-Lab-Clinico/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/juano/reactProjects/Novo-Lab-Clinico/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/juano/reactProjects/Novo-Lab-Clinico/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{useForm}from\"react-hook-form\";import Axios from'axios';import{Url,headers}from'../config';import{validarCedula}from'../funtions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddPaciente=function AddPaciente(_ref){var salir=_ref.salir,reload=_ref.reload,accion=_ref.accion,valores=_ref.valores;headers.Authorization='Bearer '+localStorage.getItem('Token');var _useState=useState({Cedula:null,Name:null,Id:null}),_useState2=_slicedToArray(_useState,2),Update=_useState2[0],setUpdate=_useState2[1];var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit,errors=_useForm.formState.errors,reset=_useForm.reset;var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),Mensaje=_useState4[0],setMensaje=_useState4[1];useEffect(function(){if(accion===\"Update\"){setUpdate(valores);reset({Cedula:valores.Cedula},{Name:valores.Nombre});}},[]);var addPaciente=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){var datos,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;if(!validarCedula(data.Cedula)){_context.next=17;break;}if(!(accion===\"New\")){_context.next=9;break;}datos={Cedula:data.Cedula,Nombre:data.Name};_context.next=6;return Axios.post(Url+\"Paciente/New\",datos,{headers:headers});case 6:res=_context.sent;_context.next=15;break;case 9:if(!(accion===\"Update\")){_context.next=15;break;}datos={Cedula:data.Cedula,Nombre:data.Name,Id:Update.Id};data.Id=valores.Id;_context.next=14;return Axios.put(Url+\"Paciente/Update\",datos,{headers:headers});case 14:res=_context.sent;case 15:_context.next=18;break;case 17:setMensaje('El numero de cedula no es valido');case 18:if(res.data.ok){salir();reload();}else{setMensaje(res.data.msg);}_context.next=24;break;case 21:_context.prev=21;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 24:case\"end\":return _context.stop();}}},_callee,null,[[0,21]]);}));return function addPaciente(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(addPaciente),className:\"flex flex-col bg-white w-auto p-4 \",children:[/*#__PURE__*/_jsx(\"label\",{className:\"mt-4 mb-1\",htmlFor:\"cedula\",children:\"Cedula\"}),/*#__PURE__*/_jsx(\"input\",_objectSpread({onClick:function onClick(){return setMensaje(null);},className:\"w-96 border-b border-gray-600\",type:\"text\",name:\"Cedula\",id:\"Cedula\",pattern:\"[0-9]{10}\",minLength:10,maxLength:10,placeholder:\"Cedula del Paciente\",value:Update.Cedula},register('Cedula',{required:{value:true,message:\"Numero de Cedula es Obbligatrio\"}}))),/*#__PURE__*/_jsx(\"span\",{className:\"Warring\",children:errors.Cedula&&errors.Cedula.message}),Mensaje&&/*#__PURE__*/_jsx(\"span\",{className:\"Warring\",children:Mensaje}),/*#__PURE__*/_jsx(\"label\",{className:\"mt-4 mb-1\",htmlFor:\"Nombre\",children:\"Nombre\"}),/*#__PURE__*/_jsx(\"input\",_objectSpread({defaultValue:Update.Nombre,className:\"w-96 border-b border-gray-600\",type:\"text\",name:\"Nombre\",id:\"Nombre\",placeholder:\"Nombre del Paciente\"},register('Name',{required:{value:true,message:'Nombre es obligatorio'},maxLength:{value:90,message:'Numero maximo de Caracteres : 90'}}))),/*#__PURE__*/_jsx(\"span\",{className:\"Warring\",children:errors.Name&&errors.Name.message}),/*#__PURE__*/_jsx(\"input\",{className:\"m-auto w-2/3 my-6\",type:\"submit\",value:\"Agregar\"})]});};export default AddPaciente;","map":{"version":3,"sources":["/home/juano/reactProjects/Novo-Lab-Clinico/src/componets/AddPaciente.jsx"],"names":["React","useEffect","useState","useForm","Axios","Url","headers","validarCedula","AddPaciente","salir","reload","accion","valores","Authorization","localStorage","getItem","Cedula","Name","Id","Update","setUpdate","register","handleSubmit","errors","formState","reset","Mensaje","setMensaje","Nombre","addPaciente","data","datos","post","res","put","ok","msg","console","log","required","value","message","maxLength"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useForm} from \"react-hook-form\";\nimport Axios from 'axios'\nimport {Url,headers} from '../config'\nimport {validarCedula} from '../funtions'\nconst AddPaciente = ({salir,reload,accion, valores}) => {\n  headers.Authorization = 'Bearer ' + localStorage.getItem('Token')\n  const [Update, setUpdate] = useState({Cedula:null,Name:null,Id:null});\n  const { register, handleSubmit, formState:{errors} ,reset } = useForm();\n  const [Mensaje,setMensaje] = useState(null)\n\n  useEffect(() => {\n    if (accion === \"Update\") {\n      setUpdate(valores);\n      reset({Cedula:valores.Cedula},{Name:valores.Nombre})\n     \n    }\n    \n  }, []);\n  \n\n  const addPaciente=async (data)=>{\n    let datos \n    try {\n      let res;\n      if(validarCedula(data.Cedula)){\n      if (accion === \"New\") {\n        datos = { Cedula:data.Cedula, Nombre:data.Name}\n        res = await Axios.post(Url + \"Paciente/New\", datos, { headers });\n      } else if (accion === \"Update\") {\n        datos = { Cedula:data.Cedula, Nombre:data.Name ,Id:Update.Id}\n        data.Id = valores.Id;\n        res = await Axios.put(Url + \"Paciente/Update\", datos, { headers });\n      }\n    }else(setMensaje('El numero de cedula no es valido'))\n      if(res.data.ok){\n       \n        salir()\n        reload()\n        }\n      else{\n        \n        setMensaje(res.data.msg)\n      }\n    } catch (error) {\n      console.log(error)\n    }\n    \n  }\n\n\n\n  return (\n    <form onSubmit={handleSubmit(addPaciente)} className='flex flex-col bg-white w-auto p-4 '>\n        <label className='mt-4 mb-1' htmlFor=\"cedula\">Cedula</label>\n        <input onClick={()=>setMensaje(null)} className='w-96 border-b border-gray-600' type=\"text\" name=\"Cedula\" id=\"Cedula\" pattern='[0-9]{10}' minLength={10} maxLength={10} placeholder='Cedula del Paciente'\n        \n        value={Update.Cedula}\n        {...register('Cedula',{\n          required:{\n            value:true,\n            message:\"Numero de Cedula es Obbligatrio\"\n          }\n        })} />  \n        <span className='Warring'>{errors.Cedula && errors.Cedula.message }</span>\n        {Mensaje&&<span className='Warring'>{Mensaje}</span>}\n        <label className='mt-4 mb-1' htmlFor=\"Nombre\">Nombre</label>\n        <input defaultValue={Update.Nombre} className='w-96 border-b border-gray-600' type=\"text\" name=\"Nombre\" id=\"Nombre\"  placeholder='Nombre del Paciente'\n        {...register('Name',{\n          required:{\n            value:true,\n            message:'Nombre es obligatorio'\n        },\n          maxLength:{\n            value: 90,\n            message: 'Numero maximo de Caracteres : 90'\n          }\n        \n      })}\n        />\n       <span className='Warring'>{errors.Name && errors.Name.message }</span>\n        <input className='m-auto w-2/3 my-6' type=\"submit\" value=\"Agregar\" />\n    </form>\n  )\n}\n\nexport default AddPaciente"]},"metadata":{},"sourceType":"module"}