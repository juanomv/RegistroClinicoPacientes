{"ast":null,"code":"\"use strict\"; // {{{1 Galois Field Math\n\nvar GF256_BASE = 285;\nvar EXP_TABLE = [1];\nvar LOG_TABLE = [];\n\nfor (var i = 1; i < 256; i++) {\n  var n = EXP_TABLE[i - 1] << 1;\n  if (n > 255) n = n ^ GF256_BASE;\n  EXP_TABLE[i] = n;\n}\n\nfor (var i = 0; i < 255; i++) {\n  LOG_TABLE[EXP_TABLE[i]] = i;\n}\n\nfunction exp(k) {\n  while (k < 0) {\n    k += 255;\n  }\n\n  while (k > 255) {\n    k -= 255;\n  }\n\n  return EXP_TABLE[k];\n}\n\nfunction log(k) {\n  if (k < 1 || k > 255) {\n    throw Error('Bad log(' + k + ')');\n  }\n\n  return LOG_TABLE[k];\n} // {{{1 Generator Polynomials\n\n\nvar POLYNOMIALS = [[0], // a^0 x^0\n[0, 0], // a^0 x^1 + a^0 x^0\n[0, 25, 1] // a^0 x^2 + a^25 x^1 + a^1 x^0\n// and so on...\n];\n\nfunction generatorPolynomial(num) {\n  if (POLYNOMIALS[num]) {\n    return POLYNOMIALS[num];\n  }\n\n  var prev = generatorPolynomial(num - 1);\n  var res = [];\n  res[0] = prev[0];\n\n  for (var i = 1; i <= num; i++) {\n    res[i] = log(exp(prev[i]) ^ exp(prev[i - 1] + num - 1));\n  }\n\n  POLYNOMIALS[num] = res;\n  return res;\n} // {{{1 export functions\n\n\nmodule.exports = function calculate_ec(msg, ec_len) {\n  // `msg` could be array or buffer\n  // convert `msg` to array\n  msg = [].slice.call(msg); // Generator Polynomial\n\n  var poly = generatorPolynomial(ec_len);\n\n  for (var i = 0; i < ec_len; i++) {\n    msg.push(0);\n  }\n\n  while (msg.length > ec_len) {\n    if (!msg[0]) {\n      msg.shift();\n      continue;\n    }\n\n    var log_k = log(msg[0]);\n\n    for (var i = 0; i <= ec_len; i++) {\n      msg[i] = msg[i] ^ exp(poly[i] + log_k);\n    }\n\n    msg.shift();\n  }\n\n  return new Buffer.from(msg);\n};","map":{"version":3,"sources":["/home/juano/reactProjects/qr_guillo (copia)/node_modules/qr-image-color/lib/errorcode.js"],"names":["GF256_BASE","EXP_TABLE","LOG_TABLE","i","n","exp","k","log","Error","POLYNOMIALS","generatorPolynomial","num","prev","res","module","exports","calculate_ec","msg","ec_len","slice","call","poly","push","length","shift","log_k","Buffer","from"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\n// {{{1 Galois Field Math\r\nvar GF256_BASE = 285;\r\n\r\nvar EXP_TABLE = [1];\r\nvar LOG_TABLE = [];\r\n\r\nfor (var i = 1; i < 256; i++) {\r\n    var n = EXP_TABLE[i - 1] << 1;\r\n    if (n > 255) n = n ^ GF256_BASE;\r\n    EXP_TABLE[i] = n;\r\n}\r\n\r\nfor (var i = 0; i < 255; i++) {\r\n    LOG_TABLE[EXP_TABLE[i]] = i;\r\n}\r\n\r\nfunction exp(k) {\r\n    while (k < 0) k += 255;\r\n    while (k > 255) k -= 255;\r\n    return EXP_TABLE[k];\r\n}\r\n\r\nfunction log(k) {\r\n    if (k < 1 || k > 255) {\r\n        throw Error('Bad log(' + k + ')');\r\n    }\r\n    return LOG_TABLE[k];\r\n}\r\n\r\n// {{{1 Generator Polynomials\r\nvar POLYNOMIALS = [\r\n    [0], // a^0 x^0\r\n    [0, 0], // a^0 x^1 + a^0 x^0\r\n    [0, 25, 1], // a^0 x^2 + a^25 x^1 + a^1 x^0\r\n    // and so on...\r\n];\r\n\r\nfunction generatorPolynomial(num) {\r\n    if (POLYNOMIALS[num]) {\r\n        return POLYNOMIALS[num];\r\n    }\r\n    var prev = generatorPolynomial(num - 1);\r\n    var res = [];\r\n\r\n    res[0] = prev[0];\r\n    for (var i = 1; i <= num; i++) {\r\n        res[i] = log(exp(prev[i]) ^ exp(prev[i - 1] + num - 1));\r\n    }\r\n    POLYNOMIALS[num] = res;\r\n    return res;\r\n}\r\n\r\n// {{{1 export functions\r\nmodule.exports = function calculate_ec(msg, ec_len) {\r\n    // `msg` could be array or buffer\r\n    // convert `msg` to array\r\n    msg = [].slice.call(msg);\r\n\r\n    // Generator Polynomial\r\n    var poly = generatorPolynomial(ec_len);\r\n\r\n    for (var i = 0; i < ec_len; i++) msg.push(0);\r\n    while (msg.length > ec_len) {\r\n        if (!msg[0]) {\r\n            msg.shift();\r\n            continue;\r\n        }\r\n        var log_k = log(msg[0]);\r\n        for (var i = 0; i <= ec_len; i++) {\r\n            msg[i] = msg[i] ^ exp(poly[i] + log_k);\r\n        }\r\n        msg.shift();\r\n    }\r\n    return new Buffer.from(msg);\r\n}\r\n"]},"metadata":{},"sourceType":"script"}