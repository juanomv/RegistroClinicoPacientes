{"ast":null,"code":"\"use strict\"; // {{{1 Initialize matrix with zeros\n\nfunction init(version) {\n  var N = version * 4 + 17;\n  var matrix = [];\n  var zeros = new Buffer.alloc(N);\n  zeros.fill(0);\n  zeros = [].slice.call(zeros);\n\n  for (var i = 0; i < N; i++) {\n    matrix[i] = zeros.slice();\n  }\n\n  return matrix;\n} // {{{1 Put finders into matrix\n\n\nfunction fillFinders(matrix) {\n  var N = matrix.length;\n\n  for (var i = -3; i <= 3; i++) {\n    for (var j = -3; j <= 3; j++) {\n      var max = Math.max(i, j);\n      var min = Math.min(i, j);\n      var pixel = max == 2 && min >= -2 || min == -2 && max <= 2 ? 0x80 : 0x81;\n      matrix[3 + i][3 + j] = pixel;\n      matrix[3 + i][N - 4 + j] = pixel;\n      matrix[N - 4 + i][3 + j] = pixel;\n    }\n  }\n\n  for (var i = 0; i < 8; i++) {\n    matrix[7][i] = matrix[i][7] = matrix[7][N - i - 1] = matrix[i][N - 8] = matrix[N - 8][i] = matrix[N - 1 - i][7] = 0x80;\n  }\n} // {{{1 Put align and timinig\n\n\nfunction fillAlignAndTiming(matrix) {\n  var N = matrix.length;\n\n  if (N > 21) {\n    var len = N - 13;\n    var delta = Math.round(len / Math.ceil(len / 28));\n    if (delta % 2) delta++;\n    var res = [];\n\n    for (var p = len + 6; p > 10; p -= delta) {\n      res.unshift(p);\n    }\n\n    res.unshift(6);\n\n    for (var i = 0; i < res.length; i++) {\n      for (var j = 0; j < res.length; j++) {\n        var x = res[i],\n            y = res[j];\n        if (matrix[x][y]) continue;\n\n        for (var r = -2; r <= 2; r++) {\n          for (var c = -2; c <= 2; c++) {\n            var max = Math.max(r, c);\n            var min = Math.min(r, c);\n            var pixel = max == 1 && min >= -1 || min == -1 && max <= 1 ? 0x80 : 0x81;\n            matrix[x + r][y + c] = pixel;\n          }\n        }\n      }\n    }\n  }\n\n  for (var i = 8; i < N - 8; i++) {\n    matrix[6][i] = matrix[i][6] = i % 2 ? 0x80 : 0x81;\n  }\n} // {{{1 Fill reserved areas with zeroes\n\n\nfunction fillStub(matrix) {\n  var N = matrix.length;\n\n  for (var i = 0; i < 8; i++) {\n    if (i != 6) {\n      matrix[8][i] = matrix[i][8] = 0x80;\n    }\n\n    matrix[8][N - 1 - i] = 0x80;\n    matrix[N - 1 - i][8] = 0x80;\n  }\n\n  matrix[8][8] = 0x80;\n  matrix[N - 8][8] = 0x81;\n  if (N < 45) return;\n\n  for (var i = N - 11; i < N - 8; i++) {\n    for (var j = 0; j < 6; j++) {\n      matrix[i][j] = matrix[j][i] = 0x80;\n    }\n  }\n} // {{{1 Fill reserved areas\n\n\nvar fillReserved = function () {\n  var FORMATS = Array(32);\n  var VERSIONS = Array(40);\n  var gf15 = 0x0537;\n  var gf18 = 0x1f25;\n  var formats_mask = 0x5412;\n\n  for (var format = 0; format < 32; format++) {\n    var res = format << 10;\n\n    for (var i = 5; i > 0; i--) {\n      if (res >>> 9 + i) {\n        res = res ^ gf15 << i - 1;\n      }\n    }\n\n    FORMATS[format] = (res | format << 10) ^ formats_mask;\n  }\n\n  for (var version = 7; version <= 40; version++) {\n    var res = version << 12;\n\n    for (var i = 6; i > 0; i--) {\n      if (res >>> 11 + i) {\n        res = res ^ gf18 << i - 1;\n      }\n    }\n\n    VERSIONS[version] = res | version << 12;\n  }\n\n  var EC_LEVELS = {\n    L: 1,\n    M: 0,\n    Q: 3,\n    H: 2\n  };\n  return function fillReserved(matrix, ec_level, mask) {\n    var N = matrix.length;\n    var format = FORMATS[EC_LEVELS[ec_level] << 3 | mask];\n\n    function F(k) {\n      return format >> k & 1 ? 0x81 : 0x80;\n    }\n\n    ;\n\n    for (var i = 0; i < 8; i++) {\n      matrix[8][N - 1 - i] = F(i);\n      if (i < 6) matrix[i][8] = F(i);\n    }\n\n    for (var i = 8; i < 15; i++) {\n      matrix[N - 15 + i][8] = F(i);\n      if (i > 8) matrix[8][14 - i] = F(i);\n    }\n\n    matrix[7][8] = F(6);\n    matrix[8][8] = F(7);\n    matrix[8][7] = F(8);\n    var version = VERSIONS[(N - 17) / 4];\n    if (!version) return;\n\n    function V(k) {\n      return version >> k & 1 ? 0x81 : 0x80;\n    }\n\n    ;\n\n    for (var i = 0; i < 6; i++) {\n      for (var j = 0; j < 3; j++) {\n        matrix[N - 11 + j][i] = matrix[i][N - 11 + j] = V(i * 3 + j);\n      }\n    }\n  };\n}(); // {{{1 Fill data\n\n\nvar fillData = function () {\n  var MASK_FUNCTIONS = [function (i, j) {\n    return (i + j) % 2 == 0;\n  }, function (i, j) {\n    return i % 2 == 0;\n  }, function (i, j) {\n    return j % 3 == 0;\n  }, function (i, j) {\n    return (i + j) % 3 == 0;\n  }, function (i, j) {\n    return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\n  }, function (i, j) {\n    return i * j % 2 + i * j % 3 == 0;\n  }, function (i, j) {\n    return (i * j % 2 + i * j % 3) % 2 == 0;\n  }, function (i, j) {\n    return (i * j % 3 + (i + j) % 2) % 2 == 0;\n  }];\n  return function fillData(matrix, data, mask) {\n    var N = matrix.length;\n    var row,\n        col,\n        dir = -1;\n    row = col = N - 1;\n    var mask_fn = MASK_FUNCTIONS[mask];\n    var len = data.blocks[data.blocks.length - 1].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var b = 0; b < data.blocks.length; b++) {\n        if (data.blocks[b].length <= i) continue;\n        put(data.blocks[b][i]);\n      }\n    }\n\n    len = data.ec_len;\n\n    for (var i = 0; i < len; i++) {\n      for (var b = 0; b < data.ec.length; b++) {\n        put(data.ec[b][i]);\n      }\n    }\n\n    if (col > -1) {\n      do {\n        matrix[row][col] = mask_fn(row, col) ? 1 : 0;\n      } while (next());\n    }\n\n    function put(byte) {\n      for (var mask = 0x80; mask; mask = mask >> 1) {\n        var pixel = !!(mask & byte);\n        if (mask_fn(row, col)) pixel = !pixel;\n        matrix[row][col] = pixel ? 1 : 0;\n        next();\n      }\n    }\n\n    function next() {\n      do {\n        if (col % 2 ^ col < 6) {\n          if (dir < 0 && row == 0 || dir > 0 && row == N - 1) {\n            col--;\n            dir = -dir;\n          } else {\n            col++;\n            row += dir;\n          }\n        } else {\n          col--;\n        }\n\n        if (col == 6) {\n          col--;\n        }\n\n        if (col < 0) {\n          return false;\n        }\n      } while (matrix[row][col] & 0xf0);\n\n      return true;\n    }\n  };\n}(); // {{{1 Calculate penalty\n\n\nfunction calculatePenalty(matrix) {\n  var N = matrix.length;\n  var penalty = 0; // Rule 1\n\n  for (var i = 0; i < N; i++) {\n    var pixel = matrix[i][0] & 1;\n    var len = 1;\n\n    for (var j = 1; j < N; j++) {\n      var p = matrix[i][j] & 1;\n\n      if (p == pixel) {\n        len++;\n        continue;\n      }\n\n      if (len >= 5) {\n        penalty += len - 2;\n      }\n\n      pixel = p;\n      len = 1;\n    }\n\n    if (len >= 5) {\n      penalty += len - 2;\n    }\n  }\n\n  for (var j = 0; j < N; j++) {\n    var pixel = matrix[0][j] & 1;\n    var len = 1;\n\n    for (var i = 1; i < N; i++) {\n      var p = matrix[i][j] & 1;\n\n      if (p == pixel) {\n        len++;\n        continue;\n      }\n\n      if (len >= 5) {\n        penalty += len - 2;\n      }\n\n      pixel = p;\n      len = 1;\n    }\n\n    if (len >= 5) {\n      penalty += len - 2;\n    }\n  } // Rule 2\n\n\n  for (var i = 0; i < N - 1; i++) {\n    for (var j = 0; j < N - 1; j++) {\n      var s = matrix[i][j] + matrix[i][j + 1] + matrix[i + 1][j] + matrix[i + 1][j + 1] & 7;\n\n      if (s == 0 || s == 4) {\n        penalty += 3;\n      }\n    }\n  } // Rule 3\n\n\n  function I(k) {\n    return matrix[i][j + k] & 1;\n  }\n\n  ;\n\n  function J(k) {\n    return matrix[i + k][j] & 1;\n  }\n\n  ;\n\n  for (var i = 0; i < N; i++) {\n    for (var j = 0; j < N; j++) {\n      if (j < N - 6 && I(0) && !I(1) && I(2) && I(3) && I(4) && !I(5) && I(6)) {\n        if (j >= 4 && !(I(-4) || I(-3) || I(-2) || I(-1))) {\n          penalty += 40;\n        }\n\n        if (j < N - 10 && !(I(7) || I(8) || I(9) || I(10))) {\n          penalty += 40;\n        }\n      }\n\n      if (i < N - 6 && J(0) && !J(1) && J(2) && J(3) && J(4) && !J(5) && J(6)) {\n        if (i >= 4 && !(J(-4) || J(-3) || J(-2) || J(-1))) {\n          penalty += 40;\n        }\n\n        if (i < N - 10 && !(J(7) || J(8) || J(9) || J(10))) {\n          penalty += 40;\n        }\n      }\n    }\n  } // Rule 4\n\n\n  var numDark = 0;\n\n  for (var i = 0; i < N; i++) {\n    for (var j = 0; j < N; j++) {\n      if (matrix[i][j] & 1) numDark++;\n    }\n  }\n\n  penalty += 10 * Math.floor(Math.abs(10 - 20 * numDark / (N * N)));\n  return penalty;\n} // {{{1 All-in-one function\n\n\nfunction getMatrix(data) {\n  var matrix = init(data.version);\n  fillFinders(matrix);\n  fillAlignAndTiming(matrix);\n  fillStub(matrix);\n  var penalty = Infinity;\n  var bestMask = 0;\n\n  for (var mask = 0; mask < 8; mask++) {\n    fillData(matrix, data, mask);\n    fillReserved(matrix, data.ec_level, mask);\n    var p = calculatePenalty(matrix);\n\n    if (p < penalty) {\n      penalty = p;\n      bestMask = mask;\n    }\n  }\n\n  fillData(matrix, data, bestMask);\n  fillReserved(matrix, data.ec_level, bestMask);\n  return matrix.map(function (row) {\n    return row.map(function (cell) {\n      return cell & 1;\n    });\n  });\n} // {{{1 export functions\n\n\nmodule.exports = {\n  getMatrix: getMatrix,\n  init: init,\n  fillFinders: fillFinders,\n  fillAlignAndTiming: fillAlignAndTiming,\n  fillStub: fillStub,\n  fillReserved: fillReserved,\n  fillData: fillData,\n  calculatePenalty: calculatePenalty\n};","map":{"version":3,"sources":["/home/juano/reactProjects/Novo-Lab-Clinico/node_modules/qr-image-color/lib/matrix.js"],"names":["init","version","N","matrix","zeros","Buffer","alloc","fill","slice","call","i","fillFinders","length","j","max","Math","min","pixel","fillAlignAndTiming","len","delta","round","ceil","res","p","unshift","x","y","r","c","fillStub","fillReserved","FORMATS","Array","VERSIONS","gf15","gf18","formats_mask","format","EC_LEVELS","L","M","Q","H","ec_level","mask","F","k","V","fillData","MASK_FUNCTIONS","floor","data","row","col","dir","mask_fn","blocks","b","put","ec_len","ec","next","byte","calculatePenalty","penalty","s","I","J","numDark","abs","getMatrix","Infinity","bestMask","map","cell","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\n// {{{1 Initialize matrix with zeros\r\nfunction init(version) {\r\n    var N = version * 4 + 17;\r\n    var matrix = [];\r\n    var zeros = new Buffer.alloc(N);\r\n    zeros.fill(0);\r\n    zeros = [].slice.call(zeros);\r\n    for (var i = 0; i < N; i++) {\r\n        matrix[i] = zeros.slice();\r\n    }\r\n    return matrix;\r\n}\r\n\r\n// {{{1 Put finders into matrix\r\nfunction fillFinders(matrix) {\r\n    var N = matrix.length;\r\n    for (var i = -3; i <= 3; i++) {\r\n        for (var j = -3; j <= 3; j++) {\r\n            var max = Math.max(i, j);\r\n            var min = Math.min(i, j);\r\n            var pixel = (max == 2 && min >= -2) || (min == -2 && max <= 2) ? 0x80 : 0x81;\r\n            matrix[3 + i][3 + j] = pixel;\r\n            matrix[3 + i][N - 4 + j] = pixel;\r\n            matrix[N - 4 + i][3 + j] = pixel;\r\n        }\r\n    }\r\n    for (var i = 0; i < 8; i++) {\r\n        matrix[7][i] = matrix[i][7] =\r\n        matrix[7][N - i - 1] = matrix[i][N - 8] =\r\n        matrix[N - 8][i] = matrix[N - 1 - i][7] = 0x80;\r\n    }\r\n}\r\n\r\n// {{{1 Put align and timinig\r\nfunction fillAlignAndTiming(matrix) {\r\n    var N = matrix.length;\r\n    if (N > 21) {\r\n        var len = N - 13;\r\n        var delta = Math.round(len / Math.ceil(len / 28));\r\n        if (delta % 2) delta++;\r\n        var res = [];\r\n        for (var p = len + 6; p > 10; p -= delta) {\r\n            res.unshift(p);\r\n        }\r\n        res.unshift(6);\r\n        for (var i = 0; i < res.length; i++) {\r\n            for (var j = 0; j < res.length; j++) {\r\n                var x = res[i], y = res[j];\r\n                if (matrix[x][y]) continue;\r\n                for (var r = -2; r <=2 ; r++) {\r\n                    for (var c = -2; c <=2 ; c++) {\r\n                        var max = Math.max(r, c);\r\n                        var min = Math.min(r, c);\r\n                        var pixel = (max == 1 && min >= -1) || (min == -1 && max <= 1) ? 0x80 : 0x81;\r\n                        matrix[x + r][y + c] = pixel;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    for (var i = 8; i < N - 8; i++) {\r\n        matrix[6][i] = matrix[i][6] = i % 2 ? 0x80 : 0x81;\r\n    }\r\n}\r\n\r\n// {{{1 Fill reserved areas with zeroes\r\nfunction fillStub(matrix) {\r\n    var N = matrix.length;\r\n    for (var i = 0; i < 8; i++) {\r\n        if (i != 6) {\r\n            matrix[8][i] = matrix[i][8] = 0x80;\r\n        }\r\n        matrix[8][N - 1 - i] = 0x80;\r\n        matrix[N - 1 - i][8] = 0x80;\r\n    }\r\n    matrix[8][8] = 0x80;\r\n    matrix[N - 8][8] = 0x81;\r\n\r\n    if (N < 45) return;\r\n\r\n    for (var i = N - 11; i < N - 8; i++) {\r\n        for (var j = 0; j < 6; j++) {\r\n            matrix[i][j] = matrix[j][i] = 0x80;\r\n        }\r\n    }\r\n}\r\n\r\n// {{{1 Fill reserved areas\r\nvar fillReserved = (function() {\r\n    var FORMATS = Array(32);\r\n    var VERSIONS = Array(40);\r\n\r\n    var gf15 = 0x0537;\r\n    var gf18 = 0x1f25;\r\n    var formats_mask = 0x5412;\r\n\r\n    for (var format = 0; format < 32; format++) {\r\n        var res = format << 10;\r\n        for (var i = 5; i > 0; i--) {\r\n            if (res >>> (9 + i)) {\r\n                res = res ^ (gf15 << (i - 1));\r\n            }\r\n        }\r\n        FORMATS[format] = (res | (format << 10)) ^ formats_mask;\r\n    }\r\n\r\n    for (var version = 7; version <= 40; version++) {\r\n        var res = version << 12;\r\n        for (var i = 6; i > 0; i--) {\r\n            if (res >>> (11 + i)) {\r\n                res = res ^ (gf18 << (i - 1));\r\n            }\r\n        }\r\n        VERSIONS[version] = (res | (version << 12));\r\n    }\r\n\r\n    var EC_LEVELS = { L: 1, M: 0, Q: 3, H: 2 };\r\n\r\n    return function fillReserved(matrix, ec_level, mask) {\r\n        var N = matrix.length;\r\n        var format = FORMATS[EC_LEVELS[ec_level] << 3 | mask];\r\n        function F(k) { return format >> k & 1 ? 0x81 : 0x80 };\r\n        for (var i = 0; i < 8; i++) {\r\n            matrix[8][N - 1 - i] = F(i);\r\n            if (i < 6) matrix[i][8] = F(i);\r\n        }\r\n        for (var i = 8; i < 15; i++) {\r\n            matrix[N - 15 + i][8] = F(i);\r\n            if (i > 8) matrix[8][14 - i] = F(i);\r\n        }\r\n        matrix[7][8] = F(6);\r\n        matrix[8][8] = F(7);\r\n        matrix[8][7] = F(8);\r\n\r\n        var version = VERSIONS[(N - 17)/4];\r\n        if (!version) return;\r\n        function V(k) { return version >> k & 1 ? 0x81 : 0x80 };\r\n        for (var i = 0; i < 6; i++) {\r\n            for (var j = 0; j < 3; j++) {\r\n                matrix[N - 11 + j][i] = matrix[i][N - 11 + j] = V(i * 3 + j);\r\n            }\r\n        }\r\n    }\r\n})();\r\n\r\n// {{{1 Fill data\r\nvar fillData = (function() {\r\n    var MASK_FUNCTIONS = [\r\n        function(i, j) { return (i + j) % 2 == 0 },\r\n        function(i, j) { return i % 2 == 0 },\r\n        function(i, j) { return j % 3 == 0 },\r\n        function(i, j) { return (i + j) % 3 == 0 },\r\n        function(i, j) { return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0 },\r\n        function(i, j) { return (i * j) % 2 + (i * j) % 3 == 0 },\r\n        function(i, j) { return ( (i * j) % 2 + (i * j) % 3) % 2 == 0 },\r\n        function(i, j) { return ( (i * j) % 3 + (i + j) % 2) % 2 == 0 }\r\n    ];\r\n\r\n    return function fillData(matrix, data, mask) {\r\n        var N = matrix.length;\r\n        var row, col, dir = -1;\r\n        row = col = N - 1;\r\n        var mask_fn = MASK_FUNCTIONS[mask];\r\n        var len = data.blocks[data.blocks.length - 1].length;\r\n\r\n        for (var i = 0; i < len; i++) {\r\n            for (var b = 0; b < data.blocks.length; b++) {\r\n                if (data.blocks[b].length <= i) continue;\r\n                put(data.blocks[b][i]);\r\n            }\r\n        }\r\n\r\n        len = data.ec_len;\r\n        for (var i = 0; i < len; i++) {\r\n            for (var b = 0; b < data.ec.length; b++) {\r\n                put(data.ec[b][i]);\r\n            }\r\n        }\r\n\r\n        if (col > -1) {\r\n            do {\r\n                matrix[row][col] = mask_fn(row, col) ? 1 : 0;\r\n            } while (next());\r\n        }\r\n\r\n        function put(byte) {\r\n            for (var mask = 0x80; mask; mask = mask >> 1) {\r\n                var pixel = !!(mask & byte);\r\n                if (mask_fn(row, col)) pixel = !pixel;\r\n                matrix[row][col] = pixel ? 1 : 0;\r\n                next();\r\n            }\r\n        }\r\n\r\n        function next() {\r\n            do {\r\n                if ((col % 2) ^ (col < 6)) {\r\n                    if (dir < 0 && row == 0 || dir > 0 && row == N - 1) {\r\n                        col--;\r\n                        dir = -dir;\r\n                    } else {\r\n                        col++;\r\n                        row += dir;\r\n                    }\r\n                } else {\r\n                    col--;\r\n                }\r\n                if (col == 6) {\r\n                    col--;\r\n                }\r\n                if (col < 0) {\r\n                    return false;\r\n                }\r\n            } while (matrix[row][col] & 0xf0);\r\n            return true;\r\n        }\r\n    }\r\n})();\r\n\r\n// {{{1 Calculate penalty\r\nfunction calculatePenalty(matrix) {\r\n    var N = matrix.length;\r\n    var penalty = 0;\r\n    // Rule 1\r\n    for (var i = 0; i < N; i++) {\r\n        var pixel = matrix[i][0] & 1;\r\n        var len = 1;\r\n        for (var j = 1; j < N; j++) {\r\n            var p = matrix[i][j] & 1;\r\n            if (p == pixel) {\r\n                len++;\r\n                continue;\r\n            }\r\n            if (len >= 5) {\r\n                penalty += len - 2;\r\n            }\r\n            pixel = p;\r\n            len = 1;\r\n        }\r\n        if (len >= 5) {\r\n            penalty += len - 2;\r\n        }\r\n    }\r\n    for (var j = 0; j < N; j++) {\r\n        var pixel = matrix[0][j] & 1;\r\n        var len = 1;\r\n        for (var i = 1; i < N; i++) {\r\n            var p = matrix[i][j] & 1;\r\n            if (p == pixel) {\r\n                len++;\r\n                continue;\r\n            }\r\n            if (len >= 5) {\r\n                penalty += len - 2;\r\n            }\r\n            pixel = p;\r\n            len = 1;\r\n        }\r\n        if (len >= 5) {\r\n            penalty += len - 2;\r\n        }\r\n    }\r\n\r\n    // Rule 2\r\n    for (var i = 0; i < N - 1; i++) {\r\n        for (var j = 0; j < N - 1; j++) {\r\n            var s = matrix[i][j] + matrix[i][j + 1] + matrix[i + 1][j] + matrix[i + 1][j + 1] & 7;\r\n            if (s == 0 || s == 4) {\r\n                penalty += 3;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Rule 3\r\n    function I(k) { return matrix[i][j + k] & 1 };\r\n    function J(k) { return matrix[i + k][j] & 1 };\r\n    for (var i = 0; i < N; i++) {\r\n        for (var j = 0; j < N; j++) {\r\n            if (j < N - 6 && I(0) && !I(1) && I(2) && I(3) && I(4) && !I(5) && I(6)) {\r\n                if (j >= 4 && !(I(-4) || I(-3) || I(-2) || I(-1))) {\r\n                    penalty += 40;\r\n                }\r\n                if (j < N - 10 && !(I(7) || I(8) || I(9) || I(10))) {\r\n                    penalty += 40;\r\n                }\r\n            }\r\n\r\n            if (i < N - 6 && J(0) && !J(1) && J(2) && J(3) && J(4) && !J(5) && J(6)) {\r\n                if (i >= 4 && !(J(-4) || J(-3) || J(-2) || J(-1))) {\r\n                    penalty += 40;\r\n                }\r\n                if (i < N - 10 && !(J(7) || J(8) || J(9) || J(10))) {\r\n                    penalty += 40;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Rule 4\r\n    var numDark = 0;\r\n    for (var i = 0; i < N; i++) {\r\n        for (var j = 0; j < N; j++) {\r\n            if (matrix[i][j] & 1) numDark++;\r\n        }\r\n    }\r\n    penalty += 10 * Math.floor(Math.abs(10 - 20 * numDark/(N * N)));\r\n\r\n    return penalty;\r\n}\r\n\r\n// {{{1 All-in-one function\r\nfunction getMatrix(data) {\r\n    var matrix = init(data.version);\r\n    fillFinders(matrix);\r\n    fillAlignAndTiming(matrix);\r\n    fillStub(matrix);\r\n\r\n    var penalty = Infinity;\r\n    var bestMask = 0;\r\n    for (var mask = 0; mask < 8; mask++) {\r\n        fillData(matrix, data, mask);\r\n        fillReserved(matrix, data.ec_level, mask);\r\n        var p = calculatePenalty(matrix);\r\n        if (p < penalty) {\r\n            penalty = p;\r\n            bestMask = mask;\r\n        }\r\n    }\r\n\r\n    fillData(matrix, data, bestMask);\r\n    fillReserved(matrix, data.ec_level, bestMask);\r\n\r\n    return matrix.map(function(row) {\r\n        return row.map(function(cell) {\r\n            return cell & 1;\r\n        });\r\n    });\r\n}\r\n\r\n// {{{1 export functions\r\nmodule.exports = {\r\n    getMatrix: getMatrix,\r\n    init: init,\r\n    fillFinders: fillFinders,\r\n    fillAlignAndTiming: fillAlignAndTiming,\r\n    fillStub: fillStub,\r\n    fillReserved: fillReserved,\r\n    fillData: fillData,\r\n    calculatePenalty: calculatePenalty,\r\n}\r\n"]},"metadata":{},"sourceType":"script"}